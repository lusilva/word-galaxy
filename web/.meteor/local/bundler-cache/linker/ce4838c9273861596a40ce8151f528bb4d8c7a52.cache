[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                              //\n// packages/webpack_react/webpack.config.js                                                                     //\n//                                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                //\nvar weight = 100;                                                                                               // 1\n                                                                                                                // 2\nfunction dependencies() {                                                                                       // 3\n  return {                                                                                                      // 4\n    dependencies: {                                                                                             // 5\n      // React has to be there for peerDependencies every though we are using the Meteor package                // 6\n      'react': '~0.14.1',                                                                                       // 7\n    },                                                                                                          // 8\n    devDependencies: {                                                                                          // 9\n      'babel': '^6.3.26',                                                                                       // 10\n      'babel-core': '^6.3.26',                                                                                  // 11\n      'babel-loader' : '^6.2.0',                                                                                // 12\n      'babel-preset-react': '^6.3.13',                                                                          // 13\n      'babel-preset-es2015': '^6.3.13',                                                                         // 14\n      'babel-preset-stage-0': '^6.3.13',                                                                        // 15\n      'babel-plugin-transform-decorators-legacy': '^1.3.2',                                                     // 16\n      'babel-plugin-add-module-exports': '^0.1.2',                                                              // 17\n      'babel-plugin-react-transform': '^2.0.0',                                                                 // 18\n      'expose-loader': '^0.7.1',                                                                                // 19\n      'react-transform-hmr' : '^1.0.1',                                                                         // 20\n      'react-transform-catch-errors': '^1.0.0',                                                                 // 21\n      'redbox-react': '^1.2.0'                                                                                  // 22\n    }                                                                                                           // 23\n  };                                                                                                            // 24\n}                                                                                                               // 25\n                                                                                                                // 26\nfunction config(settings, require) {                                                                            // 27\n  var fs = require('fs');                                                                                       // 28\n  var path = require('path');                                                                                   // 29\n  var babelSettings = {};                                                                                       // 30\n  var tsConfig = {};                                                                                            // 31\n                                                                                                                // 32\n  var CWD = path.resolve('./');                                                                                 // 33\n                                                                                                                // 34\n  if (fs.existsSync(CWD + '/.babelrc')) {                                                                       // 35\n    var babelrc = fs.readFileSync(CWD + '/.babelrc');                                                           // 36\n    babelSettings = JSON.parse(babelrc);                                                                        // 37\n  }                                                                                                             // 38\n                                                                                                                // 39\n  if (fs.existsSync(CWD + '/tsconfig.json')) {                                                                  // 40\n    var tsConfigData = fs.readFileSync(CWD + '/tsconfig.json');                                                 // 41\n    tsConfig = JSON.parse(tsConfigData);                                                                        // 42\n  }                                                                                                             // 43\n                                                                                                                // 44\n  tsConfig.transpileOnly = true;                                                                                // 45\n                                                                                                                // 46\n  if (!tsConfig.compilerOptions) {                                                                              // 47\n    tsConfig.compilerOptions = {};                                                                              // 48\n  }                                                                                                             // 49\n                                                                                                                // 50\n  if (typeof tsConfig.compilerOptions.target === 'undefined') { tsConfig.compilerOptions.target = 'es6'; }      // 51\n  if (typeof tsConfig.compilerOptions.jsx === 'undefined') { tsConfig.compilerOptions.jsx = 'react'; }          // 52\n  if (typeof tsConfig.compilerOptions.sourceMap === 'undefined') { tsConfig.compilerOptions.sourceMap = true; }\n  if (typeof tsConfig.compilerOptions.experimentalDecorators === 'undefined') { tsConfig.compilerOptions.experimentalDecorators = true; }\n  if (typeof tsConfig.compilerOptions.module === 'undefined') { tsConfig.compilerOptions.module = 'commonjs'; }\n                                                                                                                // 56\n  if (!tsConfig.exclude) { tsConfig.exclude = []; }                                                             // 57\n  if (tsConfig.exclude.indexOf('node_modules') < 0) { tsConfig.exclude.push('node_modules'); }                  // 58\n  if (tsConfig.exclude.indexOf('.meteor') < 0) { tsConfig.exclude.push('.meteor'); }                            // 59\n                                                                                                                // 60\n  if (!babelSettings.presets) {                                                                                 // 61\n    babelSettings.presets = [];                                                                                 // 62\n  }                                                                                                             // 63\n                                                                                                                // 64\n  if (!babelSettings.plugins) {                                                                                 // 65\n    babelSettings.plugins = [];                                                                                 // 66\n  }                                                                                                             // 67\n                                                                                                                // 68\n  if (babelSettings.presets.indexOf('react') < 0) {                                                             // 69\n    babelSettings.presets.push('react');                                                                        // 70\n  }                                                                                                             // 71\n                                                                                                                // 72\n  if (babelSettings.presets.indexOf('es2015') < 0) {                                                            // 73\n    babelSettings.presets.push('es2015');                                                                       // 74\n  }                                                                                                             // 75\n                                                                                                                // 76\n  if (babelSettings.presets.indexOf('stage-0') < 0 &&                                                           // 77\n      babelSettings.presets.indexOf('stage-1') < 0 &&                                                           // 78\n      babelSettings.presets.indexOf('stage-2') < 0 &&                                                           // 79\n      babelSettings.presets.indexOf('stage-3') < 0) {                                                           // 80\n    babelSettings.presets.push('stage-0');                                                                      // 81\n  }                                                                                                             // 82\n                                                                                                                // 83\n  if (settings.babel && settings.babel.plugins) {                                                               // 84\n    babelSettings.plugins = babelSettings.plugins.concat(settings.babel.plugins);                               // 85\n  }                                                                                                             // 86\n                                                                                                                // 87\n  if (babelSettings.plugins.indexOf('transform-decorators-legacy') < 0) {                                       // 88\n    babelSettings.plugins.push('transform-decorators-legacy');                                                  // 89\n  }                                                                                                             // 90\n                                                                                                                // 91\n  if (babelSettings.plugins.indexOf('add-module-exports') < 0) {                                                // 92\n    babelSettings.plugins.push('add-module-exports');                                                           // 93\n  }                                                                                                             // 94\n                                                                                                                // 95\n  if (settings.isDebug && settings.platform !== 'server') {                                                     // 96\n    var transforms = [{                                                                                         // 97\n      transform: 'react-transform-hmr',                                                                         // 98\n      imports: ['react'],                                                                                       // 99\n      locals: ['module']                                                                                        // 100\n    }];                                                                                                         // 101\n                                                                                                                // 102\n    if (settings.babel && !settings.babel.disableRedbox) {                                                      // 103\n      transforms.push({                                                                                         // 104\n        transform: 'react-transform-catch-errors',                                                              // 105\n        imports: ['react', 'redbox-react']                                                                      // 106\n      });                                                                                                       // 107\n    }                                                                                                           // 108\n                                                                                                                // 109\n    babelSettings.plugins.push(['react-transform', { transforms: transforms }]);                                // 110\n  }                                                                                                             // 111\n                                                                                                                // 112\n  var usingMeteorReact = settings.packages.indexOf('react-runtime') >= 0;                                       // 113\n  var externals = {};                                                                                           // 114\n  var extensions = ['.js', '.jsx'];                                                                             // 115\n  var loaders = [                                                                                               // 116\n    { test: /\\.jsx?$/, loader: 'babel', query: babelSettings, exclude: /\\.meteor|node_modules/ }                // 117\n  ];                                                                                                            // 118\n                                                                                                                // 119\n  if (usingMeteorReact) {                                                                                       // 120\n    externals = {                                                                                               // 121\n      'react-addons-transition-group': 'React.addons.TransitionGroup',                                          // 122\n      'react-addons-css-transition-group': 'React.addons.CSSTransitionGroup',                                   // 123\n      'react-addons-linked-state-mixin': 'React.addons.LinkedStateMixin',                                       // 124\n      'react-addons-create-fragment': 'React.addons.createFrament',                                             // 125\n      'react-addons-update': 'React.addons.update',                                                             // 126\n      'react-addons-pure-render-mixin': 'React.addons.PureRenderMixin',                                         // 127\n      'react-addons-test-utils': 'React.addons.TestUtils',                                                      // 128\n      'react-addons-perf': 'React.addons.Perf'                                                                  // 129\n    };                                                                                                          // 130\n  } else {                                                                                                      // 131\n    // Expose window.React                                                                                      // 132\n    loaders.unshift({ test: /\\/node_modules\\/react\\/react\\.js$/, loader: 'expose?React' });                     // 133\n  }                                                                                                             // 134\n                                                                                                                // 135\n  if (settings.packages.indexOf('webpack:typescript') >= 0) {                                                   // 136\n    loaders.push({ test: /\\.tsx$/, loader: 'babel?' + JSON.stringify(babelSettings) + '!ts?' + JSON.stringify(tsConfig), exclude: /\\.meteor|node_modules/ });\n    extensions.push('.tsx');                                                                                    // 138\n  }                                                                                                             // 139\n                                                                                                                // 140\n  return {                                                                                                      // 141\n    loaders: loaders,                                                                                           // 142\n    extensions: extensions,                                                                                     // 143\n    externals: externals                                                                                        // 144\n  };                                                                                                            // 145\n}                                                                                                               // 146\n                                                                                                                // 147\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['webpack:react'] = {};\n\n})();\n","servePath":"/packages/webpack_react.js","sourceMap":{"version":3,"sources":["/packages/webpack_react/webpack.config.js"],"names":[],"mappingssH","file":"/packages/webpack_react.js","sourcesContent":["var weight = 100;\n\nfunction dependencies() {\n  return {\n    dependencies: {\n      // React has to be there for peerDependencies every though we are using the Meteor package\n      'react': '~0.14.1',\n    },\n    devDependencies: {\n      'babel': '^6.3.26',\n      'babel-core': '^6.3.26',\n      'babel-loader' : '^6.2.0',\n      'babel-preset-react': '^6.3.13',\n      'babel-preset-es2015': '^6.3.13',\n      'babel-preset-stage-0': '^6.3.13',\n      'babel-plugin-transform-decorators-legacy': '^1.3.2',\n      'babel-plugin-add-module-exports': '^0.1.2',\n      'babel-plugin-react-transform': '^2.0.0',\n      'expose-loader': '^0.7.1',\n      'react-transform-hmr' : '^1.0.1',\n      'react-transform-catch-errors': '^1.0.0',\n      'redbox-react': '^1.2.0'\n    }\n  };\n}\n\nfunction config(settings, require) {\n  var fs = require('fs');\n  var path = require('path');\n  var babelSettings = {};\n  var tsConfig = {};\n\n  var CWD = path.resolve('./');\n\n  if (fs.existsSync(CWD + '/.babelrc')) {\n    var babelrc = fs.readFileSync(CWD + '/.babelrc');\n    babelSettings = JSON.parse(babelrc);\n  }\n\n  if (fs.existsSync(CWD + '/tsconfig.json')) {\n    var tsConfigData = fs.readFileSync(CWD + '/tsconfig.json');\n    tsConfig = JSON.parse(tsConfigData);\n  }\n\n  tsConfig.transpileOnly = true;\n\n  if (!tsConfig.compilerOptions) {\n    tsConfig.compilerOptions = {};\n  }\n\n  if (typeof tsConfig.compilerOptions.target === 'undefined') { tsConfig.compilerOptions.target = 'es6'; }\n  if (typeof tsConfig.compilerOptions.jsx === 'undefined') { tsConfig.compilerOptions.jsx = 'react'; }\n  if (typeof tsConfig.compilerOptions.sourceMap === 'undefined') { tsConfig.compilerOptions.sourceMap = true; }\n  if (typeof tsConfig.compilerOptions.experimentalDecorators === 'undefined') { tsConfig.compilerOptions.experimentalDecorators = true; }\n  if (typeof tsConfig.compilerOptions.module === 'undefined') { tsConfig.compilerOptions.module = 'commonjs'; }\n\n  if (!tsConfig.exclude) { tsConfig.exclude = []; }\n  if (tsConfig.exclude.indexOf('node_modules') < 0) { tsConfig.exclude.push('node_modules'); }\n  if (tsConfig.exclude.indexOf('.meteor') < 0) { tsConfig.exclude.push('.meteor'); }\n\n  if (!babelSettings.presets) {\n    babelSettings.presets = [];\n  }\n\n  if (!babelSettings.plugins) {\n    babelSettings.plugins = [];\n  }\n\n  if (babelSettings.presets.indexOf('react') < 0) {\n    babelSettings.presets.push('react');\n  }\n\n  if (babelSettings.presets.indexOf('es2015') < 0) {\n    babelSettings.presets.push('es2015');\n  }\n\n  if (babelSettings.presets.indexOf('stage-0') < 0 &&\n      babelSettings.presets.indexOf('stage-1') < 0 &&\n      babelSettings.presets.indexOf('stage-2') < 0 &&\n      babelSettings.presets.indexOf('stage-3') < 0) {\n    babelSettings.presets.push('stage-0');\n  }\n\n  if (settings.babel && settings.babel.plugins) {\n    babelSettings.plugins = babelSettings.plugins.concat(settings.babel.plugins);\n  }\n\n  if (babelSettings.plugins.indexOf('transform-decorators-legacy') < 0) {\n    babelSettings.plugins.push('transform-decorators-legacy');\n  }\n\n  if (babelSettings.plugins.indexOf('add-module-exports') < 0) {\n    babelSettings.plugins.push('add-module-exports');\n  }\n\n  if (settings.isDebug && settings.platform !== 'server') {\n    var transforms = [{\n      transform: 'react-transform-hmr',\n      imports: ['react'],\n      locals: ['module']\n    }];\n\n    if (settings.babel && !settings.babel.disableRedbox) {\n      transforms.push({\n        transform: 'react-transform-catch-errors',\n        imports: ['react', 'redbox-react']\n      });\n    }\n\n    babelSettings.plugins.push(['react-transform', { transforms: transforms }]);\n  }\n\n  var usingMeteorReact = settings.packages.indexOf('react-runtime') >= 0;\n  var externals = {};\n  var extensions = ['.js', '.jsx'];\n  var loaders = [\n    { test: /\\.jsx?$/, loader: 'babel', query: babelSettings, exclude: /\\.meteor|node_modules/ }\n  ];\n\n  if (usingMeteorReact) {\n    externals = {\n      'react-addons-transition-group': 'React.addons.TransitionGroup',\n      'react-addons-css-transition-group': 'React.addons.CSSTransitionGroup',\n      'react-addons-linked-state-mixin': 'React.addons.LinkedStateMixin',\n      'react-addons-create-fragment': 'React.addons.createFrament',\n      'react-addons-update': 'React.addons.update',\n      'react-addons-pure-render-mixin': 'React.addons.PureRenderMixin',\n      'react-addons-test-utils': 'React.addons.TestUtils',\n      'react-addons-perf': 'React.addons.Perf'\n    };\n  } else {\n    // Expose window.React\n    loaders.unshift({ test: /\\/node_modules\\/react\\/react\\.js$/, loader: 'expose?React' });\n  }\n\n  if (settings.packages.indexOf('webpack:typescript') >= 0) {\n    loaders.push({ test: /\\.tsx$/, loader: 'babel?' + JSON.stringify(babelSettings) + '!ts?' + JSON.stringify(tsConfig), exclude: /\\.meteor|node_modules/ });\n    extensions.push('.tsx');\n  }\n\n  return {\n    loaders: loaders,\n    extensions: extensions,\n    externals: externals\n  };\n}\n"]}}]