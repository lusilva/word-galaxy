[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar EJSON = Package.ejson.EJSON;\nvar _ = Package.underscore._;\n\n/* Package-scope variables */\nvar InjectData;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/meteorhacks_inject-data/lib/namespace.js                 //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nInjectData = {};                                                     // 1\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/meteorhacks_inject-data/lib/utils.js                     //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nInjectData._encode = function(ejson) {                               // 1\n  var ejsonString = EJSON.stringify(ejson);                          // 2\n  return encodeURIComponent(ejsonString);                            // 3\n};                                                                   // 4\n                                                                     // 5\nInjectData._decode = function(encodedEjson) {                        // 6\n  var decodedEjsonString = decodeURIComponent(encodedEjson);         // 7\n  if(!decodedEjsonString) return null;                               // 8\n                                                                     // 9\n  return EJSON.parse(decodedEjsonString);                            // 10\n};                                                                   // 11\n                                                                     // 12\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// packages/meteorhacks_inject-data/lib/server.js                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nvar http = Npm.require('http');                                      // 1\n                                                                     // 2\nvar templateText = Assets.getText('lib/inject.html');                // 3\nvar injectDataTemplate = _.template(templateText);                   // 4\n                                                                     // 5\n// custome API                                                       // 6\nInjectData.pushData = function pushData(res, key, value) {           // 7\n  if(!res._injectPayload) {                                          // 8\n    res._injectPayload = {};                                         // 9\n  }                                                                  // 10\n                                                                     // 11\n  res._injectPayload[key] = value;                                   // 12\n  InjectData._hijackWriteIfNeeded(res);                              // 13\n};                                                                   // 14\n                                                                     // 15\nInjectData.getData = function getData(res, key) {                    // 16\n  if(res._injectPayload) {                                           // 17\n    return _.clone(res._injectPayload[key]);                         // 18\n  } else {                                                           // 19\n    return null;                                                     // 20\n  }                                                                  // 21\n};                                                                   // 22\n                                                                     // 23\nInjectData._hijackWriteIfNeeded = function(res) {                    // 24\n  if(res._writeHijacked) {                                           // 25\n    return;                                                          // 26\n  }                                                                  // 27\n  res._writeHijacked = true;                                         // 28\n                                                                     // 29\n  var originalWrite = res.write;                                     // 30\n  res.write = function(chunk, encoding) {                            // 31\n    var condition =                                                  // 32\n      res._injectPayload && !res._injected &&                        // 33\n      encoding === undefined &&                                      // 34\n      /<!DOCTYPE html>/.test(chunk);                                 // 35\n                                                                     // 36\n    if(condition) {                                                  // 37\n      // if cors headers included if may cause some security holes   // 38\n      // so we simply turn off injecting if we detect an cors header\n      // read more: http://goo.gl/eGwb4e                             // 40\n      if(res._headers['access-control-allow-origin']) {              // 41\n        var warnMessage =                                            // 42\n          'warn: injecting data turned off due to CORS headers. ' +  // 43\n          'read more: http://goo.gl/eGwb4e';                         // 44\n                                                                     // 45\n        console.warn(warnMessage);                                   // 46\n        originalWrite.call(res, chunk, encoding);                    // 47\n        return;                                                      // 48\n      }                                                              // 49\n                                                                     // 50\n      // inject data                                                 // 51\n      var data = InjectData._encode(res._injectPayload);             // 52\n      var injectHtml = injectDataTemplate({data: data});             // 53\n                                                                     // 54\n      // if this is a buffer, convert it to string                   // 55\n      chunk = chunk.toString();                                      // 56\n      chunk = chunk.replace('<script', injectHtml + '<script');      // 57\n                                                                     // 58\n      res._injected = true;                                          // 59\n    }                                                                // 60\n                                                                     // 61\n    originalWrite.call(res, chunk, encoding);                        // 62\n  };                                                                 // 63\n};                                                                   // 64\n                                                                     // 65\n///////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['meteorhacks:inject-data'] = {\n  InjectData: InjectData\n};\n\n})();\n","servePath":"/packages/meteorhacks_inject-data.js","sourceMap":{"version":3,"sources":["/packages/meteorhacks_inject-data/lib/namespace.js","/packages/meteorhacks_inject-data/lib/utils.js","/packages/meteorhacks_inject-data/lib/server.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,yE;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0E;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0E","file":"/packages/meteorhacks_inject-data.js","sourcesContent":["InjectData = {};","InjectData._encode = function(ejson) {\n  var ejsonString = EJSON.stringify(ejson);\n  return encodeURIComponent(ejsonString);\n};\n\nInjectData._decode = function(encodedEjson) {\n  var decodedEjsonString = decodeURIComponent(encodedEjson);\n  if(!decodedEjsonString) return null;\n\n  return EJSON.parse(decodedEjsonString);\n};\n","var http = Npm.require('http');\n\nvar templateText = Assets.getText('lib/inject.html');\nvar injectDataTemplate = _.template(templateText);\n\n// custome API\nInjectData.pushData = function pushData(res, key, value) {\n  if(!res._injectPayload) {\n    res._injectPayload = {};\n  }\n\n  res._injectPayload[key] = value;\n  InjectData._hijackWriteIfNeeded(res);\n};\n\nInjectData.getData = function getData(res, key) {\n  if(res._injectPayload) {\n    return _.clone(res._injectPayload[key]);\n  } else {\n    return null;\n  }\n};\n\nInjectData._hijackWriteIfNeeded = function(res) {\n  if(res._writeHijacked) {\n    return;\n  }\n  res._writeHijacked = true;\n\n  var originalWrite = res.write;\n  res.write = function(chunk, encoding) {\n    var condition =\n      res._injectPayload && !res._injected &&\n      encoding === undefined &&\n      /<!DOCTYPE html>/.test(chunk);\n\n    if(condition) {\n      // if cors headers included if may cause some security holes\n      // so we simply turn off injecting if we detect an cors header\n      // read more: http://goo.gl/eGwb4e\n      if(res._headers['access-control-allow-origin']) {\n        var warnMessage =\n          'warn: injecting data turned off due to CORS headers. ' +\n          'read more: http://goo.gl/eGwb4e';\n\n        console.warn(warnMessage);\n        originalWrite.call(res, chunk, encoding);\n        return;\n      }\n\n      // inject data\n      var data = InjectData._encode(res._injectPayload);\n      var injectHtml = injectDataTemplate({data: data});\n\n      // if this is a buffer, convert it to string\n      chunk = chunk.toString();\n      chunk = chunk.replace('<script', injectHtml + '<script');\n\n      res._injected = true;\n    }\n\n    originalWrite.call(res, chunk, encoding);\n  };\n};\n"]}}]