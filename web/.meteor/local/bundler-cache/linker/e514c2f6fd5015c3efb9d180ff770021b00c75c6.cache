[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                        //\n// packages/webpack_css/webpack.config.js                                                                 //\n//                                                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                          //\nvar weight = 200;                                                                                         // 1\n                                                                                                          // 2\nfunction dependencies(settings) {                                                                         // 3\n  return {                                                                                                // 4\n    devDependencies: {                                                                                    // 5\n      'style-loader' : '^0.13.0',                                                                         // 6\n      'css-loader': '^0.23.0',                                                                            // 7\n      'extract-text-webpack-plugin': '^0.9.1'                                                             // 8\n    }                                                                                                     // 9\n  };                                                                                                      // 10\n}                                                                                                         // 11\n                                                                                                          // 12\nfunction config(settings, require) {                                                                      // 13\n  var cssLoader = '';                                                                                     // 14\n  var loaders = [];                                                                                       // 15\n  var plugins = [];                                                                                       // 16\n                                                                                                          // 17\n  // Disable if webpack:postcss is present                                                                // 18\n  var moduleStr = (settings.css && settings.css.module) ? 'module&' : '';                                 // 19\n                                                                                                          // 20\n  if (settings.isDebug) {                                                                                 // 21\n    if (settings.platform === 'server') {                                                                 // 22\n      settings.cssLoader = 'css/locals?' + moduleStr + 'localIdentName=[name]__[local]__[hash:base64:5]';\n    } else {                                                                                              // 24\n      settings.cssLoader = 'style!css?' + moduleStr + 'localIdentName=[name]__[local]__[hash:base64:5]';  // 25\n    }                                                                                                     // 26\n  } else {                                                                                                // 27\n    if (settings.platform === 'server') {                                                                 // 28\n      settings.cssLoader = 'css/locals?' + moduleStr + 'localIdentName=[hash:base64:5]';                  // 29\n    } else {                                                                                              // 30\n      settings.cssLoader = 'style', 'css?' + moduleStr + 'localIdentName=[hash:base64:5]';                // 31\n      settings.cssExtract = true;                                                                         // 32\n    }                                                                                                     // 33\n  }                                                                                                       // 34\n                                                                                                          // 35\n  var cssLoader = settings.cssLoader;                                                                     // 36\n                                                                                                          // 37\n  if (settings.cssExtract) {                                                                              // 38\n    var ExtractTextPlugin = require('extract-text-webpack-plugin');                                       // 39\n    plugins.push(new ExtractTextPlugin('style.css'));                                                     // 40\n    cssLoader = ExtractTextPlugin.extract(cssLoader);                                                     // 41\n  }                                                                                                       // 42\n                                                                                                          // 43\n  // Let postcss control CSS files if it is there                                                         // 44\n  if (cssLoader && settings.packages.indexOf('webpack:postcss') < 0) {                                    // 45\n    loaders.push({ test: /\\.css$/, loader: cssLoader });                                                  // 46\n  }                                                                                                       // 47\n                                                                                                          // 48\n  return {                                                                                                // 49\n    loaders: loaders,                                                                                     // 50\n    plugins: plugins,                                                                                     // 51\n    extensions: ['.css']                                                                                  // 52\n  };                                                                                                      // 53\n}                                                                                                         // 54\n                                                                                                          // 55\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['webpack:css'] = {};\n\n})();\n","servePath":"/packages/webpack_css.js","sourceMap":{"version":3,"sources":["/packages/webpack_css/webpack.config.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+G","file":"/packages/webpack_css.js","sourcesContent":["var weight = 200;\n\nfunction dependencies(settings) {\n  return {\n    devDependencies: {\n      'style-loader' : '^0.13.0',\n      'css-loader': '^0.23.0',\n      'extract-text-webpack-plugin': '^0.9.1'\n    }\n  };\n}\n\nfunction config(settings, require) {\n  var cssLoader = '';\n  var loaders = [];\n  var plugins = [];\n\n  // Disable if webpack:postcss is present\n  var moduleStr = (settings.css && settings.css.module) ? 'module&' : '';\n\n  if (settings.isDebug) {\n    if (settings.platform === 'server') {\n      settings.cssLoader = 'css/locals?' + moduleStr + 'localIdentName=[name]__[local]__[hash:base64:5]';\n    } else {\n      settings.cssLoader = 'style!css?' + moduleStr + 'localIdentName=[name]__[local]__[hash:base64:5]';\n    }\n  } else {\n    if (settings.platform === 'server') {\n      settings.cssLoader = 'css/locals?' + moduleStr + 'localIdentName=[hash:base64:5]';\n    } else {\n      settings.cssLoader = 'style', 'css?' + moduleStr + 'localIdentName=[hash:base64:5]';\n      settings.cssExtract = true;\n    }\n  }\n\n  var cssLoader = settings.cssLoader;\n\n  if (settings.cssExtract) {\n    var ExtractTextPlugin = require('extract-text-webpack-plugin');\n    plugins.push(new ExtractTextPlugin('style.css'));\n    cssLoader = ExtractTextPlugin.extract(cssLoader);\n  }\n\n  // Let postcss control CSS files if it is there\n  if (cssLoader && settings.packages.indexOf('webpack:postcss') < 0) {\n    loaders.push({ test: /\\.css$/, loader: cssLoader });\n  }\n\n  return {\n    loaders: loaders,\n    plugins: plugins,\n    extensions: ['.css']\n  };\n}\n"]}}]