[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar React = Package['react-runtime'].React;\nvar ReactDOM = Package['react-runtime'].ReactDOM;\n\n/* Package-scope variables */\nvar ReactRouter;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/reactrouter_react-router/react-router.browserify.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// shim for using process in browser                                                                                   // 1\n                                                                                                                       // 2\nvar process = module.exports = {};                                                                                     // 3\nvar queue = [];                                                                                                        // 4\nvar draining = false;                                                                                                  // 5\nvar currentQueue;                                                                                                      // 6\nvar queueIndex = -1;                                                                                                   // 7\n                                                                                                                       // 8\nfunction cleanUpNextTick() {                                                                                           // 9\n    draining = false;                                                                                                  // 10\n    if (currentQueue.length) {                                                                                         // 11\n        queue = currentQueue.concat(queue);                                                                            // 12\n    } else {                                                                                                           // 13\n        queueIndex = -1;                                                                                               // 14\n    }                                                                                                                  // 15\n    if (queue.length) {                                                                                                // 16\n        drainQueue();                                                                                                  // 17\n    }                                                                                                                  // 18\n}                                                                                                                      // 19\n                                                                                                                       // 20\nfunction drainQueue() {                                                                                                // 21\n    if (draining) {                                                                                                    // 22\n        return;                                                                                                        // 23\n    }                                                                                                                  // 24\n    var timeout = setTimeout(cleanUpNextTick);                                                                         // 25\n    draining = true;                                                                                                   // 26\n                                                                                                                       // 27\n    var len = queue.length;                                                                                            // 28\n    while(len) {                                                                                                       // 29\n        currentQueue = queue;                                                                                          // 30\n        queue = [];                                                                                                    // 31\n        while (++queueIndex < len) {                                                                                   // 32\n            if (currentQueue) {                                                                                        // 33\n                currentQueue[queueIndex].run();                                                                        // 34\n            }                                                                                                          // 35\n        }                                                                                                              // 36\n        queueIndex = -1;                                                                                               // 37\n        len = queue.length;                                                                                            // 38\n    }                                                                                                                  // 39\n    currentQueue = null;                                                                                               // 40\n    draining = false;                                                                                                  // 41\n    clearTimeout(timeout);                                                                                             // 42\n}                                                                                                                      // 43\n                                                                                                                       // 44\nprocess.nextTick = function (fun) {                                                                                    // 45\n    var args = new Array(arguments.length - 1);                                                                        // 46\n    if (arguments.length > 1) {                                                                                        // 47\n        for (var i = 1; i < arguments.length; i++) {                                                                   // 48\n            args[i - 1] = arguments[i];                                                                                // 49\n        }                                                                                                              // 50\n    }                                                                                                                  // 51\n    queue.push(new Item(fun, args));                                                                                   // 52\n    if (queue.length === 1 && !draining) {                                                                             // 53\n        setTimeout(drainQueue, 0);                                                                                     // 54\n    }                                                                                                                  // 55\n};                                                                                                                     // 56\n                                                                                                                       // 57\n// v8 likes predictible objects                                                                                        // 58\nfunction Item(fun, array) {                                                                                            // 59\n    this.fun = fun;                                                                                                    // 60\n    this.array = array;                                                                                                // 61\n}                                                                                                                      // 62\nItem.prototype.run = function () {                                                                                     // 63\n    this.fun.apply(null, this.array);                                                                                  // 64\n};                                                                                                                     // 65\nprocess.title = 'browser';                                                                                             // 66\nprocess.browser = true;                                                                                                // 67\nprocess.env = {};                                                                                                      // 68\nprocess.argv = [];                                                                                                     // 69\nprocess.version = ''; // empty string to avoid regexp issues                                                           // 70\nprocess.versions = {};                                                                                                 // 71\n                                                                                                                       // 72\nfunction noop() {}                                                                                                     // 73\n                                                                                                                       // 74\nprocess.on = noop;                                                                                                     // 75\nprocess.addListener = noop;                                                                                            // 76\nprocess.once = noop;                                                                                                   // 77\nprocess.off = noop;                                                                                                    // 78\nprocess.removeListener = noop;                                                                                         // 79\nprocess.removeAllListeners = noop;                                                                                     // 80\nprocess.emit = noop;                                                                                                   // 81\n                                                                                                                       // 82\nprocess.binding = function (name) {                                                                                    // 83\n    throw new Error('process.binding is not supported');                                                               // 84\n};                                                                                                                     // 85\n                                                                                                                       // 86\nprocess.cwd = function () { return '/' };                                                                              // 87\nprocess.chdir = function (dir) {                                                                                       // 88\n    throw new Error('process.chdir is not supported');                                                                 // 89\n};                                                                                                                     // 90\nprocess.umask = function() { return 0; };                                                                              // 91\n                                                                                                                       // 92\n},{}],2:[function(require,module,exports){                                                                             //\n(function (global){                                                                                                    //\n// This is required for exposify                                                                                       // 1\nglobal.React = React;                                                                                                  // 2\n                                                                                                                       // 3\nReactRouter = require('react-router');                                                                                 // 4\nReactRouter.history = require('history');                                                                              // 5\n                                                                                                                       // 6\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n                                                                                                                       //\n},{\"history\":18,\"react-router\":57}],3:[function(require,module,exports){                                               //\n/**                                                                                                                    // 1\n * Indicates that navigation was caused by a call to history.push.                                                     // 2\n */                                                                                                                    // 3\n'use strict';                                                                                                          // 4\n                                                                                                                       // 5\nexports.__esModule = true;                                                                                             // 6\nvar PUSH = 'PUSH';                                                                                                     // 7\n                                                                                                                       // 8\nexports.PUSH = PUSH;                                                                                                   // 9\n/**                                                                                                                    // 10\n * Indicates that navigation was caused by a call to history.replace.                                                  // 11\n */                                                                                                                    // 12\nvar REPLACE = 'REPLACE';                                                                                               // 13\n                                                                                                                       // 14\nexports.REPLACE = REPLACE;                                                                                             // 15\n/**                                                                                                                    // 16\n * Indicates that navigation was caused by some other action such                                                      // 17\n * as using a browser's back/forward buttons and/or manually manipulating                                              // 18\n * the URL in a browser's location bar. This is the default.                                                           // 19\n *                                                                                                                     // 20\n * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate                                 // 21\n * for more information.                                                                                               // 22\n */                                                                                                                    // 23\nvar POP = 'POP';                                                                                                       // 24\n                                                                                                                       // 25\nexports.POP = POP;                                                                                                     // 26\nexports['default'] = {                                                                                                 // 27\n  PUSH: PUSH,                                                                                                          // 28\n  REPLACE: REPLACE,                                                                                                    // 29\n  POP: POP                                                                                                             // 30\n};                                                                                                                     // 31\n},{}],4:[function(require,module,exports){                                                                             //\n\"use strict\";                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\nexports.loopAsync = loopAsync;                                                                                         // 4\n                                                                                                                       // 5\nfunction loopAsync(turns, work, callback) {                                                                            // 6\n  var currentTurn = 0;                                                                                                 // 7\n  var isDone = false;                                                                                                  // 8\n                                                                                                                       // 9\n  function done() {                                                                                                    // 10\n    isDone = true;                                                                                                     // 11\n    callback.apply(this, arguments);                                                                                   // 12\n  }                                                                                                                    // 13\n                                                                                                                       // 14\n  function next() {                                                                                                    // 15\n    if (isDone) return;                                                                                                // 16\n                                                                                                                       // 17\n    if (currentTurn < turns) {                                                                                         // 18\n      work.call(this, currentTurn++, next, done);                                                                      // 19\n    } else {                                                                                                           // 20\n      done.apply(this, arguments);                                                                                     // 21\n    }                                                                                                                  // 22\n  }                                                                                                                    // 23\n                                                                                                                       // 24\n  next();                                                                                                              // 25\n}                                                                                                                      // 26\n},{}],5:[function(require,module,exports){                                                                             //\n(function (process){                                                                                                   //\n/*eslint-disable no-empty */                                                                                           // 1\n'use strict';                                                                                                          // 2\n                                                                                                                       // 3\nexports.__esModule = true;                                                                                             // 4\nexports.saveState = saveState;                                                                                         // 5\nexports.readState = readState;                                                                                         // 6\n                                                                                                                       // 7\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 8\n                                                                                                                       // 9\nvar _warning = require('warning');                                                                                     // 10\n                                                                                                                       // 11\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 12\n                                                                                                                       // 13\nvar KeyPrefix = '@@History/';                                                                                          // 14\nvar QuotaExceededErrors = ['QuotaExceededError', 'QUOTA_EXCEEDED_ERR'];                                                // 15\n                                                                                                                       // 16\nvar SecurityError = 'SecurityError';                                                                                   // 17\n                                                                                                                       // 18\nfunction createKey(key) {                                                                                              // 19\n  return KeyPrefix + key;                                                                                              // 20\n}                                                                                                                      // 21\n                                                                                                                       // 22\nfunction saveState(key, state) {                                                                                       // 23\n  try {                                                                                                                // 24\n    if (state == null) {                                                                                               // 25\n      window.sessionStorage.removeItem(createKey(key));                                                                // 26\n    } else {                                                                                                           // 27\n      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));                                            // 28\n    }                                                                                                                  // 29\n  } catch (error) {                                                                                                    // 30\n    if (error.name === SecurityError) {                                                                                // 31\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any                                         // 32\n      // attempt to access window.sessionStorage.                                                                      // 33\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\n                                                                                                                       // 35\n      return;                                                                                                          // 36\n    }                                                                                                                  // 37\n                                                                                                                       // 38\n    if (QuotaExceededErrors.indexOf(error.name) >= 0 && window.sessionStorage.length === 0) {                          // 39\n      // Safari \"private mode\" throws QuotaExceededError.                                                              // 40\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\n                                                                                                                       // 42\n      return;                                                                                                          // 43\n    }                                                                                                                  // 44\n                                                                                                                       // 45\n    throw error;                                                                                                       // 46\n  }                                                                                                                    // 47\n}                                                                                                                      // 48\n                                                                                                                       // 49\nfunction readState(key) {                                                                                              // 50\n  var json = undefined;                                                                                                // 51\n  try {                                                                                                                // 52\n    json = window.sessionStorage.getItem(createKey(key));                                                              // 53\n  } catch (error) {                                                                                                    // 54\n    if (error.name === SecurityError) {                                                                                // 55\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any                                         // 56\n      // attempt to access window.sessionStorage.                                                                      // 57\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\n                                                                                                                       // 59\n      return null;                                                                                                     // 60\n    }                                                                                                                  // 61\n  }                                                                                                                    // 62\n                                                                                                                       // 63\n  if (json) {                                                                                                          // 64\n    try {                                                                                                              // 65\n      return JSON.parse(json);                                                                                         // 66\n    } catch (error) {                                                                                                  // 67\n      // Ignore invalid JSON.                                                                                          // 68\n    }                                                                                                                  // 69\n  }                                                                                                                    // 70\n                                                                                                                       // 71\n  return null;                                                                                                         // 72\n}                                                                                                                      // 73\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"_process\":1,\"warning\":29}],6:[function(require,module,exports){                                                    //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\nexports.addEventListener = addEventListener;                                                                           // 4\nexports.removeEventListener = removeEventListener;                                                                     // 5\nexports.getHashPath = getHashPath;                                                                                     // 6\nexports.replaceHashPath = replaceHashPath;                                                                             // 7\nexports.getWindowPath = getWindowPath;                                                                                 // 8\nexports.go = go;                                                                                                       // 9\nexports.getUserConfirmation = getUserConfirmation;                                                                     // 10\nexports.supportsHistory = supportsHistory;                                                                             // 11\nexports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;                                           // 12\n                                                                                                                       // 13\nfunction addEventListener(node, event, listener) {                                                                     // 14\n  if (node.addEventListener) {                                                                                         // 15\n    node.addEventListener(event, listener, false);                                                                     // 16\n  } else {                                                                                                             // 17\n    node.attachEvent('on' + event, listener);                                                                          // 18\n  }                                                                                                                    // 19\n}                                                                                                                      // 20\n                                                                                                                       // 21\nfunction removeEventListener(node, event, listener) {                                                                  // 22\n  if (node.removeEventListener) {                                                                                      // 23\n    node.removeEventListener(event, listener, false);                                                                  // 24\n  } else {                                                                                                             // 25\n    node.detachEvent('on' + event, listener);                                                                          // 26\n  }                                                                                                                    // 27\n}                                                                                                                      // 28\n                                                                                                                       // 29\nfunction getHashPath() {                                                                                               // 30\n  // We can't use window.location.hash here because it's not                                                           // 31\n  // consistent across browsers - Firefox will pre-decode it!                                                          // 32\n  return window.location.href.split('#')[1] || '';                                                                     // 33\n}                                                                                                                      // 34\n                                                                                                                       // 35\nfunction replaceHashPath(path) {                                                                                       // 36\n  window.location.replace(window.location.pathname + window.location.search + '#' + path);                             // 37\n}                                                                                                                      // 38\n                                                                                                                       // 39\nfunction getWindowPath() {                                                                                             // 40\n  return window.location.pathname + window.location.search + window.location.hash;                                     // 41\n}                                                                                                                      // 42\n                                                                                                                       // 43\nfunction go(n) {                                                                                                       // 44\n  if (n) window.history.go(n);                                                                                         // 45\n}                                                                                                                      // 46\n                                                                                                                       // 47\nfunction getUserConfirmation(message, callback) {                                                                      // 48\n  callback(window.confirm(message));                                                                                   // 49\n}                                                                                                                      // 50\n                                                                                                                       // 51\n/**                                                                                                                    // 52\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.                                           // 53\n *                                                                                                                     // 54\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE                                                          // 55\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js                                       // 56\n * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586               // 57\n */                                                                                                                    // 58\n                                                                                                                       // 59\nfunction supportsHistory() {                                                                                           // 60\n  var ua = navigator.userAgent;                                                                                        // 61\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {\n    return false;                                                                                                      // 63\n  }                                                                                                                    // 64\n  return window.history && 'pushState' in window.history;                                                              // 65\n}                                                                                                                      // 66\n                                                                                                                       // 67\n/**                                                                                                                    // 68\n * Returns false if using go(n) with hash history causes a full page reload.                                           // 69\n */                                                                                                                    // 70\n                                                                                                                       // 71\nfunction supportsGoWithoutReloadUsingHash() {                                                                          // 72\n  var ua = navigator.userAgent;                                                                                        // 73\n  return ua.indexOf('Firefox') === -1;                                                                                 // 74\n}                                                                                                                      // 75\n},{}],7:[function(require,module,exports){                                                                             //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);                 // 4\nexports.canUseDOM = canUseDOM;                                                                                         // 5\n},{}],8:[function(require,module,exports){                                                                             //\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\nexports.extractPath = extractPath;                                                                                     // 4\nexports.parsePath = parsePath;                                                                                         // 5\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _warning = require('warning');                                                                                     // 9\n                                                                                                                       // 10\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 11\n                                                                                                                       // 12\nfunction extractPath(string) {                                                                                         // 13\n  var match = string.match(/^https?:\\/\\/[^\\/]*/);                                                                      // 14\n                                                                                                                       // 15\n  if (match == null) return string;                                                                                    // 16\n                                                                                                                       // 17\n  return string.substring(match[0].length);                                                                            // 18\n}                                                                                                                      // 19\n                                                                                                                       // 20\nfunction parsePath(path) {                                                                                             // 21\n  var pathname = extractPath(path);                                                                                    // 22\n  var search = '';                                                                                                     // 23\n  var hash = '';                                                                                                       // 24\n                                                                                                                       // 25\n  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like \"%s\"', path) : undefined;\n                                                                                                                       // 27\n  var hashIndex = pathname.indexOf('#');                                                                               // 28\n  if (hashIndex !== -1) {                                                                                              // 29\n    hash = pathname.substring(hashIndex);                                                                              // 30\n    pathname = pathname.substring(0, hashIndex);                                                                       // 31\n  }                                                                                                                    // 32\n                                                                                                                       // 33\n  var searchIndex = pathname.indexOf('?');                                                                             // 34\n  if (searchIndex !== -1) {                                                                                            // 35\n    search = pathname.substring(searchIndex);                                                                          // 36\n    pathname = pathname.substring(0, searchIndex);                                                                     // 37\n  }                                                                                                                    // 38\n                                                                                                                       // 39\n  if (pathname === '') pathname = '/';                                                                                 // 40\n                                                                                                                       // 41\n  return {                                                                                                             // 42\n    pathname: pathname,                                                                                                // 43\n    search: search,                                                                                                    // 44\n    hash: hash                                                                                                         // 45\n  };                                                                                                                   // 46\n}                                                                                                                      // 47\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"_process\":1,\"warning\":29}],9:[function(require,module,exports){                                                    //\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _invariant = require('invariant');                                                                                 // 9\n                                                                                                                       // 10\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 11\n                                                                                                                       // 12\nvar _Actions = require('./Actions');                                                                                   // 13\n                                                                                                                       // 14\nvar _PathUtils = require('./PathUtils');                                                                               // 15\n                                                                                                                       // 16\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');                                                         // 17\n                                                                                                                       // 18\nvar _DOMUtils = require('./DOMUtils');                                                                                 // 19\n                                                                                                                       // 20\nvar _DOMStateStorage = require('./DOMStateStorage');                                                                   // 21\n                                                                                                                       // 22\nvar _createDOMHistory = require('./createDOMHistory');                                                                 // 23\n                                                                                                                       // 24\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);                                                    // 25\n                                                                                                                       // 26\n/**                                                                                                                    // 27\n * Creates and returns a history object that uses HTML5's history API                                                  // 28\n * (pushState, replaceState, and the popstate event) to manage history.                                                // 29\n * This is the recommended method of managing history in browsers because                                              // 30\n * it provides the cleanest URLs.                                                                                      // 31\n *                                                                                                                     // 32\n * Note: In browsers that do not support the HTML5 history API full                                                    // 33\n * page reloads will be used to preserve URLs.                                                                         // 34\n */                                                                                                                    // 35\nfunction createBrowserHistory() {                                                                                      // 36\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];                               // 37\n                                                                                                                       // 38\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;\n                                                                                                                       // 40\n  var forceRefresh = options.forceRefresh;                                                                             // 41\n                                                                                                                       // 42\n  var isSupported = _DOMUtils.supportsHistory();                                                                       // 43\n  var useRefresh = !isSupported || forceRefresh;                                                                       // 44\n                                                                                                                       // 45\n  function getCurrentLocation(historyState) {                                                                          // 46\n    historyState = historyState || window.history.state || {};                                                         // 47\n                                                                                                                       // 48\n    var path = _DOMUtils.getWindowPath();                                                                              // 49\n    var _historyState = historyState;                                                                                  // 50\n    var key = _historyState.key;                                                                                       // 51\n                                                                                                                       // 52\n    var state = undefined;                                                                                             // 53\n    if (key) {                                                                                                         // 54\n      state = _DOMStateStorage.readState(key);                                                                         // 55\n    } else {                                                                                                           // 56\n      state = null;                                                                                                    // 57\n      key = history.createKey();                                                                                       // 58\n                                                                                                                       // 59\n      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);              // 60\n    }                                                                                                                  // 61\n                                                                                                                       // 62\n    var location = _PathUtils.parsePath(path);                                                                         // 63\n                                                                                                                       // 64\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);                           // 65\n  }                                                                                                                    // 66\n                                                                                                                       // 67\n  function startPopStateListener(_ref) {                                                                               // 68\n    var transitionTo = _ref.transitionTo;                                                                              // 69\n                                                                                                                       // 70\n    function popStateListener(event) {                                                                                 // 71\n      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.                           // 72\n                                                                                                                       // 73\n      transitionTo(getCurrentLocation(event.state));                                                                   // 74\n    }                                                                                                                  // 75\n                                                                                                                       // 76\n    _DOMUtils.addEventListener(window, 'popstate', popStateListener);                                                  // 77\n                                                                                                                       // 78\n    return function () {                                                                                               // 79\n      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);                                             // 80\n    };                                                                                                                 // 81\n  }                                                                                                                    // 82\n                                                                                                                       // 83\n  function finishTransition(location) {                                                                                // 84\n    var basename = location.basename;                                                                                  // 85\n    var pathname = location.pathname;                                                                                  // 86\n    var search = location.search;                                                                                      // 87\n    var hash = location.hash;                                                                                          // 88\n    var state = location.state;                                                                                        // 89\n    var action = location.action;                                                                                      // 90\n    var key = location.key;                                                                                            // 91\n                                                                                                                       // 92\n    if (action === _Actions.POP) return; // Nothing to do.                                                             // 93\n                                                                                                                       // 94\n    _DOMStateStorage.saveState(key, state);                                                                            // 95\n                                                                                                                       // 96\n    var path = (basename || '') + pathname + search + hash;                                                            // 97\n    var historyState = {                                                                                               // 98\n      key: key                                                                                                         // 99\n    };                                                                                                                 // 100\n                                                                                                                       // 101\n    if (action === _Actions.PUSH) {                                                                                    // 102\n      if (useRefresh) {                                                                                                // 103\n        window.location.href = path;                                                                                   // 104\n        return false; // Prevent location update.                                                                      // 105\n      } else {                                                                                                         // 106\n          window.history.pushState(historyState, null, path);                                                          // 107\n        }                                                                                                              // 108\n    } else {                                                                                                           // 109\n      // REPLACE                                                                                                       // 110\n      if (useRefresh) {                                                                                                // 111\n        window.location.replace(path);                                                                                 // 112\n        return false; // Prevent location update.                                                                      // 113\n      } else {                                                                                                         // 114\n          window.history.replaceState(historyState, null, path);                                                       // 115\n        }                                                                                                              // 116\n    }                                                                                                                  // 117\n  }                                                                                                                    // 118\n                                                                                                                       // 119\n  var history = _createDOMHistory2['default'](_extends({}, options, {                                                  // 120\n    getCurrentLocation: getCurrentLocation,                                                                            // 121\n    finishTransition: finishTransition,                                                                                // 122\n    saveState: _DOMStateStorage.saveState                                                                              // 123\n  }));                                                                                                                 // 124\n                                                                                                                       // 125\n  var listenerCount = 0,                                                                                               // 126\n      stopPopStateListener = undefined;                                                                                // 127\n                                                                                                                       // 128\n  function listenBefore(listener) {                                                                                    // 129\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);                                  // 130\n                                                                                                                       // 131\n    var unlisten = history.listenBefore(listener);                                                                     // 132\n                                                                                                                       // 133\n    return function () {                                                                                               // 134\n      unlisten();                                                                                                      // 135\n                                                                                                                       // 136\n      if (--listenerCount === 0) stopPopStateListener();                                                               // 137\n    };                                                                                                                 // 138\n  }                                                                                                                    // 139\n                                                                                                                       // 140\n  function listen(listener) {                                                                                          // 141\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);                                  // 142\n                                                                                                                       // 143\n    var unlisten = history.listen(listener);                                                                           // 144\n                                                                                                                       // 145\n    return function () {                                                                                               // 146\n      unlisten();                                                                                                      // 147\n                                                                                                                       // 148\n      if (--listenerCount === 0) stopPopStateListener();                                                               // 149\n    };                                                                                                                 // 150\n  }                                                                                                                    // 151\n                                                                                                                       // 152\n  // deprecated                                                                                                        // 153\n  function registerTransitionHook(hook) {                                                                              // 154\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);                                  // 155\n                                                                                                                       // 156\n    history.registerTransitionHook(hook);                                                                              // 157\n  }                                                                                                                    // 158\n                                                                                                                       // 159\n  // deprecated                                                                                                        // 160\n  function unregisterTransitionHook(hook) {                                                                            // 161\n    history.unregisterTransitionHook(hook);                                                                            // 162\n                                                                                                                       // 163\n    if (--listenerCount === 0) stopPopStateListener();                                                                 // 164\n  }                                                                                                                    // 165\n                                                                                                                       // 166\n  return _extends({}, history, {                                                                                       // 167\n    listenBefore: listenBefore,                                                                                        // 168\n    listen: listen,                                                                                                    // 169\n    registerTransitionHook: registerTransitionHook,                                                                    // 170\n    unregisterTransitionHook: unregisterTransitionHook                                                                 // 171\n  });                                                                                                                  // 172\n}                                                                                                                      // 173\n                                                                                                                       // 174\nexports['default'] = createBrowserHistory;                                                                             // 175\nmodule.exports = exports['default'];                                                                                   // 176\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./Actions\":3,\"./DOMStateStorage\":5,\"./DOMUtils\":6,\"./ExecutionEnvironment\":7,\"./PathUtils\":8,\"./createDOMHistory\":10,\"_process\":1,\"invariant\":26}],10:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _invariant = require('invariant');                                                                                 // 9\n                                                                                                                       // 10\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 11\n                                                                                                                       // 12\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');                                                         // 13\n                                                                                                                       // 14\nvar _DOMUtils = require('./DOMUtils');                                                                                 // 15\n                                                                                                                       // 16\nvar _createHistory = require('./createHistory');                                                                       // 17\n                                                                                                                       // 18\nvar _createHistory2 = _interopRequireDefault(_createHistory);                                                          // 19\n                                                                                                                       // 20\nfunction createDOMHistory(options) {                                                                                   // 21\n  var history = _createHistory2['default'](_extends({                                                                  // 22\n    getUserConfirmation: _DOMUtils.getUserConfirmation                                                                 // 23\n  }, options, {                                                                                                        // 24\n    go: _DOMUtils.go                                                                                                   // 25\n  }));                                                                                                                 // 26\n                                                                                                                       // 27\n  function listen(listener) {                                                                                          // 28\n    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;\n                                                                                                                       // 30\n    return history.listen(listener);                                                                                   // 31\n  }                                                                                                                    // 32\n                                                                                                                       // 33\n  return _extends({}, history, {                                                                                       // 34\n    listen: listen                                                                                                     // 35\n  });                                                                                                                  // 36\n}                                                                                                                      // 37\n                                                                                                                       // 38\nexports['default'] = createDOMHistory;                                                                                 // 39\nmodule.exports = exports['default'];                                                                                   // 40\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./DOMUtils\":6,\"./ExecutionEnvironment\":7,\"./createHistory\":12,\"_process\":1,\"invariant\":26}],11:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _warning = require('warning');                                                                                     // 9\n                                                                                                                       // 10\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 11\n                                                                                                                       // 12\nvar _invariant = require('invariant');                                                                                 // 13\n                                                                                                                       // 14\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 15\n                                                                                                                       // 16\nvar _Actions = require('./Actions');                                                                                   // 17\n                                                                                                                       // 18\nvar _PathUtils = require('./PathUtils');                                                                               // 19\n                                                                                                                       // 20\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');                                                         // 21\n                                                                                                                       // 22\nvar _DOMUtils = require('./DOMUtils');                                                                                 // 23\n                                                                                                                       // 24\nvar _DOMStateStorage = require('./DOMStateStorage');                                                                   // 25\n                                                                                                                       // 26\nvar _createDOMHistory = require('./createDOMHistory');                                                                 // 27\n                                                                                                                       // 28\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);                                                    // 29\n                                                                                                                       // 30\nfunction isAbsolutePath(path) {                                                                                        // 31\n  return typeof path === 'string' && path.charAt(0) === '/';                                                           // 32\n}                                                                                                                      // 33\n                                                                                                                       // 34\nfunction ensureSlash() {                                                                                               // 35\n  var path = _DOMUtils.getHashPath();                                                                                  // 36\n                                                                                                                       // 37\n  if (isAbsolutePath(path)) return true;                                                                               // 38\n                                                                                                                       // 39\n  _DOMUtils.replaceHashPath('/' + path);                                                                               // 40\n                                                                                                                       // 41\n  return false;                                                                                                        // 42\n}                                                                                                                      // 43\n                                                                                                                       // 44\nfunction addQueryStringValueToPath(path, key, value) {                                                                 // 45\n  return path + (path.indexOf('?') === -1 ? '?' : '&') + (key + '=' + value);                                          // 46\n}                                                                                                                      // 47\n                                                                                                                       // 48\nfunction stripQueryStringValueFromPath(path, key) {                                                                    // 49\n  return path.replace(new RegExp('[?&]?' + key + '=[a-zA-Z0-9]+'), '');                                                // 50\n}                                                                                                                      // 51\n                                                                                                                       // 52\nfunction getQueryStringValueFromPath(path, key) {                                                                      // 53\n  var match = path.match(new RegExp('\\\\?.*?\\\\b' + key + '=(.+?)\\\\b'));                                                 // 54\n  return match && match[1];                                                                                            // 55\n}                                                                                                                      // 56\n                                                                                                                       // 57\nvar DefaultQueryKey = '_k';                                                                                            // 58\n                                                                                                                       // 59\nfunction createHashHistory() {                                                                                         // 60\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];                               // 61\n                                                                                                                       // 62\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Hash history needs a DOM') : _invariant2['default'](false) : undefined;\n                                                                                                                       // 64\n  var queryKey = options.queryKey;                                                                                     // 65\n                                                                                                                       // 66\n  if (queryKey === undefined || !!queryKey) queryKey = typeof queryKey === 'string' ? queryKey : DefaultQueryKey;      // 67\n                                                                                                                       // 68\n  function getCurrentLocation() {                                                                                      // 69\n    var path = _DOMUtils.getHashPath();                                                                                // 70\n                                                                                                                       // 71\n    var key = undefined,                                                                                               // 72\n        state = undefined;                                                                                             // 73\n    if (queryKey) {                                                                                                    // 74\n      key = getQueryStringValueFromPath(path, queryKey);                                                               // 75\n      path = stripQueryStringValueFromPath(path, queryKey);                                                            // 76\n                                                                                                                       // 77\n      if (key) {                                                                                                       // 78\n        state = _DOMStateStorage.readState(key);                                                                       // 79\n      } else {                                                                                                         // 80\n        state = null;                                                                                                  // 81\n        key = history.createKey();                                                                                     // 82\n        _DOMUtils.replaceHashPath(addQueryStringValueToPath(path, queryKey, key));                                     // 83\n      }                                                                                                                // 84\n    } else {                                                                                                           // 85\n      key = state = null;                                                                                              // 86\n    }                                                                                                                  // 87\n                                                                                                                       // 88\n    var location = _PathUtils.parsePath(path);                                                                         // 89\n                                                                                                                       // 90\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);                           // 91\n  }                                                                                                                    // 92\n                                                                                                                       // 93\n  function startHashChangeListener(_ref) {                                                                             // 94\n    var transitionTo = _ref.transitionTo;                                                                              // 95\n                                                                                                                       // 96\n    function hashChangeListener() {                                                                                    // 97\n      if (!ensureSlash()) return; // Always make sure hashes are preceeded with a /.                                   // 98\n                                                                                                                       // 99\n      transitionTo(getCurrentLocation());                                                                              // 100\n    }                                                                                                                  // 101\n                                                                                                                       // 102\n    ensureSlash();                                                                                                     // 103\n    _DOMUtils.addEventListener(window, 'hashchange', hashChangeListener);                                              // 104\n                                                                                                                       // 105\n    return function () {                                                                                               // 106\n      _DOMUtils.removeEventListener(window, 'hashchange', hashChangeListener);                                         // 107\n    };                                                                                                                 // 108\n  }                                                                                                                    // 109\n                                                                                                                       // 110\n  function finishTransition(location) {                                                                                // 111\n    var basename = location.basename;                                                                                  // 112\n    var pathname = location.pathname;                                                                                  // 113\n    var search = location.search;                                                                                      // 114\n    var state = location.state;                                                                                        // 115\n    var action = location.action;                                                                                      // 116\n    var key = location.key;                                                                                            // 117\n                                                                                                                       // 118\n    if (action === _Actions.POP) return; // Nothing to do.                                                             // 119\n                                                                                                                       // 120\n    var path = (basename || '') + pathname + search;                                                                   // 121\n                                                                                                                       // 122\n    if (queryKey) {                                                                                                    // 123\n      path = addQueryStringValueToPath(path, queryKey, key);                                                           // 124\n      _DOMStateStorage.saveState(key, state);                                                                          // 125\n    } else {                                                                                                           // 126\n      // Drop key and state.                                                                                           // 127\n      location.key = location.state = null;                                                                            // 128\n    }                                                                                                                  // 129\n                                                                                                                       // 130\n    var currentHash = _DOMUtils.getHashPath();                                                                         // 131\n                                                                                                                       // 132\n    if (action === _Actions.PUSH) {                                                                                    // 133\n      if (currentHash !== path) {                                                                                      // 134\n        window.location.hash = path;                                                                                   // 135\n      } else {                                                                                                         // 136\n        process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'You cannot PUSH the same path using hash history') : undefined;\n      }                                                                                                                // 138\n    } else if (currentHash !== path) {                                                                                 // 139\n      // REPLACE                                                                                                       // 140\n      _DOMUtils.replaceHashPath(path);                                                                                 // 141\n    }                                                                                                                  // 142\n  }                                                                                                                    // 143\n                                                                                                                       // 144\n  var history = _createDOMHistory2['default'](_extends({}, options, {                                                  // 145\n    getCurrentLocation: getCurrentLocation,                                                                            // 146\n    finishTransition: finishTransition,                                                                                // 147\n    saveState: _DOMStateStorage.saveState                                                                              // 148\n  }));                                                                                                                 // 149\n                                                                                                                       // 150\n  var listenerCount = 0,                                                                                               // 151\n      stopHashChangeListener = undefined;                                                                              // 152\n                                                                                                                       // 153\n  function listenBefore(listener) {                                                                                    // 154\n    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);                              // 155\n                                                                                                                       // 156\n    var unlisten = history.listenBefore(listener);                                                                     // 157\n                                                                                                                       // 158\n    return function () {                                                                                               // 159\n      unlisten();                                                                                                      // 160\n                                                                                                                       // 161\n      if (--listenerCount === 0) stopHashChangeListener();                                                             // 162\n    };                                                                                                                 // 163\n  }                                                                                                                    // 164\n                                                                                                                       // 165\n  function listen(listener) {                                                                                          // 166\n    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);                              // 167\n                                                                                                                       // 168\n    var unlisten = history.listen(listener);                                                                           // 169\n                                                                                                                       // 170\n    return function () {                                                                                               // 171\n      unlisten();                                                                                                      // 172\n                                                                                                                       // 173\n      if (--listenerCount === 0) stopHashChangeListener();                                                             // 174\n    };                                                                                                                 // 175\n  }                                                                                                                    // 176\n                                                                                                                       // 177\n  function push(location) {                                                                                            // 178\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n                                                                                                                       // 180\n    history.push(location);                                                                                            // 181\n  }                                                                                                                    // 182\n                                                                                                                       // 183\n  function replace(location) {                                                                                         // 184\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n                                                                                                                       // 186\n    history.replace(location);                                                                                         // 187\n  }                                                                                                                    // 188\n                                                                                                                       // 189\n  var goIsSupportedWithoutReload = _DOMUtils.supportsGoWithoutReloadUsingHash();                                       // 190\n                                                                                                                       // 191\n  function go(n) {                                                                                                     // 192\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : undefined;\n                                                                                                                       // 194\n    history.go(n);                                                                                                     // 195\n  }                                                                                                                    // 196\n                                                                                                                       // 197\n  function createHref(path) {                                                                                          // 198\n    return '#' + history.createHref(path);                                                                             // 199\n  }                                                                                                                    // 200\n                                                                                                                       // 201\n  // deprecated                                                                                                        // 202\n  function registerTransitionHook(hook) {                                                                              // 203\n    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);                              // 204\n                                                                                                                       // 205\n    history.registerTransitionHook(hook);                                                                              // 206\n  }                                                                                                                    // 207\n                                                                                                                       // 208\n  // deprecated                                                                                                        // 209\n  function unregisterTransitionHook(hook) {                                                                            // 210\n    history.unregisterTransitionHook(hook);                                                                            // 211\n                                                                                                                       // 212\n    if (--listenerCount === 0) stopHashChangeListener();                                                               // 213\n  }                                                                                                                    // 214\n                                                                                                                       // 215\n  // deprecated                                                                                                        // 216\n  function pushState(state, path) {                                                                                    // 217\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n                                                                                                                       // 219\n    history.pushState(state, path);                                                                                    // 220\n  }                                                                                                                    // 221\n                                                                                                                       // 222\n  // deprecated                                                                                                        // 223\n  function replaceState(state, path) {                                                                                 // 224\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n                                                                                                                       // 226\n    history.replaceState(state, path);                                                                                 // 227\n  }                                                                                                                    // 228\n                                                                                                                       // 229\n  return _extends({}, history, {                                                                                       // 230\n    listenBefore: listenBefore,                                                                                        // 231\n    listen: listen,                                                                                                    // 232\n    push: push,                                                                                                        // 233\n    replace: replace,                                                                                                  // 234\n    go: go,                                                                                                            // 235\n    createHref: createHref,                                                                                            // 236\n                                                                                                                       // 237\n    registerTransitionHook: registerTransitionHook, // deprecated - warning is in createHistory                        // 238\n    unregisterTransitionHook: unregisterTransitionHook, // deprecated - warning is in createHistory                    // 239\n    pushState: pushState, // deprecated - warning is in createHistory                                                  // 240\n    replaceState: replaceState // deprecated - warning is in createHistory                                             // 241\n  });                                                                                                                  // 242\n}                                                                                                                      // 243\n                                                                                                                       // 244\nexports['default'] = createHashHistory;                                                                                // 245\nmodule.exports = exports['default'];                                                                                   // 246\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./Actions\":3,\"./DOMStateStorage\":5,\"./DOMUtils\":6,\"./ExecutionEnvironment\":7,\"./PathUtils\":8,\"./createDOMHistory\":10,\"_process\":1,\"invariant\":26,\"warning\":29}],12:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _warning = require('warning');                                                                                     // 9\n                                                                                                                       // 10\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 11\n                                                                                                                       // 12\nvar _deepEqual = require('deep-equal');                                                                                // 13\n                                                                                                                       // 14\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);                                                                  // 15\n                                                                                                                       // 16\nvar _PathUtils = require('./PathUtils');                                                                               // 17\n                                                                                                                       // 18\nvar _AsyncUtils = require('./AsyncUtils');                                                                             // 19\n                                                                                                                       // 20\nvar _Actions = require('./Actions');                                                                                   // 21\n                                                                                                                       // 22\nvar _createLocation2 = require('./createLocation');                                                                    // 23\n                                                                                                                       // 24\nvar _createLocation3 = _interopRequireDefault(_createLocation2);                                                       // 25\n                                                                                                                       // 26\nvar _runTransitionHook = require('./runTransitionHook');                                                               // 27\n                                                                                                                       // 28\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);                                                  // 29\n                                                                                                                       // 30\nvar _deprecate = require('./deprecate');                                                                               // 31\n                                                                                                                       // 32\nvar _deprecate2 = _interopRequireDefault(_deprecate);                                                                  // 33\n                                                                                                                       // 34\nfunction createRandomKey(length) {                                                                                     // 35\n  return Math.random().toString(36).substr(2, length);                                                                 // 36\n}                                                                                                                      // 37\n                                                                                                                       // 38\nfunction locationsAreEqual(a, b) {                                                                                     // 39\n  return a.pathname === b.pathname && a.search === b.search &&                                                         // 40\n  //a.action === b.action && // Different action !== location change.                                                  // 41\n  a.key === b.key && _deepEqual2['default'](a.state, b.state);                                                         // 42\n}                                                                                                                      // 43\n                                                                                                                       // 44\nvar DefaultKeyLength = 6;                                                                                              // 45\n                                                                                                                       // 46\nfunction createHistory() {                                                                                             // 47\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];                               // 48\n  var getCurrentLocation = options.getCurrentLocation;                                                                 // 49\n  var finishTransition = options.finishTransition;                                                                     // 50\n  var saveState = options.saveState;                                                                                   // 51\n  var go = options.go;                                                                                                 // 52\n  var keyLength = options.keyLength;                                                                                   // 53\n  var getUserConfirmation = options.getUserConfirmation;                                                               // 54\n                                                                                                                       // 55\n  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;                                                     // 56\n                                                                                                                       // 57\n  var transitionHooks = [];                                                                                            // 58\n                                                                                                                       // 59\n  function listenBefore(hook) {                                                                                        // 60\n    transitionHooks.push(hook);                                                                                        // 61\n                                                                                                                       // 62\n    return function () {                                                                                               // 63\n      transitionHooks = transitionHooks.filter(function (item) {                                                       // 64\n        return item !== hook;                                                                                          // 65\n      });                                                                                                              // 66\n    };                                                                                                                 // 67\n  }                                                                                                                    // 68\n                                                                                                                       // 69\n  var allKeys = [];                                                                                                    // 70\n  var changeListeners = [];                                                                                            // 71\n  var location = undefined;                                                                                            // 72\n                                                                                                                       // 73\n  function getCurrent() {                                                                                              // 74\n    if (pendingLocation && pendingLocation.action === _Actions.POP) {                                                  // 75\n      return allKeys.indexOf(pendingLocation.key);                                                                     // 76\n    } else if (location) {                                                                                             // 77\n      return allKeys.indexOf(location.key);                                                                            // 78\n    } else {                                                                                                           // 79\n      return -1;                                                                                                       // 80\n    }                                                                                                                  // 81\n  }                                                                                                                    // 82\n                                                                                                                       // 83\n  function updateLocation(newLocation) {                                                                               // 84\n    var current = getCurrent();                                                                                        // 85\n                                                                                                                       // 86\n    location = newLocation;                                                                                            // 87\n                                                                                                                       // 88\n    if (location.action === _Actions.PUSH) {                                                                           // 89\n      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);                                              // 90\n    } else if (location.action === _Actions.REPLACE) {                                                                 // 91\n      allKeys[current] = location.key;                                                                                 // 92\n    }                                                                                                                  // 93\n                                                                                                                       // 94\n    changeListeners.forEach(function (listener) {                                                                      // 95\n      listener(location);                                                                                              // 96\n    });                                                                                                                // 97\n  }                                                                                                                    // 98\n                                                                                                                       // 99\n  function listen(listener) {                                                                                          // 100\n    changeListeners.push(listener);                                                                                    // 101\n                                                                                                                       // 102\n    if (location) {                                                                                                    // 103\n      listener(location);                                                                                              // 104\n    } else {                                                                                                           // 105\n      var _location = getCurrentLocation();                                                                            // 106\n      allKeys = [_location.key];                                                                                       // 107\n      updateLocation(_location);                                                                                       // 108\n    }                                                                                                                  // 109\n                                                                                                                       // 110\n    return function () {                                                                                               // 111\n      changeListeners = changeListeners.filter(function (item) {                                                       // 112\n        return item !== listener;                                                                                      // 113\n      });                                                                                                              // 114\n    };                                                                                                                 // 115\n  }                                                                                                                    // 116\n                                                                                                                       // 117\n  function confirmTransitionTo(location, callback) {                                                                   // 118\n    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {                                       // 119\n      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {                             // 120\n        if (result != null) {                                                                                          // 121\n          done(result);                                                                                                // 122\n        } else {                                                                                                       // 123\n          next();                                                                                                      // 124\n        }                                                                                                              // 125\n      });                                                                                                              // 126\n    }, function (message) {                                                                                            // 127\n      if (getUserConfirmation && typeof message === 'string') {                                                        // 128\n        getUserConfirmation(message, function (ok) {                                                                   // 129\n          callback(ok !== false);                                                                                      // 130\n        });                                                                                                            // 131\n      } else {                                                                                                         // 132\n        callback(message !== false);                                                                                   // 133\n      }                                                                                                                // 134\n    });                                                                                                                // 135\n  }                                                                                                                    // 136\n                                                                                                                       // 137\n  var pendingLocation = undefined;                                                                                     // 138\n                                                                                                                       // 139\n  function transitionTo(nextLocation) {                                                                                // 140\n    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.                               // 141\n                                                                                                                       // 142\n    pendingLocation = nextLocation;                                                                                    // 143\n                                                                                                                       // 144\n    confirmTransitionTo(nextLocation, function (ok) {                                                                  // 145\n      if (pendingLocation !== nextLocation) return; // Transition was interrupted.                                     // 146\n                                                                                                                       // 147\n      if (ok) {                                                                                                        // 148\n        // treat PUSH to current path like REPLACE to be consistent with browsers                                      // 149\n        if (nextLocation.action === _Actions.PUSH) {                                                                   // 150\n          var prevPath = createPath(location);                                                                         // 151\n          var nextPath = createPath(nextLocation);                                                                     // 152\n                                                                                                                       // 153\n          if (nextPath === prevPath && _deepEqual2['default'](location.state, nextLocation.state)) nextLocation.action = _Actions.REPLACE;\n        }                                                                                                              // 155\n                                                                                                                       // 156\n        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);                                    // 157\n      } else if (location && nextLocation.action === _Actions.POP) {                                                   // 158\n        var prevIndex = allKeys.indexOf(location.key);                                                                 // 159\n        var nextIndex = allKeys.indexOf(nextLocation.key);                                                             // 160\n                                                                                                                       // 161\n        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.                       // 162\n      }                                                                                                                // 163\n    });                                                                                                                // 164\n  }                                                                                                                    // 165\n                                                                                                                       // 166\n  function push(location) {                                                                                            // 167\n    transitionTo(createLocation(location, _Actions.PUSH, createKey()));                                                // 168\n  }                                                                                                                    // 169\n                                                                                                                       // 170\n  function replace(location) {                                                                                         // 171\n    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));                                             // 172\n  }                                                                                                                    // 173\n                                                                                                                       // 174\n  function goBack() {                                                                                                  // 175\n    go(-1);                                                                                                            // 176\n  }                                                                                                                    // 177\n                                                                                                                       // 178\n  function goForward() {                                                                                               // 179\n    go(1);                                                                                                             // 180\n  }                                                                                                                    // 181\n                                                                                                                       // 182\n  function createKey() {                                                                                               // 183\n    return createRandomKey(keyLength);                                                                                 // 184\n  }                                                                                                                    // 185\n                                                                                                                       // 186\n  function createPath(location) {                                                                                      // 187\n    if (location == null || typeof location === 'string') return location;                                             // 188\n                                                                                                                       // 189\n    var pathname = location.pathname;                                                                                  // 190\n    var search = location.search;                                                                                      // 191\n    var hash = location.hash;                                                                                          // 192\n                                                                                                                       // 193\n    var result = pathname;                                                                                             // 194\n                                                                                                                       // 195\n    if (search) result += search;                                                                                      // 196\n                                                                                                                       // 197\n    if (hash) result += hash;                                                                                          // 198\n                                                                                                                       // 199\n    return result;                                                                                                     // 200\n  }                                                                                                                    // 201\n                                                                                                                       // 202\n  function createHref(location) {                                                                                      // 203\n    return createPath(location);                                                                                       // 204\n  }                                                                                                                    // 205\n                                                                                                                       // 206\n  function createLocation(location, action) {                                                                          // 207\n    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];                        // 208\n                                                                                                                       // 209\n    if (typeof action === 'object') {                                                                                  // 210\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to history.createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;\n                                                                                                                       // 212\n      if (typeof location === 'string') location = _PathUtils.parsePath(location);                                     // 213\n                                                                                                                       // 214\n      location = _extends({}, location, { state: action });                                                            // 215\n                                                                                                                       // 216\n      action = key;                                                                                                    // 217\n      key = arguments[3] || createKey();                                                                               // 218\n    }                                                                                                                  // 219\n                                                                                                                       // 220\n    return _createLocation3['default'](location, action, key);                                                         // 221\n  }                                                                                                                    // 222\n                                                                                                                       // 223\n  // deprecated                                                                                                        // 224\n  function setState(state) {                                                                                           // 225\n    if (location) {                                                                                                    // 226\n      updateLocationState(location, state);                                                                            // 227\n      updateLocation(location);                                                                                        // 228\n    } else {                                                                                                           // 229\n      updateLocationState(getCurrentLocation(), state);                                                                // 230\n    }                                                                                                                  // 231\n  }                                                                                                                    // 232\n                                                                                                                       // 233\n  function updateLocationState(location, state) {                                                                      // 234\n    location.state = _extends({}, location.state, state);                                                              // 235\n    saveState(location.key, location.state);                                                                           // 236\n  }                                                                                                                    // 237\n                                                                                                                       // 238\n  // deprecated                                                                                                        // 239\n  function registerTransitionHook(hook) {                                                                              // 240\n    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);                                              // 241\n  }                                                                                                                    // 242\n                                                                                                                       // 243\n  // deprecated                                                                                                        // 244\n  function unregisterTransitionHook(hook) {                                                                            // 245\n    transitionHooks = transitionHooks.filter(function (item) {                                                         // 246\n      return item !== hook;                                                                                            // 247\n    });                                                                                                                // 248\n  }                                                                                                                    // 249\n                                                                                                                       // 250\n  // deprecated                                                                                                        // 251\n  function pushState(state, path) {                                                                                    // 252\n    if (typeof path === 'string') path = _PathUtils.parsePath(path);                                                   // 253\n                                                                                                                       // 254\n    push(_extends({ state: state }, path));                                                                            // 255\n  }                                                                                                                    // 256\n                                                                                                                       // 257\n  // deprecated                                                                                                        // 258\n  function replaceState(state, path) {                                                                                 // 259\n    if (typeof path === 'string') path = _PathUtils.parsePath(path);                                                   // 260\n                                                                                                                       // 261\n    replace(_extends({ state: state }, path));                                                                         // 262\n  }                                                                                                                    // 263\n                                                                                                                       // 264\n  return {                                                                                                             // 265\n    listenBefore: listenBefore,                                                                                        // 266\n    listen: listen,                                                                                                    // 267\n    transitionTo: transitionTo,                                                                                        // 268\n    push: push,                                                                                                        // 269\n    replace: replace,                                                                                                  // 270\n    go: go,                                                                                                            // 271\n    goBack: goBack,                                                                                                    // 272\n    goForward: goForward,                                                                                              // 273\n    createKey: createKey,                                                                                              // 274\n    createPath: createPath,                                                                                            // 275\n    createHref: createHref,                                                                                            // 276\n    createLocation: createLocation,                                                                                    // 277\n                                                                                                                       // 278\n    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),      // 279\n    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),\n    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),\n    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),                         // 282\n    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')              // 283\n  };                                                                                                                   // 284\n}                                                                                                                      // 285\n                                                                                                                       // 286\nexports['default'] = createHistory;                                                                                    // 287\nmodule.exports = exports['default'];                                                                                   // 288\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./Actions\":3,\"./AsyncUtils\":4,\"./PathUtils\":8,\"./createLocation\":13,\"./deprecate\":15,\"./runTransitionHook\":19,\"_process\":1,\"deep-equal\":23,\"warning\":29}],13:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _warning = require('warning');                                                                                     // 9\n                                                                                                                       // 10\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 11\n                                                                                                                       // 12\nvar _Actions = require('./Actions');                                                                                   // 13\n                                                                                                                       // 14\nvar _PathUtils = require('./PathUtils');                                                                               // 15\n                                                                                                                       // 16\nfunction createLocation() {                                                                                            // 17\n  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];                             // 18\n  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];                      // 19\n  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];                                 // 20\n                                                                                                                       // 21\n  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];                          // 22\n                                                                                                                       // 23\n  if (typeof location === 'string') location = _PathUtils.parsePath(location);                                         // 24\n                                                                                                                       // 25\n  if (typeof action === 'object') {                                                                                    // 26\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;\n                                                                                                                       // 28\n    location = _extends({}, location, { state: action });                                                              // 29\n                                                                                                                       // 30\n    action = key || _Actions.POP;                                                                                      // 31\n    key = _fourthArg;                                                                                                  // 32\n  }                                                                                                                    // 33\n                                                                                                                       // 34\n  var pathname = location.pathname || '/';                                                                             // 35\n  var search = location.search || '';                                                                                  // 36\n  var hash = location.hash || '';                                                                                      // 37\n  var state = location.state || null;                                                                                  // 38\n                                                                                                                       // 39\n  return {                                                                                                             // 40\n    pathname: pathname,                                                                                                // 41\n    search: search,                                                                                                    // 42\n    hash: hash,                                                                                                        // 43\n    state: state,                                                                                                      // 44\n    action: action,                                                                                                    // 45\n    key: key                                                                                                           // 46\n  };                                                                                                                   // 47\n}                                                                                                                      // 48\n                                                                                                                       // 49\nexports['default'] = createLocation;                                                                                   // 50\nmodule.exports = exports['default'];                                                                                   // 51\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./Actions\":3,\"./PathUtils\":8,\"_process\":1,\"warning\":29}],14:[function(require,module,exports){                     //\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _warning = require('warning');                                                                                     // 9\n                                                                                                                       // 10\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 11\n                                                                                                                       // 12\nvar _invariant = require('invariant');                                                                                 // 13\n                                                                                                                       // 14\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 15\n                                                                                                                       // 16\nvar _PathUtils = require('./PathUtils');                                                                               // 17\n                                                                                                                       // 18\nvar _Actions = require('./Actions');                                                                                   // 19\n                                                                                                                       // 20\nvar _createHistory = require('./createHistory');                                                                       // 21\n                                                                                                                       // 22\nvar _createHistory2 = _interopRequireDefault(_createHistory);                                                          // 23\n                                                                                                                       // 24\nfunction createStateStorage(entries) {                                                                                 // 25\n  return entries.filter(function (entry) {                                                                             // 26\n    return entry.state;                                                                                                // 27\n  }).reduce(function (memo, entry) {                                                                                   // 28\n    memo[entry.key] = entry.state;                                                                                     // 29\n    return memo;                                                                                                       // 30\n  }, {});                                                                                                              // 31\n}                                                                                                                      // 32\n                                                                                                                       // 33\nfunction createMemoryHistory() {                                                                                       // 34\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];                               // 35\n                                                                                                                       // 36\n  if (Array.isArray(options)) {                                                                                        // 37\n    options = { entries: options };                                                                                    // 38\n  } else if (typeof options === 'string') {                                                                            // 39\n    options = { entries: [options] };                                                                                  // 40\n  }                                                                                                                    // 41\n                                                                                                                       // 42\n  var history = _createHistory2['default'](_extends({}, options, {                                                     // 43\n    getCurrentLocation: getCurrentLocation,                                                                            // 44\n    finishTransition: finishTransition,                                                                                // 45\n    saveState: saveState,                                                                                              // 46\n    go: go                                                                                                             // 47\n  }));                                                                                                                 // 48\n                                                                                                                       // 49\n  var _options = options;                                                                                              // 50\n  var entries = _options.entries;                                                                                      // 51\n  var current = _options.current;                                                                                      // 52\n                                                                                                                       // 53\n  if (typeof entries === 'string') {                                                                                   // 54\n    entries = [entries];                                                                                               // 55\n  } else if (!Array.isArray(entries)) {                                                                                // 56\n    entries = ['/'];                                                                                                   // 57\n  }                                                                                                                    // 58\n                                                                                                                       // 59\n  entries = entries.map(function (entry) {                                                                             // 60\n    var key = history.createKey();                                                                                     // 61\n                                                                                                                       // 62\n    if (typeof entry === 'string') return { pathname: entry, key: key };                                               // 63\n                                                                                                                       // 64\n    if (typeof entry === 'object' && entry) return _extends({}, entry, { key: key });                                  // 65\n                                                                                                                       // 66\n    !false ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Unable to create history entry from %s', entry) : _invariant2['default'](false) : undefined;\n  });                                                                                                                  // 68\n                                                                                                                       // 69\n  if (current == null) {                                                                                               // 70\n    current = entries.length - 1;                                                                                      // 71\n  } else {                                                                                                             // 72\n    !(current >= 0 && current < entries.length) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : _invariant2['default'](false) : undefined;\n  }                                                                                                                    // 74\n                                                                                                                       // 75\n  var storage = createStateStorage(entries);                                                                           // 76\n                                                                                                                       // 77\n  function saveState(key, state) {                                                                                     // 78\n    storage[key] = state;                                                                                              // 79\n  }                                                                                                                    // 80\n                                                                                                                       // 81\n  function readState(key) {                                                                                            // 82\n    return storage[key];                                                                                               // 83\n  }                                                                                                                    // 84\n                                                                                                                       // 85\n  function getCurrentLocation() {                                                                                      // 86\n    var entry = entries[current];                                                                                      // 87\n    var key = entry.key;                                                                                               // 88\n    var basename = entry.basename;                                                                                     // 89\n    var pathname = entry.pathname;                                                                                     // 90\n    var search = entry.search;                                                                                         // 91\n                                                                                                                       // 92\n    var path = (basename || '') + pathname + (search || '');                                                           // 93\n                                                                                                                       // 94\n    var state = undefined;                                                                                             // 95\n    if (key) {                                                                                                         // 96\n      state = readState(key);                                                                                          // 97\n    } else {                                                                                                           // 98\n      state = null;                                                                                                    // 99\n      key = history.createKey();                                                                                       // 100\n      entry.key = key;                                                                                                 // 101\n    }                                                                                                                  // 102\n                                                                                                                       // 103\n    var location = _PathUtils.parsePath(path);                                                                         // 104\n                                                                                                                       // 105\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);                           // 106\n  }                                                                                                                    // 107\n                                                                                                                       // 108\n  function canGo(n) {                                                                                                  // 109\n    var index = current + n;                                                                                           // 110\n    return index >= 0 && index < entries.length;                                                                       // 111\n  }                                                                                                                    // 112\n                                                                                                                       // 113\n  function go(n) {                                                                                                     // 114\n    if (n) {                                                                                                           // 115\n      if (!canGo(n)) {                                                                                                 // 116\n        process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'Cannot go(%s) there is not enough history', n) : undefined;\n        return;                                                                                                        // 118\n      }                                                                                                                // 119\n                                                                                                                       // 120\n      current += n;                                                                                                    // 121\n                                                                                                                       // 122\n      var currentLocation = getCurrentLocation();                                                                      // 123\n                                                                                                                       // 124\n      // change action to POP                                                                                          // 125\n      history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));                                   // 126\n    }                                                                                                                  // 127\n  }                                                                                                                    // 128\n                                                                                                                       // 129\n  function finishTransition(location) {                                                                                // 130\n    switch (location.action) {                                                                                         // 131\n      case _Actions.PUSH:                                                                                              // 132\n        current += 1;                                                                                                  // 133\n                                                                                                                       // 134\n        // if we are not on the top of stack                                                                           // 135\n        // remove rest and push new                                                                                    // 136\n        if (current < entries.length) entries.splice(current);                                                         // 137\n                                                                                                                       // 138\n        entries.push(location);                                                                                        // 139\n        saveState(location.key, location.state);                                                                       // 140\n        break;                                                                                                         // 141\n      case _Actions.REPLACE:                                                                                           // 142\n        entries[current] = location;                                                                                   // 143\n        saveState(location.key, location.state);                                                                       // 144\n        break;                                                                                                         // 145\n    }                                                                                                                  // 146\n  }                                                                                                                    // 147\n                                                                                                                       // 148\n  return history;                                                                                                      // 149\n}                                                                                                                      // 150\n                                                                                                                       // 151\nexports['default'] = createMemoryHistory;                                                                              // 152\nmodule.exports = exports['default'];                                                                                   // 153\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./Actions\":3,\"./PathUtils\":8,\"./createHistory\":12,\"_process\":1,\"invariant\":26,\"warning\":29}],15:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _warning = require('warning');                                                                                     // 7\n                                                                                                                       // 8\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 9\n                                                                                                                       // 10\nfunction deprecate(fn, message) {                                                                                      // 11\n  return function () {                                                                                                 // 12\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] ' + message) : undefined;           // 13\n    return fn.apply(this, arguments);                                                                                  // 14\n  };                                                                                                                   // 15\n}                                                                                                                      // 16\n                                                                                                                       // 17\nexports['default'] = deprecate;                                                                                        // 18\nmodule.exports = exports['default'];                                                                                   // 19\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"_process\":1,\"warning\":29}],16:[function(require,module,exports){                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _deprecate = require('./deprecate');                                                                               // 7\n                                                                                                                       // 8\nvar _deprecate2 = _interopRequireDefault(_deprecate);                                                                  // 9\n                                                                                                                       // 10\nvar _useBeforeUnload = require('./useBeforeUnload');                                                                   // 11\n                                                                                                                       // 12\nvar _useBeforeUnload2 = _interopRequireDefault(_useBeforeUnload);                                                      // 13\n                                                                                                                       // 14\nexports['default'] = _deprecate2['default'](_useBeforeUnload2['default'], 'enableBeforeUnload is deprecated, use useBeforeUnload instead');\nmodule.exports = exports['default'];                                                                                   // 16\n},{\"./deprecate\":15,\"./useBeforeUnload\":21}],17:[function(require,module,exports){                                     //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _deprecate = require('./deprecate');                                                                               // 7\n                                                                                                                       // 8\nvar _deprecate2 = _interopRequireDefault(_deprecate);                                                                  // 9\n                                                                                                                       // 10\nvar _useQueries = require('./useQueries');                                                                             // 11\n                                                                                                                       // 12\nvar _useQueries2 = _interopRequireDefault(_useQueries);                                                                // 13\n                                                                                                                       // 14\nexports['default'] = _deprecate2['default'](_useQueries2['default'], 'enableQueries is deprecated, use useQueries instead');\nmodule.exports = exports['default'];                                                                                   // 16\n},{\"./deprecate\":15,\"./useQueries\":22}],18:[function(require,module,exports){                                          //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _deprecate = require('./deprecate');                                                                               // 7\n                                                                                                                       // 8\nvar _deprecate2 = _interopRequireDefault(_deprecate);                                                                  // 9\n                                                                                                                       // 10\nvar _createLocation2 = require('./createLocation');                                                                    // 11\n                                                                                                                       // 12\nvar _createLocation3 = _interopRequireDefault(_createLocation2);                                                       // 13\n                                                                                                                       // 14\nvar _createBrowserHistory = require('./createBrowserHistory');                                                         // 15\n                                                                                                                       // 16\nvar _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);                                            // 17\n                                                                                                                       // 18\nexports.createHistory = _createBrowserHistory2['default'];                                                             // 19\n                                                                                                                       // 20\nvar _createHashHistory2 = require('./createHashHistory');                                                              // 21\n                                                                                                                       // 22\nvar _createHashHistory3 = _interopRequireDefault(_createHashHistory2);                                                 // 23\n                                                                                                                       // 24\nexports.createHashHistory = _createHashHistory3['default'];                                                            // 25\n                                                                                                                       // 26\nvar _createMemoryHistory2 = require('./createMemoryHistory');                                                          // 27\n                                                                                                                       // 28\nvar _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);                                             // 29\n                                                                                                                       // 30\nexports.createMemoryHistory = _createMemoryHistory3['default'];                                                        // 31\n                                                                                                                       // 32\nvar _useBasename2 = require('./useBasename');                                                                          // 33\n                                                                                                                       // 34\nvar _useBasename3 = _interopRequireDefault(_useBasename2);                                                             // 35\n                                                                                                                       // 36\nexports.useBasename = _useBasename3['default'];                                                                        // 37\n                                                                                                                       // 38\nvar _useBeforeUnload2 = require('./useBeforeUnload');                                                                  // 39\n                                                                                                                       // 40\nvar _useBeforeUnload3 = _interopRequireDefault(_useBeforeUnload2);                                                     // 41\n                                                                                                                       // 42\nexports.useBeforeUnload = _useBeforeUnload3['default'];                                                                // 43\n                                                                                                                       // 44\nvar _useQueries2 = require('./useQueries');                                                                            // 45\n                                                                                                                       // 46\nvar _useQueries3 = _interopRequireDefault(_useQueries2);                                                               // 47\n                                                                                                                       // 48\nexports.useQueries = _useQueries3['default'];                                                                          // 49\n                                                                                                                       // 50\nvar _Actions2 = require('./Actions');                                                                                  // 51\n                                                                                                                       // 52\nvar _Actions3 = _interopRequireDefault(_Actions2);                                                                     // 53\n                                                                                                                       // 54\nexports.Actions = _Actions3['default'];                                                                                // 55\n                                                                                                                       // 56\n// deprecated                                                                                                          // 57\n                                                                                                                       // 58\nvar _enableBeforeUnload2 = require('./enableBeforeUnload');                                                            // 59\n                                                                                                                       // 60\nvar _enableBeforeUnload3 = _interopRequireDefault(_enableBeforeUnload2);                                               // 61\n                                                                                                                       // 62\nexports.enableBeforeUnload = _enableBeforeUnload3['default'];                                                          // 63\n                                                                                                                       // 64\nvar _enableQueries2 = require('./enableQueries');                                                                      // 65\n                                                                                                                       // 66\nvar _enableQueries3 = _interopRequireDefault(_enableQueries2);                                                         // 67\n                                                                                                                       // 68\nexports.enableQueries = _enableQueries3['default'];                                                                    // 69\nvar createLocation = _deprecate2['default'](_createLocation3['default'], 'Using createLocation without a history instance is deprecated; please use history.createLocation instead');\nexports.createLocation = createLocation;                                                                               // 71\n},{\"./Actions\":3,\"./createBrowserHistory\":9,\"./createHashHistory\":11,\"./createLocation\":13,\"./createMemoryHistory\":14,\"./deprecate\":15,\"./enableBeforeUnload\":16,\"./enableQueries\":17,\"./useBasename\":20,\"./useBeforeUnload\":21,\"./useQueries\":22}],19:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _warning = require('warning');                                                                                     // 7\n                                                                                                                       // 8\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 9\n                                                                                                                       // 10\nfunction runTransitionHook(hook, location, callback) {                                                                 // 11\n  var result = hook(location, callback);                                                                               // 12\n                                                                                                                       // 13\n  if (hook.length < 2) {                                                                                               // 14\n    // Assume the hook runs synchronously and automatically                                                            // 15\n    // call the callback with the return value.                                                                        // 16\n    callback(result);                                                                                                  // 17\n  } else {                                                                                                             // 18\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not \"return\" in a transition hook with a callback argument; call the callback instead') : undefined;\n  }                                                                                                                    // 20\n}                                                                                                                      // 21\n                                                                                                                       // 22\nexports['default'] = runTransitionHook;                                                                                // 23\nmodule.exports = exports['default'];                                                                                   // 24\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"_process\":1,\"warning\":29}],20:[function(require,module,exports){                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n                                                                                                                       // 10\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');                                                         // 11\n                                                                                                                       // 12\nvar _PathUtils = require('./PathUtils');                                                                               // 13\n                                                                                                                       // 14\nvar _runTransitionHook = require('./runTransitionHook');                                                               // 15\n                                                                                                                       // 16\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);                                                  // 17\n                                                                                                                       // 18\nvar _deprecate = require('./deprecate');                                                                               // 19\n                                                                                                                       // 20\nvar _deprecate2 = _interopRequireDefault(_deprecate);                                                                  // 21\n                                                                                                                       // 22\nfunction useBasename(createHistory) {                                                                                  // 23\n  return function () {                                                                                                 // 24\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];                             // 25\n    var basename = options.basename;                                                                                   // 26\n                                                                                                                       // 27\n    var historyOptions = _objectWithoutProperties(options, ['basename']);                                              // 28\n                                                                                                                       // 29\n    var history = createHistory(historyOptions);                                                                       // 30\n                                                                                                                       // 31\n    // Automatically use the value of <base href> in HTML                                                              // 32\n    // documents as basename if it's not explicitly given.                                                             // 33\n    if (basename == null && _ExecutionEnvironment.canUseDOM) {                                                         // 34\n      var base = document.getElementsByTagName('base')[0];                                                             // 35\n                                                                                                                       // 36\n      if (base) basename = _PathUtils.extractPath(base.href);                                                          // 37\n    }                                                                                                                  // 38\n                                                                                                                       // 39\n    function addBasename(location) {                                                                                   // 40\n      if (basename && location.basename == null) {                                                                     // 41\n        if (location.pathname.indexOf(basename) === 0) {                                                               // 42\n          location.pathname = location.pathname.substring(basename.length);                                            // 43\n          location.basename = basename;                                                                                // 44\n                                                                                                                       // 45\n          if (location.pathname === '') location.pathname = '/';                                                       // 46\n        } else {                                                                                                       // 47\n          location.basename = '';                                                                                      // 48\n        }                                                                                                              // 49\n      }                                                                                                                // 50\n                                                                                                                       // 51\n      return location;                                                                                                 // 52\n    }                                                                                                                  // 53\n                                                                                                                       // 54\n    function prependBasename(location) {                                                                               // 55\n      if (!basename) return location;                                                                                  // 56\n                                                                                                                       // 57\n      if (typeof location === 'string') location = _PathUtils.parsePath(location);                                     // 58\n                                                                                                                       // 59\n      var pname = location.pathname;                                                                                   // 60\n      var normalizedBasename = basename.slice(-1) === '/' ? basename : basename + '/';                                 // 61\n      var normalizedPathname = pname.charAt(0) === '/' ? pname.slice(1) : pname;                                       // 62\n      var pathname = normalizedBasename + normalizedPathname;                                                          // 63\n                                                                                                                       // 64\n      return _extends({}, location, {                                                                                  // 65\n        pathname: pathname                                                                                             // 66\n      });                                                                                                              // 67\n    }                                                                                                                  // 68\n                                                                                                                       // 69\n    // Override all read methods with basename-aware versions.                                                         // 70\n    function listenBefore(hook) {                                                                                      // 71\n      return history.listenBefore(function (location, callback) {                                                      // 72\n        _runTransitionHook2['default'](hook, addBasename(location), callback);                                         // 73\n      });                                                                                                              // 74\n    }                                                                                                                  // 75\n                                                                                                                       // 76\n    function listen(listener) {                                                                                        // 77\n      return history.listen(function (location) {                                                                      // 78\n        listener(addBasename(location));                                                                               // 79\n      });                                                                                                              // 80\n    }                                                                                                                  // 81\n                                                                                                                       // 82\n    // Override all write methods with basename-aware versions.                                                        // 83\n    function push(location) {                                                                                          // 84\n      history.push(prependBasename(location));                                                                         // 85\n    }                                                                                                                  // 86\n                                                                                                                       // 87\n    function replace(location) {                                                                                       // 88\n      history.replace(prependBasename(location));                                                                      // 89\n    }                                                                                                                  // 90\n                                                                                                                       // 91\n    function createPath(location) {                                                                                    // 92\n      return history.createPath(prependBasename(location));                                                            // 93\n    }                                                                                                                  // 94\n                                                                                                                       // 95\n    function createHref(location) {                                                                                    // 96\n      return history.createHref(prependBasename(location));                                                            // 97\n    }                                                                                                                  // 98\n                                                                                                                       // 99\n    function createLocation(location) {                                                                                // 100\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {        // 101\n        args[_key - 1] = arguments[_key];                                                                              // 102\n      }                                                                                                                // 103\n                                                                                                                       // 104\n      return addBasename(history.createLocation.apply(history, [prependBasename(location)].concat(args)));             // 105\n    }                                                                                                                  // 106\n                                                                                                                       // 107\n    // deprecated                                                                                                      // 108\n    function pushState(state, path) {                                                                                  // 109\n      if (typeof path === 'string') path = _PathUtils.parsePath(path);                                                 // 110\n                                                                                                                       // 111\n      push(_extends({ state: state }, path));                                                                          // 112\n    }                                                                                                                  // 113\n                                                                                                                       // 114\n    // deprecated                                                                                                      // 115\n    function replaceState(state, path) {                                                                               // 116\n      if (typeof path === 'string') path = _PathUtils.parsePath(path);                                                 // 117\n                                                                                                                       // 118\n      replace(_extends({ state: state }, path));                                                                       // 119\n    }                                                                                                                  // 120\n                                                                                                                       // 121\n    return _extends({}, history, {                                                                                     // 122\n      listenBefore: listenBefore,                                                                                      // 123\n      listen: listen,                                                                                                  // 124\n      push: push,                                                                                                      // 125\n      replace: replace,                                                                                                // 126\n      createPath: createPath,                                                                                          // 127\n      createHref: createHref,                                                                                          // 128\n      createLocation: createLocation,                                                                                  // 129\n                                                                                                                       // 130\n      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),                       // 131\n      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')            // 132\n    });                                                                                                                // 133\n  };                                                                                                                   // 134\n}                                                                                                                      // 135\n                                                                                                                       // 136\nexports['default'] = useBasename;                                                                                      // 137\nmodule.exports = exports['default'];                                                                                   // 138\n},{\"./ExecutionEnvironment\":7,\"./PathUtils\":8,\"./deprecate\":15,\"./runTransitionHook\":19}],21:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _warning = require('warning');                                                                                     // 9\n                                                                                                                       // 10\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 11\n                                                                                                                       // 12\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');                                                         // 13\n                                                                                                                       // 14\nvar _DOMUtils = require('./DOMUtils');                                                                                 // 15\n                                                                                                                       // 16\nvar _deprecate = require('./deprecate');                                                                               // 17\n                                                                                                                       // 18\nvar _deprecate2 = _interopRequireDefault(_deprecate);                                                                  // 19\n                                                                                                                       // 20\nfunction startBeforeUnloadListener(getBeforeUnloadPromptMessage) {                                                     // 21\n  function listener(event) {                                                                                           // 22\n    var message = getBeforeUnloadPromptMessage();                                                                      // 23\n                                                                                                                       // 24\n    if (typeof message === 'string') {                                                                                 // 25\n      (event || window.event).returnValue = message;                                                                   // 26\n      return message;                                                                                                  // 27\n    }                                                                                                                  // 28\n  }                                                                                                                    // 29\n                                                                                                                       // 30\n  _DOMUtils.addEventListener(window, 'beforeunload', listener);                                                        // 31\n                                                                                                                       // 32\n  return function () {                                                                                                 // 33\n    _DOMUtils.removeEventListener(window, 'beforeunload', listener);                                                   // 34\n  };                                                                                                                   // 35\n}                                                                                                                      // 36\n                                                                                                                       // 37\n/**                                                                                                                    // 38\n * Returns a new createHistory function that can be used to create                                                     // 39\n * history objects that know how to use the beforeunload event in web                                                  // 40\n * browsers to cancel navigation.                                                                                      // 41\n */                                                                                                                    // 42\nfunction useBeforeUnload(createHistory) {                                                                              // 43\n  return function (options) {                                                                                          // 44\n    var history = createHistory(options);                                                                              // 45\n                                                                                                                       // 46\n    var stopBeforeUnloadListener = undefined;                                                                          // 47\n    var beforeUnloadHooks = [];                                                                                        // 48\n                                                                                                                       // 49\n    function getBeforeUnloadPromptMessage() {                                                                          // 50\n      var message = undefined;                                                                                         // 51\n                                                                                                                       // 52\n      for (var i = 0, len = beforeUnloadHooks.length; message == null && i < len; ++i) {                               // 53\n        message = beforeUnloadHooks[i].call();                                                                         // 54\n      }return message;                                                                                                 // 55\n    }                                                                                                                  // 56\n                                                                                                                       // 57\n    function listenBeforeUnload(hook) {                                                                                // 58\n      beforeUnloadHooks.push(hook);                                                                                    // 59\n                                                                                                                       // 60\n      if (beforeUnloadHooks.length === 1) {                                                                            // 61\n        if (_ExecutionEnvironment.canUseDOM) {                                                                         // 62\n          stopBeforeUnloadListener = startBeforeUnloadListener(getBeforeUnloadPromptMessage);                          // 63\n        } else {                                                                                                       // 64\n          process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'listenBeforeUnload only works in DOM environments') : undefined;\n        }                                                                                                              // 66\n      }                                                                                                                // 67\n                                                                                                                       // 68\n      return function () {                                                                                             // 69\n        beforeUnloadHooks = beforeUnloadHooks.filter(function (item) {                                                 // 70\n          return item !== hook;                                                                                        // 71\n        });                                                                                                            // 72\n                                                                                                                       // 73\n        if (beforeUnloadHooks.length === 0 && stopBeforeUnloadListener) {                                              // 74\n          stopBeforeUnloadListener();                                                                                  // 75\n          stopBeforeUnloadListener = null;                                                                             // 76\n        }                                                                                                              // 77\n      };                                                                                                               // 78\n    }                                                                                                                  // 79\n                                                                                                                       // 80\n    // deprecated                                                                                                      // 81\n    function registerBeforeUnloadHook(hook) {                                                                          // 82\n      if (_ExecutionEnvironment.canUseDOM && beforeUnloadHooks.indexOf(hook) === -1) {                                 // 83\n        beforeUnloadHooks.push(hook);                                                                                  // 84\n                                                                                                                       // 85\n        if (beforeUnloadHooks.length === 1) stopBeforeUnloadListener = startBeforeUnloadListener(getBeforeUnloadPromptMessage);\n      }                                                                                                                // 87\n    }                                                                                                                  // 88\n                                                                                                                       // 89\n    // deprecated                                                                                                      // 90\n    function unregisterBeforeUnloadHook(hook) {                                                                        // 91\n      if (beforeUnloadHooks.length > 0) {                                                                              // 92\n        beforeUnloadHooks = beforeUnloadHooks.filter(function (item) {                                                 // 93\n          return item !== hook;                                                                                        // 94\n        });                                                                                                            // 95\n                                                                                                                       // 96\n        if (beforeUnloadHooks.length === 0) stopBeforeUnloadListener();                                                // 97\n      }                                                                                                                // 98\n    }                                                                                                                  // 99\n                                                                                                                       // 100\n    return _extends({}, history, {                                                                                     // 101\n      listenBeforeUnload: listenBeforeUnload,                                                                          // 102\n                                                                                                                       // 103\n      registerBeforeUnloadHook: _deprecate2['default'](registerBeforeUnloadHook, 'registerBeforeUnloadHook is deprecated; use listenBeforeUnload instead'),\n      unregisterBeforeUnloadHook: _deprecate2['default'](unregisterBeforeUnloadHook, 'unregisterBeforeUnloadHook is deprecated; use the callback returned from listenBeforeUnload instead')\n    });                                                                                                                // 106\n  };                                                                                                                   // 107\n}                                                                                                                      // 108\n                                                                                                                       // 109\nexports['default'] = useBeforeUnload;                                                                                  // 110\nmodule.exports = exports['default'];                                                                                   // 111\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./DOMUtils\":6,\"./ExecutionEnvironment\":7,\"./deprecate\":15,\"_process\":1,\"warning\":29}],22:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n                                                                                                                       // 10\nvar _warning = require('warning');                                                                                     // 11\n                                                                                                                       // 12\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 13\n                                                                                                                       // 14\nvar _queryString = require('query-string');                                                                            // 15\n                                                                                                                       // 16\nvar _runTransitionHook = require('./runTransitionHook');                                                               // 17\n                                                                                                                       // 18\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);                                                  // 19\n                                                                                                                       // 20\nvar _PathUtils = require('./PathUtils');                                                                               // 21\n                                                                                                                       // 22\nvar _deprecate = require('./deprecate');                                                                               // 23\n                                                                                                                       // 24\nvar _deprecate2 = _interopRequireDefault(_deprecate);                                                                  // 25\n                                                                                                                       // 26\nvar SEARCH_BASE_KEY = '$searchBase';                                                                                   // 27\n                                                                                                                       // 28\nfunction defaultStringifyQuery(query) {                                                                                // 29\n  return _queryString.stringify(query).replace(/%20/g, '+');                                                           // 30\n}                                                                                                                      // 31\n                                                                                                                       // 32\nvar defaultParseQueryString = _queryString.parse;                                                                      // 33\n                                                                                                                       // 34\nfunction isNestedObject(object) {                                                                                      // 35\n  for (var p in object) {                                                                                              // 36\n    if (object.hasOwnProperty(p) && typeof object[p] === 'object' && !Array.isArray(object[p]) && object[p] !== null) return true;\n  }return false;                                                                                                       // 38\n}                                                                                                                      // 39\n                                                                                                                       // 40\n/**                                                                                                                    // 41\n * Returns a new createHistory function that may be used to create                                                     // 42\n * history objects that know how to handle URL queries.                                                                // 43\n */                                                                                                                    // 44\nfunction useQueries(createHistory) {                                                                                   // 45\n  return function () {                                                                                                 // 46\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];                             // 47\n    var stringifyQuery = options.stringifyQuery;                                                                       // 48\n    var parseQueryString = options.parseQueryString;                                                                   // 49\n                                                                                                                       // 50\n    var historyOptions = _objectWithoutProperties(options, ['stringifyQuery', 'parseQueryString']);                    // 51\n                                                                                                                       // 52\n    var history = createHistory(historyOptions);                                                                       // 53\n                                                                                                                       // 54\n    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;                                  // 55\n                                                                                                                       // 56\n    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;                            // 57\n                                                                                                                       // 58\n    function addQuery(location) {                                                                                      // 59\n      if (location.query == null) {                                                                                    // 60\n        var search = location.search;                                                                                  // 61\n                                                                                                                       // 62\n        location.query = parseQueryString(search.substring(1));                                                        // 63\n        location[SEARCH_BASE_KEY] = { search: search, searchBase: '' };                                                // 64\n      }                                                                                                                // 65\n                                                                                                                       // 66\n      // TODO: Instead of all the book-keeping here, this should just strip the                                        // 67\n      // stringified query from the search.                                                                            // 68\n                                                                                                                       // 69\n      return location;                                                                                                 // 70\n    }                                                                                                                  // 71\n                                                                                                                       // 72\n    function appendQuery(location, query) {                                                                            // 73\n      var _extends2;                                                                                                   // 74\n                                                                                                                       // 75\n      var searchBaseSpec = location[SEARCH_BASE_KEY];                                                                  // 76\n      var queryString = query ? stringifyQuery(query) : '';                                                            // 77\n      if (!searchBaseSpec && !queryString) {                                                                           // 78\n        return location;                                                                                               // 79\n      }                                                                                                                // 80\n                                                                                                                       // 81\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](stringifyQuery !== defaultStringifyQuery || !isNestedObject(query), 'useQueries does not stringify nested query objects by default; ' + 'use a custom stringifyQuery function') : undefined;\n                                                                                                                       // 83\n      if (typeof location === 'string') location = _PathUtils.parsePath(location);                                     // 84\n                                                                                                                       // 85\n      var searchBase = undefined;                                                                                      // 86\n      if (searchBaseSpec && location.search === searchBaseSpec.search) {                                               // 87\n        searchBase = searchBaseSpec.searchBase;                                                                        // 88\n      } else {                                                                                                         // 89\n        searchBase = location.search || '';                                                                            // 90\n      }                                                                                                                // 91\n                                                                                                                       // 92\n      var search = searchBase;                                                                                         // 93\n      if (queryString) {                                                                                               // 94\n        search += (search ? '&' : '?') + queryString;                                                                  // 95\n      }                                                                                                                // 96\n                                                                                                                       // 97\n      return _extends({}, location, (_extends2 = {                                                                     // 98\n        search: search                                                                                                 // 99\n      }, _extends2[SEARCH_BASE_KEY] = { search: search, searchBase: searchBase }, _extends2));                         // 100\n    }                                                                                                                  // 101\n                                                                                                                       // 102\n    // Override all read methods with query-aware versions.                                                            // 103\n    function listenBefore(hook) {                                                                                      // 104\n      return history.listenBefore(function (location, callback) {                                                      // 105\n        _runTransitionHook2['default'](hook, addQuery(location), callback);                                            // 106\n      });                                                                                                              // 107\n    }                                                                                                                  // 108\n                                                                                                                       // 109\n    function listen(listener) {                                                                                        // 110\n      return history.listen(function (location) {                                                                      // 111\n        listener(addQuery(location));                                                                                  // 112\n      });                                                                                                              // 113\n    }                                                                                                                  // 114\n                                                                                                                       // 115\n    // Override all write methods with query-aware versions.                                                           // 116\n    function push(location) {                                                                                          // 117\n      history.push(appendQuery(location, location.query));                                                             // 118\n    }                                                                                                                  // 119\n                                                                                                                       // 120\n    function replace(location) {                                                                                       // 121\n      history.replace(appendQuery(location, location.query));                                                          // 122\n    }                                                                                                                  // 123\n                                                                                                                       // 124\n    function createPath(location, query) {                                                                             // 125\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](!query, 'the query argument to createPath is deprecated; use a location descriptor instead') : undefined;\n                                                                                                                       // 127\n      return history.createPath(appendQuery(location, query || location.query));                                       // 128\n    }                                                                                                                  // 129\n                                                                                                                       // 130\n    function createHref(location, query) {                                                                             // 131\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](!query, 'the query argument to createHref is deprecated; use a location descriptor instead') : undefined;\n                                                                                                                       // 133\n      return history.createHref(appendQuery(location, query || location.query));                                       // 134\n    }                                                                                                                  // 135\n                                                                                                                       // 136\n    function createLocation(location) {                                                                                // 137\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {        // 138\n        args[_key - 1] = arguments[_key];                                                                              // 139\n      }                                                                                                                // 140\n                                                                                                                       // 141\n      var fullLocation = history.createLocation.apply(history, [appendQuery(location, location.query)].concat(args));  // 142\n      if (location.query) {                                                                                            // 143\n        fullLocation.query = location.query;                                                                           // 144\n      }                                                                                                                // 145\n      return addQuery(fullLocation);                                                                                   // 146\n    }                                                                                                                  // 147\n                                                                                                                       // 148\n    // deprecated                                                                                                      // 149\n    function pushState(state, path, query) {                                                                           // 150\n      if (typeof path === 'string') path = _PathUtils.parsePath(path);                                                 // 151\n                                                                                                                       // 152\n      push(_extends({ state: state }, path, { query: query }));                                                        // 153\n    }                                                                                                                  // 154\n                                                                                                                       // 155\n    // deprecated                                                                                                      // 156\n    function replaceState(state, path, query) {                                                                        // 157\n      if (typeof path === 'string') path = _PathUtils.parsePath(path);                                                 // 158\n                                                                                                                       // 159\n      replace(_extends({ state: state }, path, { query: query }));                                                     // 160\n    }                                                                                                                  // 161\n                                                                                                                       // 162\n    return _extends({}, history, {                                                                                     // 163\n      listenBefore: listenBefore,                                                                                      // 164\n      listen: listen,                                                                                                  // 165\n      push: push,                                                                                                      // 166\n      replace: replace,                                                                                                // 167\n      createPath: createPath,                                                                                          // 168\n      createHref: createHref,                                                                                          // 169\n      createLocation: createLocation,                                                                                  // 170\n                                                                                                                       // 171\n      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),                       // 172\n      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')            // 173\n    });                                                                                                                // 174\n  };                                                                                                                   // 175\n}                                                                                                                      // 176\n                                                                                                                       // 177\nexports['default'] = useQueries;                                                                                       // 178\nmodule.exports = exports['default'];                                                                                   // 179\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./PathUtils\":8,\"./deprecate\":15,\"./runTransitionHook\":19,\"_process\":1,\"query-string\":27,\"warning\":29}],23:[function(require,module,exports){\nvar pSlice = Array.prototype.slice;                                                                                    // 1\nvar objectKeys = require('./lib/keys.js');                                                                             // 2\nvar isArguments = require('./lib/is_arguments.js');                                                                    // 3\n                                                                                                                       // 4\nvar deepEqual = module.exports = function (actual, expected, opts) {                                                   // 5\n  if (!opts) opts = {};                                                                                                // 6\n  // 7.1. All identical values are equivalent, as determined by ===.                                                   // 7\n  if (actual === expected) {                                                                                           // 8\n    return true;                                                                                                       // 9\n                                                                                                                       // 10\n  } else if (actual instanceof Date && expected instanceof Date) {                                                     // 11\n    return actual.getTime() === expected.getTime();                                                                    // 12\n                                                                                                                       // 13\n  // 7.3. Other pairs that do not both pass typeof value == 'object',                                                  // 14\n  // equivalence is determined by ==.                                                                                  // 15\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {                       // 16\n    return opts.strict ? actual === expected : actual == expected;                                                     // 17\n                                                                                                                       // 18\n  // 7.4. For all other Object pairs, including Array objects, equivalence is                                          // 19\n  // determined by having the same number of owned properties (as verified                                             // 20\n  // with Object.prototype.hasOwnProperty.call), the same set of keys                                                  // 21\n  // (although not necessarily the same order), equivalent values for every                                            // 22\n  // corresponding key, and an identical 'prototype' property. Note: this                                              // 23\n  // accounts for both named and indexed properties on Arrays.                                                         // 24\n  } else {                                                                                                             // 25\n    return objEquiv(actual, expected, opts);                                                                           // 26\n  }                                                                                                                    // 27\n}                                                                                                                      // 28\n                                                                                                                       // 29\nfunction isUndefinedOrNull(value) {                                                                                    // 30\n  return value === null || value === undefined;                                                                        // 31\n}                                                                                                                      // 32\n                                                                                                                       // 33\nfunction isBuffer (x) {                                                                                                // 34\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;                                       // 35\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {                                                 // 36\n    return false;                                                                                                      // 37\n  }                                                                                                                    // 38\n  if (x.length > 0 && typeof x[0] !== 'number') return false;                                                          // 39\n  return true;                                                                                                         // 40\n}                                                                                                                      // 41\n                                                                                                                       // 42\nfunction objEquiv(a, b, opts) {                                                                                        // 43\n  var i, key;                                                                                                          // 44\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))                                                                    // 45\n    return false;                                                                                                      // 46\n  // an identical 'prototype' property.                                                                                // 47\n  if (a.prototype !== b.prototype) return false;                                                                       // 48\n  //~~~I've managed to break Object.keys through screwy arguments passing.                                             // 49\n  //   Converting to array solves the problem.                                                                         // 50\n  if (isArguments(a)) {                                                                                                // 51\n    if (!isArguments(b)) {                                                                                             // 52\n      return false;                                                                                                    // 53\n    }                                                                                                                  // 54\n    a = pSlice.call(a);                                                                                                // 55\n    b = pSlice.call(b);                                                                                                // 56\n    return deepEqual(a, b, opts);                                                                                      // 57\n  }                                                                                                                    // 58\n  if (isBuffer(a)) {                                                                                                   // 59\n    if (!isBuffer(b)) {                                                                                                // 60\n      return false;                                                                                                    // 61\n    }                                                                                                                  // 62\n    if (a.length !== b.length) return false;                                                                           // 63\n    for (i = 0; i < a.length; i++) {                                                                                   // 64\n      if (a[i] !== b[i]) return false;                                                                                 // 65\n    }                                                                                                                  // 66\n    return true;                                                                                                       // 67\n  }                                                                                                                    // 68\n  try {                                                                                                                // 69\n    var ka = objectKeys(a),                                                                                            // 70\n        kb = objectKeys(b);                                                                                            // 71\n  } catch (e) {//happens when one is a string literal and the other isn't                                              // 72\n    return false;                                                                                                      // 73\n  }                                                                                                                    // 74\n  // having the same number of owned properties (keys incorporates                                                     // 75\n  // hasOwnProperty)                                                                                                   // 76\n  if (ka.length != kb.length)                                                                                          // 77\n    return false;                                                                                                      // 78\n  //the same set of keys (although not necessarily the same order),                                                    // 79\n  ka.sort();                                                                                                           // 80\n  kb.sort();                                                                                                           // 81\n  //~~~cheap key test                                                                                                  // 82\n  for (i = ka.length - 1; i >= 0; i--) {                                                                               // 83\n    if (ka[i] != kb[i])                                                                                                // 84\n      return false;                                                                                                    // 85\n  }                                                                                                                    // 86\n  //equivalent values for every corresponding key, and                                                                 // 87\n  //~~~possibly expensive deep test                                                                                    // 88\n  for (i = ka.length - 1; i >= 0; i--) {                                                                               // 89\n    key = ka[i];                                                                                                       // 90\n    if (!deepEqual(a[key], b[key], opts)) return false;                                                                // 91\n  }                                                                                                                    // 92\n  return typeof a === typeof b;                                                                                        // 93\n}                                                                                                                      // 94\n                                                                                                                       // 95\n},{\"./lib/is_arguments.js\":24,\"./lib/keys.js\":25}],24:[function(require,module,exports){                               //\nvar supportsArgumentsClass = (function(){                                                                              // 1\n  return Object.prototype.toString.call(arguments)                                                                     // 2\n})() == '[object Arguments]';                                                                                          // 3\n                                                                                                                       // 4\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;                                           // 5\n                                                                                                                       // 6\nexports.supported = supported;                                                                                         // 7\nfunction supported(object) {                                                                                           // 8\n  return Object.prototype.toString.call(object) == '[object Arguments]';                                               // 9\n};                                                                                                                     // 10\n                                                                                                                       // 11\nexports.unsupported = unsupported;                                                                                     // 12\nfunction unsupported(object){                                                                                          // 13\n  return object &&                                                                                                     // 14\n    typeof object == 'object' &&                                                                                       // 15\n    typeof object.length == 'number' &&                                                                                // 16\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&                                                          // 17\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||                                                   // 18\n    false;                                                                                                             // 19\n};                                                                                                                     // 20\n                                                                                                                       // 21\n},{}],25:[function(require,module,exports){                                                                            //\nexports = module.exports = typeof Object.keys === 'function'                                                           // 1\n  ? Object.keys : shim;                                                                                                // 2\n                                                                                                                       // 3\nexports.shim = shim;                                                                                                   // 4\nfunction shim (obj) {                                                                                                  // 5\n  var keys = [];                                                                                                       // 6\n  for (var key in obj) keys.push(key);                                                                                 // 7\n  return keys;                                                                                                         // 8\n}                                                                                                                      // 9\n                                                                                                                       // 10\n},{}],26:[function(require,module,exports){                                                                            //\n(function (process){                                                                                                   //\n/**                                                                                                                    // 1\n * Copyright 2013-2015, Facebook, Inc.                                                                                 // 2\n * All rights reserved.                                                                                                // 3\n *                                                                                                                     // 4\n * This source code is licensed under the BSD-style license found in the                                               // 5\n * LICENSE file in the root directory of this source tree. An additional grant                                         // 6\n * of patent rights can be found in the PATENTS file in the same directory.                                            // 7\n */                                                                                                                    // 8\n                                                                                                                       // 9\n'use strict';                                                                                                          // 10\n                                                                                                                       // 11\n/**                                                                                                                    // 12\n * Use invariant() to assert state which your program assumes to be true.                                              // 13\n *                                                                                                                     // 14\n * Provide sprintf-style format (only %s is supported) and arguments                                                   // 15\n * to provide information about what broke and what you were                                                           // 16\n * expecting.                                                                                                          // 17\n *                                                                                                                     // 18\n * The invariant message will be stripped in production, but the invariant                                             // 19\n * will remain to ensure logic does not differ in production.                                                          // 20\n */                                                                                                                    // 21\n                                                                                                                       // 22\nvar invariant = function(condition, format, a, b, c, d, e, f) {                                                        // 23\n  if (process.env.NODE_ENV !== 'production') {                                                                         // 24\n    if (format === undefined) {                                                                                        // 25\n      throw new Error('invariant requires an error message argument');                                                 // 26\n    }                                                                                                                  // 27\n  }                                                                                                                    // 28\n                                                                                                                       // 29\n  if (!condition) {                                                                                                    // 30\n    var error;                                                                                                         // 31\n    if (format === undefined) {                                                                                        // 32\n      error = new Error(                                                                                               // 33\n        'Minified exception occurred; use the non-minified dev environment ' +                                         // 34\n        'for the full error message and additional helpful warnings.'                                                  // 35\n      );                                                                                                               // 36\n    } else {                                                                                                           // 37\n      var args = [a, b, c, d, e, f];                                                                                   // 38\n      var argIndex = 0;                                                                                                // 39\n      error = new Error(                                                                                               // 40\n        format.replace(/%s/g, function() { return args[argIndex++]; })                                                 // 41\n      );                                                                                                               // 42\n      error.name = 'Invariant Violation';                                                                              // 43\n    }                                                                                                                  // 44\n                                                                                                                       // 45\n    error.framesToPop = 1; // we don't care about invariant's own frame                                                // 46\n    throw error;                                                                                                       // 47\n  }                                                                                                                    // 48\n};                                                                                                                     // 49\n                                                                                                                       // 50\nmodule.exports = invariant;                                                                                            // 51\n                                                                                                                       // 52\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"_process\":1}],27:[function(require,module,exports){                                                                //\n'use strict';                                                                                                          // 1\nvar strictUriEncode = require('strict-uri-encode');                                                                    // 2\n                                                                                                                       // 3\nexports.extract = function (str) {                                                                                     // 4\n\treturn str.split('?')[1] || '';                                                                                       // 5\n};                                                                                                                     // 6\n                                                                                                                       // 7\nexports.parse = function (str) {                                                                                       // 8\n\tif (typeof str !== 'string') {                                                                                        // 9\n\t\treturn {};                                                                                                           // 10\n\t}                                                                                                                     // 11\n                                                                                                                       // 12\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');                                                                            // 13\n                                                                                                                       // 14\n\tif (!str) {                                                                                                           // 15\n\t\treturn {};                                                                                                           // 16\n\t}                                                                                                                     // 17\n                                                                                                                       // 18\n\treturn str.split('&').reduce(function (ret, param) {                                                                  // 19\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');                                                                    // 20\n\t\t// Firefox (pre 40) decodes `%3D` to `=`                                                                             // 21\n\t\t// https://github.com/sindresorhus/query-string/pull/37                                                              // 22\n\t\tvar key = parts.shift();                                                                                             // 23\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;                                                            // 24\n                                                                                                                       // 25\n\t\tkey = decodeURIComponent(key);                                                                                       // 26\n                                                                                                                       // 27\n\t\t// missing `=` should be `null`:                                                                                     // 28\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters                                                     // 29\n\t\tval = val === undefined ? null : decodeURIComponent(val);                                                            // 30\n                                                                                                                       // 31\n\t\tif (!ret.hasOwnProperty(key)) {                                                                                      // 32\n\t\t\tret[key] = val;                                                                                                     // 33\n\t\t} else if (Array.isArray(ret[key])) {                                                                                // 34\n\t\t\tret[key].push(val);                                                                                                 // 35\n\t\t} else {                                                                                                             // 36\n\t\t\tret[key] = [ret[key], val];                                                                                         // 37\n\t\t}                                                                                                                    // 38\n                                                                                                                       // 39\n\t\treturn ret;                                                                                                          // 40\n\t}, {});                                                                                                               // 41\n};                                                                                                                     // 42\n                                                                                                                       // 43\nexports.stringify = function (obj) {                                                                                   // 44\n\treturn obj ? Object.keys(obj).sort().map(function (key) {                                                             // 45\n\t\tvar val = obj[key];                                                                                                  // 46\n                                                                                                                       // 47\n\t\tif (val === undefined) {                                                                                             // 48\n\t\t\treturn '';                                                                                                          // 49\n\t\t}                                                                                                                    // 50\n                                                                                                                       // 51\n\t\tif (val === null) {                                                                                                  // 52\n\t\t\treturn key;                                                                                                         // 53\n\t\t}                                                                                                                    // 54\n                                                                                                                       // 55\n\t\tif (Array.isArray(val)) {                                                                                            // 56\n\t\t\treturn val.sort().map(function (val2) {                                                                             // 57\n\t\t\t\treturn strictUriEncode(key) + '=' + strictUriEncode(val2);                                                         // 58\n\t\t\t}).join('&');                                                                                                       // 59\n\t\t}                                                                                                                    // 60\n                                                                                                                       // 61\n\t\treturn strictUriEncode(key) + '=' + strictUriEncode(val);                                                            // 62\n\t}).filter(function (x) {                                                                                              // 63\n\t\treturn x.length > 0;                                                                                                 // 64\n\t}).join('&') : '';                                                                                                    // 65\n};                                                                                                                     // 66\n                                                                                                                       // 67\n},{\"strict-uri-encode\":28}],28:[function(require,module,exports){                                                      //\n'use strict';                                                                                                          // 1\nmodule.exports = function (str) {                                                                                      // 2\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {                                                     // 3\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();                                                             // 4\n\t});                                                                                                                   // 5\n};                                                                                                                     // 6\n                                                                                                                       // 7\n},{}],29:[function(require,module,exports){                                                                            //\n(function (process){                                                                                                   //\n/**                                                                                                                    // 1\n * Copyright 2014-2015, Facebook, Inc.                                                                                 // 2\n * All rights reserved.                                                                                                // 3\n *                                                                                                                     // 4\n * This source code is licensed under the BSD-style license found in the                                               // 5\n * LICENSE file in the root directory of this source tree. An additional grant                                         // 6\n * of patent rights can be found in the PATENTS file in the same directory.                                            // 7\n */                                                                                                                    // 8\n                                                                                                                       // 9\n'use strict';                                                                                                          // 10\n                                                                                                                       // 11\n/**                                                                                                                    // 12\n * Similar to invariant but only logs a warning if the condition is not met.                                           // 13\n * This can be used to log issues in development environments in critical                                              // 14\n * paths. Removing the logging code for production environments will keep the                                          // 15\n * same logic and follow the same code paths.                                                                          // 16\n */                                                                                                                    // 17\n                                                                                                                       // 18\nvar warning = function() {};                                                                                           // 19\n                                                                                                                       // 20\nif (process.env.NODE_ENV !== 'production') {                                                                           // 21\n  warning = function(condition, format, args) {                                                                        // 22\n    var len = arguments.length;                                                                                        // 23\n    args = new Array(len > 2 ? len - 2 : 0);                                                                           // 24\n    for (var key = 2; key < len; key++) {                                                                              // 25\n      args[key - 2] = arguments[key];                                                                                  // 26\n    }                                                                                                                  // 27\n    if (format === undefined) {                                                                                        // 28\n      throw new Error(                                                                                                 // 29\n        '`warning(condition, format, ...args)` requires a warning ' +                                                  // 30\n        'message argument'                                                                                             // 31\n      );                                                                                                               // 32\n    }                                                                                                                  // 33\n                                                                                                                       // 34\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {                                                             // 35\n      throw new Error(                                                                                                 // 36\n        'The warning format should be able to uniquely identify this ' +                                               // 37\n        'warning. Please, use a more descriptive format than: ' + format                                               // 38\n      );                                                                                                               // 39\n    }                                                                                                                  // 40\n                                                                                                                       // 41\n    if (!condition) {                                                                                                  // 42\n      var argIndex = 0;                                                                                                // 43\n      var message = 'Warning: ' +                                                                                      // 44\n        format.replace(/%s/g, function() {                                                                             // 45\n          return args[argIndex++];                                                                                     // 46\n        });                                                                                                            // 47\n      if (typeof console !== 'undefined') {                                                                            // 48\n        console.error(message);                                                                                        // 49\n      }                                                                                                                // 50\n      try {                                                                                                            // 51\n        // This error was thrown as a convenience so that you can use this stack                                       // 52\n        // to find the callsite that caused this warning to fire.                                                      // 53\n        throw new Error(message);                                                                                      // 54\n      } catch(x) {}                                                                                                    // 55\n    }                                                                                                                  // 56\n  };                                                                                                                   // 57\n}                                                                                                                      // 58\n                                                                                                                       // 59\nmodule.exports = warning;                                                                                              // 60\n                                                                                                                       // 61\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"_process\":1}],30:[function(require,module,exports){                                                                //\n\"use strict\";                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\nvar _slice = Array.prototype.slice;                                                                                    // 4\nexports.loopAsync = loopAsync;                                                                                         // 5\nexports.mapAsync = mapAsync;                                                                                           // 6\n                                                                                                                       // 7\nfunction loopAsync(turns, work, callback) {                                                                            // 8\n  var currentTurn = 0,                                                                                                 // 9\n      isDone = false;                                                                                                  // 10\n  var sync = false,                                                                                                    // 11\n      hasNext = false,                                                                                                 // 12\n      doneArgs = undefined;                                                                                            // 13\n                                                                                                                       // 14\n  function done() {                                                                                                    // 15\n    isDone = true;                                                                                                     // 16\n    if (sync) {                                                                                                        // 17\n      // Iterate instead of recursing if possible.                                                                     // 18\n      doneArgs = [].concat(_slice.call(arguments));                                                                    // 19\n      return;                                                                                                          // 20\n    }                                                                                                                  // 21\n                                                                                                                       // 22\n    callback.apply(this, arguments);                                                                                   // 23\n  }                                                                                                                    // 24\n                                                                                                                       // 25\n  function next() {                                                                                                    // 26\n    if (isDone) {                                                                                                      // 27\n      return;                                                                                                          // 28\n    }                                                                                                                  // 29\n                                                                                                                       // 30\n    hasNext = true;                                                                                                    // 31\n    if (sync) {                                                                                                        // 32\n      // Iterate instead of recursing if possible.                                                                     // 33\n      return;                                                                                                          // 34\n    }                                                                                                                  // 35\n                                                                                                                       // 36\n    sync = true;                                                                                                       // 37\n                                                                                                                       // 38\n    while (!isDone && currentTurn < turns && hasNext) {                                                                // 39\n      hasNext = false;                                                                                                 // 40\n      work.call(this, currentTurn++, next, done);                                                                      // 41\n    }                                                                                                                  // 42\n                                                                                                                       // 43\n    sync = false;                                                                                                      // 44\n                                                                                                                       // 45\n    if (isDone) {                                                                                                      // 46\n      // This means the loop finished synchronously.                                                                   // 47\n      callback.apply(this, doneArgs);                                                                                  // 48\n      return;                                                                                                          // 49\n    }                                                                                                                  // 50\n                                                                                                                       // 51\n    if (currentTurn >= turns && hasNext) {                                                                             // 52\n      isDone = true;                                                                                                   // 53\n      callback();                                                                                                      // 54\n    }                                                                                                                  // 55\n  }                                                                                                                    // 56\n                                                                                                                       // 57\n  next();                                                                                                              // 58\n}                                                                                                                      // 59\n                                                                                                                       // 60\nfunction mapAsync(array, work, callback) {                                                                             // 61\n  var length = array.length;                                                                                           // 62\n  var values = [];                                                                                                     // 63\n                                                                                                                       // 64\n  if (length === 0) return callback(null, values);                                                                     // 65\n                                                                                                                       // 66\n  var isDone = false,                                                                                                  // 67\n      doneCount = 0;                                                                                                   // 68\n                                                                                                                       // 69\n  function done(index, error, value) {                                                                                 // 70\n    if (isDone) return;                                                                                                // 71\n                                                                                                                       // 72\n    if (error) {                                                                                                       // 73\n      isDone = true;                                                                                                   // 74\n      callback(error);                                                                                                 // 75\n    } else {                                                                                                           // 76\n      values[index] = value;                                                                                           // 77\n                                                                                                                       // 78\n      isDone = ++doneCount === length;                                                                                 // 79\n                                                                                                                       // 80\n      if (isDone) callback(null, values);                                                                              // 81\n    }                                                                                                                  // 82\n  }                                                                                                                    // 83\n                                                                                                                       // 84\n  array.forEach(function (item, index) {                                                                               // 85\n    work(item, index, function (error, value) {                                                                        // 86\n      done(index, error, value);                                                                                       // 87\n    });                                                                                                                // 88\n  });                                                                                                                  // 89\n}                                                                                                                      // 90\n},{}],31:[function(require,module,exports){                                                                            //\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _routerWarning = require('./routerWarning');                                                                       // 7\n                                                                                                                       // 8\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);                                                          // 9\n                                                                                                                       // 10\nvar _PropTypes = require('./PropTypes');                                                                               // 11\n                                                                                                                       // 12\n/**                                                                                                                    // 13\n * A mixin that adds the \"history\" instance variable to components.                                                    // 14\n */                                                                                                                    // 15\nvar History = {                                                                                                        // 16\n                                                                                                                       // 17\n  contextTypes: {                                                                                                      // 18\n    history: _PropTypes.history                                                                                        // 19\n  },                                                                                                                   // 20\n                                                                                                                       // 21\n  componentWillMount: function componentWillMount() {                                                                  // 22\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'the `History` mixin is deprecated, please access `context.router` with your own `contextTypes`. http://tiny.cc/router-historymixin') : undefined;\n    this.history = this.context.history;                                                                               // 24\n  }                                                                                                                    // 25\n                                                                                                                       // 26\n};                                                                                                                     // 27\n                                                                                                                       // 28\nexports['default'] = History;                                                                                          // 29\nmodule.exports = exports['default'];                                                                                   // 30\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./PropTypes\":38,\"./routerWarning\":61,\"_process\":1}],32:[function(require,module,exports){                          //\n(function (global){                                                                                                    //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n                                                                                                                       // 10\nvar _react2 = _interopRequireDefault(_react);                                                                          // 11\n                                                                                                                       // 12\nvar _Link = require('./Link');                                                                                         // 13\n                                                                                                                       // 14\nvar _Link2 = _interopRequireDefault(_Link);                                                                            // 15\n                                                                                                                       // 16\n/**                                                                                                                    // 17\n * An <IndexLink> is used to link to an <IndexRoute>.                                                                  // 18\n */                                                                                                                    // 19\nvar IndexLink = _react2['default'].createClass({                                                                       // 20\n  displayName: 'IndexLink',                                                                                            // 21\n                                                                                                                       // 22\n  render: function render() {                                                                                          // 23\n    return _react2['default'].createElement(_Link2['default'], _extends({}, this.props, { onlyActiveOnIndex: true }));\n  }                                                                                                                    // 25\n                                                                                                                       // 26\n});                                                                                                                    // 27\n                                                                                                                       // 28\nexports['default'] = IndexLink;                                                                                        // 29\nmodule.exports = exports['default'];                                                                                   // 30\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n                                                                                                                       //\n},{\"./Link\":36}],33:[function(require,module,exports){                                                                 //\n(function (process,global){                                                                                            //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n                                                                                                                       // 8\nvar _react2 = _interopRequireDefault(_react);                                                                          // 9\n                                                                                                                       // 10\nvar _routerWarning = require('./routerWarning');                                                                       // 11\n                                                                                                                       // 12\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);                                                          // 13\n                                                                                                                       // 14\nvar _invariant = require('invariant');                                                                                 // 15\n                                                                                                                       // 16\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 17\n                                                                                                                       // 18\nvar _Redirect = require('./Redirect');                                                                                 // 19\n                                                                                                                       // 20\nvar _Redirect2 = _interopRequireDefault(_Redirect);                                                                    // 21\n                                                                                                                       // 22\nvar _PropTypes = require('./PropTypes');                                                                               // 23\n                                                                                                                       // 24\nvar _React$PropTypes = _react2['default'].PropTypes;                                                                   // 25\nvar string = _React$PropTypes.string;                                                                                  // 26\nvar object = _React$PropTypes.object;                                                                                  // 27\n                                                                                                                       // 28\n/**                                                                                                                    // 29\n * An <IndexRedirect> is used to redirect from an indexRoute.                                                          // 30\n */                                                                                                                    // 31\nvar IndexRedirect = _react2['default'].createClass({                                                                   // 32\n  displayName: 'IndexRedirect',                                                                                        // 33\n                                                                                                                       // 34\n  statics: {                                                                                                           // 35\n                                                                                                                       // 36\n    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {                          // 37\n      /* istanbul ignore else: sanity check */                                                                         // 38\n      if (parentRoute) {                                                                                               // 39\n        parentRoute.indexRoute = _Redirect2['default'].createRouteFromReactElement(element);                           // 40\n      } else {                                                                                                         // 41\n        process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'An <IndexRedirect> does not make sense at the root of your route config') : undefined;\n      }                                                                                                                // 43\n    }                                                                                                                  // 44\n                                                                                                                       // 45\n  },                                                                                                                   // 46\n                                                                                                                       // 47\n  propTypes: {                                                                                                         // 48\n    to: string.isRequired,                                                                                             // 49\n    query: object,                                                                                                     // 50\n    state: object,                                                                                                     // 51\n    onEnter: _PropTypes.falsy,                                                                                         // 52\n    children: _PropTypes.falsy                                                                                         // 53\n  },                                                                                                                   // 54\n                                                                                                                       // 55\n  /* istanbul ignore next: sanity check */                                                                             // 56\n  render: function render() {                                                                                          // 57\n    !false ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, '<IndexRedirect> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;\n  }                                                                                                                    // 59\n                                                                                                                       // 60\n});                                                                                                                    // 61\n                                                                                                                       // 62\nexports['default'] = IndexRedirect;                                                                                    // 63\nmodule.exports = exports['default'];                                                                                   // 64\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n                                                                                                                       //\n},{\"./PropTypes\":38,\"./Redirect\":39,\"./routerWarning\":61,\"_process\":1,\"invariant\":85}],34:[function(require,module,exports){\n(function (process,global){                                                                                            //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n                                                                                                                       // 8\nvar _react2 = _interopRequireDefault(_react);                                                                          // 9\n                                                                                                                       // 10\nvar _routerWarning = require('./routerWarning');                                                                       // 11\n                                                                                                                       // 12\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);                                                          // 13\n                                                                                                                       // 14\nvar _invariant = require('invariant');                                                                                 // 15\n                                                                                                                       // 16\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 17\n                                                                                                                       // 18\nvar _RouteUtils = require('./RouteUtils');                                                                             // 19\n                                                                                                                       // 20\nvar _PropTypes = require('./PropTypes');                                                                               // 21\n                                                                                                                       // 22\nvar func = _react2['default'].PropTypes.func;                                                                          // 23\n                                                                                                                       // 24\n/**                                                                                                                    // 25\n * An <IndexRoute> is used to specify its parent's <Route indexRoute> in                                               // 26\n * a JSX route config.                                                                                                 // 27\n */                                                                                                                    // 28\nvar IndexRoute = _react2['default'].createClass({                                                                      // 29\n  displayName: 'IndexRoute',                                                                                           // 30\n                                                                                                                       // 31\n  statics: {                                                                                                           // 32\n                                                                                                                       // 33\n    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {                          // 34\n      /* istanbul ignore else: sanity check */                                                                         // 35\n      if (parentRoute) {                                                                                               // 36\n        parentRoute.indexRoute = _RouteUtils.createRouteFromReactElement(element);                                     // 37\n      } else {                                                                                                         // 38\n        process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'An <IndexRoute> does not make sense at the root of your route config') : undefined;\n      }                                                                                                                // 40\n    }                                                                                                                  // 41\n                                                                                                                       // 42\n  },                                                                                                                   // 43\n                                                                                                                       // 44\n  propTypes: {                                                                                                         // 45\n    path: _PropTypes.falsy,                                                                                            // 46\n    component: _PropTypes.component,                                                                                   // 47\n    components: _PropTypes.components,                                                                                 // 48\n    getComponent: func,                                                                                                // 49\n    getComponents: func                                                                                                // 50\n  },                                                                                                                   // 51\n                                                                                                                       // 52\n  /* istanbul ignore next: sanity check */                                                                             // 53\n  render: function render() {                                                                                          // 54\n    !false ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, '<IndexRoute> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;\n  }                                                                                                                    // 56\n                                                                                                                       // 57\n});                                                                                                                    // 58\n                                                                                                                       // 59\nexports['default'] = IndexRoute;                                                                                       // 60\nmodule.exports = exports['default'];                                                                                   // 61\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n                                                                                                                       //\n},{\"./PropTypes\":38,\"./RouteUtils\":42,\"./routerWarning\":61,\"_process\":1,\"invariant\":85}],35:[function(require,module,exports){\n(function (process,global){                                                                                            //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _routerWarning = require('./routerWarning');                                                                       // 7\n                                                                                                                       // 8\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);                                                          // 9\n                                                                                                                       // 10\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n                                                                                                                       // 12\nvar _react2 = _interopRequireDefault(_react);                                                                          // 13\n                                                                                                                       // 14\nvar _invariant = require('invariant');                                                                                 // 15\n                                                                                                                       // 16\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 17\n                                                                                                                       // 18\nvar object = _react2['default'].PropTypes.object;                                                                      // 19\n                                                                                                                       // 20\n/**                                                                                                                    // 21\n * The Lifecycle mixin adds the routerWillLeave lifecycle method to a                                                  // 22\n * component that may be used to cancel a transition or prompt the user                                                // 23\n * for confirmation.                                                                                                   // 24\n *                                                                                                                     // 25\n * On standard transitions, routerWillLeave receives a single argument: the                                            // 26\n * location we're transitioning to. To cancel the transition, return false.                                            // 27\n * To prompt the user for confirmation, return a prompt message (string).                                              // 28\n *                                                                                                                     // 29\n * During the beforeunload event (assuming you're using the useBeforeUnload                                            // 30\n * history enhancer), routerWillLeave does not receive a location object                                               // 31\n * because it isn't possible for us to know the location we're transitioning                                           // 32\n * to. In this case routerWillLeave must return a prompt message to prevent                                            // 33\n * the user from closing the window/tab.                                                                               // 34\n */                                                                                                                    // 35\nvar Lifecycle = {                                                                                                      // 36\n                                                                                                                       // 37\n  contextTypes: {                                                                                                      // 38\n    history: object.isRequired,                                                                                        // 39\n    // Nested children receive the route as context, either                                                            // 40\n    // set by the route component using the RouteContext mixin                                                         // 41\n    // or by some other ancestor.                                                                                      // 42\n    route: object                                                                                                      // 43\n  },                                                                                                                   // 44\n                                                                                                                       // 45\n  propTypes: {                                                                                                         // 46\n    // Route components receive the route object as a prop.                                                            // 47\n    route: object                                                                                                      // 48\n  },                                                                                                                   // 49\n                                                                                                                       // 50\n  componentDidMount: function componentDidMount() {                                                                    // 51\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'the `Lifecycle` mixin is deprecated, please use `context.router.setRouteLeaveHook(route, hook)`. http://tiny.cc/router-lifecyclemixin') : undefined;\n    !this.routerWillLeave ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'The Lifecycle mixin requires you to define a routerWillLeave method') : _invariant2['default'](false) : undefined;\n                                                                                                                       // 54\n    var route = this.props.route || this.context.route;                                                                // 55\n                                                                                                                       // 56\n    !route ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'The Lifecycle mixin must be used on either a) a <Route component> or ' + 'b) a descendant of a <Route component> that uses the RouteContext mixin') : _invariant2['default'](false) : undefined;\n                                                                                                                       // 58\n    this._unlistenBeforeLeavingRoute = this.context.history.listenBeforeLeavingRoute(route, this.routerWillLeave);     // 59\n  },                                                                                                                   // 60\n                                                                                                                       // 61\n  componentWillUnmount: function componentWillUnmount() {                                                              // 62\n    if (this._unlistenBeforeLeavingRoute) this._unlistenBeforeLeavingRoute();                                          // 63\n  }                                                                                                                    // 64\n                                                                                                                       // 65\n};                                                                                                                     // 66\n                                                                                                                       // 67\nexports['default'] = Lifecycle;                                                                                        // 68\nmodule.exports = exports['default'];                                                                                   // 69\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n                                                                                                                       //\n},{\"./routerWarning\":61,\"_process\":1,\"invariant\":85}],36:[function(require,module,exports){                            //\n(function (process,global){                                                                                            //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n                                                                                                                       // 10\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n                                                                                                                       // 12\nvar _react2 = _interopRequireDefault(_react);                                                                          // 13\n                                                                                                                       // 14\nvar _routerWarning = require('./routerWarning');                                                                       // 15\n                                                                                                                       // 16\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);                                                          // 17\n                                                                                                                       // 18\nvar _React$PropTypes = _react2['default'].PropTypes;                                                                   // 19\nvar bool = _React$PropTypes.bool;                                                                                      // 20\nvar object = _React$PropTypes.object;                                                                                  // 21\nvar string = _React$PropTypes.string;                                                                                  // 22\nvar func = _React$PropTypes.func;                                                                                      // 23\nvar oneOfType = _React$PropTypes.oneOfType;                                                                            // 24\n                                                                                                                       // 25\nfunction isLeftClickEvent(event) {                                                                                     // 26\n  return event.button === 0;                                                                                           // 27\n}                                                                                                                      // 28\n                                                                                                                       // 29\nfunction isModifiedEvent(event) {                                                                                      // 30\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);                                         // 31\n}                                                                                                                      // 32\n                                                                                                                       // 33\nfunction isEmptyObject(object) {                                                                                       // 34\n  for (var p in object) {                                                                                              // 35\n    if (object.hasOwnProperty(p)) return false;                                                                        // 36\n  }return true;                                                                                                        // 37\n}                                                                                                                      // 38\n                                                                                                                       // 39\nfunction createLocationDescriptor(to, _ref) {                                                                          // 40\n  var query = _ref.query;                                                                                              // 41\n  var hash = _ref.hash;                                                                                                // 42\n  var state = _ref.state;                                                                                              // 43\n                                                                                                                       // 44\n  if (query || hash || state) {                                                                                        // 45\n    return { pathname: to, query: query, hash: hash, state: state };                                                   // 46\n  }                                                                                                                    // 47\n                                                                                                                       // 48\n  return to;                                                                                                           // 49\n}                                                                                                                      // 50\n                                                                                                                       // 51\n/**                                                                                                                    // 52\n * A <Link> is used to create an <a> element that links to a route.                                                    // 53\n * When that route is active, the link gets the value of its                                                           // 54\n * activeClassName prop.                                                                                               // 55\n *                                                                                                                     // 56\n * For example, assuming you have the following route:                                                                 // 57\n *                                                                                                                     // 58\n *   <Route path=\"/posts/:postID\" component={Post} />                                                                  // 59\n *                                                                                                                     // 60\n * You could use the following component to link to that route:                                                        // 61\n *                                                                                                                     // 62\n *   <Link to={`/posts/${post.id}`} />                                                                                 // 63\n *                                                                                                                     // 64\n * Links may pass along location state and/or query string parameters                                                  // 65\n * in the state/query props, respectively.                                                                             // 66\n *                                                                                                                     // 67\n *   <Link ... query={{ show: true }} state={{ the: 'state' }} />                                                      // 68\n */                                                                                                                    // 69\nvar Link = _react2['default'].createClass({                                                                            // 70\n  displayName: 'Link',                                                                                                 // 71\n                                                                                                                       // 72\n  contextTypes: {                                                                                                      // 73\n    router: object                                                                                                     // 74\n  },                                                                                                                   // 75\n                                                                                                                       // 76\n  propTypes: {                                                                                                         // 77\n    to: oneOfType([string, object]).isRequired,                                                                        // 78\n    query: object,                                                                                                     // 79\n    hash: string,                                                                                                      // 80\n    state: object,                                                                                                     // 81\n    activeStyle: object,                                                                                               // 82\n    activeClassName: string,                                                                                           // 83\n    onlyActiveOnIndex: bool.isRequired,                                                                                // 84\n    onClick: func                                                                                                      // 85\n  },                                                                                                                   // 86\n                                                                                                                       // 87\n  getDefaultProps: function getDefaultProps() {                                                                        // 88\n    return {                                                                                                           // 89\n      onlyActiveOnIndex: false,                                                                                        // 90\n      className: '',                                                                                                   // 91\n      style: {}                                                                                                        // 92\n    };                                                                                                                 // 93\n  },                                                                                                                   // 94\n                                                                                                                       // 95\n  handleClick: function handleClick(event) {                                                                           // 96\n    var allowTransition = true;                                                                                        // 97\n                                                                                                                       // 98\n    if (this.props.onClick) this.props.onClick(event);                                                                 // 99\n                                                                                                                       // 100\n    if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;                                                    // 101\n                                                                                                                       // 102\n    if (event.defaultPrevented === true) allowTransition = false;                                                      // 103\n                                                                                                                       // 104\n    // If target prop is set (e.g. to \"_blank\") let browser handle link.                                               // 105\n    /* istanbul ignore if: untestable with Karma */                                                                    // 106\n    if (this.props.target) {                                                                                           // 107\n      if (!allowTransition) event.preventDefault();                                                                    // 108\n                                                                                                                       // 109\n      return;                                                                                                          // 110\n    }                                                                                                                  // 111\n                                                                                                                       // 112\n    event.preventDefault();                                                                                            // 113\n                                                                                                                       // 114\n    if (allowTransition) {                                                                                             // 115\n      var _props = this.props;                                                                                         // 116\n      var to = _props.to;                                                                                              // 117\n      var query = _props.query;                                                                                        // 118\n      var hash = _props.hash;                                                                                          // 119\n      var state = _props.state;                                                                                        // 120\n                                                                                                                       // 121\n      var _location = createLocationDescriptor(to, { query: query, hash: hash, state: state });                        // 122\n                                                                                                                       // 123\n      this.context.router.push(_location);                                                                             // 124\n    }                                                                                                                  // 125\n  },                                                                                                                   // 126\n                                                                                                                       // 127\n  render: function render() {                                                                                          // 128\n    var _props2 = this.props;                                                                                          // 129\n    var to = _props2.to;                                                                                               // 130\n    var query = _props2.query;                                                                                         // 131\n    var hash = _props2.hash;                                                                                           // 132\n    var state = _props2.state;                                                                                         // 133\n    var activeClassName = _props2.activeClassName;                                                                     // 134\n    var activeStyle = _props2.activeStyle;                                                                             // 135\n    var onlyActiveOnIndex = _props2.onlyActiveOnIndex;                                                                 // 136\n                                                                                                                       // 137\n    var props = _objectWithoutProperties(_props2, ['to', 'query', 'hash', 'state', 'activeClassName', 'activeStyle', 'onlyActiveOnIndex']);\n                                                                                                                       // 139\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](!(query || hash || state), 'the `query`, `hash`, and `state` props on `<Link>` are deprecated, use `<Link to={{ pathname, query, hash, state }}/>. http://tiny.cc/router-isActivedeprecated') : undefined;\n                                                                                                                       // 141\n    // Ignore if rendered outside the context of router, simplifies unit testing.                                      // 142\n    var router = this.context.router;                                                                                  // 143\n                                                                                                                       // 144\n    if (router) {                                                                                                      // 145\n      var _location2 = createLocationDescriptor(to, { query: query, hash: hash, state: state });                       // 146\n      props.href = router.createHref(_location2);                                                                      // 147\n                                                                                                                       // 148\n      if (activeClassName || activeStyle != null && !isEmptyObject(activeStyle)) {                                     // 149\n        if (router.isActive(_location2, onlyActiveOnIndex)) {                                                          // 150\n          if (activeClassName) props.className += props.className === '' ? activeClassName : ' ' + activeClassName;    // 151\n                                                                                                                       // 152\n          if (activeStyle) props.style = _extends({}, props.style, activeStyle);                                       // 153\n        }                                                                                                              // 154\n      }                                                                                                                // 155\n    }                                                                                                                  // 156\n                                                                                                                       // 157\n    return _react2['default'].createElement('a', _extends({}, props, { onClick: this.handleClick }));                  // 158\n  }                                                                                                                    // 159\n                                                                                                                       // 160\n});                                                                                                                    // 161\n                                                                                                                       // 162\nexports['default'] = Link;                                                                                             // 163\nmodule.exports = exports['default'];                                                                                   // 164\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n                                                                                                                       //\n},{\"./routerWarning\":61,\"_process\":1}],37:[function(require,module,exports){                                           //\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\nexports.compilePattern = compilePattern;                                                                               // 4\nexports.matchPattern = matchPattern;                                                                                   // 5\nexports.getParamNames = getParamNames;                                                                                 // 6\nexports.getParams = getParams;                                                                                         // 7\nexports.formatPattern = formatPattern;                                                                                 // 8\n                                                                                                                       // 9\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 10\n                                                                                                                       // 11\nvar _invariant = require('invariant');                                                                                 // 12\n                                                                                                                       // 13\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 14\n                                                                                                                       // 15\nfunction escapeRegExp(string) {                                                                                        // 16\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');                                                                // 17\n}                                                                                                                      // 18\n                                                                                                                       // 19\nfunction escapeSource(string) {                                                                                        // 20\n  return escapeRegExp(string).replace(/\\/+/g, '/+');                                                                   // 21\n}                                                                                                                      // 22\n                                                                                                                       // 23\nfunction _compilePattern(pattern) {                                                                                    // 24\n  var regexpSource = '';                                                                                               // 25\n  var paramNames = [];                                                                                                 // 26\n  var tokens = [];                                                                                                     // 27\n                                                                                                                       // 28\n  var match = undefined,                                                                                               // 29\n      lastIndex = 0,                                                                                                   // 30\n      matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\\*\\*|\\*|\\(|\\)/g;                                                          // 31\n  while (match = matcher.exec(pattern)) {                                                                              // 32\n    if (match.index !== lastIndex) {                                                                                   // 33\n      tokens.push(pattern.slice(lastIndex, match.index));                                                              // 34\n      regexpSource += escapeSource(pattern.slice(lastIndex, match.index));                                             // 35\n    }                                                                                                                  // 36\n                                                                                                                       // 37\n    if (match[1]) {                                                                                                    // 38\n      regexpSource += '([^/?#]+)';                                                                                     // 39\n      paramNames.push(match[1]);                                                                                       // 40\n    } else if (match[0] === '**') {                                                                                    // 41\n      regexpSource += '([\\\\s\\\\S]*)';                                                                                   // 42\n      paramNames.push('splat');                                                                                        // 43\n    } else if (match[0] === '*') {                                                                                     // 44\n      regexpSource += '([\\\\s\\\\S]*?)';                                                                                  // 45\n      paramNames.push('splat');                                                                                        // 46\n    } else if (match[0] === '(') {                                                                                     // 47\n      regexpSource += '(?:';                                                                                           // 48\n    } else if (match[0] === ')') {                                                                                     // 49\n      regexpSource += ')?';                                                                                            // 50\n    }                                                                                                                  // 51\n                                                                                                                       // 52\n    tokens.push(match[0]);                                                                                             // 53\n                                                                                                                       // 54\n    lastIndex = matcher.lastIndex;                                                                                     // 55\n  }                                                                                                                    // 56\n                                                                                                                       // 57\n  if (lastIndex !== pattern.length) {                                                                                  // 58\n    tokens.push(pattern.slice(lastIndex, pattern.length));                                                             // 59\n    regexpSource += escapeSource(pattern.slice(lastIndex, pattern.length));                                            // 60\n  }                                                                                                                    // 61\n                                                                                                                       // 62\n  return {                                                                                                             // 63\n    pattern: pattern,                                                                                                  // 64\n    regexpSource: regexpSource,                                                                                        // 65\n    paramNames: paramNames,                                                                                            // 66\n    tokens: tokens                                                                                                     // 67\n  };                                                                                                                   // 68\n}                                                                                                                      // 69\n                                                                                                                       // 70\nvar CompiledPatternsCache = {};                                                                                        // 71\n                                                                                                                       // 72\nfunction compilePattern(pattern) {                                                                                     // 73\n  if (!(pattern in CompiledPatternsCache)) CompiledPatternsCache[pattern] = _compilePattern(pattern);                  // 74\n                                                                                                                       // 75\n  return CompiledPatternsCache[pattern];                                                                               // 76\n}                                                                                                                      // 77\n                                                                                                                       // 78\n/**                                                                                                                    // 79\n * Attempts to match a pattern on the given pathname. Patterns may use                                                 // 80\n * the following special characters:                                                                                   // 81\n *                                                                                                                     // 82\n * - :paramName     Matches a URL segment up to the next /, ?, or #. The                                               // 83\n *                  captured string is considered a \"param\"                                                            // 84\n * - ()             Wraps a segment of the URL that is optional                                                        // 85\n * - *              Consumes (non-greedy) all characters up to the next                                                // 86\n *                  character in the pattern, or to the end of the URL if                                              // 87\n *                  there is none                                                                                      // 88\n * - **             Consumes (greedy) all characters up to the next character                                          // 89\n *                  in the pattern, or to the end of the URL if there is none                                          // 90\n *                                                                                                                     // 91\n * The return value is an object with the following properties:                                                        // 92\n *                                                                                                                     // 93\n * - remainingPathname                                                                                                 // 94\n * - paramNames                                                                                                        // 95\n * - paramValues                                                                                                       // 96\n */                                                                                                                    // 97\n                                                                                                                       // 98\nfunction matchPattern(pattern, pathname) {                                                                             // 99\n  // Make leading slashes consistent between pattern and pathname.                                                     // 100\n  if (pattern.charAt(0) !== '/') {                                                                                     // 101\n    pattern = '/' + pattern;                                                                                           // 102\n  }                                                                                                                    // 103\n  if (pathname.charAt(0) !== '/') {                                                                                    // 104\n    pathname = '/' + pathname;                                                                                         // 105\n  }                                                                                                                    // 106\n                                                                                                                       // 107\n  var _compilePattern2 = compilePattern(pattern);                                                                      // 108\n                                                                                                                       // 109\n  var regexpSource = _compilePattern2.regexpSource;                                                                    // 110\n  var paramNames = _compilePattern2.paramNames;                                                                        // 111\n  var tokens = _compilePattern2.tokens;                                                                                // 112\n                                                                                                                       // 113\n  regexpSource += '/*'; // Capture path separators                                                                     // 114\n                                                                                                                       // 115\n  // Special-case patterns like '*' for catch-all routes.                                                              // 116\n  var captureRemaining = tokens[tokens.length - 1] !== '*';                                                            // 117\n                                                                                                                       // 118\n  if (captureRemaining) {                                                                                              // 119\n    // This will match newlines in the remaining path.                                                                 // 120\n    regexpSource += '([\\\\s\\\\S]*?)';                                                                                    // 121\n  }                                                                                                                    // 122\n                                                                                                                       // 123\n  var match = pathname.match(new RegExp('^' + regexpSource + '$', 'i'));                                               // 124\n                                                                                                                       // 125\n  var remainingPathname = undefined,                                                                                   // 126\n      paramValues = undefined;                                                                                         // 127\n  if (match != null) {                                                                                                 // 128\n    if (captureRemaining) {                                                                                            // 129\n      remainingPathname = match.pop();                                                                                 // 130\n      var matchedPath = match[0].substr(0, match[0].length - remainingPathname.length);                                // 131\n                                                                                                                       // 132\n      // If we didn't match the entire pathname, then make sure that the match                                         // 133\n      // we did get ends at a path separator (potentially the one we added                                             // 134\n      // above at the beginning of the path, if the actual match was empty).                                           // 135\n      if (remainingPathname && matchedPath.charAt(matchedPath.length - 1) !== '/') {                                   // 136\n        return {                                                                                                       // 137\n          remainingPathname: null,                                                                                     // 138\n          paramNames: paramNames,                                                                                      // 139\n          paramValues: null                                                                                            // 140\n        };                                                                                                             // 141\n      }                                                                                                                // 142\n    } else {                                                                                                           // 143\n      // If this matched at all, then the match was the entire pathname.                                               // 144\n      remainingPathname = '';                                                                                          // 145\n    }                                                                                                                  // 146\n                                                                                                                       // 147\n    paramValues = match.slice(1).map(function (v) {                                                                    // 148\n      return v != null ? decodeURIComponent(v) : v;                                                                    // 149\n    });                                                                                                                // 150\n  } else {                                                                                                             // 151\n    remainingPathname = paramValues = null;                                                                            // 152\n  }                                                                                                                    // 153\n                                                                                                                       // 154\n  return {                                                                                                             // 155\n    remainingPathname: remainingPathname,                                                                              // 156\n    paramNames: paramNames,                                                                                            // 157\n    paramValues: paramValues                                                                                           // 158\n  };                                                                                                                   // 159\n}                                                                                                                      // 160\n                                                                                                                       // 161\nfunction getParamNames(pattern) {                                                                                      // 162\n  return compilePattern(pattern).paramNames;                                                                           // 163\n}                                                                                                                      // 164\n                                                                                                                       // 165\nfunction getParams(pattern, pathname) {                                                                                // 166\n  var _matchPattern = matchPattern(pattern, pathname);                                                                 // 167\n                                                                                                                       // 168\n  var paramNames = _matchPattern.paramNames;                                                                           // 169\n  var paramValues = _matchPattern.paramValues;                                                                         // 170\n                                                                                                                       // 171\n  if (paramValues != null) {                                                                                           // 172\n    return paramNames.reduce(function (memo, paramName, index) {                                                       // 173\n      memo[paramName] = paramValues[index];                                                                            // 174\n      return memo;                                                                                                     // 175\n    }, {});                                                                                                            // 176\n  }                                                                                                                    // 177\n                                                                                                                       // 178\n  return null;                                                                                                         // 179\n}                                                                                                                      // 180\n                                                                                                                       // 181\n/**                                                                                                                    // 182\n * Returns a version of the given pattern with params interpolated. Throws                                             // 183\n * if there is a dynamic segment of the pattern for which there is no param.                                           // 184\n */                                                                                                                    // 185\n                                                                                                                       // 186\nfunction formatPattern(pattern, params) {                                                                              // 187\n  params = params || {};                                                                                               // 188\n                                                                                                                       // 189\n  var _compilePattern3 = compilePattern(pattern);                                                                      // 190\n                                                                                                                       // 191\n  var tokens = _compilePattern3.tokens;                                                                                // 192\n                                                                                                                       // 193\n  var parenCount = 0,                                                                                                  // 194\n      pathname = '',                                                                                                   // 195\n      splatIndex = 0;                                                                                                  // 196\n                                                                                                                       // 197\n  var token = undefined,                                                                                               // 198\n      paramName = undefined,                                                                                           // 199\n      paramValue = undefined;                                                                                          // 200\n  for (var i = 0, len = tokens.length; i < len; ++i) {                                                                 // 201\n    token = tokens[i];                                                                                                 // 202\n                                                                                                                       // 203\n    if (token === '*' || token === '**') {                                                                             // 204\n      paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;                            // 205\n                                                                                                                       // 206\n      !(paramValue != null || parenCount > 0) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Missing splat #%s for path \"%s\"', splatIndex, pattern) : _invariant2['default'](false) : undefined;\n                                                                                                                       // 208\n      if (paramValue != null) pathname += encodeURI(paramValue);                                                       // 209\n    } else if (token === '(') {                                                                                        // 210\n      parenCount += 1;                                                                                                 // 211\n    } else if (token === ')') {                                                                                        // 212\n      parenCount -= 1;                                                                                                 // 213\n    } else if (token.charAt(0) === ':') {                                                                              // 214\n      paramName = token.substring(1);                                                                                  // 215\n      paramValue = params[paramName];                                                                                  // 216\n                                                                                                                       // 217\n      !(paramValue != null || parenCount > 0) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Missing \"%s\" parameter for path \"%s\"', paramName, pattern) : _invariant2['default'](false) : undefined;\n                                                                                                                       // 219\n      if (paramValue != null) pathname += encodeURIComponent(paramValue);                                              // 220\n    } else {                                                                                                           // 221\n      pathname += token;                                                                                               // 222\n    }                                                                                                                  // 223\n  }                                                                                                                    // 224\n                                                                                                                       // 225\n  return pathname.replace(/\\/+/g, '/');                                                                                // 226\n}                                                                                                                      // 227\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"_process\":1,\"invariant\":85}],38:[function(require,module,exports){                                                 //\n(function (global){                                                                                                    //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\nexports.falsy = falsy;                                                                                                 // 4\n                                                                                                                       // 5\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n                                                                                                                       // 7\nvar func = _react.PropTypes.func;                                                                                      // 8\nvar object = _react.PropTypes.object;                                                                                  // 9\nvar arrayOf = _react.PropTypes.arrayOf;                                                                                // 10\nvar oneOfType = _react.PropTypes.oneOfType;                                                                            // 11\nvar element = _react.PropTypes.element;                                                                                // 12\nvar shape = _react.PropTypes.shape;                                                                                    // 13\nvar string = _react.PropTypes.string;                                                                                  // 14\n                                                                                                                       // 15\nfunction falsy(props, propName, componentName) {                                                                       // 16\n  if (props[propName]) return new Error('<' + componentName + '> should not have a \"' + propName + '\" prop');          // 17\n}                                                                                                                      // 18\n                                                                                                                       // 19\nvar history = shape({                                                                                                  // 20\n  listen: func.isRequired,                                                                                             // 21\n  pushState: func.isRequired,                                                                                          // 22\n  replaceState: func.isRequired,                                                                                       // 23\n  go: func.isRequired                                                                                                  // 24\n});                                                                                                                    // 25\n                                                                                                                       // 26\nexports.history = history;                                                                                             // 27\nvar location = shape({                                                                                                 // 28\n  pathname: string.isRequired,                                                                                         // 29\n  search: string.isRequired,                                                                                           // 30\n  state: object,                                                                                                       // 31\n  action: string.isRequired,                                                                                           // 32\n  key: string                                                                                                          // 33\n});                                                                                                                    // 34\n                                                                                                                       // 35\nexports.location = location;                                                                                           // 36\nvar component = oneOfType([func, string]);                                                                             // 37\nexports.component = component;                                                                                         // 38\nvar components = oneOfType([component, object]);                                                                       // 39\nexports.components = components;                                                                                       // 40\nvar route = oneOfType([object, element]);                                                                              // 41\nexports.route = route;                                                                                                 // 42\nvar routes = oneOfType([route, arrayOf(route)]);                                                                       // 43\n                                                                                                                       // 44\nexports.routes = routes;                                                                                               // 45\nexports['default'] = {                                                                                                 // 46\n  falsy: falsy,                                                                                                        // 47\n  history: history,                                                                                                    // 48\n  location: location,                                                                                                  // 49\n  component: component,                                                                                                // 50\n  components: components,                                                                                              // 51\n  route: route                                                                                                         // 52\n};                                                                                                                     // 53\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n                                                                                                                       //\n},{}],39:[function(require,module,exports){                                                                            //\n(function (process,global){                                                                                            //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n                                                                                                                       // 8\nvar _react2 = _interopRequireDefault(_react);                                                                          // 9\n                                                                                                                       // 10\nvar _invariant = require('invariant');                                                                                 // 11\n                                                                                                                       // 12\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 13\n                                                                                                                       // 14\nvar _RouteUtils = require('./RouteUtils');                                                                             // 15\n                                                                                                                       // 16\nvar _PatternUtils = require('./PatternUtils');                                                                         // 17\n                                                                                                                       // 18\nvar _PropTypes = require('./PropTypes');                                                                               // 19\n                                                                                                                       // 20\nvar _React$PropTypes = _react2['default'].PropTypes;                                                                   // 21\nvar string = _React$PropTypes.string;                                                                                  // 22\nvar object = _React$PropTypes.object;                                                                                  // 23\n                                                                                                                       // 24\n/**                                                                                                                    // 25\n * A <Redirect> is used to declare another URL path a client should                                                    // 26\n * be sent to when they request a given URL.                                                                           // 27\n *                                                                                                                     // 28\n * Redirects are placed alongside routes in the route configuration                                                    // 29\n * and are traversed in the same manner.                                                                               // 30\n */                                                                                                                    // 31\nvar Redirect = _react2['default'].createClass({                                                                        // 32\n  displayName: 'Redirect',                                                                                             // 33\n                                                                                                                       // 34\n  statics: {                                                                                                           // 35\n                                                                                                                       // 36\n    createRouteFromReactElement: function createRouteFromReactElement(element) {                                       // 37\n      var route = _RouteUtils.createRouteFromReactElement(element);                                                    // 38\n                                                                                                                       // 39\n      if (route.from) route.path = route.from;                                                                         // 40\n                                                                                                                       // 41\n      route.onEnter = function (nextState, replace) {                                                                  // 42\n        var location = nextState.location;                                                                             // 43\n        var params = nextState.params;                                                                                 // 44\n                                                                                                                       // 45\n        var pathname = undefined;                                                                                      // 46\n        if (route.to.charAt(0) === '/') {                                                                              // 47\n          pathname = _PatternUtils.formatPattern(route.to, params);                                                    // 48\n        } else if (!route.to) {                                                                                        // 49\n          pathname = location.pathname;                                                                                // 50\n        } else {                                                                                                       // 51\n          var routeIndex = nextState.routes.indexOf(route);                                                            // 52\n          var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);                              // 53\n          var pattern = parentPattern.replace(/\\/*$/, '/') + route.to;                                                 // 54\n          pathname = _PatternUtils.formatPattern(pattern, params);                                                     // 55\n        }                                                                                                              // 56\n                                                                                                                       // 57\n        replace({                                                                                                      // 58\n          pathname: pathname,                                                                                          // 59\n          query: route.query || location.query,                                                                        // 60\n          state: route.state || location.state                                                                         // 61\n        });                                                                                                            // 62\n      };                                                                                                               // 63\n                                                                                                                       // 64\n      return route;                                                                                                    // 65\n    },                                                                                                                 // 66\n                                                                                                                       // 67\n    getRoutePattern: function getRoutePattern(routes, routeIndex) {                                                    // 68\n      var parentPattern = '';                                                                                          // 69\n                                                                                                                       // 70\n      for (var i = routeIndex; i >= 0; i--) {                                                                          // 71\n        var route = routes[i];                                                                                         // 72\n        var pattern = route.path || '';                                                                                // 73\n                                                                                                                       // 74\n        parentPattern = pattern.replace(/\\/*$/, '/') + parentPattern;                                                  // 75\n                                                                                                                       // 76\n        if (pattern.indexOf('/') === 0) break;                                                                         // 77\n      }                                                                                                                // 78\n                                                                                                                       // 79\n      return '/' + parentPattern;                                                                                      // 80\n    }                                                                                                                  // 81\n                                                                                                                       // 82\n  },                                                                                                                   // 83\n                                                                                                                       // 84\n  propTypes: {                                                                                                         // 85\n    path: string,                                                                                                      // 86\n    from: string, // Alias for path                                                                                    // 87\n    to: string.isRequired,                                                                                             // 88\n    query: object,                                                                                                     // 89\n    state: object,                                                                                                     // 90\n    onEnter: _PropTypes.falsy,                                                                                         // 91\n    children: _PropTypes.falsy                                                                                         // 92\n  },                                                                                                                   // 93\n                                                                                                                       // 94\n  /* istanbul ignore next: sanity check */                                                                             // 95\n  render: function render() {                                                                                          // 96\n    !false ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, '<Redirect> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;\n  }                                                                                                                    // 98\n                                                                                                                       // 99\n});                                                                                                                    // 100\n                                                                                                                       // 101\nexports['default'] = Redirect;                                                                                         // 102\nmodule.exports = exports['default'];                                                                                   // 103\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n                                                                                                                       //\n},{\"./PatternUtils\":37,\"./PropTypes\":38,\"./RouteUtils\":42,\"_process\":1,\"invariant\":85}],40:[function(require,module,exports){\n(function (process,global){                                                                                            //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n                                                                                                                       // 8\nvar _react2 = _interopRequireDefault(_react);                                                                          // 9\n                                                                                                                       // 10\nvar _invariant = require('invariant');                                                                                 // 11\n                                                                                                                       // 12\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 13\n                                                                                                                       // 14\nvar _RouteUtils = require('./RouteUtils');                                                                             // 15\n                                                                                                                       // 16\nvar _PropTypes = require('./PropTypes');                                                                               // 17\n                                                                                                                       // 18\nvar _React$PropTypes = _react2['default'].PropTypes;                                                                   // 19\nvar string = _React$PropTypes.string;                                                                                  // 20\nvar func = _React$PropTypes.func;                                                                                      // 21\n                                                                                                                       // 22\n/**                                                                                                                    // 23\n * A <Route> is used to declare which components are rendered to the                                                   // 24\n * page when the URL matches a given pattern.                                                                          // 25\n *                                                                                                                     // 26\n * Routes are arranged in a nested tree structure. When a new URL is                                                   // 27\n * requested, the tree is searched depth-first to find a route whose                                                   // 28\n * path matches the URL.  When one is found, all routes in the tree                                                    // 29\n * that lead to it are considered \"active\" and their components are                                                    // 30\n * rendered into the DOM, nested in the same order as in the tree.                                                     // 31\n */                                                                                                                    // 32\nvar Route = _react2['default'].createClass({                                                                           // 33\n  displayName: 'Route',                                                                                                // 34\n                                                                                                                       // 35\n  statics: {                                                                                                           // 36\n    createRouteFromReactElement: _RouteUtils.createRouteFromReactElement                                               // 37\n  },                                                                                                                   // 38\n                                                                                                                       // 39\n  propTypes: {                                                                                                         // 40\n    path: string,                                                                                                      // 41\n    component: _PropTypes.component,                                                                                   // 42\n    components: _PropTypes.components,                                                                                 // 43\n    getComponent: func,                                                                                                // 44\n    getComponents: func                                                                                                // 45\n  },                                                                                                                   // 46\n                                                                                                                       // 47\n  /* istanbul ignore next: sanity check */                                                                             // 48\n  render: function render() {                                                                                          // 49\n    !false ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, '<Route> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;\n  }                                                                                                                    // 51\n                                                                                                                       // 52\n});                                                                                                                    // 53\n                                                                                                                       // 54\nexports['default'] = Route;                                                                                            // 55\nmodule.exports = exports['default'];                                                                                   // 56\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n                                                                                                                       //\n},{\"./PropTypes\":38,\"./RouteUtils\":42,\"_process\":1,\"invariant\":85}],41:[function(require,module,exports){              //\n(function (process,global){                                                                                            //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _routerWarning = require('./routerWarning');                                                                       // 7\n                                                                                                                       // 8\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);                                                          // 9\n                                                                                                                       // 10\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n                                                                                                                       // 12\nvar _react2 = _interopRequireDefault(_react);                                                                          // 13\n                                                                                                                       // 14\nvar object = _react2['default'].PropTypes.object;                                                                      // 15\n                                                                                                                       // 16\n/**                                                                                                                    // 17\n * The RouteContext mixin provides a convenient way for route                                                          // 18\n * components to set the route in context. This is needed for                                                          // 19\n * routes that render elements that want to use the Lifecycle                                                          // 20\n * mixin to prevent transitions.                                                                                       // 21\n */                                                                                                                    // 22\nvar RouteContext = {                                                                                                   // 23\n                                                                                                                       // 24\n  propTypes: {                                                                                                         // 25\n    route: object.isRequired                                                                                           // 26\n  },                                                                                                                   // 27\n                                                                                                                       // 28\n  childContextTypes: {                                                                                                 // 29\n    route: object.isRequired                                                                                           // 30\n  },                                                                                                                   // 31\n                                                                                                                       // 32\n  getChildContext: function getChildContext() {                                                                        // 33\n    return {                                                                                                           // 34\n      route: this.props.route                                                                                          // 35\n    };                                                                                                                 // 36\n  },                                                                                                                   // 37\n                                                                                                                       // 38\n  componentWillMount: function componentWillMount() {                                                                  // 39\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'The `RouteContext` mixin is deprecated. You can provide `this.props.route` on context with your own `contextTypes`. http://tiny.cc/router-routecontextmixin') : undefined;\n  }                                                                                                                    // 41\n                                                                                                                       // 42\n};                                                                                                                     // 43\n                                                                                                                       // 44\nexports['default'] = RouteContext;                                                                                     // 45\nmodule.exports = exports['default'];                                                                                   // 46\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n                                                                                                                       //\n},{\"./routerWarning\":61,\"_process\":1}],42:[function(require,module,exports){                                           //\n(function (process,global){                                                                                            //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nexports.isReactChildren = isReactChildren;                                                                             // 7\nexports.createRouteFromReactElement = createRouteFromReactElement;                                                     // 8\nexports.createRoutesFromReactChildren = createRoutesFromReactChildren;                                                 // 9\nexports.createRoutes = createRoutes;                                                                                   // 10\n                                                                                                                       // 11\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 12\n                                                                                                                       // 13\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n                                                                                                                       // 15\nvar _react2 = _interopRequireDefault(_react);                                                                          // 16\n                                                                                                                       // 17\nvar _routerWarning = require('./routerWarning');                                                                       // 18\n                                                                                                                       // 19\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);                                                          // 20\n                                                                                                                       // 21\nfunction isValidChild(object) {                                                                                        // 22\n  return object == null || _react2['default'].isValidElement(object);                                                  // 23\n}                                                                                                                      // 24\n                                                                                                                       // 25\nfunction isReactChildren(object) {                                                                                     // 26\n  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);                                  // 27\n}                                                                                                                      // 28\n                                                                                                                       // 29\nfunction checkPropTypes(componentName, propTypes, props) {                                                             // 30\n  componentName = componentName || 'UnknownComponent';                                                                 // 31\n                                                                                                                       // 32\n  for (var propName in propTypes) {                                                                                    // 33\n    if (propTypes.hasOwnProperty(propName)) {                                                                          // 34\n      var error = propTypes[propName](props, propName, componentName);                                                 // 35\n                                                                                                                       // 36\n      /* istanbul ignore if: error logging */                                                                          // 37\n      if (error instanceof Error) process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, error.message) : undefined;\n    }                                                                                                                  // 39\n  }                                                                                                                    // 40\n}                                                                                                                      // 41\n                                                                                                                       // 42\nfunction createRoute(defaultProps, props) {                                                                            // 43\n  return _extends({}, defaultProps, props);                                                                            // 44\n}                                                                                                                      // 45\n                                                                                                                       // 46\nfunction createRouteFromReactElement(element) {                                                                        // 47\n  var type = element.type;                                                                                             // 48\n  var route = createRoute(type.defaultProps, element.props);                                                           // 49\n                                                                                                                       // 50\n  if (type.propTypes) checkPropTypes(type.displayName || type.name, type.propTypes, route);                            // 51\n                                                                                                                       // 52\n  if (route.children) {                                                                                                // 53\n    var childRoutes = createRoutesFromReactChildren(route.children, route);                                            // 54\n                                                                                                                       // 55\n    if (childRoutes.length) route.childRoutes = childRoutes;                                                           // 56\n                                                                                                                       // 57\n    delete route.children;                                                                                             // 58\n  }                                                                                                                    // 59\n                                                                                                                       // 60\n  return route;                                                                                                        // 61\n}                                                                                                                      // 62\n                                                                                                                       // 63\n/**                                                                                                                    // 64\n * Creates and returns a routes object from the given ReactChildren. JSX                                               // 65\n * provides a convenient way to visualize how routes in the hierarchy are                                              // 66\n * nested.                                                                                                             // 67\n *                                                                                                                     // 68\n *   import { Route, createRoutesFromReactChildren } from 'react-router'                                               // 69\n *                                                                                                                     // 70\n *   const routes = createRoutesFromReactChildren(                                                                     // 71\n *     <Route component={App}>                                                                                         // 72\n *       <Route path=\"home\" component={Dashboard}/>                                                                    // 73\n *       <Route path=\"news\" component={NewsFeed}/>                                                                     // 74\n *     </Route>                                                                                                        // 75\n *   )                                                                                                                 // 76\n *                                                                                                                     // 77\n * Note: This method is automatically used when you provide <Route> children                                           // 78\n * to a <Router> component.                                                                                            // 79\n */                                                                                                                    // 80\n                                                                                                                       // 81\nfunction createRoutesFromReactChildren(children, parentRoute) {                                                        // 82\n  var routes = [];                                                                                                     // 83\n                                                                                                                       // 84\n  _react2['default'].Children.forEach(children, function (element) {                                                   // 85\n    if (_react2['default'].isValidElement(element)) {                                                                  // 86\n      // Component classes may have a static create* method.                                                           // 87\n      if (element.type.createRouteFromReactElement) {                                                                  // 88\n        var route = element.type.createRouteFromReactElement(element, parentRoute);                                    // 89\n                                                                                                                       // 90\n        if (route) routes.push(route);                                                                                 // 91\n      } else {                                                                                                         // 92\n        routes.push(createRouteFromReactElement(element));                                                             // 93\n      }                                                                                                                // 94\n    }                                                                                                                  // 95\n  });                                                                                                                  // 96\n                                                                                                                       // 97\n  return routes;                                                                                                       // 98\n}                                                                                                                      // 99\n                                                                                                                       // 100\n/**                                                                                                                    // 101\n * Creates and returns an array of routes from the given object which                                                  // 102\n * may be a JSX route, a plain object route, or an array of either.                                                    // 103\n */                                                                                                                    // 104\n                                                                                                                       // 105\nfunction createRoutes(routes) {                                                                                        // 106\n  if (isReactChildren(routes)) {                                                                                       // 107\n    routes = createRoutesFromReactChildren(routes);                                                                    // 108\n  } else if (routes && !Array.isArray(routes)) {                                                                       // 109\n    routes = [routes];                                                                                                 // 110\n  }                                                                                                                    // 111\n                                                                                                                       // 112\n  return routes;                                                                                                       // 113\n}                                                                                                                      // 114\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n                                                                                                                       //\n},{\"./routerWarning\":61,\"_process\":1}],43:[function(require,module,exports){                                           //\n(function (process,global){                                                                                            //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n                                                                                                                       // 10\nvar _historyLibCreateHashHistory = require('history/lib/createHashHistory');                                           // 11\n                                                                                                                       // 12\nvar _historyLibCreateHashHistory2 = _interopRequireDefault(_historyLibCreateHashHistory);                              // 13\n                                                                                                                       // 14\nvar _historyLibUseQueries = require('history/lib/useQueries');                                                         // 15\n                                                                                                                       // 16\nvar _historyLibUseQueries2 = _interopRequireDefault(_historyLibUseQueries);                                            // 17\n                                                                                                                       // 18\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n                                                                                                                       // 20\nvar _react2 = _interopRequireDefault(_react);                                                                          // 21\n                                                                                                                       // 22\nvar _createTransitionManager = require('./createTransitionManager');                                                   // 23\n                                                                                                                       // 24\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);                                      // 25\n                                                                                                                       // 26\nvar _PropTypes = require('./PropTypes');                                                                               // 27\n                                                                                                                       // 28\nvar _RouterContext = require('./RouterContext');                                                                       // 29\n                                                                                                                       // 30\nvar _RouterContext2 = _interopRequireDefault(_RouterContext);                                                          // 31\n                                                                                                                       // 32\nvar _RouteUtils = require('./RouteUtils');                                                                             // 33\n                                                                                                                       // 34\nvar _RouterUtils = require('./RouterUtils');                                                                           // 35\n                                                                                                                       // 36\nvar _routerWarning = require('./routerWarning');                                                                       // 37\n                                                                                                                       // 38\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);                                                          // 39\n                                                                                                                       // 40\nfunction isDeprecatedHistory(history) {                                                                                // 41\n  return !history || !history.__v2_compatible__;                                                                       // 42\n}                                                                                                                      // 43\n                                                                                                                       // 44\nvar _React$PropTypes = _react2['default'].PropTypes;                                                                   // 45\nvar func = _React$PropTypes.func;                                                                                      // 46\nvar object = _React$PropTypes.object;                                                                                  // 47\n                                                                                                                       // 48\n/**                                                                                                                    // 49\n * A <Router> is a high-level API for automatically setting up                                                         // 50\n * a router that renders a <RouterContext> with all the props                                                          // 51\n * it needs each time the URL changes.                                                                                 // 52\n */                                                                                                                    // 53\nvar Router = _react2['default'].createClass({                                                                          // 54\n  displayName: 'Router',                                                                                               // 55\n                                                                                                                       // 56\n  propTypes: {                                                                                                         // 57\n    history: object,                                                                                                   // 58\n    children: _PropTypes.routes,                                                                                       // 59\n    routes: _PropTypes.routes, // alias for children                                                                   // 60\n    render: func,                                                                                                      // 61\n    createElement: func,                                                                                               // 62\n    onError: func,                                                                                                     // 63\n    onUpdate: func,                                                                                                    // 64\n                                                                                                                       // 65\n    // PRIVATE: For client-side rehydration of server match.                                                           // 66\n    matchContext: object                                                                                               // 67\n  },                                                                                                                   // 68\n                                                                                                                       // 69\n  getDefaultProps: function getDefaultProps() {                                                                        // 70\n    return {                                                                                                           // 71\n      render: function render(props) {                                                                                 // 72\n        return _react2['default'].createElement(_RouterContext2['default'], props);                                    // 73\n      }                                                                                                                // 74\n    };                                                                                                                 // 75\n  },                                                                                                                   // 76\n                                                                                                                       // 77\n  getInitialState: function getInitialState() {                                                                        // 78\n    return {                                                                                                           // 79\n      location: null,                                                                                                  // 80\n      routes: null,                                                                                                    // 81\n      params: null,                                                                                                    // 82\n      components: null                                                                                                 // 83\n    };                                                                                                                 // 84\n  },                                                                                                                   // 85\n                                                                                                                       // 86\n  handleError: function handleError(error) {                                                                           // 87\n    if (this.props.onError) {                                                                                          // 88\n      this.props.onError.call(this, error);                                                                            // 89\n    } else {                                                                                                           // 90\n      // Throw errors by default so we don't silently swallow them!                                                    // 91\n      throw error; // This error probably occurred in getChildRoutes or getComponents.                                 // 92\n    }                                                                                                                  // 93\n  },                                                                                                                   // 94\n                                                                                                                       // 95\n  componentWillMount: function componentWillMount() {                                                                  // 96\n    var _this = this;                                                                                                  // 97\n                                                                                                                       // 98\n    var _props = this.props;                                                                                           // 99\n    var parseQueryString = _props.parseQueryString;                                                                    // 100\n    var stringifyQuery = _props.stringifyQuery;                                                                        // 101\n                                                                                                                       // 102\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](!(parseQueryString || stringifyQuery), '`parseQueryString` and `stringifyQuery` are deprecated. Please create a custom history. http://tiny.cc/router-customquerystring') : undefined;\n                                                                                                                       // 104\n    var _createRouterObjects = this.createRouterObjects();                                                             // 105\n                                                                                                                       // 106\n    var history = _createRouterObjects.history;                                                                        // 107\n    var transitionManager = _createRouterObjects.transitionManager;                                                    // 108\n    var router = _createRouterObjects.router;                                                                          // 109\n                                                                                                                       // 110\n    this._unlisten = transitionManager.listen(function (error, state) {                                                // 111\n      if (error) {                                                                                                     // 112\n        _this.handleError(error);                                                                                      // 113\n      } else {                                                                                                         // 114\n        _this.setState(state, _this.props.onUpdate);                                                                   // 115\n      }                                                                                                                // 116\n    });                                                                                                                // 117\n                                                                                                                       // 118\n    this.history = history;                                                                                            // 119\n    this.router = router;                                                                                              // 120\n  },                                                                                                                   // 121\n                                                                                                                       // 122\n  createRouterObjects: function createRouterObjects() {                                                                // 123\n    var matchContext = this.props.matchContext;                                                                        // 124\n                                                                                                                       // 125\n    if (matchContext) {                                                                                                // 126\n      return matchContext;                                                                                             // 127\n    }                                                                                                                  // 128\n                                                                                                                       // 129\n    var history = this.props.history;                                                                                  // 130\n    var _props2 = this.props;                                                                                          // 131\n    var routes = _props2.routes;                                                                                       // 132\n    var children = _props2.children;                                                                                   // 133\n                                                                                                                       // 134\n    if (isDeprecatedHistory(history)) {                                                                                // 135\n      history = this.wrapDeprecatedHistory(history);                                                                   // 136\n    }                                                                                                                  // 137\n                                                                                                                       // 138\n    var transitionManager = _createTransitionManager2['default'](history, _RouteUtils.createRoutes(routes || children));\n    var router = _RouterUtils.createRouterObject(history, transitionManager);                                          // 140\n    var routingHistory = _RouterUtils.createRoutingHistory(history, transitionManager);                                // 141\n                                                                                                                       // 142\n    return { history: routingHistory, transitionManager: transitionManager, router: router };                          // 143\n  },                                                                                                                   // 144\n                                                                                                                       // 145\n  wrapDeprecatedHistory: function wrapDeprecatedHistory(history) {                                                     // 146\n    var _props3 = this.props;                                                                                          // 147\n    var parseQueryString = _props3.parseQueryString;                                                                   // 148\n    var stringifyQuery = _props3.stringifyQuery;                                                                       // 149\n                                                                                                                       // 150\n    var createHistory = undefined;                                                                                     // 151\n    if (history) {                                                                                                     // 152\n      process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'It appears you have provided a deprecated history object to `<Router/>`, please use a history provided by ' + 'React Router with `import { browserHistory } from \\'react-router\\'` or `import { hashHistory } from \\'react-router\\'`. ' + 'If you are using a custom history please create it with `useRouterHistory`, see http://tiny.cc/router-usinghistory for details.') : undefined;\n      createHistory = function () {                                                                                    // 154\n        return history;                                                                                                // 155\n      };                                                                                                               // 156\n    } else {                                                                                                           // 157\n      process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, '`Router` no longer defaults the history prop to hash history. Please use the `hashHistory` singleton instead. http://tiny.cc/router-defaulthistory') : undefined;\n      createHistory = _historyLibCreateHashHistory2['default'];                                                        // 159\n    }                                                                                                                  // 160\n                                                                                                                       // 161\n    return _historyLibUseQueries2['default'](createHistory)({ parseQueryString: parseQueryString, stringifyQuery: stringifyQuery });\n  },                                                                                                                   // 163\n                                                                                                                       // 164\n  /* istanbul ignore next: sanity check */                                                                             // 165\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {                                           // 166\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](nextProps.history === this.props.history, 'You cannot change <Router history>; it will be ignored') : undefined;\n                                                                                                                       // 168\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default']((nextProps.routes || nextProps.children) === (this.props.routes || this.props.children), 'You cannot change <Router routes>; it will be ignored') : undefined;\n  },                                                                                                                   // 170\n                                                                                                                       // 171\n  componentWillUnmount: function componentWillUnmount() {                                                              // 172\n    if (this._unlisten) this._unlisten();                                                                              // 173\n  },                                                                                                                   // 174\n                                                                                                                       // 175\n  render: function render() {                                                                                          // 176\n    var _state = this.state;                                                                                           // 177\n    var location = _state.location;                                                                                    // 178\n    var routes = _state.routes;                                                                                        // 179\n    var params = _state.params;                                                                                        // 180\n    var components = _state.components;                                                                                // 181\n    var _props4 = this.props;                                                                                          // 182\n    var createElement = _props4.createElement;                                                                         // 183\n    var render = _props4.render;                                                                                       // 184\n                                                                                                                       // 185\n    var props = _objectWithoutProperties(_props4, ['createElement', 'render']);                                        // 186\n                                                                                                                       // 187\n    if (location == null) return null; // Async match                                                                  // 188\n                                                                                                                       // 189\n    // Only forward non-Router-specific props to routing context, as those are                                         // 190\n    // the only ones that might be custom routing context props.                                                       // 191\n    Object.keys(Router.propTypes).forEach(function (propType) {                                                        // 192\n      return delete props[propType];                                                                                   // 193\n    });                                                                                                                // 194\n                                                                                                                       // 195\n    return render(_extends({}, props, {                                                                                // 196\n      history: this.history,                                                                                           // 197\n      router: this.router,                                                                                             // 198\n      location: location,                                                                                              // 199\n      routes: routes,                                                                                                  // 200\n      params: params,                                                                                                  // 201\n      components: components,                                                                                          // 202\n      createElement: createElement                                                                                     // 203\n    }));                                                                                                               // 204\n  }                                                                                                                    // 205\n                                                                                                                       // 206\n});                                                                                                                    // 207\n                                                                                                                       // 208\nexports['default'] = Router;                                                                                           // 209\nmodule.exports = exports['default'];                                                                                   // 210\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n                                                                                                                       //\n},{\"./PropTypes\":38,\"./RouteUtils\":42,\"./RouterContext\":44,\"./RouterUtils\":45,\"./createTransitionManager\":52,\"./routerWarning\":61,\"_process\":1,\"history/lib/createHashHistory\":72,\"history/lib/useQueries\":79}],44:[function(require,module,exports){\n(function (process,global){                                                                                            //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _invariant = require('invariant');                                                                                 // 9\n                                                                                                                       // 10\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 11\n                                                                                                                       // 12\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n                                                                                                                       // 14\nvar _react2 = _interopRequireDefault(_react);                                                                          // 15\n                                                                                                                       // 16\nvar _deprecateObjectProperties = require('./deprecateObjectProperties');                                               // 17\n                                                                                                                       // 18\nvar _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);                                  // 19\n                                                                                                                       // 20\nvar _getRouteParams = require('./getRouteParams');                                                                     // 21\n                                                                                                                       // 22\nvar _getRouteParams2 = _interopRequireDefault(_getRouteParams);                                                        // 23\n                                                                                                                       // 24\nvar _RouteUtils = require('./RouteUtils');                                                                             // 25\n                                                                                                                       // 26\nvar _routerWarning = require('./routerWarning');                                                                       // 27\n                                                                                                                       // 28\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);                                                          // 29\n                                                                                                                       // 30\nvar _React$PropTypes = _react2['default'].PropTypes;                                                                   // 31\nvar array = _React$PropTypes.array;                                                                                    // 32\nvar func = _React$PropTypes.func;                                                                                      // 33\nvar object = _React$PropTypes.object;                                                                                  // 34\n                                                                                                                       // 35\n/**                                                                                                                    // 36\n * A <RouterContext> renders the component tree for a given router state                                               // 37\n * and sets the history object and the current location in context.                                                    // 38\n */                                                                                                                    // 39\nvar RouterContext = _react2['default'].createClass({                                                                   // 40\n  displayName: 'RouterContext',                                                                                        // 41\n                                                                                                                       // 42\n  propTypes: {                                                                                                         // 43\n    history: object,                                                                                                   // 44\n    router: object.isRequired,                                                                                         // 45\n    location: object.isRequired,                                                                                       // 46\n    routes: array.isRequired,                                                                                          // 47\n    params: object.isRequired,                                                                                         // 48\n    components: array.isRequired,                                                                                      // 49\n    createElement: func.isRequired                                                                                     // 50\n  },                                                                                                                   // 51\n                                                                                                                       // 52\n  getDefaultProps: function getDefaultProps() {                                                                        // 53\n    return {                                                                                                           // 54\n      createElement: _react2['default'].createElement                                                                  // 55\n    };                                                                                                                 // 56\n  },                                                                                                                   // 57\n                                                                                                                       // 58\n  childContextTypes: {                                                                                                 // 59\n    history: object,                                                                                                   // 60\n    location: object.isRequired,                                                                                       // 61\n    router: object.isRequired                                                                                          // 62\n  },                                                                                                                   // 63\n                                                                                                                       // 64\n  getChildContext: function getChildContext() {                                                                        // 65\n    var _props = this.props;                                                                                           // 66\n    var router = _props.router;                                                                                        // 67\n    var history = _props.history;                                                                                      // 68\n    var location = _props.location;                                                                                    // 69\n                                                                                                                       // 70\n    if (!router) {                                                                                                     // 71\n      process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, '`<RouterContext>` expects a `router` rather than a `history`') : undefined;\n                                                                                                                       // 73\n      router = _extends({}, history, {                                                                                 // 74\n        setRouteLeaveHook: history.listenBeforeLeavingRoute                                                            // 75\n      });                                                                                                              // 76\n      delete router.listenBeforeLeavingRoute;                                                                          // 77\n    }                                                                                                                  // 78\n                                                                                                                       // 79\n    if (process.env.NODE_ENV !== 'production') {                                                                       // 80\n      location = _deprecateObjectProperties2['default'](location, '`context.location` is deprecated, please use a route component\\'s `props.location` instead. http://tiny.cc/router-accessinglocation');\n    }                                                                                                                  // 82\n                                                                                                                       // 83\n    return { history: history, location: location, router: router };                                                   // 84\n  },                                                                                                                   // 85\n                                                                                                                       // 86\n  createElement: function createElement(component, props) {                                                            // 87\n    return component == null ? null : this.props.createElement(component, props);                                      // 88\n  },                                                                                                                   // 89\n                                                                                                                       // 90\n  render: function render() {                                                                                          // 91\n    var _this = this;                                                                                                  // 92\n                                                                                                                       // 93\n    var _props2 = this.props;                                                                                          // 94\n    var history = _props2.history;                                                                                     // 95\n    var location = _props2.location;                                                                                   // 96\n    var routes = _props2.routes;                                                                                       // 97\n    var params = _props2.params;                                                                                       // 98\n    var components = _props2.components;                                                                               // 99\n                                                                                                                       // 100\n    var element = null;                                                                                                // 101\n                                                                                                                       // 102\n    if (components) {                                                                                                  // 103\n      element = components.reduceRight(function (element, components, index) {                                         // 104\n        if (components == null) return element; // Don't create new children; use the grandchildren.                   // 105\n                                                                                                                       // 106\n        var route = routes[index];                                                                                     // 107\n        var routeParams = _getRouteParams2['default'](route, params);                                                  // 108\n        var props = {                                                                                                  // 109\n          history: history,                                                                                            // 110\n          location: location,                                                                                          // 111\n          params: params,                                                                                              // 112\n          route: route,                                                                                                // 113\n          routeParams: routeParams,                                                                                    // 114\n          routes: routes                                                                                               // 115\n        };                                                                                                             // 116\n                                                                                                                       // 117\n        if (_RouteUtils.isReactChildren(element)) {                                                                    // 118\n          props.children = element;                                                                                    // 119\n        } else if (element) {                                                                                          // 120\n          for (var prop in element) {                                                                                  // 121\n            if (element.hasOwnProperty(prop)) props[prop] = element[prop];                                             // 122\n          }                                                                                                            // 123\n        }                                                                                                              // 124\n                                                                                                                       // 125\n        if (typeof components === 'object') {                                                                          // 126\n          var elements = {};                                                                                           // 127\n                                                                                                                       // 128\n          for (var key in components) {                                                                                // 129\n            if (components.hasOwnProperty(key)) {                                                                      // 130\n              // Pass through the key as a prop to createElement to allow                                              // 131\n              // custom createElement functions to know which named component                                          // 132\n              // they're rendering, for e.g. matching up to fetched data.                                              // 133\n              elements[key] = _this.createElement(components[key], _extends({                                          // 134\n                key: key }, props));                                                                                   // 135\n            }                                                                                                          // 136\n          }                                                                                                            // 137\n                                                                                                                       // 138\n          return elements;                                                                                             // 139\n        }                                                                                                              // 140\n                                                                                                                       // 141\n        return _this.createElement(components, props);                                                                 // 142\n      }, element);                                                                                                     // 143\n    }                                                                                                                  // 144\n                                                                                                                       // 145\n    !(element === null || element === false || _react2['default'].isValidElement(element)) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'The root route must render a single element') : _invariant2['default'](false) : undefined;\n                                                                                                                       // 147\n    return element;                                                                                                    // 148\n  }                                                                                                                    // 149\n                                                                                                                       // 150\n});                                                                                                                    // 151\n                                                                                                                       // 152\nexports['default'] = RouterContext;                                                                                    // 153\nmodule.exports = exports['default'];                                                                                   // 154\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n                                                                                                                       //\n},{\"./RouteUtils\":42,\"./deprecateObjectProperties\":53,\"./getRouteParams\":55,\"./routerWarning\":61,\"_process\":1,\"invariant\":85}],45:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nexports.createRouterObject = createRouterObject;                                                                       // 7\nexports.createRoutingHistory = createRoutingHistory;                                                                   // 8\n                                                                                                                       // 9\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 10\n                                                                                                                       // 11\nvar _deprecateObjectProperties = require('./deprecateObjectProperties');                                               // 12\n                                                                                                                       // 13\nvar _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);                                  // 14\n                                                                                                                       // 15\nfunction createRouterObject(history, transitionManager) {                                                              // 16\n  return _extends({}, history, {                                                                                       // 17\n    setRouteLeaveHook: transitionManager.listenBeforeLeavingRoute,                                                     // 18\n    isActive: transitionManager.isActive                                                                               // 19\n  });                                                                                                                  // 20\n}                                                                                                                      // 21\n                                                                                                                       // 22\n// deprecated                                                                                                          // 23\n                                                                                                                       // 24\nfunction createRoutingHistory(history, transitionManager) {                                                            // 25\n  history = _extends({}, history, transitionManager);                                                                  // 26\n                                                                                                                       // 27\n  if (process.env.NODE_ENV !== 'production') {                                                                         // 28\n    history = _deprecateObjectProperties2['default'](history, '`props.history` and `context.history` are deprecated. Please use `context.router`. http://tiny.cc/router-contextchanges');\n  }                                                                                                                    // 30\n                                                                                                                       // 31\n  return history;                                                                                                      // 32\n}                                                                                                                      // 33\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./deprecateObjectProperties\":53,\"_process\":1}],46:[function(require,module,exports){                               //\n(function (process,global){                                                                                            //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n                                                                                                                       // 8\nvar _react2 = _interopRequireDefault(_react);                                                                          // 9\n                                                                                                                       // 10\nvar _RouterContext = require('./RouterContext');                                                                       // 11\n                                                                                                                       // 12\nvar _RouterContext2 = _interopRequireDefault(_RouterContext);                                                          // 13\n                                                                                                                       // 14\nvar _routerWarning = require('./routerWarning');                                                                       // 15\n                                                                                                                       // 16\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);                                                          // 17\n                                                                                                                       // 18\nvar RoutingContext = _react2['default'].createClass({                                                                  // 19\n  displayName: 'RoutingContext',                                                                                       // 20\n                                                                                                                       // 21\n  componentWillMount: function componentWillMount() {                                                                  // 22\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, '`RoutingContext` has been renamed to `RouterContext`. Please use `import { RouterContext } from \\'react-router\\'`. http://tiny.cc/router-routercontext') : undefined;\n  },                                                                                                                   // 24\n                                                                                                                       // 25\n  render: function render() {                                                                                          // 26\n    return _react2['default'].createElement(_RouterContext2['default'], this.props);                                   // 27\n  }                                                                                                                    // 28\n});                                                                                                                    // 29\n                                                                                                                       // 30\nexports['default'] = RoutingContext;                                                                                   // 31\nmodule.exports = exports['default'];                                                                                   // 32\n}).call(this,require('_process'),typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n                                                                                                                       //\n},{\"./RouterContext\":44,\"./routerWarning\":61,\"_process\":1}],47:[function(require,module,exports){                      //\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\nexports.runEnterHooks = runEnterHooks;                                                                                 // 4\nexports.runLeaveHooks = runLeaveHooks;                                                                                 // 5\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _AsyncUtils = require('./AsyncUtils');                                                                             // 9\n                                                                                                                       // 10\nvar _routerWarning = require('./routerWarning');                                                                       // 11\n                                                                                                                       // 12\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);                                                          // 13\n                                                                                                                       // 14\nfunction createEnterHook(hook, route) {                                                                                // 15\n  return function (a, b, callback) {                                                                                   // 16\n    hook.apply(route, arguments);                                                                                      // 17\n                                                                                                                       // 18\n    if (hook.length < 3) {                                                                                             // 19\n      // Assume hook executes synchronously and                                                                        // 20\n      // automatically call the callback.                                                                              // 21\n      callback();                                                                                                      // 22\n    }                                                                                                                  // 23\n  };                                                                                                                   // 24\n}                                                                                                                      // 25\n                                                                                                                       // 26\nfunction getEnterHooks(routes) {                                                                                       // 27\n  return routes.reduce(function (hooks, route) {                                                                       // 28\n    if (route.onEnter) hooks.push(createEnterHook(route.onEnter, route));                                              // 29\n                                                                                                                       // 30\n    return hooks;                                                                                                      // 31\n  }, []);                                                                                                              // 32\n}                                                                                                                      // 33\n                                                                                                                       // 34\n/**                                                                                                                    // 35\n * Runs all onEnter hooks in the given array of routes in order                                                        // 36\n * with onEnter(nextState, replace, callback) and calls                                                                // 37\n * callback(error, redirectInfo) when finished. The first hook                                                         // 38\n * to use replace short-circuits the loop.                                                                             // 39\n *                                                                                                                     // 40\n * If a hook needs to run asynchronously, it may use the callback                                                      // 41\n * function. However, doing so will cause the transition to pause,                                                     // 42\n * which could lead to a non-responsive UI if the hook is slow.                                                        // 43\n */                                                                                                                    // 44\n                                                                                                                       // 45\nfunction runEnterHooks(routes, nextState, callback) {                                                                  // 46\n  var hooks = getEnterHooks(routes);                                                                                   // 47\n                                                                                                                       // 48\n  if (!hooks.length) {                                                                                                 // 49\n    callback();                                                                                                        // 50\n    return;                                                                                                            // 51\n  }                                                                                                                    // 52\n                                                                                                                       // 53\n  var redirectInfo = undefined;                                                                                        // 54\n  function replace(location, deprecatedPathname, deprecatedQuery) {                                                    // 55\n    if (deprecatedPathname) {                                                                                          // 56\n      process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, '`replaceState(state, pathname, query) is deprecated; use `replace(location)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : undefined;\n      redirectInfo = {                                                                                                 // 58\n        pathname: deprecatedPathname,                                                                                  // 59\n        query: deprecatedQuery,                                                                                        // 60\n        state: location                                                                                                // 61\n      };                                                                                                               // 62\n                                                                                                                       // 63\n      return;                                                                                                          // 64\n    }                                                                                                                  // 65\n                                                                                                                       // 66\n    redirectInfo = location;                                                                                           // 67\n  }                                                                                                                    // 68\n                                                                                                                       // 69\n  _AsyncUtils.loopAsync(hooks.length, function (index, next, done) {                                                   // 70\n    hooks[index](nextState, replace, function (error) {                                                                // 71\n      if (error || redirectInfo) {                                                                                     // 72\n        done(error, redirectInfo); // No need to continue.                                                             // 73\n      } else {                                                                                                         // 74\n          next();                                                                                                      // 75\n        }                                                                                                              // 76\n    });                                                                                                                // 77\n  }, callback);                                                                                                        // 78\n}                                                                                                                      // 79\n                                                                                                                       // 80\n/**                                                                                                                    // 81\n * Runs all onLeave hooks in the given array of routes in order.                                                       // 82\n */                                                                                                                    // 83\n                                                                                                                       // 84\nfunction runLeaveHooks(routes) {                                                                                       // 85\n  for (var i = 0, len = routes.length; i < len; ++i) {                                                                 // 86\n    if (routes[i].onLeave) routes[i].onLeave.call(routes[i]);                                                          // 87\n  }                                                                                                                    // 88\n}                                                                                                                      // 89\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./AsyncUtils\":30,\"./routerWarning\":61,\"_process\":1}],48:[function(require,module,exports){                         //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _historyLibCreateBrowserHistory = require('history/lib/createBrowserHistory');                                     // 7\n                                                                                                                       // 8\nvar _historyLibCreateBrowserHistory2 = _interopRequireDefault(_historyLibCreateBrowserHistory);                        // 9\n                                                                                                                       // 10\nvar _createRouterHistory = require('./createRouterHistory');                                                           // 11\n                                                                                                                       // 12\nvar _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);                                              // 13\n                                                                                                                       // 14\nexports['default'] = _createRouterHistory2['default'](_historyLibCreateBrowserHistory2['default']);                    // 15\nmodule.exports = exports['default'];                                                                                   // 16\n},{\"./createRouterHistory\":51,\"history/lib/createBrowserHistory\":70}],49:[function(require,module,exports){            //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _PatternUtils = require('./PatternUtils');                                                                         // 5\n                                                                                                                       // 6\nfunction routeParamsChanged(route, prevState, nextState) {                                                             // 7\n  if (!route.path) return false;                                                                                       // 8\n                                                                                                                       // 9\n  var paramNames = _PatternUtils.getParamNames(route.path);                                                            // 10\n                                                                                                                       // 11\n  return paramNames.some(function (paramName) {                                                                        // 12\n    return prevState.params[paramName] !== nextState.params[paramName];                                                // 13\n  });                                                                                                                  // 14\n}                                                                                                                      // 15\n                                                                                                                       // 16\n/**                                                                                                                    // 17\n * Returns an object of { leaveRoutes, enterRoutes } determined by                                                     // 18\n * the change from prevState to nextState. We leave routes if either                                                   // 19\n * 1) they are not in the next state or 2) they are in the next state                                                  // 20\n * but their params have changed (i.e. /users/123 => /users/456).                                                      // 21\n *                                                                                                                     // 22\n * leaveRoutes are ordered starting at the leaf route of the tree                                                      // 23\n * we're leaving up to the common parent route. enterRoutes are ordered                                                // 24\n * from the top of the tree we're entering down to the leaf route.                                                     // 25\n */                                                                                                                    // 26\nfunction computeChangedRoutes(prevState, nextState) {                                                                  // 27\n  var prevRoutes = prevState && prevState.routes;                                                                      // 28\n  var nextRoutes = nextState.routes;                                                                                   // 29\n                                                                                                                       // 30\n  var leaveRoutes = undefined,                                                                                         // 31\n      enterRoutes = undefined;                                                                                         // 32\n  if (prevRoutes) {                                                                                                    // 33\n    leaveRoutes = prevRoutes.filter(function (route) {                                                                 // 34\n      return nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);                      // 35\n    });                                                                                                                // 36\n                                                                                                                       // 37\n    // onLeave hooks start at the leaf route.                                                                          // 38\n    leaveRoutes.reverse();                                                                                             // 39\n                                                                                                                       // 40\n    enterRoutes = nextRoutes.filter(function (route) {                                                                 // 41\n      return prevRoutes.indexOf(route) === -1 || leaveRoutes.indexOf(route) !== -1;                                    // 42\n    });                                                                                                                // 43\n  } else {                                                                                                             // 44\n    leaveRoutes = [];                                                                                                  // 45\n    enterRoutes = nextRoutes;                                                                                          // 46\n  }                                                                                                                    // 47\n                                                                                                                       // 48\n  return {                                                                                                             // 49\n    leaveRoutes: leaveRoutes,                                                                                          // 50\n    enterRoutes: enterRoutes                                                                                           // 51\n  };                                                                                                                   // 52\n}                                                                                                                      // 53\n                                                                                                                       // 54\nexports['default'] = computeChangedRoutes;                                                                             // 55\nmodule.exports = exports['default'];                                                                                   // 56\n},{\"./PatternUtils\":37}],50:[function(require,module,exports){                                                         //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\nexports['default'] = createMemoryHistory;                                                                              // 4\n                                                                                                                       // 5\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 6\n                                                                                                                       // 7\nvar _historyLibUseQueries = require('history/lib/useQueries');                                                         // 8\n                                                                                                                       // 9\nvar _historyLibUseQueries2 = _interopRequireDefault(_historyLibUseQueries);                                            // 10\n                                                                                                                       // 11\nvar _historyLibUseBasename = require('history/lib/useBasename');                                                       // 12\n                                                                                                                       // 13\nvar _historyLibUseBasename2 = _interopRequireDefault(_historyLibUseBasename);                                          // 14\n                                                                                                                       // 15\nvar _historyLibCreateMemoryHistory = require('history/lib/createMemoryHistory');                                       // 16\n                                                                                                                       // 17\nvar _historyLibCreateMemoryHistory2 = _interopRequireDefault(_historyLibCreateMemoryHistory);                          // 18\n                                                                                                                       // 19\nfunction createMemoryHistory(options) {                                                                                // 20\n  // signatures and type checking differ between `useRoutes` and                                                       // 21\n  // `createMemoryHistory`, have to create `memoryHistory` first because                                               // 22\n  // `useQueries` doesn't understand the signature                                                                     // 23\n  var memoryHistory = _historyLibCreateMemoryHistory2['default'](options);                                             // 24\n  var createHistory = function createHistory() {                                                                       // 25\n    return memoryHistory;                                                                                              // 26\n  };                                                                                                                   // 27\n  var history = _historyLibUseQueries2['default'](_historyLibUseBasename2['default'](createHistory))(options);         // 28\n  history.__v2_compatible__ = true;                                                                                    // 29\n  return history;                                                                                                      // 30\n}                                                                                                                      // 31\n                                                                                                                       // 32\nmodule.exports = exports['default'];                                                                                   // 33\n},{\"history/lib/createMemoryHistory\":75,\"history/lib/useBasename\":78,\"history/lib/useQueries\":79}],51:[function(require,module,exports){\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _useRouterHistory = require('./useRouterHistory');                                                                 // 7\n                                                                                                                       // 8\nvar _useRouterHistory2 = _interopRequireDefault(_useRouterHistory);                                                    // 9\n                                                                                                                       // 10\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);                 // 11\n                                                                                                                       // 12\nexports['default'] = function (createHistory) {                                                                        // 13\n  var history = undefined;                                                                                             // 14\n  if (canUseDOM) history = _useRouterHistory2['default'](createHistory)();                                             // 15\n  return history;                                                                                                      // 16\n};                                                                                                                     // 17\n                                                                                                                       // 18\nmodule.exports = exports['default'];                                                                                   // 19\n},{\"./useRouterHistory\":62}],52:[function(require,module,exports){                                                     //\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nexports['default'] = createTransitionManager;                                                                          // 7\n                                                                                                                       // 8\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 9\n                                                                                                                       // 10\nvar _routerWarning = require('./routerWarning');                                                                       // 11\n                                                                                                                       // 12\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);                                                          // 13\n                                                                                                                       // 14\nvar _historyLibActions = require('history/lib/Actions');                                                               // 15\n                                                                                                                       // 16\nvar _computeChangedRoutes2 = require('./computeChangedRoutes');                                                        // 17\n                                                                                                                       // 18\nvar _computeChangedRoutes3 = _interopRequireDefault(_computeChangedRoutes2);                                           // 19\n                                                                                                                       // 20\nvar _TransitionUtils = require('./TransitionUtils');                                                                   // 21\n                                                                                                                       // 22\nvar _isActive2 = require('./isActive');                                                                                // 23\n                                                                                                                       // 24\nvar _isActive3 = _interopRequireDefault(_isActive2);                                                                   // 25\n                                                                                                                       // 26\nvar _getComponents = require('./getComponents');                                                                       // 27\n                                                                                                                       // 28\nvar _getComponents2 = _interopRequireDefault(_getComponents);                                                          // 29\n                                                                                                                       // 30\nvar _matchRoutes = require('./matchRoutes');                                                                           // 31\n                                                                                                                       // 32\nvar _matchRoutes2 = _interopRequireDefault(_matchRoutes);                                                              // 33\n                                                                                                                       // 34\nfunction hasAnyProperties(object) {                                                                                    // 35\n  for (var p in object) {                                                                                              // 36\n    if (object.hasOwnProperty(p)) return true;                                                                         // 37\n  }return false;                                                                                                       // 38\n}                                                                                                                      // 39\n                                                                                                                       // 40\nfunction createTransitionManager(history, routes) {                                                                    // 41\n  var state = {};                                                                                                      // 42\n                                                                                                                       // 43\n  // Signature should be (location, indexOnly), but needs to support (path,                                            // 44\n  // query, indexOnly)                                                                                                 // 45\n  function isActive(location) {                                                                                        // 46\n    var indexOnlyOrDeprecatedQuery = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];       // 47\n    var deprecatedIndexOnly = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];               // 48\n                                                                                                                       // 49\n    var indexOnly = undefined;                                                                                         // 50\n    if (indexOnlyOrDeprecatedQuery && indexOnlyOrDeprecatedQuery !== true || deprecatedIndexOnly !== null) {           // 51\n      process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, '`isActive(pathname, query, indexOnly) is deprecated; use `isActive(location, indexOnly)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : undefined;\n      location = { pathname: location, query: indexOnlyOrDeprecatedQuery };                                            // 53\n      indexOnly = deprecatedIndexOnly || false;                                                                        // 54\n    } else {                                                                                                           // 55\n      location = history.createLocation(location);                                                                     // 56\n      indexOnly = indexOnlyOrDeprecatedQuery;                                                                          // 57\n    }                                                                                                                  // 58\n                                                                                                                       // 59\n    return _isActive3['default'](location, indexOnly, state.location, state.routes, state.params);                     // 60\n  }                                                                                                                    // 61\n                                                                                                                       // 62\n  function createLocationFromRedirectInfo(location) {                                                                  // 63\n    return history.createLocation(location, _historyLibActions.REPLACE);                                               // 64\n  }                                                                                                                    // 65\n                                                                                                                       // 66\n  var partialNextState = undefined;                                                                                    // 67\n                                                                                                                       // 68\n  function match(location, callback) {                                                                                 // 69\n    if (partialNextState && partialNextState.location === location) {                                                  // 70\n      // Continue from where we left off.                                                                              // 71\n      finishMatch(partialNextState, callback);                                                                         // 72\n    } else {                                                                                                           // 73\n      _matchRoutes2['default'](routes, location, function (error, nextState) {                                         // 74\n        if (error) {                                                                                                   // 75\n          callback(error);                                                                                             // 76\n        } else if (nextState) {                                                                                        // 77\n          finishMatch(_extends({}, nextState, { location: location }), callback);                                      // 78\n        } else {                                                                                                       // 79\n          callback();                                                                                                  // 80\n        }                                                                                                              // 81\n      });                                                                                                              // 82\n    }                                                                                                                  // 83\n  }                                                                                                                    // 84\n                                                                                                                       // 85\n  function finishMatch(nextState, callback) {                                                                          // 86\n    var _computeChangedRoutes = _computeChangedRoutes3['default'](state, nextState);                                   // 87\n                                                                                                                       // 88\n    var leaveRoutes = _computeChangedRoutes.leaveRoutes;                                                               // 89\n    var enterRoutes = _computeChangedRoutes.enterRoutes;                                                               // 90\n                                                                                                                       // 91\n    _TransitionUtils.runLeaveHooks(leaveRoutes);                                                                       // 92\n                                                                                                                       // 93\n    // Tear down confirmation hooks for left routes                                                                    // 94\n    leaveRoutes.forEach(removeListenBeforeHooksForRoute);                                                              // 95\n                                                                                                                       // 96\n    _TransitionUtils.runEnterHooks(enterRoutes, nextState, function (error, redirectInfo) {                            // 97\n      if (error) {                                                                                                     // 98\n        callback(error);                                                                                               // 99\n      } else if (redirectInfo) {                                                                                       // 100\n        callback(null, createLocationFromRedirectInfo(redirectInfo));                                                  // 101\n      } else {                                                                                                         // 102\n        // TODO: Fetch components after state is updated.                                                              // 103\n        _getComponents2['default'](nextState, function (error, components) {                                           // 104\n          if (error) {                                                                                                 // 105\n            callback(error);                                                                                           // 106\n          } else {                                                                                                     // 107\n            // TODO: Make match a pure function and have some other API                                                // 108\n            // for \"match and update state\".                                                                           // 109\n            callback(null, null, state = _extends({}, nextState, { components: components }));                         // 110\n          }                                                                                                            // 111\n        });                                                                                                            // 112\n      }                                                                                                                // 113\n    });                                                                                                                // 114\n  }                                                                                                                    // 115\n                                                                                                                       // 116\n  var RouteGuid = 1;                                                                                                   // 117\n                                                                                                                       // 118\n  function getRouteID(route) {                                                                                         // 119\n    var create = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];                            // 120\n                                                                                                                       // 121\n    return route.__id__ || create && (route.__id__ = RouteGuid++);                                                     // 122\n  }                                                                                                                    // 123\n                                                                                                                       // 124\n  var RouteHooks = {};                                                                                                 // 125\n                                                                                                                       // 126\n  function getRouteHooksForRoutes(routes) {                                                                            // 127\n    return routes.reduce(function (hooks, route) {                                                                     // 128\n      hooks.push.apply(hooks, RouteHooks[getRouteID(route)]);                                                          // 129\n      return hooks;                                                                                                    // 130\n    }, []);                                                                                                            // 131\n  }                                                                                                                    // 132\n                                                                                                                       // 133\n  function transitionHook(location, callback) {                                                                        // 134\n    _matchRoutes2['default'](routes, location, function (error, nextState) {                                           // 135\n      if (nextState == null) {                                                                                         // 136\n        // TODO: We didn't actually match anything, but hang                                                           // 137\n        // onto error/nextState so we don't have to matchRoutes                                                        // 138\n        // again in the listen callback.                                                                               // 139\n        callback();                                                                                                    // 140\n        return;                                                                                                        // 141\n      }                                                                                                                // 142\n                                                                                                                       // 143\n      // Cache some state here so we don't have to                                                                     // 144\n      // matchRoutes() again in the listen callback.                                                                   // 145\n      partialNextState = _extends({}, nextState, { location: location });                                              // 146\n                                                                                                                       // 147\n      var hooks = getRouteHooksForRoutes(_computeChangedRoutes3['default'](state, partialNextState).leaveRoutes);      // 148\n                                                                                                                       // 149\n      var result = undefined;                                                                                          // 150\n      for (var i = 0, len = hooks.length; result == null && i < len; ++i) {                                            // 151\n        // Passing the location arg here indicates to                                                                  // 152\n        // the user that this is a transition hook.                                                                    // 153\n        result = hooks[i](location);                                                                                   // 154\n      }                                                                                                                // 155\n                                                                                                                       // 156\n      callback(result);                                                                                                // 157\n    });                                                                                                                // 158\n  }                                                                                                                    // 159\n                                                                                                                       // 160\n  /* istanbul ignore next: untestable with Karma */                                                                    // 161\n  function beforeUnloadHook() {                                                                                        // 162\n    // Synchronously check to see if any route hooks want                                                              // 163\n    // to prevent the current window/tab from closing.                                                                 // 164\n    if (state.routes) {                                                                                                // 165\n      var hooks = getRouteHooksForRoutes(state.routes);                                                                // 166\n                                                                                                                       // 167\n      var message = undefined;                                                                                         // 168\n      for (var i = 0, len = hooks.length; typeof message !== 'string' && i < len; ++i) {                               // 169\n        // Passing no args indicates to the user that this is a                                                        // 170\n        // beforeunload hook. We don't know the next location.                                                         // 171\n        message = hooks[i]();                                                                                          // 172\n      }                                                                                                                // 173\n                                                                                                                       // 174\n      return message;                                                                                                  // 175\n    }                                                                                                                  // 176\n  }                                                                                                                    // 177\n                                                                                                                       // 178\n  var unlistenBefore = undefined,                                                                                      // 179\n      unlistenBeforeUnload = undefined;                                                                                // 180\n                                                                                                                       // 181\n  function removeListenBeforeHooksForRoute(route) {                                                                    // 182\n    var routeID = getRouteID(route, false);                                                                            // 183\n    if (!routeID) {                                                                                                    // 184\n      return;                                                                                                          // 185\n    }                                                                                                                  // 186\n                                                                                                                       // 187\n    delete RouteHooks[routeID];                                                                                        // 188\n                                                                                                                       // 189\n    if (!hasAnyProperties(RouteHooks)) {                                                                               // 190\n      // teardown transition & beforeunload hooks                                                                      // 191\n      if (unlistenBefore) {                                                                                            // 192\n        unlistenBefore();                                                                                              // 193\n        unlistenBefore = null;                                                                                         // 194\n      }                                                                                                                // 195\n                                                                                                                       // 196\n      if (unlistenBeforeUnload) {                                                                                      // 197\n        unlistenBeforeUnload();                                                                                        // 198\n        unlistenBeforeUnload = null;                                                                                   // 199\n      }                                                                                                                // 200\n    }                                                                                                                  // 201\n  }                                                                                                                    // 202\n                                                                                                                       // 203\n  /**                                                                                                                  // 204\n   * Registers the given hook function to run before leaving the given route.                                          // 205\n   *                                                                                                                   // 206\n   * During a normal transition, the hook function receives the next location                                          // 207\n   * as its only argument and must return either a) a prompt message to show                                           // 208\n   * the user, to make sure they want to leave the page or b) false, to prevent                                        // 209\n   * the transition.                                                                                                   // 210\n   *                                                                                                                   // 211\n   * During the beforeunload event (in browsers) the hook receives no arguments.                                       // 212\n   * In this case it must return a prompt message to prevent the transition.                                           // 213\n   *                                                                                                                   // 214\n   * Returns a function that may be used to unbind the listener.                                                       // 215\n   */                                                                                                                  // 216\n  function listenBeforeLeavingRoute(route, hook) {                                                                     // 217\n    // TODO: Warn if they register for a route that isn't currently                                                    // 218\n    // active. They're probably doing something wrong, like re-creating                                                // 219\n    // route objects on every location change.                                                                         // 220\n    var routeID = getRouteID(route);                                                                                   // 221\n    var hooks = RouteHooks[routeID];                                                                                   // 222\n                                                                                                                       // 223\n    if (!hooks) {                                                                                                      // 224\n      var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);                                                       // 225\n                                                                                                                       // 226\n      RouteHooks[routeID] = [hook];                                                                                    // 227\n                                                                                                                       // 228\n      if (thereWereNoRouteHooks) {                                                                                     // 229\n        // setup transition & beforeunload hooks                                                                       // 230\n        unlistenBefore = history.listenBefore(transitionHook);                                                         // 231\n                                                                                                                       // 232\n        if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);           // 233\n      }                                                                                                                // 234\n    } else {                                                                                                           // 235\n      if (hooks.indexOf(hook) === -1) {                                                                                // 236\n        process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'adding multiple leave hooks for the same route is deprecated; manage multiple confirmations in your own code instead') : undefined;\n                                                                                                                       // 238\n        hooks.push(hook);                                                                                              // 239\n      }                                                                                                                // 240\n    }                                                                                                                  // 241\n                                                                                                                       // 242\n    return function () {                                                                                               // 243\n      var hooks = RouteHooks[routeID];                                                                                 // 244\n                                                                                                                       // 245\n      if (hooks) {                                                                                                     // 246\n        var newHooks = hooks.filter(function (item) {                                                                  // 247\n          return item !== hook;                                                                                        // 248\n        });                                                                                                            // 249\n                                                                                                                       // 250\n        if (newHooks.length === 0) {                                                                                   // 251\n          removeListenBeforeHooksForRoute(route);                                                                      // 252\n        } else {                                                                                                       // 253\n          RouteHooks[routeID] = newHooks;                                                                              // 254\n        }                                                                                                              // 255\n      }                                                                                                                // 256\n    };                                                                                                                 // 257\n  }                                                                                                                    // 258\n                                                                                                                       // 259\n  /**                                                                                                                  // 260\n   * This is the API for stateful environments. As the location                                                        // 261\n   * changes, we update state and call the listener. We can also                                                       // 262\n   * gracefully handle errors and redirects.                                                                           // 263\n   */                                                                                                                  // 264\n  function listen(listener) {                                                                                          // 265\n    // TODO: Only use a single history listener. Otherwise we'll                                                       // 266\n    // end up with multiple concurrent calls to match.                                                                 // 267\n    return history.listen(function (location) {                                                                        // 268\n      if (state.location === location) {                                                                               // 269\n        listener(null, state);                                                                                         // 270\n      } else {                                                                                                         // 271\n        match(location, function (error, redirectLocation, nextState) {                                                // 272\n          if (error) {                                                                                                 // 273\n            listener(error);                                                                                           // 274\n          } else if (redirectLocation) {                                                                               // 275\n            history.transitionTo(redirectLocation);                                                                    // 276\n          } else if (nextState) {                                                                                      // 277\n            listener(null, nextState);                                                                                 // 278\n          } else {                                                                                                     // 279\n            process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'Location \"%s\" did not match any routes', location.pathname + location.search + location.hash) : undefined;\n          }                                                                                                            // 281\n        });                                                                                                            // 282\n      }                                                                                                                // 283\n    });                                                                                                                // 284\n  }                                                                                                                    // 285\n                                                                                                                       // 286\n  return {                                                                                                             // 287\n    isActive: isActive,                                                                                                // 288\n    match: match,                                                                                                      // 289\n    listenBeforeLeavingRoute: listenBeforeLeavingRoute,                                                                // 290\n    listen: listen                                                                                                     // 291\n  };                                                                                                                   // 292\n}                                                                                                                      // 293\n                                                                                                                       // 294\n//export default useRoutes                                                                                             // 295\nmodule.exports = exports['default'];                                                                                   // 296\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./TransitionUtils\":47,\"./computeChangedRoutes\":49,\"./getComponents\":54,\"./isActive\":58,\"./matchRoutes\":60,\"./routerWarning\":61,\"_process\":1,\"history/lib/Actions\":64}],53:[function(require,module,exports){\n(function (process){                                                                                                   //\n/*eslint no-empty: 0*/                                                                                                 // 1\n'use strict';                                                                                                          // 2\n                                                                                                                       // 3\nexports.__esModule = true;                                                                                             // 4\nexports['default'] = deprecateObjectProperties;                                                                        // 5\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _routerWarning = require('./routerWarning');                                                                       // 9\n                                                                                                                       // 10\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);                                                          // 11\n                                                                                                                       // 12\nvar useMembrane = false;                                                                                               // 13\n                                                                                                                       // 14\nif (process.env.NODE_ENV !== 'production') {                                                                           // 15\n  try {                                                                                                                // 16\n    if (Object.defineProperty({}, 'x', { get: function get() {                                                         // 17\n        return true;                                                                                                   // 18\n      } }).x) {                                                                                                        // 19\n      useMembrane = true;                                                                                              // 20\n    }                                                                                                                  // 21\n  } catch (e) {}                                                                                                       // 22\n}                                                                                                                      // 23\n                                                                                                                       // 24\n// wraps an object in a membrane to warn about deprecated property access                                              // 25\n                                                                                                                       // 26\nfunction deprecateObjectProperties(object, message) {                                                                  // 27\n  if (!useMembrane) return object;                                                                                     // 28\n                                                                                                                       // 29\n  var membrane = {};                                                                                                   // 30\n                                                                                                                       // 31\n  var _loop = function (prop) {                                                                                        // 32\n    if (typeof object[prop] === 'function') {                                                                          // 33\n      membrane[prop] = function () {                                                                                   // 34\n        process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, message) : undefined;                // 35\n        return object[prop].apply(object, arguments);                                                                  // 36\n      };                                                                                                               // 37\n    } else {                                                                                                           // 38\n      Object.defineProperty(membrane, prop, {                                                                          // 39\n        configurable: false,                                                                                           // 40\n        enumerable: false,                                                                                             // 41\n        get: function get() {                                                                                          // 42\n          process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, message) : undefined;              // 43\n          return object[prop];                                                                                         // 44\n        }                                                                                                              // 45\n      });                                                                                                              // 46\n    }                                                                                                                  // 47\n  };                                                                                                                   // 48\n                                                                                                                       // 49\n  for (var prop in object) {                                                                                           // 50\n    _loop(prop);                                                                                                       // 51\n  }                                                                                                                    // 52\n                                                                                                                       // 53\n  return membrane;                                                                                                     // 54\n}                                                                                                                      // 55\n                                                                                                                       // 56\nmodule.exports = exports['default'];                                                                                   // 57\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./routerWarning\":61,\"_process\":1}],54:[function(require,module,exports){                                           //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _AsyncUtils = require('./AsyncUtils');                                                                             // 5\n                                                                                                                       // 6\nfunction getComponentsForRoute(location, route, callback) {                                                            // 7\n  if (route.component || route.components) {                                                                           // 8\n    callback(null, route.component || route.components);                                                               // 9\n  } else if (route.getComponent) {                                                                                     // 10\n    route.getComponent(location, callback);                                                                            // 11\n  } else if (route.getComponents) {                                                                                    // 12\n    route.getComponents(location, callback);                                                                           // 13\n  } else {                                                                                                             // 14\n    callback();                                                                                                        // 15\n  }                                                                                                                    // 16\n}                                                                                                                      // 17\n                                                                                                                       // 18\n/**                                                                                                                    // 19\n * Asynchronously fetches all components needed for the given router                                                   // 20\n * state and calls callback(error, components) when finished.                                                          // 21\n *                                                                                                                     // 22\n * Note: This operation may finish synchronously if no routes have an                                                  // 23\n * asynchronous getComponents method.                                                                                  // 24\n */                                                                                                                    // 25\nfunction getComponents(nextState, callback) {                                                                          // 26\n  _AsyncUtils.mapAsync(nextState.routes, function (route, index, callback) {                                           // 27\n    getComponentsForRoute(nextState.location, route, callback);                                                        // 28\n  }, callback);                                                                                                        // 29\n}                                                                                                                      // 30\n                                                                                                                       // 31\nexports['default'] = getComponents;                                                                                    // 32\nmodule.exports = exports['default'];                                                                                   // 33\n},{\"./AsyncUtils\":30}],55:[function(require,module,exports){                                                           //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _PatternUtils = require('./PatternUtils');                                                                         // 5\n                                                                                                                       // 6\n/**                                                                                                                    // 7\n * Extracts an object of params the given route cares about from                                                       // 8\n * the given params object.                                                                                            // 9\n */                                                                                                                    // 10\nfunction getRouteParams(route, params) {                                                                               // 11\n  var routeParams = {};                                                                                                // 12\n                                                                                                                       // 13\n  if (!route.path) return routeParams;                                                                                 // 14\n                                                                                                                       // 15\n  var paramNames = _PatternUtils.getParamNames(route.path);                                                            // 16\n                                                                                                                       // 17\n  for (var p in params) {                                                                                              // 18\n    if (params.hasOwnProperty(p) && paramNames.indexOf(p) !== -1) routeParams[p] = params[p];                          // 19\n  }return routeParams;                                                                                                 // 20\n}                                                                                                                      // 21\n                                                                                                                       // 22\nexports['default'] = getRouteParams;                                                                                   // 23\nmodule.exports = exports['default'];                                                                                   // 24\n},{\"./PatternUtils\":37}],56:[function(require,module,exports){                                                         //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _historyLibCreateHashHistory = require('history/lib/createHashHistory');                                           // 7\n                                                                                                                       // 8\nvar _historyLibCreateHashHistory2 = _interopRequireDefault(_historyLibCreateHashHistory);                              // 9\n                                                                                                                       // 10\nvar _createRouterHistory = require('./createRouterHistory');                                                           // 11\n                                                                                                                       // 12\nvar _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);                                              // 13\n                                                                                                                       // 14\nexports['default'] = _createRouterHistory2['default'](_historyLibCreateHashHistory2['default']);                       // 15\nmodule.exports = exports['default'];                                                                                   // 16\n},{\"./createRouterHistory\":51,\"history/lib/createHashHistory\":72}],57:[function(require,module,exports){               //\n/* components */                                                                                                       // 1\n'use strict';                                                                                                          // 2\n                                                                                                                       // 3\nexports.__esModule = true;                                                                                             // 4\n                                                                                                                       // 5\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 6\n                                                                                                                       // 7\nvar _Router2 = require('./Router');                                                                                    // 8\n                                                                                                                       // 9\nvar _Router3 = _interopRequireDefault(_Router2);                                                                       // 10\n                                                                                                                       // 11\nexports.Router = _Router3['default'];                                                                                  // 12\n                                                                                                                       // 13\nvar _Link2 = require('./Link');                                                                                        // 14\n                                                                                                                       // 15\nvar _Link3 = _interopRequireDefault(_Link2);                                                                           // 16\n                                                                                                                       // 17\nexports.Link = _Link3['default'];                                                                                      // 18\n                                                                                                                       // 19\nvar _IndexLink2 = require('./IndexLink');                                                                              // 20\n                                                                                                                       // 21\nvar _IndexLink3 = _interopRequireDefault(_IndexLink2);                                                                 // 22\n                                                                                                                       // 23\nexports.IndexLink = _IndexLink3['default'];                                                                            // 24\n                                                                                                                       // 25\n/* components (configuration) */                                                                                       // 26\n                                                                                                                       // 27\nvar _IndexRedirect2 = require('./IndexRedirect');                                                                      // 28\n                                                                                                                       // 29\nvar _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);                                                         // 30\n                                                                                                                       // 31\nexports.IndexRedirect = _IndexRedirect3['default'];                                                                    // 32\n                                                                                                                       // 33\nvar _IndexRoute2 = require('./IndexRoute');                                                                            // 34\n                                                                                                                       // 35\nvar _IndexRoute3 = _interopRequireDefault(_IndexRoute2);                                                               // 36\n                                                                                                                       // 37\nexports.IndexRoute = _IndexRoute3['default'];                                                                          // 38\n                                                                                                                       // 39\nvar _Redirect2 = require('./Redirect');                                                                                // 40\n                                                                                                                       // 41\nvar _Redirect3 = _interopRequireDefault(_Redirect2);                                                                   // 42\n                                                                                                                       // 43\nexports.Redirect = _Redirect3['default'];                                                                              // 44\n                                                                                                                       // 45\nvar _Route2 = require('./Route');                                                                                      // 46\n                                                                                                                       // 47\nvar _Route3 = _interopRequireDefault(_Route2);                                                                         // 48\n                                                                                                                       // 49\nexports.Route = _Route3['default'];                                                                                    // 50\n                                                                                                                       // 51\n/* mixins */                                                                                                           // 52\n                                                                                                                       // 53\nvar _History2 = require('./History');                                                                                  // 54\n                                                                                                                       // 55\nvar _History3 = _interopRequireDefault(_History2);                                                                     // 56\n                                                                                                                       // 57\nexports.History = _History3['default'];                                                                                // 58\n                                                                                                                       // 59\nvar _Lifecycle2 = require('./Lifecycle');                                                                              // 60\n                                                                                                                       // 61\nvar _Lifecycle3 = _interopRequireDefault(_Lifecycle2);                                                                 // 62\n                                                                                                                       // 63\nexports.Lifecycle = _Lifecycle3['default'];                                                                            // 64\n                                                                                                                       // 65\nvar _RouteContext2 = require('./RouteContext');                                                                        // 66\n                                                                                                                       // 67\nvar _RouteContext3 = _interopRequireDefault(_RouteContext2);                                                           // 68\n                                                                                                                       // 69\nexports.RouteContext = _RouteContext3['default'];                                                                      // 70\n                                                                                                                       // 71\n/* utils */                                                                                                            // 72\n                                                                                                                       // 73\nvar _useRoutes2 = require('./useRoutes');                                                                              // 74\n                                                                                                                       // 75\nvar _useRoutes3 = _interopRequireDefault(_useRoutes2);                                                                 // 76\n                                                                                                                       // 77\nexports.useRoutes = _useRoutes3['default'];                                                                            // 78\n                                                                                                                       // 79\nvar _RouteUtils = require('./RouteUtils');                                                                             // 80\n                                                                                                                       // 81\nexports.createRoutes = _RouteUtils.createRoutes;                                                                       // 82\n                                                                                                                       // 83\nvar _RouterContext2 = require('./RouterContext');                                                                      // 84\n                                                                                                                       // 85\nvar _RouterContext3 = _interopRequireDefault(_RouterContext2);                                                         // 86\n                                                                                                                       // 87\nexports.RouterContext = _RouterContext3['default'];                                                                    // 88\n                                                                                                                       // 89\nvar _RoutingContext2 = require('./RoutingContext');                                                                    // 90\n                                                                                                                       // 91\nvar _RoutingContext3 = _interopRequireDefault(_RoutingContext2);                                                       // 92\n                                                                                                                       // 93\nexports.RoutingContext = _RoutingContext3['default'];                                                                  // 94\n                                                                                                                       // 95\nvar _PropTypes2 = require('./PropTypes');                                                                              // 96\n                                                                                                                       // 97\nvar _PropTypes3 = _interopRequireDefault(_PropTypes2);                                                                 // 98\n                                                                                                                       // 99\nexports.PropTypes = _PropTypes3['default'];                                                                            // 100\n                                                                                                                       // 101\nvar _match2 = require('./match');                                                                                      // 102\n                                                                                                                       // 103\nvar _match3 = _interopRequireDefault(_match2);                                                                         // 104\n                                                                                                                       // 105\nexports.match = _match3['default'];                                                                                    // 106\n                                                                                                                       // 107\nvar _useRouterHistory2 = require('./useRouterHistory');                                                                // 108\n                                                                                                                       // 109\nvar _useRouterHistory3 = _interopRequireDefault(_useRouterHistory2);                                                   // 110\n                                                                                                                       // 111\nexports.useRouterHistory = _useRouterHistory3['default'];                                                              // 112\n                                                                                                                       // 113\nvar _PatternUtils = require('./PatternUtils');                                                                         // 114\n                                                                                                                       // 115\nexports.formatPattern = _PatternUtils.formatPattern;                                                                   // 116\n                                                                                                                       // 117\n/* histories */                                                                                                        // 118\n                                                                                                                       // 119\nvar _browserHistory2 = require('./browserHistory');                                                                    // 120\n                                                                                                                       // 121\nvar _browserHistory3 = _interopRequireDefault(_browserHistory2);                                                       // 122\n                                                                                                                       // 123\nexports.browserHistory = _browserHistory3['default'];                                                                  // 124\n                                                                                                                       // 125\nvar _hashHistory2 = require('./hashHistory');                                                                          // 126\n                                                                                                                       // 127\nvar _hashHistory3 = _interopRequireDefault(_hashHistory2);                                                             // 128\n                                                                                                                       // 129\nexports.hashHistory = _hashHistory3['default'];                                                                        // 130\n                                                                                                                       // 131\nvar _createMemoryHistory2 = require('./createMemoryHistory');                                                          // 132\n                                                                                                                       // 133\nvar _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);                                             // 134\n                                                                                                                       // 135\nexports.createMemoryHistory = _createMemoryHistory3['default'];                                                        // 136\n},{\"./History\":31,\"./IndexLink\":32,\"./IndexRedirect\":33,\"./IndexRoute\":34,\"./Lifecycle\":35,\"./Link\":36,\"./PatternUtils\":37,\"./PropTypes\":38,\"./Redirect\":39,\"./Route\":40,\"./RouteContext\":41,\"./RouteUtils\":42,\"./Router\":43,\"./RouterContext\":44,\"./RoutingContext\":46,\"./browserHistory\":48,\"./createMemoryHistory\":50,\"./hashHistory\":56,\"./match\":59,\"./useRouterHistory\":62,\"./useRoutes\":63}],58:[function(require,module,exports){\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\nexports['default'] = isActive;                                                                                         // 4\n                                                                                                                       // 5\nvar _PatternUtils = require('./PatternUtils');                                                                         // 6\n                                                                                                                       // 7\nfunction deepEqual(a, b) {                                                                                             // 8\n  if (a == b) return true;                                                                                             // 9\n                                                                                                                       // 10\n  if (a == null || b == null) return false;                                                                            // 11\n                                                                                                                       // 12\n  if (Array.isArray(a)) {                                                                                              // 13\n    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {                               // 14\n      return deepEqual(item, b[index]);                                                                                // 15\n    });                                                                                                                // 16\n  }                                                                                                                    // 17\n                                                                                                                       // 18\n  if (typeof a === 'object') {                                                                                         // 19\n    for (var p in a) {                                                                                                 // 20\n      if (!a.hasOwnProperty(p)) {                                                                                      // 21\n        continue;                                                                                                      // 22\n      }                                                                                                                // 23\n                                                                                                                       // 24\n      if (a[p] === undefined) {                                                                                        // 25\n        if (b[p] !== undefined) {                                                                                      // 26\n          return false;                                                                                                // 27\n        }                                                                                                              // 28\n      } else if (!b.hasOwnProperty(p)) {                                                                               // 29\n        return false;                                                                                                  // 30\n      } else if (!deepEqual(a[p], b[p])) {                                                                             // 31\n        return false;                                                                                                  // 32\n      }                                                                                                                // 33\n    }                                                                                                                  // 34\n                                                                                                                       // 35\n    return true;                                                                                                       // 36\n  }                                                                                                                    // 37\n                                                                                                                       // 38\n  return String(a) === String(b);                                                                                      // 39\n}                                                                                                                      // 40\n                                                                                                                       // 41\nfunction paramsAreActive(paramNames, paramValues, activeParams) {                                                      // 42\n  // FIXME: This doesn't work on repeated params in activeParams.                                                      // 43\n  return paramNames.every(function (paramName, index) {                                                                // 44\n    return String(paramValues[index]) === String(activeParams[paramName]);                                             // 45\n  });                                                                                                                  // 46\n}                                                                                                                      // 47\n                                                                                                                       // 48\nfunction getMatchingRouteIndex(pathname, activeRoutes, activeParams) {                                                 // 49\n  var remainingPathname = pathname,                                                                                    // 50\n      paramNames = [],                                                                                                 // 51\n      paramValues = [];                                                                                                // 52\n                                                                                                                       // 53\n  for (var i = 0, len = activeRoutes.length; i < len; ++i) {                                                           // 54\n    var route = activeRoutes[i];                                                                                       // 55\n    var pattern = route.path || '';                                                                                    // 56\n                                                                                                                       // 57\n    if (pattern.charAt(0) === '/') {                                                                                   // 58\n      remainingPathname = pathname;                                                                                    // 59\n      paramNames = [];                                                                                                 // 60\n      paramValues = [];                                                                                                // 61\n    }                                                                                                                  // 62\n                                                                                                                       // 63\n    if (remainingPathname !== null) {                                                                                  // 64\n      var matched = _PatternUtils.matchPattern(pattern, remainingPathname);                                            // 65\n      remainingPathname = matched.remainingPathname;                                                                   // 66\n      paramNames = [].concat(paramNames, matched.paramNames);                                                          // 67\n      paramValues = [].concat(paramValues, matched.paramValues);                                                       // 68\n    }                                                                                                                  // 69\n                                                                                                                       // 70\n    if (remainingPathname === '' && route.path && paramsAreActive(paramNames, paramValues, activeParams)) return i;    // 71\n  }                                                                                                                    // 72\n                                                                                                                       // 73\n  return null;                                                                                                         // 74\n}                                                                                                                      // 75\n                                                                                                                       // 76\n/**                                                                                                                    // 77\n * Returns true if the given pathname matches the active routes                                                        // 78\n * and params.                                                                                                         // 79\n */                                                                                                                    // 80\nfunction routeIsActive(pathname, routes, params, indexOnly) {                                                          // 81\n  var i = getMatchingRouteIndex(pathname, routes, params);                                                             // 82\n                                                                                                                       // 83\n  if (i === null) {                                                                                                    // 84\n    // No match.                                                                                                       // 85\n    return false;                                                                                                      // 86\n  } else if (!indexOnly) {                                                                                             // 87\n    // Any match is good enough.                                                                                       // 88\n    return true;                                                                                                       // 89\n  }                                                                                                                    // 90\n                                                                                                                       // 91\n  // If any remaining routes past the match index have paths, then we can't                                            // 92\n  // be on the index route.                                                                                            // 93\n  return routes.slice(i + 1).every(function (route) {                                                                  // 94\n    return !route.path;                                                                                                // 95\n  });                                                                                                                  // 96\n}                                                                                                                      // 97\n                                                                                                                       // 98\n/**                                                                                                                    // 99\n * Returns true if all key/value pairs in the given query are                                                          // 100\n * currently active.                                                                                                   // 101\n */                                                                                                                    // 102\nfunction queryIsActive(query, activeQuery) {                                                                           // 103\n  if (activeQuery == null) return query == null;                                                                       // 104\n                                                                                                                       // 105\n  if (query == null) return true;                                                                                      // 106\n                                                                                                                       // 107\n  return deepEqual(query, activeQuery);                                                                                // 108\n}                                                                                                                      // 109\n                                                                                                                       // 110\n/**                                                                                                                    // 111\n * Returns true if a <Link> to the given pathname/query combination is                                                 // 112\n * currently active.                                                                                                   // 113\n */                                                                                                                    // 114\n                                                                                                                       // 115\nfunction isActive(_ref, indexOnly, currentLocation, routes, params) {                                                  // 116\n  var pathname = _ref.pathname;                                                                                        // 117\n  var query = _ref.query;                                                                                              // 118\n                                                                                                                       // 119\n  if (currentLocation == null) return false;                                                                           // 120\n                                                                                                                       // 121\n  if (!routeIsActive(pathname, routes, params, indexOnly)) return false;                                               // 122\n                                                                                                                       // 123\n  return queryIsActive(query, currentLocation.query);                                                                  // 124\n}                                                                                                                      // 125\n                                                                                                                       // 126\nmodule.exports = exports['default'];                                                                                   // 127\n},{\"./PatternUtils\":37}],59:[function(require,module,exports){                                                         //\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n                                                                                                                       // 10\nvar _invariant = require('invariant');                                                                                 // 11\n                                                                                                                       // 12\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 13\n                                                                                                                       // 14\nvar _createMemoryHistory = require('./createMemoryHistory');                                                           // 15\n                                                                                                                       // 16\nvar _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);                                              // 17\n                                                                                                                       // 18\nvar _createTransitionManager = require('./createTransitionManager');                                                   // 19\n                                                                                                                       // 20\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);                                      // 21\n                                                                                                                       // 22\nvar _RouteUtils = require('./RouteUtils');                                                                             // 23\n                                                                                                                       // 24\nvar _RouterUtils = require('./RouterUtils');                                                                           // 25\n                                                                                                                       // 26\n/**                                                                                                                    // 27\n * A high-level API to be used for server-side rendering.                                                              // 28\n *                                                                                                                     // 29\n * This function matches a location to a set of routes and calls                                                       // 30\n * callback(error, redirectLocation, renderProps) when finished.                                                       // 31\n *                                                                                                                     // 32\n * Note: You probably don't want to use this in a browser unless you're using                                          // 33\n * server-side rendering with async routes.                                                                            // 34\n */                                                                                                                    // 35\nfunction match(_ref, callback) {                                                                                       // 36\n  var history = _ref.history;                                                                                          // 37\n  var routes = _ref.routes;                                                                                            // 38\n  var location = _ref.location;                                                                                        // 39\n                                                                                                                       // 40\n  var options = _objectWithoutProperties(_ref, ['history', 'routes', 'location']);                                     // 41\n                                                                                                                       // 42\n  !(history || location) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'match needs a history or a location') : _invariant2['default'](false) : undefined;\n                                                                                                                       // 44\n  history = history ? history : _createMemoryHistory2['default'](options);                                             // 45\n  var transitionManager = _createTransitionManager2['default'](history, _RouteUtils.createRoutes(routes));             // 46\n                                                                                                                       // 47\n  var unlisten = undefined;                                                                                            // 48\n                                                                                                                       // 49\n  if (location) {                                                                                                      // 50\n    // Allow match({ location: '/the/path', ... })                                                                     // 51\n    location = history.createLocation(location);                                                                       // 52\n  } else {                                                                                                             // 53\n    // Pick up the location from the history via synchronous history.listen                                            // 54\n    // call if needed.                                                                                                 // 55\n    unlisten = history.listen(function (historyLocation) {                                                             // 56\n      location = historyLocation;                                                                                      // 57\n    });                                                                                                                // 58\n  }                                                                                                                    // 59\n                                                                                                                       // 60\n  var router = _RouterUtils.createRouterObject(history, transitionManager);                                            // 61\n  history = _RouterUtils.createRoutingHistory(history, transitionManager);                                             // 62\n                                                                                                                       // 63\n  transitionManager.match(location, function (error, redirectLocation, nextState) {                                    // 64\n    callback(error, redirectLocation, nextState && _extends({}, nextState, {                                           // 65\n      history: history,                                                                                                // 66\n      router: router,                                                                                                  // 67\n      matchContext: { history: history, transitionManager: transitionManager, router: router }                         // 68\n    }));                                                                                                               // 69\n                                                                                                                       // 70\n    // Defer removing the listener to here to prevent DOM histories from having                                        // 71\n    // to unwind DOM event listeners unnecessarily, in case callback renders a                                         // 72\n    // <Router> and attaches another history listener.                                                                 // 73\n    if (unlisten) {                                                                                                    // 74\n      unlisten();                                                                                                      // 75\n    }                                                                                                                  // 76\n  });                                                                                                                  // 77\n}                                                                                                                      // 78\n                                                                                                                       // 79\nexports['default'] = match;                                                                                            // 80\nmodule.exports = exports['default'];                                                                                   // 81\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./RouteUtils\":42,\"./RouterUtils\":45,\"./createMemoryHistory\":50,\"./createTransitionManager\":52,\"_process\":1,\"invariant\":85}],60:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _routerWarning = require('./routerWarning');                                                                       // 7\n                                                                                                                       // 8\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);                                                          // 9\n                                                                                                                       // 10\nvar _AsyncUtils = require('./AsyncUtils');                                                                             // 11\n                                                                                                                       // 12\nvar _PatternUtils = require('./PatternUtils');                                                                         // 13\n                                                                                                                       // 14\nvar _RouteUtils = require('./RouteUtils');                                                                             // 15\n                                                                                                                       // 16\nfunction getChildRoutes(route, location, callback) {                                                                   // 17\n  if (route.childRoutes) {                                                                                             // 18\n    return [null, route.childRoutes];                                                                                  // 19\n  }                                                                                                                    // 20\n  if (!route.getChildRoutes) {                                                                                         // 21\n    return [];                                                                                                         // 22\n  }                                                                                                                    // 23\n                                                                                                                       // 24\n  var sync = true,                                                                                                     // 25\n      result = undefined;                                                                                              // 26\n                                                                                                                       // 27\n  route.getChildRoutes(location, function (error, childRoutes) {                                                       // 28\n    childRoutes = !error && _RouteUtils.createRoutes(childRoutes);                                                     // 29\n    if (sync) {                                                                                                        // 30\n      result = [error, childRoutes];                                                                                   // 31\n      return;                                                                                                          // 32\n    }                                                                                                                  // 33\n                                                                                                                       // 34\n    callback(error, childRoutes);                                                                                      // 35\n  });                                                                                                                  // 36\n                                                                                                                       // 37\n  sync = false;                                                                                                        // 38\n  return result; // Might be undefined.                                                                                // 39\n}                                                                                                                      // 40\n                                                                                                                       // 41\nfunction getIndexRoute(route, location, callback) {                                                                    // 42\n  if (route.indexRoute) {                                                                                              // 43\n    callback(null, route.indexRoute);                                                                                  // 44\n  } else if (route.getIndexRoute) {                                                                                    // 45\n    route.getIndexRoute(location, function (error, indexRoute) {                                                       // 46\n      callback(error, !error && _RouteUtils.createRoutes(indexRoute)[0]);                                              // 47\n    });                                                                                                                // 48\n  } else if (route.childRoutes) {                                                                                      // 49\n    (function () {                                                                                                     // 50\n      var pathless = route.childRoutes.filter(function (obj) {                                                         // 51\n        return !obj.hasOwnProperty('path');                                                                            // 52\n      });                                                                                                              // 53\n                                                                                                                       // 54\n      _AsyncUtils.loopAsync(pathless.length, function (index, next, done) {                                            // 55\n        getIndexRoute(pathless[index], location, function (error, indexRoute) {                                        // 56\n          if (error || indexRoute) {                                                                                   // 57\n            var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);              // 58\n            done(error, routes);                                                                                       // 59\n          } else {                                                                                                     // 60\n            next();                                                                                                    // 61\n          }                                                                                                            // 62\n        });                                                                                                            // 63\n      }, function (err, routes) {                                                                                      // 64\n        callback(null, routes);                                                                                        // 65\n      });                                                                                                              // 66\n    })();                                                                                                              // 67\n  } else {                                                                                                             // 68\n    callback();                                                                                                        // 69\n  }                                                                                                                    // 70\n}                                                                                                                      // 71\n                                                                                                                       // 72\nfunction assignParams(params, paramNames, paramValues) {                                                               // 73\n  return paramNames.reduce(function (params, paramName, index) {                                                       // 74\n    var paramValue = paramValues && paramValues[index];                                                                // 75\n                                                                                                                       // 76\n    if (Array.isArray(params[paramName])) {                                                                            // 77\n      params[paramName].push(paramValue);                                                                              // 78\n    } else if (paramName in params) {                                                                                  // 79\n      params[paramName] = [params[paramName], paramValue];                                                             // 80\n    } else {                                                                                                           // 81\n      params[paramName] = paramValue;                                                                                  // 82\n    }                                                                                                                  // 83\n                                                                                                                       // 84\n    return params;                                                                                                     // 85\n  }, params);                                                                                                          // 86\n}                                                                                                                      // 87\n                                                                                                                       // 88\nfunction createParams(paramNames, paramValues) {                                                                       // 89\n  return assignParams({}, paramNames, paramValues);                                                                    // 90\n}                                                                                                                      // 91\n                                                                                                                       // 92\nfunction matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {                       // 93\n  var pattern = route.path || '';                                                                                      // 94\n                                                                                                                       // 95\n  if (pattern.charAt(0) === '/') {                                                                                     // 96\n    remainingPathname = location.pathname;                                                                             // 97\n    paramNames = [];                                                                                                   // 98\n    paramValues = [];                                                                                                  // 99\n  }                                                                                                                    // 100\n                                                                                                                       // 101\n  if (remainingPathname !== null) {                                                                                    // 102\n    var matched = _PatternUtils.matchPattern(pattern, remainingPathname);                                              // 103\n    remainingPathname = matched.remainingPathname;                                                                     // 104\n    paramNames = [].concat(paramNames, matched.paramNames);                                                            // 105\n    paramValues = [].concat(paramValues, matched.paramValues);                                                         // 106\n                                                                                                                       // 107\n    if (remainingPathname === '' && route.path) {                                                                      // 108\n      var _ret2 = (function () {                                                                                       // 109\n        var match = {                                                                                                  // 110\n          routes: [route],                                                                                             // 111\n          params: createParams(paramNames, paramValues)                                                                // 112\n        };                                                                                                             // 113\n                                                                                                                       // 114\n        getIndexRoute(route, location, function (error, indexRoute) {                                                  // 115\n          if (error) {                                                                                                 // 116\n            callback(error);                                                                                           // 117\n          } else {                                                                                                     // 118\n            if (Array.isArray(indexRoute)) {                                                                           // 119\n              var _match$routes;                                                                                       // 120\n                                                                                                                       // 121\n              process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](indexRoute.every(function (route) {   // 122\n                return !route.path;                                                                                    // 123\n              }), 'Index routes should not have paths') : undefined;                                                   // 124\n              (_match$routes = match.routes).push.apply(_match$routes, indexRoute);                                    // 125\n            } else if (indexRoute) {                                                                                   // 126\n              process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](!indexRoute.path, 'Index routes should not have paths') : undefined;\n              match.routes.push(indexRoute);                                                                           // 128\n            }                                                                                                          // 129\n                                                                                                                       // 130\n            callback(null, match);                                                                                     // 131\n          }                                                                                                            // 132\n        });                                                                                                            // 133\n        return {                                                                                                       // 134\n          v: undefined                                                                                                 // 135\n        };                                                                                                             // 136\n      })();                                                                                                            // 137\n                                                                                                                       // 138\n      if (typeof _ret2 === 'object') return _ret2.v;                                                                   // 139\n    }                                                                                                                  // 140\n  }                                                                                                                    // 141\n                                                                                                                       // 142\n  if (remainingPathname != null || route.childRoutes) {                                                                // 143\n    // Either a) this route matched at least some of the path or b)                                                    // 144\n    // we don't have to load this route's children asynchronously. In                                                  // 145\n    // either case continue checking for matches in the subtree.                                                       // 146\n    var onChildRoutes = function onChildRoutes(error, childRoutes) {                                                   // 147\n      if (error) {                                                                                                     // 148\n        callback(error);                                                                                               // 149\n      } else if (childRoutes) {                                                                                        // 150\n        // Check the child routes to see if any of them match.                                                         // 151\n        matchRoutes(childRoutes, location, function (error, match) {                                                   // 152\n          if (error) {                                                                                                 // 153\n            callback(error);                                                                                           // 154\n          } else if (match) {                                                                                          // 155\n            // A child route matched! Augment the match and pass it up the stack.                                      // 156\n            match.routes.unshift(route);                                                                               // 157\n            callback(null, match);                                                                                     // 158\n          } else {                                                                                                     // 159\n            callback();                                                                                                // 160\n          }                                                                                                            // 161\n        }, remainingPathname, paramNames, paramValues);                                                                // 162\n      } else {                                                                                                         // 163\n        callback();                                                                                                    // 164\n      }                                                                                                                // 165\n    };                                                                                                                 // 166\n                                                                                                                       // 167\n    var result = getChildRoutes(route, location, onChildRoutes);                                                       // 168\n    if (result) {                                                                                                      // 169\n      onChildRoutes.apply(undefined, result);                                                                          // 170\n    }                                                                                                                  // 171\n  } else {                                                                                                             // 172\n    callback();                                                                                                        // 173\n  }                                                                                                                    // 174\n}                                                                                                                      // 175\n                                                                                                                       // 176\n/**                                                                                                                    // 177\n * Asynchronously matches the given location to a set of routes and calls                                              // 178\n * callback(error, state) when finished. The state object will have the                                                // 179\n * following properties:                                                                                               // 180\n *                                                                                                                     // 181\n * - routes       An array of routes that matched, in hierarchical order                                               // 182\n * - params       An object of URL parameters                                                                          // 183\n *                                                                                                                     // 184\n * Note: This operation may finish synchronously if no routes have an                                                  // 185\n * asynchronous getChildRoutes method.                                                                                 // 186\n */                                                                                                                    // 187\nfunction matchRoutes(routes, location, callback) {                                                                     // 188\n  var remainingPathname = arguments.length <= 3 || arguments[3] === undefined ? location.pathname : arguments[3];      // 189\n  var paramNames = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];                            // 190\n  var paramValues = arguments.length <= 5 || arguments[5] === undefined ? [] : arguments[5];                           // 191\n  return (function () {                                                                                                // 192\n    _AsyncUtils.loopAsync(routes.length, function (index, next, done) {                                                // 193\n      matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function (error, match) {    // 194\n        if (error || match) {                                                                                          // 195\n          done(error, match);                                                                                          // 196\n        } else {                                                                                                       // 197\n          next();                                                                                                      // 198\n        }                                                                                                              // 199\n      });                                                                                                              // 200\n    }, callback);                                                                                                      // 201\n  })();                                                                                                                // 202\n}                                                                                                                      // 203\n                                                                                                                       // 204\nexports['default'] = matchRoutes;                                                                                      // 205\nmodule.exports = exports['default'];                                                                                   // 206\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./AsyncUtils\":30,\"./PatternUtils\":37,\"./RouteUtils\":42,\"./routerWarning\":61,\"_process\":1}],61:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\nexports['default'] = routerWarning;                                                                                    // 4\n                                                                                                                       // 5\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 6\n                                                                                                                       // 7\nvar _warning = require('warning');                                                                                     // 8\n                                                                                                                       // 9\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 10\n                                                                                                                       // 11\nfunction routerWarning(falseToWarn, message) {                                                                         // 12\n  message = '[react-router] ' + message;                                                                               // 13\n                                                                                                                       // 14\n  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {            // 15\n    args[_key - 2] = arguments[_key];                                                                                  // 16\n  }                                                                                                                    // 17\n                                                                                                                       // 18\n  process.env.NODE_ENV !== 'production' ? _warning2['default'].apply(undefined, [falseToWarn, message].concat(args)) : undefined;\n}                                                                                                                      // 20\n                                                                                                                       // 21\nmodule.exports = exports['default'];                                                                                   // 22\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"_process\":1,\"warning\":86}],62:[function(require,module,exports){                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\nexports['default'] = useRouterHistory;                                                                                 // 4\n                                                                                                                       // 5\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 6\n                                                                                                                       // 7\nvar _historyLibUseQueries = require('history/lib/useQueries');                                                         // 8\n                                                                                                                       // 9\nvar _historyLibUseQueries2 = _interopRequireDefault(_historyLibUseQueries);                                            // 10\n                                                                                                                       // 11\nvar _historyLibUseBasename = require('history/lib/useBasename');                                                       // 12\n                                                                                                                       // 13\nvar _historyLibUseBasename2 = _interopRequireDefault(_historyLibUseBasename);                                          // 14\n                                                                                                                       // 15\nfunction useRouterHistory(createHistory) {                                                                             // 16\n  return function (options) {                                                                                          // 17\n    var history = _historyLibUseQueries2['default'](_historyLibUseBasename2['default'](createHistory))(options);       // 18\n    history.__v2_compatible__ = true;                                                                                  // 19\n    return history;                                                                                                    // 20\n  };                                                                                                                   // 21\n}                                                                                                                      // 22\n                                                                                                                       // 23\nmodule.exports = exports['default'];                                                                                   // 24\n},{\"history/lib/useBasename\":78,\"history/lib/useQueries\":79}],63:[function(require,module,exports){                    //\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n                                                                                                                       // 10\nvar _historyLibUseQueries = require('history/lib/useQueries');                                                         // 11\n                                                                                                                       // 12\nvar _historyLibUseQueries2 = _interopRequireDefault(_historyLibUseQueries);                                            // 13\n                                                                                                                       // 14\nvar _createTransitionManager = require('./createTransitionManager');                                                   // 15\n                                                                                                                       // 16\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);                                      // 17\n                                                                                                                       // 18\nvar _routerWarning = require('./routerWarning');                                                                       // 19\n                                                                                                                       // 20\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);                                                          // 21\n                                                                                                                       // 22\n/**                                                                                                                    // 23\n * Returns a new createHistory function that may be used to create                                                     // 24\n * history objects that know about routing.                                                                            // 25\n *                                                                                                                     // 26\n * Enhances history objects with the following methods:                                                                // 27\n *                                                                                                                     // 28\n * - listen((error, nextState) => {})                                                                                  // 29\n * - listenBeforeLeavingRoute(route, (nextLocation) => {})                                                             // 30\n * - match(location, (error, redirectLocation, nextState) => {})                                                       // 31\n * - isActive(pathname, query, indexOnly=false)                                                                        // 32\n */                                                                                                                    // 33\nfunction useRoutes(createHistory) {                                                                                    // 34\n  process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, '`useRoutes` is deprecated. Please use `createTransitionManager` instead.') : undefined;\n                                                                                                                       // 36\n  return function () {                                                                                                 // 37\n    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];                                // 38\n                                                                                                                       // 39\n    var routes = _ref.routes;                                                                                          // 40\n                                                                                                                       // 41\n    var options = _objectWithoutProperties(_ref, ['routes']);                                                          // 42\n                                                                                                                       // 43\n    var history = _historyLibUseQueries2['default'](createHistory)(options);                                           // 44\n    var transitionManager = _createTransitionManager2['default'](history, routes);                                     // 45\n    return _extends({}, history, transitionManager);                                                                   // 46\n  };                                                                                                                   // 47\n}                                                                                                                      // 48\n                                                                                                                       // 49\nexports['default'] = useRoutes;                                                                                        // 50\nmodule.exports = exports['default'];                                                                                   // 51\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./createTransitionManager\":52,\"./routerWarning\":61,\"_process\":1,\"history/lib/useQueries\":79}],64:[function(require,module,exports){\narguments[4][3][0].apply(exports,arguments)                                                                            //\n},{\"dup\":3}],65:[function(require,module,exports){                                                                     //\narguments[4][4][0].apply(exports,arguments)                                                                            //\n},{\"dup\":4}],66:[function(require,module,exports){                                                                     //\n(function (process){                                                                                                   //\n/*eslint-disable no-empty */                                                                                           // 1\n'use strict';                                                                                                          // 2\n                                                                                                                       // 3\nexports.__esModule = true;                                                                                             // 4\nexports.saveState = saveState;                                                                                         // 5\nexports.readState = readState;                                                                                         // 6\n                                                                                                                       // 7\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 8\n                                                                                                                       // 9\nvar _warning = require('warning');                                                                                     // 10\n                                                                                                                       // 11\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 12\n                                                                                                                       // 13\nvar KeyPrefix = '@@History/';                                                                                          // 14\nvar QuotaExceededErrors = ['QuotaExceededError', 'QUOTA_EXCEEDED_ERR'];                                                // 15\n                                                                                                                       // 16\nvar SecurityError = 'SecurityError';                                                                                   // 17\n                                                                                                                       // 18\nfunction createKey(key) {                                                                                              // 19\n  return KeyPrefix + key;                                                                                              // 20\n}                                                                                                                      // 21\n                                                                                                                       // 22\nfunction saveState(key, state) {                                                                                       // 23\n  try {                                                                                                                // 24\n    if (state == null) {                                                                                               // 25\n      window.sessionStorage.removeItem(createKey(key));                                                                // 26\n    } else {                                                                                                           // 27\n      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));                                            // 28\n    }                                                                                                                  // 29\n  } catch (error) {                                                                                                    // 30\n    if (error.name === SecurityError) {                                                                                // 31\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any                                         // 32\n      // attempt to access window.sessionStorage.                                                                      // 33\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\n                                                                                                                       // 35\n      return;                                                                                                          // 36\n    }                                                                                                                  // 37\n                                                                                                                       // 38\n    if (QuotaExceededErrors.indexOf(error.name) >= 0 && window.sessionStorage.length === 0) {                          // 39\n      // Safari \"private mode\" throws QuotaExceededError.                                                              // 40\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\n                                                                                                                       // 42\n      return;                                                                                                          // 43\n    }                                                                                                                  // 44\n                                                                                                                       // 45\n    throw error;                                                                                                       // 46\n  }                                                                                                                    // 47\n}                                                                                                                      // 48\n                                                                                                                       // 49\nfunction readState(key) {                                                                                              // 50\n  var json = undefined;                                                                                                // 51\n  try {                                                                                                                // 52\n    json = window.sessionStorage.getItem(createKey(key));                                                              // 53\n  } catch (error) {                                                                                                    // 54\n    if (error.name === SecurityError) {                                                                                // 55\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any                                         // 56\n      // attempt to access window.sessionStorage.                                                                      // 57\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\n                                                                                                                       // 59\n      return null;                                                                                                     // 60\n    }                                                                                                                  // 61\n  }                                                                                                                    // 62\n                                                                                                                       // 63\n  if (json) {                                                                                                          // 64\n    try {                                                                                                              // 65\n      return JSON.parse(json);                                                                                         // 66\n    } catch (error) {                                                                                                  // 67\n      // Ignore invalid JSON.                                                                                          // 68\n    }                                                                                                                  // 69\n  }                                                                                                                    // 70\n                                                                                                                       // 71\n  return null;                                                                                                         // 72\n}                                                                                                                      // 73\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"_process\":1,\"warning\":86}],67:[function(require,module,exports){                                                   //\narguments[4][6][0].apply(exports,arguments)                                                                            //\n},{\"dup\":6}],68:[function(require,module,exports){                                                                     //\narguments[4][7][0].apply(exports,arguments)                                                                            //\n},{\"dup\":7}],69:[function(require,module,exports){                                                                     //\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\nexports.extractPath = extractPath;                                                                                     // 4\nexports.parsePath = parsePath;                                                                                         // 5\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _warning = require('warning');                                                                                     // 9\n                                                                                                                       // 10\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 11\n                                                                                                                       // 12\nfunction extractPath(string) {                                                                                         // 13\n  var match = string.match(/^https?:\\/\\/[^\\/]*/);                                                                      // 14\n                                                                                                                       // 15\n  if (match == null) return string;                                                                                    // 16\n                                                                                                                       // 17\n  return string.substring(match[0].length);                                                                            // 18\n}                                                                                                                      // 19\n                                                                                                                       // 20\nfunction parsePath(path) {                                                                                             // 21\n  var pathname = extractPath(path);                                                                                    // 22\n  var search = '';                                                                                                     // 23\n  var hash = '';                                                                                                       // 24\n                                                                                                                       // 25\n  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like \"%s\"', path) : undefined;\n                                                                                                                       // 27\n  var hashIndex = pathname.indexOf('#');                                                                               // 28\n  if (hashIndex !== -1) {                                                                                              // 29\n    hash = pathname.substring(hashIndex);                                                                              // 30\n    pathname = pathname.substring(0, hashIndex);                                                                       // 31\n  }                                                                                                                    // 32\n                                                                                                                       // 33\n  var searchIndex = pathname.indexOf('?');                                                                             // 34\n  if (searchIndex !== -1) {                                                                                            // 35\n    search = pathname.substring(searchIndex);                                                                          // 36\n    pathname = pathname.substring(0, searchIndex);                                                                     // 37\n  }                                                                                                                    // 38\n                                                                                                                       // 39\n  if (pathname === '') pathname = '/';                                                                                 // 40\n                                                                                                                       // 41\n  return {                                                                                                             // 42\n    pathname: pathname,                                                                                                // 43\n    search: search,                                                                                                    // 44\n    hash: hash                                                                                                         // 45\n  };                                                                                                                   // 46\n}                                                                                                                      // 47\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"_process\":1,\"warning\":86}],70:[function(require,module,exports){                                                   //\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _invariant = require('invariant');                                                                                 // 9\n                                                                                                                       // 10\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 11\n                                                                                                                       // 12\nvar _Actions = require('./Actions');                                                                                   // 13\n                                                                                                                       // 14\nvar _PathUtils = require('./PathUtils');                                                                               // 15\n                                                                                                                       // 16\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');                                                         // 17\n                                                                                                                       // 18\nvar _DOMUtils = require('./DOMUtils');                                                                                 // 19\n                                                                                                                       // 20\nvar _DOMStateStorage = require('./DOMStateStorage');                                                                   // 21\n                                                                                                                       // 22\nvar _createDOMHistory = require('./createDOMHistory');                                                                 // 23\n                                                                                                                       // 24\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);                                                    // 25\n                                                                                                                       // 26\n/**                                                                                                                    // 27\n * Creates and returns a history object that uses HTML5's history API                                                  // 28\n * (pushState, replaceState, and the popstate event) to manage history.                                                // 29\n * This is the recommended method of managing history in browsers because                                              // 30\n * it provides the cleanest URLs.                                                                                      // 31\n *                                                                                                                     // 32\n * Note: In browsers that do not support the HTML5 history API full                                                    // 33\n * page reloads will be used to preserve URLs.                                                                         // 34\n */                                                                                                                    // 35\nfunction createBrowserHistory() {                                                                                      // 36\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];                               // 37\n                                                                                                                       // 38\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;\n                                                                                                                       // 40\n  var forceRefresh = options.forceRefresh;                                                                             // 41\n                                                                                                                       // 42\n  var isSupported = _DOMUtils.supportsHistory();                                                                       // 43\n  var useRefresh = !isSupported || forceRefresh;                                                                       // 44\n                                                                                                                       // 45\n  function getCurrentLocation(historyState) {                                                                          // 46\n    historyState = historyState || window.history.state || {};                                                         // 47\n                                                                                                                       // 48\n    var path = _DOMUtils.getWindowPath();                                                                              // 49\n    var _historyState = historyState;                                                                                  // 50\n    var key = _historyState.key;                                                                                       // 51\n                                                                                                                       // 52\n    var state = undefined;                                                                                             // 53\n    if (key) {                                                                                                         // 54\n      state = _DOMStateStorage.readState(key);                                                                         // 55\n    } else {                                                                                                           // 56\n      state = null;                                                                                                    // 57\n      key = history.createKey();                                                                                       // 58\n                                                                                                                       // 59\n      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);              // 60\n    }                                                                                                                  // 61\n                                                                                                                       // 62\n    var location = _PathUtils.parsePath(path);                                                                         // 63\n                                                                                                                       // 64\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);                           // 65\n  }                                                                                                                    // 66\n                                                                                                                       // 67\n  function startPopStateListener(_ref) {                                                                               // 68\n    var transitionTo = _ref.transitionTo;                                                                              // 69\n                                                                                                                       // 70\n    function popStateListener(event) {                                                                                 // 71\n      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.                           // 72\n                                                                                                                       // 73\n      transitionTo(getCurrentLocation(event.state));                                                                   // 74\n    }                                                                                                                  // 75\n                                                                                                                       // 76\n    _DOMUtils.addEventListener(window, 'popstate', popStateListener);                                                  // 77\n                                                                                                                       // 78\n    return function () {                                                                                               // 79\n      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);                                             // 80\n    };                                                                                                                 // 81\n  }                                                                                                                    // 82\n                                                                                                                       // 83\n  function finishTransition(location) {                                                                                // 84\n    var basename = location.basename;                                                                                  // 85\n    var pathname = location.pathname;                                                                                  // 86\n    var search = location.search;                                                                                      // 87\n    var hash = location.hash;                                                                                          // 88\n    var state = location.state;                                                                                        // 89\n    var action = location.action;                                                                                      // 90\n    var key = location.key;                                                                                            // 91\n                                                                                                                       // 92\n    if (action === _Actions.POP) return; // Nothing to do.                                                             // 93\n                                                                                                                       // 94\n    _DOMStateStorage.saveState(key, state);                                                                            // 95\n                                                                                                                       // 96\n    var path = (basename || '') + pathname + search + hash;                                                            // 97\n    var historyState = {                                                                                               // 98\n      key: key                                                                                                         // 99\n    };                                                                                                                 // 100\n                                                                                                                       // 101\n    if (action === _Actions.PUSH) {                                                                                    // 102\n      if (useRefresh) {                                                                                                // 103\n        window.location.href = path;                                                                                   // 104\n        return false; // Prevent location update.                                                                      // 105\n      } else {                                                                                                         // 106\n          window.history.pushState(historyState, null, path);                                                          // 107\n        }                                                                                                              // 108\n    } else {                                                                                                           // 109\n      // REPLACE                                                                                                       // 110\n      if (useRefresh) {                                                                                                // 111\n        window.location.replace(path);                                                                                 // 112\n        return false; // Prevent location update.                                                                      // 113\n      } else {                                                                                                         // 114\n          window.history.replaceState(historyState, null, path);                                                       // 115\n        }                                                                                                              // 116\n    }                                                                                                                  // 117\n  }                                                                                                                    // 118\n                                                                                                                       // 119\n  var history = _createDOMHistory2['default'](_extends({}, options, {                                                  // 120\n    getCurrentLocation: getCurrentLocation,                                                                            // 121\n    finishTransition: finishTransition,                                                                                // 122\n    saveState: _DOMStateStorage.saveState                                                                              // 123\n  }));                                                                                                                 // 124\n                                                                                                                       // 125\n  var listenerCount = 0,                                                                                               // 126\n      stopPopStateListener = undefined;                                                                                // 127\n                                                                                                                       // 128\n  function listenBefore(listener) {                                                                                    // 129\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);                                  // 130\n                                                                                                                       // 131\n    var unlisten = history.listenBefore(listener);                                                                     // 132\n                                                                                                                       // 133\n    return function () {                                                                                               // 134\n      unlisten();                                                                                                      // 135\n                                                                                                                       // 136\n      if (--listenerCount === 0) stopPopStateListener();                                                               // 137\n    };                                                                                                                 // 138\n  }                                                                                                                    // 139\n                                                                                                                       // 140\n  function listen(listener) {                                                                                          // 141\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);                                  // 142\n                                                                                                                       // 143\n    var unlisten = history.listen(listener);                                                                           // 144\n                                                                                                                       // 145\n    return function () {                                                                                               // 146\n      unlisten();                                                                                                      // 147\n                                                                                                                       // 148\n      if (--listenerCount === 0) stopPopStateListener();                                                               // 149\n    };                                                                                                                 // 150\n  }                                                                                                                    // 151\n                                                                                                                       // 152\n  // deprecated                                                                                                        // 153\n  function registerTransitionHook(hook) {                                                                              // 154\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);                                  // 155\n                                                                                                                       // 156\n    history.registerTransitionHook(hook);                                                                              // 157\n  }                                                                                                                    // 158\n                                                                                                                       // 159\n  // deprecated                                                                                                        // 160\n  function unregisterTransitionHook(hook) {                                                                            // 161\n    history.unregisterTransitionHook(hook);                                                                            // 162\n                                                                                                                       // 163\n    if (--listenerCount === 0) stopPopStateListener();                                                                 // 164\n  }                                                                                                                    // 165\n                                                                                                                       // 166\n  return _extends({}, history, {                                                                                       // 167\n    listenBefore: listenBefore,                                                                                        // 168\n    listen: listen,                                                                                                    // 169\n    registerTransitionHook: registerTransitionHook,                                                                    // 170\n    unregisterTransitionHook: unregisterTransitionHook                                                                 // 171\n  });                                                                                                                  // 172\n}                                                                                                                      // 173\n                                                                                                                       // 174\nexports['default'] = createBrowserHistory;                                                                             // 175\nmodule.exports = exports['default'];                                                                                   // 176\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./Actions\":64,\"./DOMStateStorage\":66,\"./DOMUtils\":67,\"./ExecutionEnvironment\":68,\"./PathUtils\":69,\"./createDOMHistory\":71,\"_process\":1,\"invariant\":85}],71:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _invariant = require('invariant');                                                                                 // 9\n                                                                                                                       // 10\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 11\n                                                                                                                       // 12\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');                                                         // 13\n                                                                                                                       // 14\nvar _DOMUtils = require('./DOMUtils');                                                                                 // 15\n                                                                                                                       // 16\nvar _createHistory = require('./createHistory');                                                                       // 17\n                                                                                                                       // 18\nvar _createHistory2 = _interopRequireDefault(_createHistory);                                                          // 19\n                                                                                                                       // 20\nfunction createDOMHistory(options) {                                                                                   // 21\n  var history = _createHistory2['default'](_extends({                                                                  // 22\n    getUserConfirmation: _DOMUtils.getUserConfirmation                                                                 // 23\n  }, options, {                                                                                                        // 24\n    go: _DOMUtils.go                                                                                                   // 25\n  }));                                                                                                                 // 26\n                                                                                                                       // 27\n  function listen(listener) {                                                                                          // 28\n    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;\n                                                                                                                       // 30\n    return history.listen(listener);                                                                                   // 31\n  }                                                                                                                    // 32\n                                                                                                                       // 33\n  return _extends({}, history, {                                                                                       // 34\n    listen: listen                                                                                                     // 35\n  });                                                                                                                  // 36\n}                                                                                                                      // 37\n                                                                                                                       // 38\nexports['default'] = createDOMHistory;                                                                                 // 39\nmodule.exports = exports['default'];                                                                                   // 40\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./DOMUtils\":67,\"./ExecutionEnvironment\":68,\"./createHistory\":73,\"_process\":1,\"invariant\":85}],72:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _warning = require('warning');                                                                                     // 9\n                                                                                                                       // 10\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 11\n                                                                                                                       // 12\nvar _invariant = require('invariant');                                                                                 // 13\n                                                                                                                       // 14\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 15\n                                                                                                                       // 16\nvar _Actions = require('./Actions');                                                                                   // 17\n                                                                                                                       // 18\nvar _PathUtils = require('./PathUtils');                                                                               // 19\n                                                                                                                       // 20\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');                                                         // 21\n                                                                                                                       // 22\nvar _DOMUtils = require('./DOMUtils');                                                                                 // 23\n                                                                                                                       // 24\nvar _DOMStateStorage = require('./DOMStateStorage');                                                                   // 25\n                                                                                                                       // 26\nvar _createDOMHistory = require('./createDOMHistory');                                                                 // 27\n                                                                                                                       // 28\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);                                                    // 29\n                                                                                                                       // 30\nfunction isAbsolutePath(path) {                                                                                        // 31\n  return typeof path === 'string' && path.charAt(0) === '/';                                                           // 32\n}                                                                                                                      // 33\n                                                                                                                       // 34\nfunction ensureSlash() {                                                                                               // 35\n  var path = _DOMUtils.getHashPath();                                                                                  // 36\n                                                                                                                       // 37\n  if (isAbsolutePath(path)) return true;                                                                               // 38\n                                                                                                                       // 39\n  _DOMUtils.replaceHashPath('/' + path);                                                                               // 40\n                                                                                                                       // 41\n  return false;                                                                                                        // 42\n}                                                                                                                      // 43\n                                                                                                                       // 44\nfunction addQueryStringValueToPath(path, key, value) {                                                                 // 45\n  return path + (path.indexOf('?') === -1 ? '?' : '&') + (key + '=' + value);                                          // 46\n}                                                                                                                      // 47\n                                                                                                                       // 48\nfunction stripQueryStringValueFromPath(path, key) {                                                                    // 49\n  return path.replace(new RegExp('[?&]?' + key + '=[a-zA-Z0-9]+'), '');                                                // 50\n}                                                                                                                      // 51\n                                                                                                                       // 52\nfunction getQueryStringValueFromPath(path, key) {                                                                      // 53\n  var match = path.match(new RegExp('\\\\?.*?\\\\b' + key + '=(.+?)\\\\b'));                                                 // 54\n  return match && match[1];                                                                                            // 55\n}                                                                                                                      // 56\n                                                                                                                       // 57\nvar DefaultQueryKey = '_k';                                                                                            // 58\n                                                                                                                       // 59\nfunction createHashHistory() {                                                                                         // 60\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];                               // 61\n                                                                                                                       // 62\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Hash history needs a DOM') : _invariant2['default'](false) : undefined;\n                                                                                                                       // 64\n  var queryKey = options.queryKey;                                                                                     // 65\n                                                                                                                       // 66\n  if (queryKey === undefined || !!queryKey) queryKey = typeof queryKey === 'string' ? queryKey : DefaultQueryKey;      // 67\n                                                                                                                       // 68\n  function getCurrentLocation() {                                                                                      // 69\n    var path = _DOMUtils.getHashPath();                                                                                // 70\n                                                                                                                       // 71\n    var key = undefined,                                                                                               // 72\n        state = undefined;                                                                                             // 73\n    if (queryKey) {                                                                                                    // 74\n      key = getQueryStringValueFromPath(path, queryKey);                                                               // 75\n      path = stripQueryStringValueFromPath(path, queryKey);                                                            // 76\n                                                                                                                       // 77\n      if (key) {                                                                                                       // 78\n        state = _DOMStateStorage.readState(key);                                                                       // 79\n      } else {                                                                                                         // 80\n        state = null;                                                                                                  // 81\n        key = history.createKey();                                                                                     // 82\n        _DOMUtils.replaceHashPath(addQueryStringValueToPath(path, queryKey, key));                                     // 83\n      }                                                                                                                // 84\n    } else {                                                                                                           // 85\n      key = state = null;                                                                                              // 86\n    }                                                                                                                  // 87\n                                                                                                                       // 88\n    var location = _PathUtils.parsePath(path);                                                                         // 89\n                                                                                                                       // 90\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);                           // 91\n  }                                                                                                                    // 92\n                                                                                                                       // 93\n  function startHashChangeListener(_ref) {                                                                             // 94\n    var transitionTo = _ref.transitionTo;                                                                              // 95\n                                                                                                                       // 96\n    function hashChangeListener() {                                                                                    // 97\n      if (!ensureSlash()) return; // Always make sure hashes are preceeded with a /.                                   // 98\n                                                                                                                       // 99\n      transitionTo(getCurrentLocation());                                                                              // 100\n    }                                                                                                                  // 101\n                                                                                                                       // 102\n    ensureSlash();                                                                                                     // 103\n    _DOMUtils.addEventListener(window, 'hashchange', hashChangeListener);                                              // 104\n                                                                                                                       // 105\n    return function () {                                                                                               // 106\n      _DOMUtils.removeEventListener(window, 'hashchange', hashChangeListener);                                         // 107\n    };                                                                                                                 // 108\n  }                                                                                                                    // 109\n                                                                                                                       // 110\n  function finishTransition(location) {                                                                                // 111\n    var basename = location.basename;                                                                                  // 112\n    var pathname = location.pathname;                                                                                  // 113\n    var search = location.search;                                                                                      // 114\n    var state = location.state;                                                                                        // 115\n    var action = location.action;                                                                                      // 116\n    var key = location.key;                                                                                            // 117\n                                                                                                                       // 118\n    if (action === _Actions.POP) return; // Nothing to do.                                                             // 119\n                                                                                                                       // 120\n    var path = (basename || '') + pathname + search;                                                                   // 121\n                                                                                                                       // 122\n    if (queryKey) {                                                                                                    // 123\n      path = addQueryStringValueToPath(path, queryKey, key);                                                           // 124\n      _DOMStateStorage.saveState(key, state);                                                                          // 125\n    } else {                                                                                                           // 126\n      // Drop key and state.                                                                                           // 127\n      location.key = location.state = null;                                                                            // 128\n    }                                                                                                                  // 129\n                                                                                                                       // 130\n    var currentHash = _DOMUtils.getHashPath();                                                                         // 131\n                                                                                                                       // 132\n    if (action === _Actions.PUSH) {                                                                                    // 133\n      if (currentHash !== path) {                                                                                      // 134\n        window.location.hash = path;                                                                                   // 135\n      } else {                                                                                                         // 136\n        process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'You cannot PUSH the same path using hash history') : undefined;\n      }                                                                                                                // 138\n    } else if (currentHash !== path) {                                                                                 // 139\n      // REPLACE                                                                                                       // 140\n      _DOMUtils.replaceHashPath(path);                                                                                 // 141\n    }                                                                                                                  // 142\n  }                                                                                                                    // 143\n                                                                                                                       // 144\n  var history = _createDOMHistory2['default'](_extends({}, options, {                                                  // 145\n    getCurrentLocation: getCurrentLocation,                                                                            // 146\n    finishTransition: finishTransition,                                                                                // 147\n    saveState: _DOMStateStorage.saveState                                                                              // 148\n  }));                                                                                                                 // 149\n                                                                                                                       // 150\n  var listenerCount = 0,                                                                                               // 151\n      stopHashChangeListener = undefined;                                                                              // 152\n                                                                                                                       // 153\n  function listenBefore(listener) {                                                                                    // 154\n    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);                              // 155\n                                                                                                                       // 156\n    var unlisten = history.listenBefore(listener);                                                                     // 157\n                                                                                                                       // 158\n    return function () {                                                                                               // 159\n      unlisten();                                                                                                      // 160\n                                                                                                                       // 161\n      if (--listenerCount === 0) stopHashChangeListener();                                                             // 162\n    };                                                                                                                 // 163\n  }                                                                                                                    // 164\n                                                                                                                       // 165\n  function listen(listener) {                                                                                          // 166\n    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);                              // 167\n                                                                                                                       // 168\n    var unlisten = history.listen(listener);                                                                           // 169\n                                                                                                                       // 170\n    return function () {                                                                                               // 171\n      unlisten();                                                                                                      // 172\n                                                                                                                       // 173\n      if (--listenerCount === 0) stopHashChangeListener();                                                             // 174\n    };                                                                                                                 // 175\n  }                                                                                                                    // 176\n                                                                                                                       // 177\n  function push(location) {                                                                                            // 178\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n                                                                                                                       // 180\n    history.push(location);                                                                                            // 181\n  }                                                                                                                    // 182\n                                                                                                                       // 183\n  function replace(location) {                                                                                         // 184\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n                                                                                                                       // 186\n    history.replace(location);                                                                                         // 187\n  }                                                                                                                    // 188\n                                                                                                                       // 189\n  var goIsSupportedWithoutReload = _DOMUtils.supportsGoWithoutReloadUsingHash();                                       // 190\n                                                                                                                       // 191\n  function go(n) {                                                                                                     // 192\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : undefined;\n                                                                                                                       // 194\n    history.go(n);                                                                                                     // 195\n  }                                                                                                                    // 196\n                                                                                                                       // 197\n  function createHref(path) {                                                                                          // 198\n    return '#' + history.createHref(path);                                                                             // 199\n  }                                                                                                                    // 200\n                                                                                                                       // 201\n  // deprecated                                                                                                        // 202\n  function registerTransitionHook(hook) {                                                                              // 203\n    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);                              // 204\n                                                                                                                       // 205\n    history.registerTransitionHook(hook);                                                                              // 206\n  }                                                                                                                    // 207\n                                                                                                                       // 208\n  // deprecated                                                                                                        // 209\n  function unregisterTransitionHook(hook) {                                                                            // 210\n    history.unregisterTransitionHook(hook);                                                                            // 211\n                                                                                                                       // 212\n    if (--listenerCount === 0) stopHashChangeListener();                                                               // 213\n  }                                                                                                                    // 214\n                                                                                                                       // 215\n  // deprecated                                                                                                        // 216\n  function pushState(state, path) {                                                                                    // 217\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n                                                                                                                       // 219\n    history.pushState(state, path);                                                                                    // 220\n  }                                                                                                                    // 221\n                                                                                                                       // 222\n  // deprecated                                                                                                        // 223\n  function replaceState(state, path) {                                                                                 // 224\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n                                                                                                                       // 226\n    history.replaceState(state, path);                                                                                 // 227\n  }                                                                                                                    // 228\n                                                                                                                       // 229\n  return _extends({}, history, {                                                                                       // 230\n    listenBefore: listenBefore,                                                                                        // 231\n    listen: listen,                                                                                                    // 232\n    push: push,                                                                                                        // 233\n    replace: replace,                                                                                                  // 234\n    go: go,                                                                                                            // 235\n    createHref: createHref,                                                                                            // 236\n                                                                                                                       // 237\n    registerTransitionHook: registerTransitionHook, // deprecated - warning is in createHistory                        // 238\n    unregisterTransitionHook: unregisterTransitionHook, // deprecated - warning is in createHistory                    // 239\n    pushState: pushState, // deprecated - warning is in createHistory                                                  // 240\n    replaceState: replaceState // deprecated - warning is in createHistory                                             // 241\n  });                                                                                                                  // 242\n}                                                                                                                      // 243\n                                                                                                                       // 244\nexports['default'] = createHashHistory;                                                                                // 245\nmodule.exports = exports['default'];                                                                                   // 246\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./Actions\":64,\"./DOMStateStorage\":66,\"./DOMUtils\":67,\"./ExecutionEnvironment\":68,\"./PathUtils\":69,\"./createDOMHistory\":71,\"_process\":1,\"invariant\":85,\"warning\":86}],73:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _warning = require('warning');                                                                                     // 9\n                                                                                                                       // 10\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 11\n                                                                                                                       // 12\nvar _deepEqual = require('deep-equal');                                                                                // 13\n                                                                                                                       // 14\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);                                                                  // 15\n                                                                                                                       // 16\nvar _PathUtils = require('./PathUtils');                                                                               // 17\n                                                                                                                       // 18\nvar _AsyncUtils = require('./AsyncUtils');                                                                             // 19\n                                                                                                                       // 20\nvar _Actions = require('./Actions');                                                                                   // 21\n                                                                                                                       // 22\nvar _createLocation2 = require('./createLocation');                                                                    // 23\n                                                                                                                       // 24\nvar _createLocation3 = _interopRequireDefault(_createLocation2);                                                       // 25\n                                                                                                                       // 26\nvar _runTransitionHook = require('./runTransitionHook');                                                               // 27\n                                                                                                                       // 28\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);                                                  // 29\n                                                                                                                       // 30\nvar _deprecate = require('./deprecate');                                                                               // 31\n                                                                                                                       // 32\nvar _deprecate2 = _interopRequireDefault(_deprecate);                                                                  // 33\n                                                                                                                       // 34\nfunction createRandomKey(length) {                                                                                     // 35\n  return Math.random().toString(36).substr(2, length);                                                                 // 36\n}                                                                                                                      // 37\n                                                                                                                       // 38\nfunction locationsAreEqual(a, b) {                                                                                     // 39\n  return a.pathname === b.pathname && a.search === b.search &&                                                         // 40\n  //a.action === b.action && // Different action !== location change.                                                  // 41\n  a.key === b.key && _deepEqual2['default'](a.state, b.state);                                                         // 42\n}                                                                                                                      // 43\n                                                                                                                       // 44\nvar DefaultKeyLength = 6;                                                                                              // 45\n                                                                                                                       // 46\nfunction createHistory() {                                                                                             // 47\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];                               // 48\n  var getCurrentLocation = options.getCurrentLocation;                                                                 // 49\n  var finishTransition = options.finishTransition;                                                                     // 50\n  var saveState = options.saveState;                                                                                   // 51\n  var go = options.go;                                                                                                 // 52\n  var keyLength = options.keyLength;                                                                                   // 53\n  var getUserConfirmation = options.getUserConfirmation;                                                               // 54\n                                                                                                                       // 55\n  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;                                                     // 56\n                                                                                                                       // 57\n  var transitionHooks = [];                                                                                            // 58\n                                                                                                                       // 59\n  function listenBefore(hook) {                                                                                        // 60\n    transitionHooks.push(hook);                                                                                        // 61\n                                                                                                                       // 62\n    return function () {                                                                                               // 63\n      transitionHooks = transitionHooks.filter(function (item) {                                                       // 64\n        return item !== hook;                                                                                          // 65\n      });                                                                                                              // 66\n    };                                                                                                                 // 67\n  }                                                                                                                    // 68\n                                                                                                                       // 69\n  var allKeys = [];                                                                                                    // 70\n  var changeListeners = [];                                                                                            // 71\n  var location = undefined;                                                                                            // 72\n                                                                                                                       // 73\n  function getCurrent() {                                                                                              // 74\n    if (pendingLocation && pendingLocation.action === _Actions.POP) {                                                  // 75\n      return allKeys.indexOf(pendingLocation.key);                                                                     // 76\n    } else if (location) {                                                                                             // 77\n      return allKeys.indexOf(location.key);                                                                            // 78\n    } else {                                                                                                           // 79\n      return -1;                                                                                                       // 80\n    }                                                                                                                  // 81\n  }                                                                                                                    // 82\n                                                                                                                       // 83\n  function updateLocation(newLocation) {                                                                               // 84\n    var current = getCurrent();                                                                                        // 85\n                                                                                                                       // 86\n    location = newLocation;                                                                                            // 87\n                                                                                                                       // 88\n    if (location.action === _Actions.PUSH) {                                                                           // 89\n      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);                                              // 90\n    } else if (location.action === _Actions.REPLACE) {                                                                 // 91\n      allKeys[current] = location.key;                                                                                 // 92\n    }                                                                                                                  // 93\n                                                                                                                       // 94\n    changeListeners.forEach(function (listener) {                                                                      // 95\n      listener(location);                                                                                              // 96\n    });                                                                                                                // 97\n  }                                                                                                                    // 98\n                                                                                                                       // 99\n  function listen(listener) {                                                                                          // 100\n    changeListeners.push(listener);                                                                                    // 101\n                                                                                                                       // 102\n    if (location) {                                                                                                    // 103\n      listener(location);                                                                                              // 104\n    } else {                                                                                                           // 105\n      var _location = getCurrentLocation();                                                                            // 106\n      allKeys = [_location.key];                                                                                       // 107\n      updateLocation(_location);                                                                                       // 108\n    }                                                                                                                  // 109\n                                                                                                                       // 110\n    return function () {                                                                                               // 111\n      changeListeners = changeListeners.filter(function (item) {                                                       // 112\n        return item !== listener;                                                                                      // 113\n      });                                                                                                              // 114\n    };                                                                                                                 // 115\n  }                                                                                                                    // 116\n                                                                                                                       // 117\n  function confirmTransitionTo(location, callback) {                                                                   // 118\n    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {                                       // 119\n      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {                             // 120\n        if (result != null) {                                                                                          // 121\n          done(result);                                                                                                // 122\n        } else {                                                                                                       // 123\n          next();                                                                                                      // 124\n        }                                                                                                              // 125\n      });                                                                                                              // 126\n    }, function (message) {                                                                                            // 127\n      if (getUserConfirmation && typeof message === 'string') {                                                        // 128\n        getUserConfirmation(message, function (ok) {                                                                   // 129\n          callback(ok !== false);                                                                                      // 130\n        });                                                                                                            // 131\n      } else {                                                                                                         // 132\n        callback(message !== false);                                                                                   // 133\n      }                                                                                                                // 134\n    });                                                                                                                // 135\n  }                                                                                                                    // 136\n                                                                                                                       // 137\n  var pendingLocation = undefined;                                                                                     // 138\n                                                                                                                       // 139\n  function transitionTo(nextLocation) {                                                                                // 140\n    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.                               // 141\n                                                                                                                       // 142\n    pendingLocation = nextLocation;                                                                                    // 143\n                                                                                                                       // 144\n    confirmTransitionTo(nextLocation, function (ok) {                                                                  // 145\n      if (pendingLocation !== nextLocation) return; // Transition was interrupted.                                     // 146\n                                                                                                                       // 147\n      if (ok) {                                                                                                        // 148\n        // treat PUSH to current path like REPLACE to be consistent with browsers                                      // 149\n        if (nextLocation.action === _Actions.PUSH) {                                                                   // 150\n          var prevPath = createPath(location);                                                                         // 151\n          var nextPath = createPath(nextLocation);                                                                     // 152\n                                                                                                                       // 153\n          if (nextPath === prevPath && _deepEqual2['default'](location.state, nextLocation.state)) nextLocation.action = _Actions.REPLACE;\n        }                                                                                                              // 155\n                                                                                                                       // 156\n        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);                                    // 157\n      } else if (location && nextLocation.action === _Actions.POP) {                                                   // 158\n        var prevIndex = allKeys.indexOf(location.key);                                                                 // 159\n        var nextIndex = allKeys.indexOf(nextLocation.key);                                                             // 160\n                                                                                                                       // 161\n        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.                       // 162\n      }                                                                                                                // 163\n    });                                                                                                                // 164\n  }                                                                                                                    // 165\n                                                                                                                       // 166\n  function push(location) {                                                                                            // 167\n    transitionTo(createLocation(location, _Actions.PUSH, createKey()));                                                // 168\n  }                                                                                                                    // 169\n                                                                                                                       // 170\n  function replace(location) {                                                                                         // 171\n    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));                                             // 172\n  }                                                                                                                    // 173\n                                                                                                                       // 174\n  function goBack() {                                                                                                  // 175\n    go(-1);                                                                                                            // 176\n  }                                                                                                                    // 177\n                                                                                                                       // 178\n  function goForward() {                                                                                               // 179\n    go(1);                                                                                                             // 180\n  }                                                                                                                    // 181\n                                                                                                                       // 182\n  function createKey() {                                                                                               // 183\n    return createRandomKey(keyLength);                                                                                 // 184\n  }                                                                                                                    // 185\n                                                                                                                       // 186\n  function createPath(location) {                                                                                      // 187\n    if (location == null || typeof location === 'string') return location;                                             // 188\n                                                                                                                       // 189\n    var pathname = location.pathname;                                                                                  // 190\n    var search = location.search;                                                                                      // 191\n    var hash = location.hash;                                                                                          // 192\n                                                                                                                       // 193\n    var result = pathname;                                                                                             // 194\n                                                                                                                       // 195\n    if (search) result += search;                                                                                      // 196\n                                                                                                                       // 197\n    if (hash) result += hash;                                                                                          // 198\n                                                                                                                       // 199\n    return result;                                                                                                     // 200\n  }                                                                                                                    // 201\n                                                                                                                       // 202\n  function createHref(location) {                                                                                      // 203\n    return createPath(location);                                                                                       // 204\n  }                                                                                                                    // 205\n                                                                                                                       // 206\n  function createLocation(location, action) {                                                                          // 207\n    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];                        // 208\n                                                                                                                       // 209\n    if (typeof action === 'object') {                                                                                  // 210\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to history.createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;\n                                                                                                                       // 212\n      if (typeof location === 'string') location = _PathUtils.parsePath(location);                                     // 213\n                                                                                                                       // 214\n      location = _extends({}, location, { state: action });                                                            // 215\n                                                                                                                       // 216\n      action = key;                                                                                                    // 217\n      key = arguments[3] || createKey();                                                                               // 218\n    }                                                                                                                  // 219\n                                                                                                                       // 220\n    return _createLocation3['default'](location, action, key);                                                         // 221\n  }                                                                                                                    // 222\n                                                                                                                       // 223\n  // deprecated                                                                                                        // 224\n  function setState(state) {                                                                                           // 225\n    if (location) {                                                                                                    // 226\n      updateLocationState(location, state);                                                                            // 227\n      updateLocation(location);                                                                                        // 228\n    } else {                                                                                                           // 229\n      updateLocationState(getCurrentLocation(), state);                                                                // 230\n    }                                                                                                                  // 231\n  }                                                                                                                    // 232\n                                                                                                                       // 233\n  function updateLocationState(location, state) {                                                                      // 234\n    location.state = _extends({}, location.state, state);                                                              // 235\n    saveState(location.key, location.state);                                                                           // 236\n  }                                                                                                                    // 237\n                                                                                                                       // 238\n  // deprecated                                                                                                        // 239\n  function registerTransitionHook(hook) {                                                                              // 240\n    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);                                              // 241\n  }                                                                                                                    // 242\n                                                                                                                       // 243\n  // deprecated                                                                                                        // 244\n  function unregisterTransitionHook(hook) {                                                                            // 245\n    transitionHooks = transitionHooks.filter(function (item) {                                                         // 246\n      return item !== hook;                                                                                            // 247\n    });                                                                                                                // 248\n  }                                                                                                                    // 249\n                                                                                                                       // 250\n  // deprecated                                                                                                        // 251\n  function pushState(state, path) {                                                                                    // 252\n    if (typeof path === 'string') path = _PathUtils.parsePath(path);                                                   // 253\n                                                                                                                       // 254\n    push(_extends({ state: state }, path));                                                                            // 255\n  }                                                                                                                    // 256\n                                                                                                                       // 257\n  // deprecated                                                                                                        // 258\n  function replaceState(state, path) {                                                                                 // 259\n    if (typeof path === 'string') path = _PathUtils.parsePath(path);                                                   // 260\n                                                                                                                       // 261\n    replace(_extends({ state: state }, path));                                                                         // 262\n  }                                                                                                                    // 263\n                                                                                                                       // 264\n  return {                                                                                                             // 265\n    listenBefore: listenBefore,                                                                                        // 266\n    listen: listen,                                                                                                    // 267\n    transitionTo: transitionTo,                                                                                        // 268\n    push: push,                                                                                                        // 269\n    replace: replace,                                                                                                  // 270\n    go: go,                                                                                                            // 271\n    goBack: goBack,                                                                                                    // 272\n    goForward: goForward,                                                                                              // 273\n    createKey: createKey,                                                                                              // 274\n    createPath: createPath,                                                                                            // 275\n    createHref: createHref,                                                                                            // 276\n    createLocation: createLocation,                                                                                    // 277\n                                                                                                                       // 278\n    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),      // 279\n    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),\n    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),\n    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),                         // 282\n    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')              // 283\n  };                                                                                                                   // 284\n}                                                                                                                      // 285\n                                                                                                                       // 286\nexports['default'] = createHistory;                                                                                    // 287\nmodule.exports = exports['default'];                                                                                   // 288\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./Actions\":64,\"./AsyncUtils\":65,\"./PathUtils\":69,\"./createLocation\":74,\"./deprecate\":76,\"./runTransitionHook\":77,\"_process\":1,\"deep-equal\":80,\"warning\":86}],74:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _warning = require('warning');                                                                                     // 9\n                                                                                                                       // 10\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 11\n                                                                                                                       // 12\nvar _Actions = require('./Actions');                                                                                   // 13\n                                                                                                                       // 14\nvar _PathUtils = require('./PathUtils');                                                                               // 15\n                                                                                                                       // 16\nfunction createLocation() {                                                                                            // 17\n  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];                             // 18\n  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];                      // 19\n  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];                                 // 20\n                                                                                                                       // 21\n  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];                          // 22\n                                                                                                                       // 23\n  if (typeof location === 'string') location = _PathUtils.parsePath(location);                                         // 24\n                                                                                                                       // 25\n  if (typeof action === 'object') {                                                                                    // 26\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;\n                                                                                                                       // 28\n    location = _extends({}, location, { state: action });                                                              // 29\n                                                                                                                       // 30\n    action = key || _Actions.POP;                                                                                      // 31\n    key = _fourthArg;                                                                                                  // 32\n  }                                                                                                                    // 33\n                                                                                                                       // 34\n  var pathname = location.pathname || '/';                                                                             // 35\n  var search = location.search || '';                                                                                  // 36\n  var hash = location.hash || '';                                                                                      // 37\n  var state = location.state || null;                                                                                  // 38\n                                                                                                                       // 39\n  return {                                                                                                             // 40\n    pathname: pathname,                                                                                                // 41\n    search: search,                                                                                                    // 42\n    hash: hash,                                                                                                        // 43\n    state: state,                                                                                                      // 44\n    action: action,                                                                                                    // 45\n    key: key                                                                                                           // 46\n  };                                                                                                                   // 47\n}                                                                                                                      // 48\n                                                                                                                       // 49\nexports['default'] = createLocation;                                                                                   // 50\nmodule.exports = exports['default'];                                                                                   // 51\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./Actions\":64,\"./PathUtils\":69,\"_process\":1,\"warning\":86}],75:[function(require,module,exports){                   //\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nvar _warning = require('warning');                                                                                     // 9\n                                                                                                                       // 10\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 11\n                                                                                                                       // 12\nvar _invariant = require('invariant');                                                                                 // 13\n                                                                                                                       // 14\nvar _invariant2 = _interopRequireDefault(_invariant);                                                                  // 15\n                                                                                                                       // 16\nvar _PathUtils = require('./PathUtils');                                                                               // 17\n                                                                                                                       // 18\nvar _Actions = require('./Actions');                                                                                   // 19\n                                                                                                                       // 20\nvar _createHistory = require('./createHistory');                                                                       // 21\n                                                                                                                       // 22\nvar _createHistory2 = _interopRequireDefault(_createHistory);                                                          // 23\n                                                                                                                       // 24\nfunction createStateStorage(entries) {                                                                                 // 25\n  return entries.filter(function (entry) {                                                                             // 26\n    return entry.state;                                                                                                // 27\n  }).reduce(function (memo, entry) {                                                                                   // 28\n    memo[entry.key] = entry.state;                                                                                     // 29\n    return memo;                                                                                                       // 30\n  }, {});                                                                                                              // 31\n}                                                                                                                      // 32\n                                                                                                                       // 33\nfunction createMemoryHistory() {                                                                                       // 34\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];                               // 35\n                                                                                                                       // 36\n  if (Array.isArray(options)) {                                                                                        // 37\n    options = { entries: options };                                                                                    // 38\n  } else if (typeof options === 'string') {                                                                            // 39\n    options = { entries: [options] };                                                                                  // 40\n  }                                                                                                                    // 41\n                                                                                                                       // 42\n  var history = _createHistory2['default'](_extends({}, options, {                                                     // 43\n    getCurrentLocation: getCurrentLocation,                                                                            // 44\n    finishTransition: finishTransition,                                                                                // 45\n    saveState: saveState,                                                                                              // 46\n    go: go                                                                                                             // 47\n  }));                                                                                                                 // 48\n                                                                                                                       // 49\n  var _options = options;                                                                                              // 50\n  var entries = _options.entries;                                                                                      // 51\n  var current = _options.current;                                                                                      // 52\n                                                                                                                       // 53\n  if (typeof entries === 'string') {                                                                                   // 54\n    entries = [entries];                                                                                               // 55\n  } else if (!Array.isArray(entries)) {                                                                                // 56\n    entries = ['/'];                                                                                                   // 57\n  }                                                                                                                    // 58\n                                                                                                                       // 59\n  entries = entries.map(function (entry) {                                                                             // 60\n    var key = history.createKey();                                                                                     // 61\n                                                                                                                       // 62\n    if (typeof entry === 'string') return { pathname: entry, key: key };                                               // 63\n                                                                                                                       // 64\n    if (typeof entry === 'object' && entry) return _extends({}, entry, { key: key });                                  // 65\n                                                                                                                       // 66\n    !false ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Unable to create history entry from %s', entry) : _invariant2['default'](false) : undefined;\n  });                                                                                                                  // 68\n                                                                                                                       // 69\n  if (current == null) {                                                                                               // 70\n    current = entries.length - 1;                                                                                      // 71\n  } else {                                                                                                             // 72\n    !(current >= 0 && current < entries.length) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : _invariant2['default'](false) : undefined;\n  }                                                                                                                    // 74\n                                                                                                                       // 75\n  var storage = createStateStorage(entries);                                                                           // 76\n                                                                                                                       // 77\n  function saveState(key, state) {                                                                                     // 78\n    storage[key] = state;                                                                                              // 79\n  }                                                                                                                    // 80\n                                                                                                                       // 81\n  function readState(key) {                                                                                            // 82\n    return storage[key];                                                                                               // 83\n  }                                                                                                                    // 84\n                                                                                                                       // 85\n  function getCurrentLocation() {                                                                                      // 86\n    var entry = entries[current];                                                                                      // 87\n    var key = entry.key;                                                                                               // 88\n    var basename = entry.basename;                                                                                     // 89\n    var pathname = entry.pathname;                                                                                     // 90\n    var search = entry.search;                                                                                         // 91\n                                                                                                                       // 92\n    var path = (basename || '') + pathname + (search || '');                                                           // 93\n                                                                                                                       // 94\n    var state = undefined;                                                                                             // 95\n    if (key) {                                                                                                         // 96\n      state = readState(key);                                                                                          // 97\n    } else {                                                                                                           // 98\n      state = null;                                                                                                    // 99\n      key = history.createKey();                                                                                       // 100\n      entry.key = key;                                                                                                 // 101\n    }                                                                                                                  // 102\n                                                                                                                       // 103\n    var location = _PathUtils.parsePath(path);                                                                         // 104\n                                                                                                                       // 105\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);                           // 106\n  }                                                                                                                    // 107\n                                                                                                                       // 108\n  function canGo(n) {                                                                                                  // 109\n    var index = current + n;                                                                                           // 110\n    return index >= 0 && index < entries.length;                                                                       // 111\n  }                                                                                                                    // 112\n                                                                                                                       // 113\n  function go(n) {                                                                                                     // 114\n    if (n) {                                                                                                           // 115\n      if (!canGo(n)) {                                                                                                 // 116\n        process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'Cannot go(%s) there is not enough history', n) : undefined;\n        return;                                                                                                        // 118\n      }                                                                                                                // 119\n                                                                                                                       // 120\n      current += n;                                                                                                    // 121\n                                                                                                                       // 122\n      var currentLocation = getCurrentLocation();                                                                      // 123\n                                                                                                                       // 124\n      // change action to POP                                                                                          // 125\n      history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));                                   // 126\n    }                                                                                                                  // 127\n  }                                                                                                                    // 128\n                                                                                                                       // 129\n  function finishTransition(location) {                                                                                // 130\n    switch (location.action) {                                                                                         // 131\n      case _Actions.PUSH:                                                                                              // 132\n        current += 1;                                                                                                  // 133\n                                                                                                                       // 134\n        // if we are not on the top of stack                                                                           // 135\n        // remove rest and push new                                                                                    // 136\n        if (current < entries.length) entries.splice(current);                                                         // 137\n                                                                                                                       // 138\n        entries.push(location);                                                                                        // 139\n        saveState(location.key, location.state);                                                                       // 140\n        break;                                                                                                         // 141\n      case _Actions.REPLACE:                                                                                           // 142\n        entries[current] = location;                                                                                   // 143\n        saveState(location.key, location.state);                                                                       // 144\n        break;                                                                                                         // 145\n    }                                                                                                                  // 146\n  }                                                                                                                    // 147\n                                                                                                                       // 148\n  return history;                                                                                                      // 149\n}                                                                                                                      // 150\n                                                                                                                       // 151\nexports['default'] = createMemoryHistory;                                                                              // 152\nmodule.exports = exports['default'];                                                                                   // 153\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./Actions\":64,\"./PathUtils\":69,\"./createHistory\":73,\"_process\":1,\"invariant\":85,\"warning\":86}],76:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _warning = require('warning');                                                                                     // 7\n                                                                                                                       // 8\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 9\n                                                                                                                       // 10\nfunction deprecate(fn, message) {                                                                                      // 11\n  return function () {                                                                                                 // 12\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] ' + message) : undefined;           // 13\n    return fn.apply(this, arguments);                                                                                  // 14\n  };                                                                                                                   // 15\n}                                                                                                                      // 16\n                                                                                                                       // 17\nexports['default'] = deprecate;                                                                                        // 18\nmodule.exports = exports['default'];                                                                                   // 19\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"_process\":1,\"warning\":86}],77:[function(require,module,exports){                                                   //\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 5\n                                                                                                                       // 6\nvar _warning = require('warning');                                                                                     // 7\n                                                                                                                       // 8\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 9\n                                                                                                                       // 10\nfunction runTransitionHook(hook, location, callback) {                                                                 // 11\n  var result = hook(location, callback);                                                                               // 12\n                                                                                                                       // 13\n  if (hook.length < 2) {                                                                                               // 14\n    // Assume the hook runs synchronously and automatically                                                            // 15\n    // call the callback with the return value.                                                                        // 16\n    callback(result);                                                                                                  // 17\n  } else {                                                                                                             // 18\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not \"return\" in a transition hook with a callback argument; call the callback instead') : undefined;\n  }                                                                                                                    // 20\n}                                                                                                                      // 21\n                                                                                                                       // 22\nexports['default'] = runTransitionHook;                                                                                // 23\nmodule.exports = exports['default'];                                                                                   // 24\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"_process\":1,\"warning\":86}],78:[function(require,module,exports){                                                   //\narguments[4][20][0].apply(exports,arguments)                                                                           //\n},{\"./ExecutionEnvironment\":68,\"./PathUtils\":69,\"./deprecate\":76,\"./runTransitionHook\":77,\"dup\":20}],79:[function(require,module,exports){\n(function (process){                                                                                                   //\n'use strict';                                                                                                          // 1\n                                                                                                                       // 2\nexports.__esModule = true;                                                                                             // 3\n                                                                                                                       // 4\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n                                                                                                                       // 6\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }                      // 7\n                                                                                                                       // 8\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n                                                                                                                       // 10\nvar _warning = require('warning');                                                                                     // 11\n                                                                                                                       // 12\nvar _warning2 = _interopRequireDefault(_warning);                                                                      // 13\n                                                                                                                       // 14\nvar _queryString = require('query-string');                                                                            // 15\n                                                                                                                       // 16\nvar _runTransitionHook = require('./runTransitionHook');                                                               // 17\n                                                                                                                       // 18\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);                                                  // 19\n                                                                                                                       // 20\nvar _PathUtils = require('./PathUtils');                                                                               // 21\n                                                                                                                       // 22\nvar _deprecate = require('./deprecate');                                                                               // 23\n                                                                                                                       // 24\nvar _deprecate2 = _interopRequireDefault(_deprecate);                                                                  // 25\n                                                                                                                       // 26\nvar SEARCH_BASE_KEY = '$searchBase';                                                                                   // 27\n                                                                                                                       // 28\nfunction defaultStringifyQuery(query) {                                                                                // 29\n  return _queryString.stringify(query).replace(/%20/g, '+');                                                           // 30\n}                                                                                                                      // 31\n                                                                                                                       // 32\nvar defaultParseQueryString = _queryString.parse;                                                                      // 33\n                                                                                                                       // 34\nfunction isNestedObject(object) {                                                                                      // 35\n  for (var p in object) {                                                                                              // 36\n    if (object.hasOwnProperty(p) && typeof object[p] === 'object' && !Array.isArray(object[p]) && object[p] !== null) return true;\n  }return false;                                                                                                       // 38\n}                                                                                                                      // 39\n                                                                                                                       // 40\n/**                                                                                                                    // 41\n * Returns a new createHistory function that may be used to create                                                     // 42\n * history objects that know how to handle URL queries.                                                                // 43\n */                                                                                                                    // 44\nfunction useQueries(createHistory) {                                                                                   // 45\n  return function () {                                                                                                 // 46\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];                             // 47\n    var stringifyQuery = options.stringifyQuery;                                                                       // 48\n    var parseQueryString = options.parseQueryString;                                                                   // 49\n                                                                                                                       // 50\n    var historyOptions = _objectWithoutProperties(options, ['stringifyQuery', 'parseQueryString']);                    // 51\n                                                                                                                       // 52\n    var history = createHistory(historyOptions);                                                                       // 53\n                                                                                                                       // 54\n    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;                                  // 55\n                                                                                                                       // 56\n    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;                            // 57\n                                                                                                                       // 58\n    function addQuery(location) {                                                                                      // 59\n      if (location.query == null) {                                                                                    // 60\n        var search = location.search;                                                                                  // 61\n                                                                                                                       // 62\n        location.query = parseQueryString(search.substring(1));                                                        // 63\n        location[SEARCH_BASE_KEY] = { search: search, searchBase: '' };                                                // 64\n      }                                                                                                                // 65\n                                                                                                                       // 66\n      // TODO: Instead of all the book-keeping here, this should just strip the                                        // 67\n      // stringified query from the search.                                                                            // 68\n                                                                                                                       // 69\n      return location;                                                                                                 // 70\n    }                                                                                                                  // 71\n                                                                                                                       // 72\n    function appendQuery(location, query) {                                                                            // 73\n      var _extends2;                                                                                                   // 74\n                                                                                                                       // 75\n      var searchBaseSpec = location[SEARCH_BASE_KEY];                                                                  // 76\n      var queryString = query ? stringifyQuery(query) : '';                                                            // 77\n      if (!searchBaseSpec && !queryString) {                                                                           // 78\n        return location;                                                                                               // 79\n      }                                                                                                                // 80\n                                                                                                                       // 81\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](stringifyQuery !== defaultStringifyQuery || !isNestedObject(query), 'useQueries does not stringify nested query objects by default; ' + 'use a custom stringifyQuery function') : undefined;\n                                                                                                                       // 83\n      if (typeof location === 'string') location = _PathUtils.parsePath(location);                                     // 84\n                                                                                                                       // 85\n      var searchBase = undefined;                                                                                      // 86\n      if (searchBaseSpec && location.search === searchBaseSpec.search) {                                               // 87\n        searchBase = searchBaseSpec.searchBase;                                                                        // 88\n      } else {                                                                                                         // 89\n        searchBase = location.search || '';                                                                            // 90\n      }                                                                                                                // 91\n                                                                                                                       // 92\n      var search = searchBase;                                                                                         // 93\n      if (queryString) {                                                                                               // 94\n        search += (search ? '&' : '?') + queryString;                                                                  // 95\n      }                                                                                                                // 96\n                                                                                                                       // 97\n      return _extends({}, location, (_extends2 = {                                                                     // 98\n        search: search                                                                                                 // 99\n      }, _extends2[SEARCH_BASE_KEY] = { search: search, searchBase: searchBase }, _extends2));                         // 100\n    }                                                                                                                  // 101\n                                                                                                                       // 102\n    // Override all read methods with query-aware versions.                                                            // 103\n    function listenBefore(hook) {                                                                                      // 104\n      return history.listenBefore(function (location, callback) {                                                      // 105\n        _runTransitionHook2['default'](hook, addQuery(location), callback);                                            // 106\n      });                                                                                                              // 107\n    }                                                                                                                  // 108\n                                                                                                                       // 109\n    function listen(listener) {                                                                                        // 110\n      return history.listen(function (location) {                                                                      // 111\n        listener(addQuery(location));                                                                                  // 112\n      });                                                                                                              // 113\n    }                                                                                                                  // 114\n                                                                                                                       // 115\n    // Override all write methods with query-aware versions.                                                           // 116\n    function push(location) {                                                                                          // 117\n      history.push(appendQuery(location, location.query));                                                             // 118\n    }                                                                                                                  // 119\n                                                                                                                       // 120\n    function replace(location) {                                                                                       // 121\n      history.replace(appendQuery(location, location.query));                                                          // 122\n    }                                                                                                                  // 123\n                                                                                                                       // 124\n    function createPath(location, query) {                                                                             // 125\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](!query, 'the query argument to createPath is deprecated; use a location descriptor instead') : undefined;\n                                                                                                                       // 127\n      return history.createPath(appendQuery(location, query || location.query));                                       // 128\n    }                                                                                                                  // 129\n                                                                                                                       // 130\n    function createHref(location, query) {                                                                             // 131\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](!query, 'the query argument to createHref is deprecated; use a location descriptor instead') : undefined;\n                                                                                                                       // 133\n      return history.createHref(appendQuery(location, query || location.query));                                       // 134\n    }                                                                                                                  // 135\n                                                                                                                       // 136\n    function createLocation(location) {                                                                                // 137\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {        // 138\n        args[_key - 1] = arguments[_key];                                                                              // 139\n      }                                                                                                                // 140\n                                                                                                                       // 141\n      var fullLocation = history.createLocation.apply(history, [appendQuery(location, location.query)].concat(args));  // 142\n      if (location.query) {                                                                                            // 143\n        fullLocation.query = location.query;                                                                           // 144\n      }                                                                                                                // 145\n      return addQuery(fullLocation);                                                                                   // 146\n    }                                                                                                                  // 147\n                                                                                                                       // 148\n    // deprecated                                                                                                      // 149\n    function pushState(state, path, query) {                                                                           // 150\n      if (typeof path === 'string') path = _PathUtils.parsePath(path);                                                 // 151\n                                                                                                                       // 152\n      push(_extends({ state: state }, path, { query: query }));                                                        // 153\n    }                                                                                                                  // 154\n                                                                                                                       // 155\n    // deprecated                                                                                                      // 156\n    function replaceState(state, path, query) {                                                                        // 157\n      if (typeof path === 'string') path = _PathUtils.parsePath(path);                                                 // 158\n                                                                                                                       // 159\n      replace(_extends({ state: state }, path, { query: query }));                                                     // 160\n    }                                                                                                                  // 161\n                                                                                                                       // 162\n    return _extends({}, history, {                                                                                     // 163\n      listenBefore: listenBefore,                                                                                      // 164\n      listen: listen,                                                                                                  // 165\n      push: push,                                                                                                      // 166\n      replace: replace,                                                                                                // 167\n      createPath: createPath,                                                                                          // 168\n      createHref: createHref,                                                                                          // 169\n      createLocation: createLocation,                                                                                  // 170\n                                                                                                                       // 171\n      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),                       // 172\n      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')            // 173\n    });                                                                                                                // 174\n  };                                                                                                                   // 175\n}                                                                                                                      // 176\n                                                                                                                       // 177\nexports['default'] = useQueries;                                                                                       // 178\nmodule.exports = exports['default'];                                                                                   // 179\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"./PathUtils\":69,\"./deprecate\":76,\"./runTransitionHook\":77,\"_process\":1,\"query-string\":83,\"warning\":86}],80:[function(require,module,exports){\narguments[4][23][0].apply(exports,arguments)                                                                           //\n},{\"./lib/is_arguments.js\":81,\"./lib/keys.js\":82,\"dup\":23}],81:[function(require,module,exports){                      //\narguments[4][24][0].apply(exports,arguments)                                                                           //\n},{\"dup\":24}],82:[function(require,module,exports){                                                                    //\narguments[4][25][0].apply(exports,arguments)                                                                           //\n},{\"dup\":25}],83:[function(require,module,exports){                                                                    //\narguments[4][27][0].apply(exports,arguments)                                                                           //\n},{\"dup\":27,\"strict-uri-encode\":84}],84:[function(require,module,exports){                                             //\narguments[4][28][0].apply(exports,arguments)                                                                           //\n},{\"dup\":28}],85:[function(require,module,exports){                                                                    //\n(function (process){                                                                                                   //\n/**                                                                                                                    // 1\n * Copyright 2013-2015, Facebook, Inc.                                                                                 // 2\n * All rights reserved.                                                                                                // 3\n *                                                                                                                     // 4\n * This source code is licensed under the BSD-style license found in the                                               // 5\n * LICENSE file in the root directory of this source tree. An additional grant                                         // 6\n * of patent rights can be found in the PATENTS file in the same directory.                                            // 7\n */                                                                                                                    // 8\n                                                                                                                       // 9\n'use strict';                                                                                                          // 10\n                                                                                                                       // 11\n/**                                                                                                                    // 12\n * Use invariant() to assert state which your program assumes to be true.                                              // 13\n *                                                                                                                     // 14\n * Provide sprintf-style format (only %s is supported) and arguments                                                   // 15\n * to provide information about what broke and what you were                                                           // 16\n * expecting.                                                                                                          // 17\n *                                                                                                                     // 18\n * The invariant message will be stripped in production, but the invariant                                             // 19\n * will remain to ensure logic does not differ in production.                                                          // 20\n */                                                                                                                    // 21\n                                                                                                                       // 22\nvar invariant = function(condition, format, a, b, c, d, e, f) {                                                        // 23\n  if (process.env.NODE_ENV !== 'production') {                                                                         // 24\n    if (format === undefined) {                                                                                        // 25\n      throw new Error('invariant requires an error message argument');                                                 // 26\n    }                                                                                                                  // 27\n  }                                                                                                                    // 28\n                                                                                                                       // 29\n  if (!condition) {                                                                                                    // 30\n    var error;                                                                                                         // 31\n    if (format === undefined) {                                                                                        // 32\n      error = new Error(                                                                                               // 33\n        'Minified exception occurred; use the non-minified dev environment ' +                                         // 34\n        'for the full error message and additional helpful warnings.'                                                  // 35\n      );                                                                                                               // 36\n    } else {                                                                                                           // 37\n      var args = [a, b, c, d, e, f];                                                                                   // 38\n      var argIndex = 0;                                                                                                // 39\n      error = new Error(                                                                                               // 40\n        format.replace(/%s/g, function() { return args[argIndex++]; })                                                 // 41\n      );                                                                                                               // 42\n      error.name = 'Invariant Violation';                                                                              // 43\n    }                                                                                                                  // 44\n                                                                                                                       // 45\n    error.framesToPop = 1; // we don't care about invariant's own frame                                                // 46\n    throw error;                                                                                                       // 47\n  }                                                                                                                    // 48\n};                                                                                                                     // 49\n                                                                                                                       // 50\nmodule.exports = invariant;                                                                                            // 51\n                                                                                                                       // 52\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"_process\":1}],86:[function(require,module,exports){                                                                //\n(function (process){                                                                                                   //\n/**                                                                                                                    // 1\n * Copyright 2014-2015, Facebook, Inc.                                                                                 // 2\n * All rights reserved.                                                                                                // 3\n *                                                                                                                     // 4\n * This source code is licensed under the BSD-style license found in the                                               // 5\n * LICENSE file in the root directory of this source tree. An additional grant                                         // 6\n * of patent rights can be found in the PATENTS file in the same directory.                                            // 7\n */                                                                                                                    // 8\n                                                                                                                       // 9\n'use strict';                                                                                                          // 10\n                                                                                                                       // 11\n/**                                                                                                                    // 12\n * Similar to invariant but only logs a warning if the condition is not met.                                           // 13\n * This can be used to log issues in development environments in critical                                              // 14\n * paths. Removing the logging code for production environments will keep the                                          // 15\n * same logic and follow the same code paths.                                                                          // 16\n */                                                                                                                    // 17\n                                                                                                                       // 18\nvar warning = function() {};                                                                                           // 19\n                                                                                                                       // 20\nif (process.env.NODE_ENV !== 'production') {                                                                           // 21\n  warning = function(condition, format, args) {                                                                        // 22\n    var len = arguments.length;                                                                                        // 23\n    args = new Array(len > 2 ? len - 2 : 0);                                                                           // 24\n    for (var key = 2; key < len; key++) {                                                                              // 25\n      args[key - 2] = arguments[key];                                                                                  // 26\n    }                                                                                                                  // 27\n    if (format === undefined) {                                                                                        // 28\n      throw new Error(                                                                                                 // 29\n        '`warning(condition, format, ...args)` requires a warning ' +                                                  // 30\n        'message argument'                                                                                             // 31\n      );                                                                                                               // 32\n    }                                                                                                                  // 33\n                                                                                                                       // 34\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {                                                             // 35\n      throw new Error(                                                                                                 // 36\n        'The warning format should be able to uniquely identify this ' +                                               // 37\n        'warning. Please, use a more descriptive format than: ' + format                                               // 38\n      );                                                                                                               // 39\n    }                                                                                                                  // 40\n                                                                                                                       // 41\n    if (!condition) {                                                                                                  // 42\n      var argIndex = 0;                                                                                                // 43\n      var message = 'Warning: ' +                                                                                      // 44\n        format.replace(/%s/g, function() {                                                                             // 45\n          return args[argIndex++];                                                                                     // 46\n        });                                                                                                            // 47\n      if (typeof console !== 'undefined') {                                                                            // 48\n        console.error(message);                                                                                        // 49\n      }                                                                                                                // 50\n      try {                                                                                                            // 51\n        // This error was thrown as a convenience so that you can use this stack                                       // 52\n        // to find the callsite that caused this warning to fire.                                                      // 53\n        throw new Error(message);                                                                                      // 54\n      } catch(x) {}                                                                                                    // 55\n    }                                                                                                                  // 56\n  };                                                                                                                   // 57\n}                                                                                                                      // 58\n                                                                                                                       // 59\nmodule.exports = warning;                                                                                              // 60\n                                                                                                                       // 61\n}).call(this,require('_process'))                                                                                      //\n                                                                                                                       //\n},{\"_process\":1}]},{},[2])                                                                                             //\n//# sourceMappingURL=/packages/reactrouter_react-router/react-router.browserify.js                                     //\n                                                                                                                       //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['reactrouter:react-router'] = {\n  ReactRouter: ReactRouter\n};\n\n})();\n","servePath":"/packages/reactrouter_react-router.js","sourceMap":{"version":3,"sources":["../../../cosmos_browserify/.0.10.0.rgxg44++os+web.browser+web.cordova/plugin.CosmosBrowserify.os/npm/CosmosBrowserify/node_modules/browserify/node_modules/browser-pack/_prelude.js","../../../cosmos_browserify/.0.10.0.rgxg44++os+web.browser+web.cordova/plugin.CosmosBrowserify.os/npm/CosmosBrowserify/node_modules/browserify/node_modules/process/browser.js","_stream_0.js","node_modules/history/lib/Actions.js","node_modules/history/lib/AsyncUtils.js","node_modules/history/lib/DOMStateStorage.js","node_modules/history/lib/DOMUtils.js","node_modules/history/lib/ExecutionEnvironment.js","node_modules/history/lib/PathUtils.js","node_modules/history/lib/createBrowserHistory.js","node_modules/history/lib/createDOMHistory.js","node_modules/history/lib/createHashHistory.js","node_modules/history/lib/createHistory.js","node_modules/history/lib/createLocation.js","node_modules/history/lib/createMemoryHistory.js","node_modules/history/lib/deprecate.js","node_modules/history/lib/enableBeforeUnload.js","node_modules/history/lib/enableQueries.js","node_modules/history/lib/index.js","node_modules/history/lib/runTransitionHook.js","node_modules/history/lib/useBasename.js","node_modules/history/lib/useBeforeUnload.js","node_modules/history/lib/useQueries.js","node_modules/history/node_modules/deep-equal/index.js","node_modules/history/node_modules/deep-equal/lib/is_arguments.js","node_modules/history/node_modules/deep-equal/lib/keys.js","node_modules/history/node_modules/invariant/browser.js","node_modules/history/node_modules/query-string/index.js","node_modules/history/node_modules/query-string/node_modules/strict-uri-encode/index.js","node_modules/history/node_modules/warning/browser.js","node_modules/react-router/lib/AsyncUtils.js","node_modules/react-router/lib/History.js","node_modules/react-router/lib/IndexLink.js","node_modules/react-router/lib/IndexRedirect.js","node_modules/react-router/lib/IndexRoute.js","node_modules/react-router/lib/Lifecycle.js","node_modules/react-router/lib/Link.js","node_modules/react-router/lib/PatternUtils.js","node_modules/react-router/lib/PropTypes.js","node_modules/react-router/lib/Redirect.js","node_modules/react-router/lib/Route.js","node_modules/react-router/lib/RouteContext.js","node_modules/react-router/lib/RouteUtils.js","node_modules/react-router/lib/Router.js","node_modules/react-router/lib/RouterContext.js","node_modules/react-router/lib/RouterUtils.js","node_modules/react-router/lib/RoutingContext.js","node_modules/react-router/lib/TransitionUtils.js","node_modules/react-router/lib/browserHistory.js","node_modules/react-router/lib/computeChangedRoutes.js","node_modules/react-router/lib/createMemoryHistory.js","node_modules/react-router/lib/createRouterHistory.js","node_modules/react-router/lib/createTransitionManager.js","node_modules/react-router/lib/deprecateObjectProperties.js","node_modules/react-router/lib/getComponents.js","node_modules/react-router/lib/getRouteParams.js","node_modules/react-router/lib/hashHistory.js","node_modules/react-router/lib/index.js","node_modules/react-router/lib/isActive.js","node_modules/react-router/lib/match.js","node_modules/react-router/lib/matchRoutes.js","node_modules/react-router/lib/routerWarning.js","node_modules/react-router/lib/useRouterHistory.js","node_modules/react-router/lib/useRoutes.js","node_modules/react-router/node_modules/history/lib/DOMStateStorage.js","node_modules/react-router/node_modules/history/lib/PathUtils.js","node_modules/react-router/node_modules/history/lib/createBrowserHistory.js","node_modules/react-router/node_modules/history/lib/createDOMHistory.js","node_modules/react-router/node_modules/history/lib/createHashHistory.js","node_modules/react-router/node_modules/history/lib/createHistory.js","node_modules/react-router/node_modules/history/lib/createLocation.js","node_modules/react-router/node_modules/history/lib/createMemoryHistory.js","node_modules/react-router/node_modules/history/lib/deprecate.js","node_modules/react-router/node_modules/history/lib/runTransitionHook.js","node_modules/react-router/node_modules/history/lib/useQueries.js","node_modules/react-router/node_modules/invariant/browser.js","node_modules/react-router/node_modules/warning/browser.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3FA;AACA;AACA;AACA;AACA;AACA;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxvrlxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvzlLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACpnlOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvjjzJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClvSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfvhrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACxvrlxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvlLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/packages/reactrouter_react-router.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// This is required for exposify\nglobal.React = React;\n\nReactRouter = require('react-router');\nReactRouter.history = require('history');\n","/**\n * Indicates that navigation was caused by a call to history.push.\n */\n'use strict';\n\nexports.__esModule = true;\nvar PUSH = 'PUSH';\n\nexports.PUSH = PUSH;\n/**\n * Indicates that navigation was caused by a call to history.replace.\n */\nvar REPLACE = 'REPLACE';\n\nexports.REPLACE = REPLACE;\n/**\n * Indicates that navigation was caused by some other action such\n * as using a browser's back/forward buttons and/or manually manipulating\n * the URL in a browser's location bar. This is the default.\n *\n * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate\n * for more information.\n */\nvar POP = 'POP';\n\nexports.POP = POP;\nexports['default'] = {\n  PUSH: PUSH,\n  REPLACE: REPLACE,\n  POP: POP\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.loopAsync = loopAsync;\n\nfunction loopAsync(turns, work, callback) {\n  var currentTurn = 0;\n  var isDone = false;\n\n  function done() {\n    isDone = true;\n    callback.apply(this, arguments);\n  }\n\n  function next() {\n    if (isDone) return;\n\n    if (currentTurn < turns) {\n      work.call(this, currentTurn++, next, done);\n    } else {\n      done.apply(this, arguments);\n    }\n  }\n\n  next();\n}","/*eslint-disable no-empty */\n'use strict';\n\nexports.__esModule = true;\nexports.saveState = saveState;\nexports.readState = readState;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar KeyPrefix = '@@History/';\nvar QuotaExceededErrors = ['QuotaExceededError', 'QUOTA_EXCEEDED_ERR'];\n\nvar SecurityError = 'SecurityError';\n\nfunction createKey(key) {\n  return KeyPrefix + key;\n}\n\nfunction saveState(key, state) {\n  try {\n    if (state == null) {\n      window.sessionStorage.removeItem(createKey(key));\n    } else {\n      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n    }\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\n\n      return;\n    }\n\n    if (QuotaExceededErrors.indexOf(error.name) >= 0 && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\n\n      return;\n    }\n\n    throw error;\n  }\n}\n\nfunction readState(key) {\n  var json = undefined;\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\n\n      return null;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n\n  return null;\n}","'use strict';\n\nexports.__esModule = true;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.getHashPath = getHashPath;\nexports.replaceHashPath = replaceHashPath;\nexports.getWindowPath = getWindowPath;\nexports.go = go;\nexports.getUserConfirmation = getUserConfirmation;\nexports.supportsHistory = supportsHistory;\nexports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;\n\nfunction addEventListener(node, event, listener) {\n  if (node.addEventListener) {\n    node.addEventListener(event, listener, false);\n  } else {\n    node.attachEvent('on' + event, listener);\n  }\n}\n\nfunction removeEventListener(node, event, listener) {\n  if (node.removeEventListener) {\n    node.removeEventListener(event, listener, false);\n  } else {\n    node.detachEvent('on' + event, listener);\n  }\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  return window.location.href.split('#')[1] || '';\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(window.location.pathname + window.location.search + '#' + path);\n}\n\nfunction getWindowPath() {\n  return window.location.pathname + window.location.search + window.location.hash;\n}\n\nfunction go(n) {\n  if (n) window.history.go(n);\n}\n\nfunction getUserConfirmation(message, callback) {\n  callback(window.confirm(message));\n}\n\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {\n    return false;\n  }\n  return window.history && 'pushState' in window.history;\n}\n\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  var ua = navigator.userAgent;\n  return ua.indexOf('Firefox') === -1;\n}","'use strict';\n\nexports.__esModule = true;\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nexports.canUseDOM = canUseDOM;","'use strict';\n\nexports.__esModule = true;\nexports.extractPath = extractPath;\nexports.parsePath = parsePath;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction extractPath(string) {\n  var match = string.match(/^https?:\\/\\/[^\\/]*/);\n\n  if (match == null) return string;\n\n  return string.substring(match[0].length);\n}\n\nfunction parsePath(path) {\n  var pathname = extractPath(path);\n  var search = '';\n  var hash = '';\n\n  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like \"%s\"', path) : undefined;\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substring(hashIndex);\n    pathname = pathname.substring(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substring(searchIndex);\n    pathname = pathname.substring(0, searchIndex);\n  }\n\n  if (pathname === '') pathname = '/';\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash\n  };\n}","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _Actions = require('./Actions');\n\nvar _PathUtils = require('./PathUtils');\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _DOMStateStorage = require('./DOMStateStorage');\n\nvar _createDOMHistory = require('./createDOMHistory');\n\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);\n\n/**\n * Creates and returns a history object that uses HTML5's history API\n * (pushState, replaceState, and the popstate event) to manage history.\n * This is the recommended method of managing history in browsers because\n * it provides the cleanest URLs.\n *\n * Note: In browsers that do not support the HTML5 history API full\n * page reloads will be used to preserve URLs.\n */\nfunction createBrowserHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;\n\n  var forceRefresh = options.forceRefresh;\n\n  var isSupported = _DOMUtils.supportsHistory();\n  var useRefresh = !isSupported || forceRefresh;\n\n  function getCurrentLocation(historyState) {\n    historyState = historyState || window.history.state || {};\n\n    var path = _DOMUtils.getWindowPath();\n    var _historyState = historyState;\n    var key = _historyState.key;\n\n    var state = undefined;\n    if (key) {\n      state = _DOMStateStorage.readState(key);\n    } else {\n      state = null;\n      key = history.createKey();\n\n      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);\n    }\n\n    var location = _PathUtils.parsePath(path);\n\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\n  }\n\n  function startPopStateListener(_ref) {\n    var transitionTo = _ref.transitionTo;\n\n    function popStateListener(event) {\n      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.\n\n      transitionTo(getCurrentLocation(event.state));\n    }\n\n    _DOMUtils.addEventListener(window, 'popstate', popStateListener);\n\n    return function () {\n      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);\n    };\n  }\n\n  function finishTransition(location) {\n    var basename = location.basename;\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n    var state = location.state;\n    var action = location.action;\n    var key = location.key;\n\n    if (action === _Actions.POP) return; // Nothing to do.\n\n    _DOMStateStorage.saveState(key, state);\n\n    var path = (basename || '') + pathname + search + hash;\n    var historyState = {\n      key: key\n    };\n\n    if (action === _Actions.PUSH) {\n      if (useRefresh) {\n        window.location.href = path;\n        return false; // Prevent location update.\n      } else {\n          window.history.pushState(historyState, null, path);\n        }\n    } else {\n      // REPLACE\n      if (useRefresh) {\n        window.location.replace(path);\n        return false; // Prevent location update.\n      } else {\n          window.history.replaceState(historyState, null, path);\n        }\n    }\n  }\n\n  var history = _createDOMHistory2['default'](_extends({}, options, {\n    getCurrentLocation: getCurrentLocation,\n    finishTransition: finishTransition,\n    saveState: _DOMStateStorage.saveState\n  }));\n\n  var listenerCount = 0,\n      stopPopStateListener = undefined;\n\n  function listenBefore(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listenBefore(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  function listen(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listen(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    history.registerTransitionHook(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    history.unregisterTransitionHook(hook);\n\n    if (--listenerCount === 0) stopPopStateListener();\n  }\n\n  return _extends({}, history, {\n    listenBefore: listenBefore,\n    listen: listen,\n    registerTransitionHook: registerTransitionHook,\n    unregisterTransitionHook: unregisterTransitionHook\n  });\n}\n\nexports['default'] = createBrowserHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _createHistory = require('./createHistory');\n\nvar _createHistory2 = _interopRequireDefault(_createHistory);\n\nfunction createDOMHistory(options) {\n  var history = _createHistory2['default'](_extends({\n    getUserConfirmation: _DOMUtils.getUserConfirmation\n  }, options, {\n    go: _DOMUtils.go\n  }));\n\n  function listen(listener) {\n    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;\n\n    return history.listen(listener);\n  }\n\n  return _extends({}, history, {\n    listen: listen\n  });\n}\n\nexports['default'] = createDOMHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _Actions = require('./Actions');\n\nvar _PathUtils = require('./PathUtils');\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _DOMStateStorage = require('./DOMStateStorage');\n\nvar _createDOMHistory = require('./createDOMHistory');\n\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);\n\nfunction isAbsolutePath(path) {\n  return typeof path === 'string' && path.charAt(0) === '/';\n}\n\nfunction ensureSlash() {\n  var path = _DOMUtils.getHashPath();\n\n  if (isAbsolutePath(path)) return true;\n\n  _DOMUtils.replaceHashPath('/' + path);\n\n  return false;\n}\n\nfunction addQueryStringValueToPath(path, key, value) {\n  return path + (path.indexOf('?') === -1 ? '?' : '&') + (key + '=' + value);\n}\n\nfunction stripQueryStringValueFromPath(path, key) {\n  return path.replace(new RegExp('[?&]?' + key + '=[a-zA-Z0-9]+'), '');\n}\n\nfunction getQueryStringValueFromPath(path, key) {\n  var match = path.match(new RegExp('\\\\?.*?\\\\b' + key + '=(.+?)\\\\b'));\n  return match && match[1];\n}\n\nvar DefaultQueryKey = '_k';\n\nfunction createHashHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Hash history needs a DOM') : _invariant2['default'](false) : undefined;\n\n  var queryKey = options.queryKey;\n\n  if (queryKey === undefined || !!queryKey) queryKey = typeof queryKey === 'string' ? queryKey : DefaultQueryKey;\n\n  function getCurrentLocation() {\n    var path = _DOMUtils.getHashPath();\n\n    var key = undefined,\n        state = undefined;\n    if (queryKey) {\n      key = getQueryStringValueFromPath(path, queryKey);\n      path = stripQueryStringValueFromPath(path, queryKey);\n\n      if (key) {\n        state = _DOMStateStorage.readState(key);\n      } else {\n        state = null;\n        key = history.createKey();\n        _DOMUtils.replaceHashPath(addQueryStringValueToPath(path, queryKey, key));\n      }\n    } else {\n      key = state = null;\n    }\n\n    var location = _PathUtils.parsePath(path);\n\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\n  }\n\n  function startHashChangeListener(_ref) {\n    var transitionTo = _ref.transitionTo;\n\n    function hashChangeListener() {\n      if (!ensureSlash()) return; // Always make sure hashes are preceeded with a /.\n\n      transitionTo(getCurrentLocation());\n    }\n\n    ensureSlash();\n    _DOMUtils.addEventListener(window, 'hashchange', hashChangeListener);\n\n    return function () {\n      _DOMUtils.removeEventListener(window, 'hashchange', hashChangeListener);\n    };\n  }\n\n  function finishTransition(location) {\n    var basename = location.basename;\n    var pathname = location.pathname;\n    var search = location.search;\n    var state = location.state;\n    var action = location.action;\n    var key = location.key;\n\n    if (action === _Actions.POP) return; // Nothing to do.\n\n    var path = (basename || '') + pathname + search;\n\n    if (queryKey) {\n      path = addQueryStringValueToPath(path, queryKey, key);\n      _DOMStateStorage.saveState(key, state);\n    } else {\n      // Drop key and state.\n      location.key = location.state = null;\n    }\n\n    var currentHash = _DOMUtils.getHashPath();\n\n    if (action === _Actions.PUSH) {\n      if (currentHash !== path) {\n        window.location.hash = path;\n      } else {\n        process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'You cannot PUSH the same path using hash history') : undefined;\n      }\n    } else if (currentHash !== path) {\n      // REPLACE\n      _DOMUtils.replaceHashPath(path);\n    }\n  }\n\n  var history = _createDOMHistory2['default'](_extends({}, options, {\n    getCurrentLocation: getCurrentLocation,\n    finishTransition: finishTransition,\n    saveState: _DOMStateStorage.saveState\n  }));\n\n  var listenerCount = 0,\n      stopHashChangeListener = undefined;\n\n  function listenBefore(listener) {\n    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);\n\n    var unlisten = history.listenBefore(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopHashChangeListener();\n    };\n  }\n\n  function listen(listener) {\n    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);\n\n    var unlisten = history.listen(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopHashChangeListener();\n    };\n  }\n\n  function push(location) {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n\n    history.push(location);\n  }\n\n  function replace(location) {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n\n    history.replace(location);\n  }\n\n  var goIsSupportedWithoutReload = _DOMUtils.supportsGoWithoutReloadUsingHash();\n\n  function go(n) {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : undefined;\n\n    history.go(n);\n  }\n\n  function createHref(path) {\n    return '#' + history.createHref(path);\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);\n\n    history.registerTransitionHook(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    history.unregisterTransitionHook(hook);\n\n    if (--listenerCount === 0) stopHashChangeListener();\n  }\n\n  // deprecated\n  function pushState(state, path) {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n\n    history.pushState(state, path);\n  }\n\n  // deprecated\n  function replaceState(state, path) {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n\n    history.replaceState(state, path);\n  }\n\n  return _extends({}, history, {\n    listenBefore: listenBefore,\n    listen: listen,\n    push: push,\n    replace: replace,\n    go: go,\n    createHref: createHref,\n\n    registerTransitionHook: registerTransitionHook, // deprecated - warning is in createHistory\n    unregisterTransitionHook: unregisterTransitionHook, // deprecated - warning is in createHistory\n    pushState: pushState, // deprecated - warning is in createHistory\n    replaceState: replaceState // deprecated - warning is in createHistory\n  });\n}\n\nexports['default'] = createHashHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _deepEqual = require('deep-equal');\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _PathUtils = require('./PathUtils');\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nvar _Actions = require('./Actions');\n\nvar _createLocation2 = require('./createLocation');\n\nvar _createLocation3 = _interopRequireDefault(_createLocation2);\n\nvar _runTransitionHook = require('./runTransitionHook');\n\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nfunction createRandomKey(length) {\n  return Math.random().toString(36).substr(2, length);\n}\n\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search &&\n  //a.action === b.action && // Different action !== location change.\n  a.key === b.key && _deepEqual2['default'](a.state, b.state);\n}\n\nvar DefaultKeyLength = 6;\n\nfunction createHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var getCurrentLocation = options.getCurrentLocation;\n  var finishTransition = options.finishTransition;\n  var saveState = options.saveState;\n  var go = options.go;\n  var keyLength = options.keyLength;\n  var getUserConfirmation = options.getUserConfirmation;\n\n  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;\n\n  var transitionHooks = [];\n\n  function listenBefore(hook) {\n    transitionHooks.push(hook);\n\n    return function () {\n      transitionHooks = transitionHooks.filter(function (item) {\n        return item !== hook;\n      });\n    };\n  }\n\n  var allKeys = [];\n  var changeListeners = [];\n  var location = undefined;\n\n  function getCurrent() {\n    if (pendingLocation && pendingLocation.action === _Actions.POP) {\n      return allKeys.indexOf(pendingLocation.key);\n    } else if (location) {\n      return allKeys.indexOf(location.key);\n    } else {\n      return -1;\n    }\n  }\n\n  function updateLocation(newLocation) {\n    var current = getCurrent();\n\n    location = newLocation;\n\n    if (location.action === _Actions.PUSH) {\n      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);\n    } else if (location.action === _Actions.REPLACE) {\n      allKeys[current] = location.key;\n    }\n\n    changeListeners.forEach(function (listener) {\n      listener(location);\n    });\n  }\n\n  function listen(listener) {\n    changeListeners.push(listener);\n\n    if (location) {\n      listener(location);\n    } else {\n      var _location = getCurrentLocation();\n      allKeys = [_location.key];\n      updateLocation(_location);\n    }\n\n    return function () {\n      changeListeners = changeListeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function confirmTransitionTo(location, callback) {\n    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {\n      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {\n        if (result != null) {\n          done(result);\n        } else {\n          next();\n        }\n      });\n    }, function (message) {\n      if (getUserConfirmation && typeof message === 'string') {\n        getUserConfirmation(message, function (ok) {\n          callback(ok !== false);\n        });\n      } else {\n        callback(message !== false);\n      }\n    });\n  }\n\n  var pendingLocation = undefined;\n\n  function transitionTo(nextLocation) {\n    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.\n\n    pendingLocation = nextLocation;\n\n    confirmTransitionTo(nextLocation, function (ok) {\n      if (pendingLocation !== nextLocation) return; // Transition was interrupted.\n\n      if (ok) {\n        // treat PUSH to current path like REPLACE to be consistent with browsers\n        if (nextLocation.action === _Actions.PUSH) {\n          var prevPath = createPath(location);\n          var nextPath = createPath(nextLocation);\n\n          if (nextPath === prevPath && _deepEqual2['default'](location.state, nextLocation.state)) nextLocation.action = _Actions.REPLACE;\n        }\n\n        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);\n      } else if (location && nextLocation.action === _Actions.POP) {\n        var prevIndex = allKeys.indexOf(location.key);\n        var nextIndex = allKeys.indexOf(nextLocation.key);\n\n        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.\n      }\n    });\n  }\n\n  function push(location) {\n    transitionTo(createLocation(location, _Actions.PUSH, createKey()));\n  }\n\n  function replace(location) {\n    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function createKey() {\n    return createRandomKey(keyLength);\n  }\n\n  function createPath(location) {\n    if (location == null || typeof location === 'string') return location;\n\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n\n    var result = pathname;\n\n    if (search) result += search;\n\n    if (hash) result += hash;\n\n    return result;\n  }\n\n  function createHref(location) {\n    return createPath(location);\n  }\n\n  function createLocation(location, action) {\n    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];\n\n    if (typeof action === 'object') {\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to history.createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;\n\n      if (typeof location === 'string') location = _PathUtils.parsePath(location);\n\n      location = _extends({}, location, { state: action });\n\n      action = key;\n      key = arguments[3] || createKey();\n    }\n\n    return _createLocation3['default'](location, action, key);\n  }\n\n  // deprecated\n  function setState(state) {\n    if (location) {\n      updateLocationState(location, state);\n      updateLocation(location);\n    } else {\n      updateLocationState(getCurrentLocation(), state);\n    }\n  }\n\n  function updateLocationState(location, state) {\n    location.state = _extends({}, location.state, state);\n    saveState(location.key, location.state);\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    transitionHooks = transitionHooks.filter(function (item) {\n      return item !== hook;\n    });\n  }\n\n  // deprecated\n  function pushState(state, path) {\n    if (typeof path === 'string') path = _PathUtils.parsePath(path);\n\n    push(_extends({ state: state }, path));\n  }\n\n  // deprecated\n  function replaceState(state, path) {\n    if (typeof path === 'string') path = _PathUtils.parsePath(path);\n\n    replace(_extends({ state: state }, path));\n  }\n\n  return {\n    listenBefore: listenBefore,\n    listen: listen,\n    transitionTo: transitionTo,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    createKey: createKey,\n    createPath: createPath,\n    createHref: createHref,\n    createLocation: createLocation,\n\n    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),\n    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),\n    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),\n    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),\n    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')\n  };\n}\n\nexports['default'] = createHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _Actions = require('./Actions');\n\nvar _PathUtils = require('./PathUtils');\n\nfunction createLocation() {\n  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];\n  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];\n  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\n\n  if (typeof location === 'string') location = _PathUtils.parsePath(location);\n\n  if (typeof action === 'object') {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;\n\n    location = _extends({}, location, { state: action });\n\n    action = key || _Actions.POP;\n    key = _fourthArg;\n  }\n\n  var pathname = location.pathname || '/';\n  var search = location.search || '';\n  var hash = location.hash || '';\n  var state = location.state || null;\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash,\n    state: state,\n    action: action,\n    key: key\n  };\n}\n\nexports['default'] = createLocation;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _PathUtils = require('./PathUtils');\n\nvar _Actions = require('./Actions');\n\nvar _createHistory = require('./createHistory');\n\nvar _createHistory2 = _interopRequireDefault(_createHistory);\n\nfunction createStateStorage(entries) {\n  return entries.filter(function (entry) {\n    return entry.state;\n  }).reduce(function (memo, entry) {\n    memo[entry.key] = entry.state;\n    return memo;\n  }, {});\n}\n\nfunction createMemoryHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  if (Array.isArray(options)) {\n    options = { entries: options };\n  } else if (typeof options === 'string') {\n    options = { entries: [options] };\n  }\n\n  var history = _createHistory2['default'](_extends({}, options, {\n    getCurrentLocation: getCurrentLocation,\n    finishTransition: finishTransition,\n    saveState: saveState,\n    go: go\n  }));\n\n  var _options = options;\n  var entries = _options.entries;\n  var current = _options.current;\n\n  if (typeof entries === 'string') {\n    entries = [entries];\n  } else if (!Array.isArray(entries)) {\n    entries = ['/'];\n  }\n\n  entries = entries.map(function (entry) {\n    var key = history.createKey();\n\n    if (typeof entry === 'string') return { pathname: entry, key: key };\n\n    if (typeof entry === 'object' && entry) return _extends({}, entry, { key: key });\n\n    !false ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Unable to create history entry from %s', entry) : _invariant2['default'](false) : undefined;\n  });\n\n  if (current == null) {\n    current = entries.length - 1;\n  } else {\n    !(current >= 0 && current < entries.length) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : _invariant2['default'](false) : undefined;\n  }\n\n  var storage = createStateStorage(entries);\n\n  function saveState(key, state) {\n    storage[key] = state;\n  }\n\n  function readState(key) {\n    return storage[key];\n  }\n\n  function getCurrentLocation() {\n    var entry = entries[current];\n    var key = entry.key;\n    var basename = entry.basename;\n    var pathname = entry.pathname;\n    var search = entry.search;\n\n    var path = (basename || '') + pathname + (search || '');\n\n    var state = undefined;\n    if (key) {\n      state = readState(key);\n    } else {\n      state = null;\n      key = history.createKey();\n      entry.key = key;\n    }\n\n    var location = _PathUtils.parsePath(path);\n\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\n  }\n\n  function canGo(n) {\n    var index = current + n;\n    return index >= 0 && index < entries.length;\n  }\n\n  function go(n) {\n    if (n) {\n      if (!canGo(n)) {\n        process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'Cannot go(%s) there is not enough history', n) : undefined;\n        return;\n      }\n\n      current += n;\n\n      var currentLocation = getCurrentLocation();\n\n      // change action to POP\n      history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));\n    }\n  }\n\n  function finishTransition(location) {\n    switch (location.action) {\n      case _Actions.PUSH:\n        current += 1;\n\n        // if we are not on the top of stack\n        // remove rest and push new\n        if (current < entries.length) entries.splice(current);\n\n        entries.push(location);\n        saveState(location.key, location.state);\n        break;\n      case _Actions.REPLACE:\n        entries[current] = location;\n        saveState(location.key, location.state);\n        break;\n    }\n  }\n\n  return history;\n}\n\nexports['default'] = createMemoryHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction deprecate(fn, message) {\n  return function () {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] ' + message) : undefined;\n    return fn.apply(this, arguments);\n  };\n}\n\nexports['default'] = deprecate;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nvar _useBeforeUnload = require('./useBeforeUnload');\n\nvar _useBeforeUnload2 = _interopRequireDefault(_useBeforeUnload);\n\nexports['default'] = _deprecate2['default'](_useBeforeUnload2['default'], 'enableBeforeUnload is deprecated, use useBeforeUnload instead');\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nvar _useQueries = require('./useQueries');\n\nvar _useQueries2 = _interopRequireDefault(_useQueries);\n\nexports['default'] = _deprecate2['default'](_useQueries2['default'], 'enableQueries is deprecated, use useQueries instead');\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nvar _createLocation2 = require('./createLocation');\n\nvar _createLocation3 = _interopRequireDefault(_createLocation2);\n\nvar _createBrowserHistory = require('./createBrowserHistory');\n\nvar _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);\n\nexports.createHistory = _createBrowserHistory2['default'];\n\nvar _createHashHistory2 = require('./createHashHistory');\n\nvar _createHashHistory3 = _interopRequireDefault(_createHashHistory2);\n\nexports.createHashHistory = _createHashHistory3['default'];\n\nvar _createMemoryHistory2 = require('./createMemoryHistory');\n\nvar _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);\n\nexports.createMemoryHistory = _createMemoryHistory3['default'];\n\nvar _useBasename2 = require('./useBasename');\n\nvar _useBasename3 = _interopRequireDefault(_useBasename2);\n\nexports.useBasename = _useBasename3['default'];\n\nvar _useBeforeUnload2 = require('./useBeforeUnload');\n\nvar _useBeforeUnload3 = _interopRequireDefault(_useBeforeUnload2);\n\nexports.useBeforeUnload = _useBeforeUnload3['default'];\n\nvar _useQueries2 = require('./useQueries');\n\nvar _useQueries3 = _interopRequireDefault(_useQueries2);\n\nexports.useQueries = _useQueries3['default'];\n\nvar _Actions2 = require('./Actions');\n\nvar _Actions3 = _interopRequireDefault(_Actions2);\n\nexports.Actions = _Actions3['default'];\n\n// deprecated\n\nvar _enableBeforeUnload2 = require('./enableBeforeUnload');\n\nvar _enableBeforeUnload3 = _interopRequireDefault(_enableBeforeUnload2);\n\nexports.enableBeforeUnload = _enableBeforeUnload3['default'];\n\nvar _enableQueries2 = require('./enableQueries');\n\nvar _enableQueries3 = _interopRequireDefault(_enableQueries2);\n\nexports.enableQueries = _enableQueries3['default'];\nvar createLocation = _deprecate2['default'](_createLocation3['default'], 'Using createLocation without a history instance is deprecated; please use history.createLocation instead');\nexports.createLocation = createLocation;","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction runTransitionHook(hook, location, callback) {\n  var result = hook(location, callback);\n\n  if (hook.length < 2) {\n    // Assume the hook runs synchronously and automatically\n    // call the callback with the return value.\n    callback(result);\n  } else {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not \"return\" in a transition hook with a callback argument; call the callback instead') : undefined;\n  }\n}\n\nexports['default'] = runTransitionHook;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _PathUtils = require('./PathUtils');\n\nvar _runTransitionHook = require('./runTransitionHook');\n\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nfunction useBasename(createHistory) {\n  return function () {\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var basename = options.basename;\n\n    var historyOptions = _objectWithoutProperties(options, ['basename']);\n\n    var history = createHistory(historyOptions);\n\n    // Automatically use the value of <base href> in HTML\n    // documents as basename if it's not explicitly given.\n    if (basename == null && _ExecutionEnvironment.canUseDOM) {\n      var base = document.getElementsByTagName('base')[0];\n\n      if (base) basename = _PathUtils.extractPath(base.href);\n    }\n\n    function addBasename(location) {\n      if (basename && location.basename == null) {\n        if (location.pathname.indexOf(basename) === 0) {\n          location.pathname = location.pathname.substring(basename.length);\n          location.basename = basename;\n\n          if (location.pathname === '') location.pathname = '/';\n        } else {\n          location.basename = '';\n        }\n      }\n\n      return location;\n    }\n\n    function prependBasename(location) {\n      if (!basename) return location;\n\n      if (typeof location === 'string') location = _PathUtils.parsePath(location);\n\n      var pname = location.pathname;\n      var normalizedBasename = basename.slice(-1) === '/' ? basename : basename + '/';\n      var normalizedPathname = pname.charAt(0) === '/' ? pname.slice(1) : pname;\n      var pathname = normalizedBasename + normalizedPathname;\n\n      return _extends({}, location, {\n        pathname: pathname\n      });\n    }\n\n    // Override all read methods with basename-aware versions.\n    function listenBefore(hook) {\n      return history.listenBefore(function (location, callback) {\n        _runTransitionHook2['default'](hook, addBasename(location), callback);\n      });\n    }\n\n    function listen(listener) {\n      return history.listen(function (location) {\n        listener(addBasename(location));\n      });\n    }\n\n    // Override all write methods with basename-aware versions.\n    function push(location) {\n      history.push(prependBasename(location));\n    }\n\n    function replace(location) {\n      history.replace(prependBasename(location));\n    }\n\n    function createPath(location) {\n      return history.createPath(prependBasename(location));\n    }\n\n    function createHref(location) {\n      return history.createHref(prependBasename(location));\n    }\n\n    function createLocation(location) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return addBasename(history.createLocation.apply(history, [prependBasename(location)].concat(args)));\n    }\n\n    // deprecated\n    function pushState(state, path) {\n      if (typeof path === 'string') path = _PathUtils.parsePath(path);\n\n      push(_extends({ state: state }, path));\n    }\n\n    // deprecated\n    function replaceState(state, path) {\n      if (typeof path === 'string') path = _PathUtils.parsePath(path);\n\n      replace(_extends({ state: state }, path));\n    }\n\n    return _extends({}, history, {\n      listenBefore: listenBefore,\n      listen: listen,\n      push: push,\n      replace: replace,\n      createPath: createPath,\n      createHref: createHref,\n      createLocation: createLocation,\n\n      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),\n      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')\n    });\n  };\n}\n\nexports['default'] = useBasename;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nfunction startBeforeUnloadListener(getBeforeUnloadPromptMessage) {\n  function listener(event) {\n    var message = getBeforeUnloadPromptMessage();\n\n    if (typeof message === 'string') {\n      (event || window.event).returnValue = message;\n      return message;\n    }\n  }\n\n  _DOMUtils.addEventListener(window, 'beforeunload', listener);\n\n  return function () {\n    _DOMUtils.removeEventListener(window, 'beforeunload', listener);\n  };\n}\n\n/**\n * Returns a new createHistory function that can be used to create\n * history objects that know how to use the beforeunload event in web\n * browsers to cancel navigation.\n */\nfunction useBeforeUnload(createHistory) {\n  return function (options) {\n    var history = createHistory(options);\n\n    var stopBeforeUnloadListener = undefined;\n    var beforeUnloadHooks = [];\n\n    function getBeforeUnloadPromptMessage() {\n      var message = undefined;\n\n      for (var i = 0, len = beforeUnloadHooks.length; message == null && i < len; ++i) {\n        message = beforeUnloadHooks[i].call();\n      }return message;\n    }\n\n    function listenBeforeUnload(hook) {\n      beforeUnloadHooks.push(hook);\n\n      if (beforeUnloadHooks.length === 1) {\n        if (_ExecutionEnvironment.canUseDOM) {\n          stopBeforeUnloadListener = startBeforeUnloadListener(getBeforeUnloadPromptMessage);\n        } else {\n          process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'listenBeforeUnload only works in DOM environments') : undefined;\n        }\n      }\n\n      return function () {\n        beforeUnloadHooks = beforeUnloadHooks.filter(function (item) {\n          return item !== hook;\n        });\n\n        if (beforeUnloadHooks.length === 0 && stopBeforeUnloadListener) {\n          stopBeforeUnloadListener();\n          stopBeforeUnloadListener = null;\n        }\n      };\n    }\n\n    // deprecated\n    function registerBeforeUnloadHook(hook) {\n      if (_ExecutionEnvironment.canUseDOM && beforeUnloadHooks.indexOf(hook) === -1) {\n        beforeUnloadHooks.push(hook);\n\n        if (beforeUnloadHooks.length === 1) stopBeforeUnloadListener = startBeforeUnloadListener(getBeforeUnloadPromptMessage);\n      }\n    }\n\n    // deprecated\n    function unregisterBeforeUnloadHook(hook) {\n      if (beforeUnloadHooks.length > 0) {\n        beforeUnloadHooks = beforeUnloadHooks.filter(function (item) {\n          return item !== hook;\n        });\n\n        if (beforeUnloadHooks.length === 0) stopBeforeUnloadListener();\n      }\n    }\n\n    return _extends({}, history, {\n      listenBeforeUnload: listenBeforeUnload,\n\n      registerBeforeUnloadHook: _deprecate2['default'](registerBeforeUnloadHook, 'registerBeforeUnloadHook is deprecated; use listenBeforeUnload instead'),\n      unregisterBeforeUnloadHook: _deprecate2['default'](unregisterBeforeUnloadHook, 'unregisterBeforeUnloadHook is deprecated; use the callback returned from listenBeforeUnload instead')\n    });\n  };\n}\n\nexports['default'] = useBeforeUnload;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _queryString = require('query-string');\n\nvar _runTransitionHook = require('./runTransitionHook');\n\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);\n\nvar _PathUtils = require('./PathUtils');\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nvar SEARCH_BASE_KEY = '$searchBase';\n\nfunction defaultStringifyQuery(query) {\n  return _queryString.stringify(query).replace(/%20/g, '+');\n}\n\nvar defaultParseQueryString = _queryString.parse;\n\nfunction isNestedObject(object) {\n  for (var p in object) {\n    if (object.hasOwnProperty(p) && typeof object[p] === 'object' && !Array.isArray(object[p]) && object[p] !== null) return true;\n  }return false;\n}\n\n/**\n * Returns a new createHistory function that may be used to create\n * history objects that know how to handle URL queries.\n */\nfunction useQueries(createHistory) {\n  return function () {\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var stringifyQuery = options.stringifyQuery;\n    var parseQueryString = options.parseQueryString;\n\n    var historyOptions = _objectWithoutProperties(options, ['stringifyQuery', 'parseQueryString']);\n\n    var history = createHistory(historyOptions);\n\n    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;\n\n    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;\n\n    function addQuery(location) {\n      if (location.query == null) {\n        var search = location.search;\n\n        location.query = parseQueryString(search.substring(1));\n        location[SEARCH_BASE_KEY] = { search: search, searchBase: '' };\n      }\n\n      // TODO: Instead of all the book-keeping here, this should just strip the\n      // stringified query from the search.\n\n      return location;\n    }\n\n    function appendQuery(location, query) {\n      var _extends2;\n\n      var searchBaseSpec = location[SEARCH_BASE_KEY];\n      var queryString = query ? stringifyQuery(query) : '';\n      if (!searchBaseSpec && !queryString) {\n        return location;\n      }\n\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](stringifyQuery !== defaultStringifyQuery || !isNestedObject(query), 'useQueries does not stringify nested query objects by default; ' + 'use a custom stringifyQuery function') : undefined;\n\n      if (typeof location === 'string') location = _PathUtils.parsePath(location);\n\n      var searchBase = undefined;\n      if (searchBaseSpec && location.search === searchBaseSpec.search) {\n        searchBase = searchBaseSpec.searchBase;\n      } else {\n        searchBase = location.search || '';\n      }\n\n      var search = searchBase;\n      if (queryString) {\n        search += (search ? '&' : '?') + queryString;\n      }\n\n      return _extends({}, location, (_extends2 = {\n        search: search\n      }, _extends2[SEARCH_BASE_KEY] = { search: search, searchBase: searchBase }, _extends2));\n    }\n\n    // Override all read methods with query-aware versions.\n    function listenBefore(hook) {\n      return history.listenBefore(function (location, callback) {\n        _runTransitionHook2['default'](hook, addQuery(location), callback);\n      });\n    }\n\n    function listen(listener) {\n      return history.listen(function (location) {\n        listener(addQuery(location));\n      });\n    }\n\n    // Override all write methods with query-aware versions.\n    function push(location) {\n      history.push(appendQuery(location, location.query));\n    }\n\n    function replace(location) {\n      history.replace(appendQuery(location, location.query));\n    }\n\n    function createPath(location, query) {\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](!query, 'the query argument to createPath is deprecated; use a location descriptor instead') : undefined;\n\n      return history.createPath(appendQuery(location, query || location.query));\n    }\n\n    function createHref(location, query) {\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](!query, 'the query argument to createHref is deprecated; use a location descriptor instead') : undefined;\n\n      return history.createHref(appendQuery(location, query || location.query));\n    }\n\n    function createLocation(location) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var fullLocation = history.createLocation.apply(history, [appendQuery(location, location.query)].concat(args));\n      if (location.query) {\n        fullLocation.query = location.query;\n      }\n      return addQuery(fullLocation);\n    }\n\n    // deprecated\n    function pushState(state, path, query) {\n      if (typeof path === 'string') path = _PathUtils.parsePath(path);\n\n      push(_extends({ state: state }, path, { query: query }));\n    }\n\n    // deprecated\n    function replaceState(state, path, query) {\n      if (typeof path === 'string') path = _PathUtils.parsePath(path);\n\n      replace(_extends({ state: state }, path, { query: query }));\n    }\n\n    return _extends({}, history, {\n      listenBefore: listenBefore,\n      listen: listen,\n      push: push,\n      replace: replace,\n      createPath: createPath,\n      createHref: createHref,\n      createLocation: createLocation,\n\n      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),\n      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')\n    });\n  };\n}\n\nexports['default'] = useQueries;\nmodule.exports = exports['default'];","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","'use strict';\nvar strictUriEncode = require('strict-uri-encode');\n\nexports.extract = function (str) {\n\treturn str.split('?')[1] || '';\n};\n\nexports.parse = function (str) {\n\tif (typeof str !== 'string') {\n\t\treturn {};\n\t}\n\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');\n\n\tif (!str) {\n\t\treturn {};\n\t}\n\n\treturn str.split('&').reduce(function (ret, param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\tkey = decodeURIComponent(key);\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeURIComponent(val);\n\n\t\tif (!ret.hasOwnProperty(key)) {\n\t\t\tret[key] = val;\n\t\t} else if (Array.isArray(ret[key])) {\n\t\t\tret[key].push(val);\n\t\t} else {\n\t\t\tret[key] = [ret[key], val];\n\t\t}\n\n\t\treturn ret;\n\t}, {});\n};\n\nexports.stringify = function (obj) {\n\treturn obj ? Object.keys(obj).sort().map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn key;\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\treturn val.sort().map(function (val2) {\n\t\t\t\treturn strictUriEncode(key) + '=' + strictUriEncode(val2);\n\t\t\t}).join('&');\n\t\t}\n\n\t\treturn strictUriEncode(key) + '=' + strictUriEncode(val);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n","'use strict';\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n","\"use strict\";\n\nexports.__esModule = true;\nvar _slice = Array.prototype.slice;\nexports.loopAsync = loopAsync;\nexports.mapAsync = mapAsync;\n\nfunction loopAsync(turns, work, callback) {\n  var currentTurn = 0,\n      isDone = false;\n  var sync = false,\n      hasNext = false,\n      doneArgs = undefined;\n\n  function done() {\n    isDone = true;\n    if (sync) {\n      // Iterate instead of recursing if possible.\n      doneArgs = [].concat(_slice.call(arguments));\n      return;\n    }\n\n    callback.apply(this, arguments);\n  }\n\n  function next() {\n    if (isDone) {\n      return;\n    }\n\n    hasNext = true;\n    if (sync) {\n      // Iterate instead of recursing if possible.\n      return;\n    }\n\n    sync = true;\n\n    while (!isDone && currentTurn < turns && hasNext) {\n      hasNext = false;\n      work.call(this, currentTurn++, next, done);\n    }\n\n    sync = false;\n\n    if (isDone) {\n      // This means the loop finished synchronously.\n      callback.apply(this, doneArgs);\n      return;\n    }\n\n    if (currentTurn >= turns && hasNext) {\n      isDone = true;\n      callback();\n    }\n  }\n\n  next();\n}\n\nfunction mapAsync(array, work, callback) {\n  var length = array.length;\n  var values = [];\n\n  if (length === 0) return callback(null, values);\n\n  var isDone = false,\n      doneCount = 0;\n\n  function done(index, error, value) {\n    if (isDone) return;\n\n    if (error) {\n      isDone = true;\n      callback(error);\n    } else {\n      values[index] = value;\n\n      isDone = ++doneCount === length;\n\n      if (isDone) callback(null, values);\n    }\n  }\n\n  array.forEach(function (item, index) {\n    work(item, index, function (error, value) {\n      done(index, error, value);\n    });\n  });\n}","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nvar _PropTypes = require('./PropTypes');\n\n/**\n * A mixin that adds the \"history\" instance variable to components.\n */\nvar History = {\n\n  contextTypes: {\n    history: _PropTypes.history\n  },\n\n  componentWillMount: function componentWillMount() {\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'the `History` mixin is deprecated, please access `context.router` with your own `contextTypes`. http://tiny.cc/router-historymixin') : undefined;\n    this.history = this.context.history;\n  }\n\n};\n\nexports['default'] = History;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Link = require('./Link');\n\nvar _Link2 = _interopRequireDefault(_Link);\n\n/**\n * An <IndexLink> is used to link to an <IndexRoute>.\n */\nvar IndexLink = _react2['default'].createClass({\n  displayName: 'IndexLink',\n\n  render: function render() {\n    return _react2['default'].createElement(_Link2['default'], _extends({}, this.props, { onlyActiveOnIndex: true }));\n  }\n\n});\n\nexports['default'] = IndexLink;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _Redirect = require('./Redirect');\n\nvar _Redirect2 = _interopRequireDefault(_Redirect);\n\nvar _PropTypes = require('./PropTypes');\n\nvar _React$PropTypes = _react2['default'].PropTypes;\nvar string = _React$PropTypes.string;\nvar object = _React$PropTypes.object;\n\n/**\n * An <IndexRedirect> is used to redirect from an indexRoute.\n */\nvar IndexRedirect = _react2['default'].createClass({\n  displayName: 'IndexRedirect',\n\n  statics: {\n\n    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {\n      /* istanbul ignore else: sanity check */\n      if (parentRoute) {\n        parentRoute.indexRoute = _Redirect2['default'].createRouteFromReactElement(element);\n      } else {\n        process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'An <IndexRedirect> does not make sense at the root of your route config') : undefined;\n      }\n    }\n\n  },\n\n  propTypes: {\n    to: string.isRequired,\n    query: object,\n    state: object,\n    onEnter: _PropTypes.falsy,\n    children: _PropTypes.falsy\n  },\n\n  /* istanbul ignore next: sanity check */\n  render: function render() {\n    !false ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, '<IndexRedirect> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;\n  }\n\n});\n\nexports['default'] = IndexRedirect;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _RouteUtils = require('./RouteUtils');\n\nvar _PropTypes = require('./PropTypes');\n\nvar func = _react2['default'].PropTypes.func;\n\n/**\n * An <IndexRoute> is used to specify its parent's <Route indexRoute> in\n * a JSX route config.\n */\nvar IndexRoute = _react2['default'].createClass({\n  displayName: 'IndexRoute',\n\n  statics: {\n\n    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {\n      /* istanbul ignore else: sanity check */\n      if (parentRoute) {\n        parentRoute.indexRoute = _RouteUtils.createRouteFromReactElement(element);\n      } else {\n        process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'An <IndexRoute> does not make sense at the root of your route config') : undefined;\n      }\n    }\n\n  },\n\n  propTypes: {\n    path: _PropTypes.falsy,\n    component: _PropTypes.component,\n    components: _PropTypes.components,\n    getComponent: func,\n    getComponents: func\n  },\n\n  /* istanbul ignore next: sanity check */\n  render: function render() {\n    !false ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, '<IndexRoute> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;\n  }\n\n});\n\nexports['default'] = IndexRoute;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar object = _react2['default'].PropTypes.object;\n\n/**\n * The Lifecycle mixin adds the routerWillLeave lifecycle method to a\n * component that may be used to cancel a transition or prompt the user\n * for confirmation.\n *\n * On standard transitions, routerWillLeave receives a single argument: the\n * location we're transitioning to. To cancel the transition, return false.\n * To prompt the user for confirmation, return a prompt message (string).\n *\n * During the beforeunload event (assuming you're using the useBeforeUnload\n * history enhancer), routerWillLeave does not receive a location object\n * because it isn't possible for us to know the location we're transitioning\n * to. In this case routerWillLeave must return a prompt message to prevent\n * the user from closing the window/tab.\n */\nvar Lifecycle = {\n\n  contextTypes: {\n    history: object.isRequired,\n    // Nested children receive the route as context, either\n    // set by the route component using the RouteContext mixin\n    // or by some other ancestor.\n    route: object\n  },\n\n  propTypes: {\n    // Route components receive the route object as a prop.\n    route: object\n  },\n\n  componentDidMount: function componentDidMount() {\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'the `Lifecycle` mixin is deprecated, please use `context.router.setRouteLeaveHook(route, hook)`. http://tiny.cc/router-lifecyclemixin') : undefined;\n    !this.routerWillLeave ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'The Lifecycle mixin requires you to define a routerWillLeave method') : _invariant2['default'](false) : undefined;\n\n    var route = this.props.route || this.context.route;\n\n    !route ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'The Lifecycle mixin must be used on either a) a <Route component> or ' + 'b) a descendant of a <Route component> that uses the RouteContext mixin') : _invariant2['default'](false) : undefined;\n\n    this._unlistenBeforeLeavingRoute = this.context.history.listenBeforeLeavingRoute(route, this.routerWillLeave);\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this._unlistenBeforeLeavingRoute) this._unlistenBeforeLeavingRoute();\n  }\n\n};\n\nexports['default'] = Lifecycle;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nvar _React$PropTypes = _react2['default'].PropTypes;\nvar bool = _React$PropTypes.bool;\nvar object = _React$PropTypes.object;\nvar string = _React$PropTypes.string;\nvar func = _React$PropTypes.func;\nvar oneOfType = _React$PropTypes.oneOfType;\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction isEmptyObject(object) {\n  for (var p in object) {\n    if (object.hasOwnProperty(p)) return false;\n  }return true;\n}\n\nfunction createLocationDescriptor(to, _ref) {\n  var query = _ref.query;\n  var hash = _ref.hash;\n  var state = _ref.state;\n\n  if (query || hash || state) {\n    return { pathname: to, query: query, hash: hash, state: state };\n  }\n\n  return to;\n}\n\n/**\n * A <Link> is used to create an <a> element that links to a route.\n * When that route is active, the link gets the value of its\n * activeClassName prop.\n *\n * For example, assuming you have the following route:\n *\n *   <Route path=\"/posts/:postID\" component={Post} />\n *\n * You could use the following component to link to that route:\n *\n *   <Link to={`/posts/${post.id}`} />\n *\n * Links may pass along location state and/or query string parameters\n * in the state/query props, respectively.\n *\n *   <Link ... query={{ show: true }} state={{ the: 'state' }} />\n */\nvar Link = _react2['default'].createClass({\n  displayName: 'Link',\n\n  contextTypes: {\n    router: object\n  },\n\n  propTypes: {\n    to: oneOfType([string, object]).isRequired,\n    query: object,\n    hash: string,\n    state: object,\n    activeStyle: object,\n    activeClassName: string,\n    onlyActiveOnIndex: bool.isRequired,\n    onClick: func\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      onlyActiveOnIndex: false,\n      className: '',\n      style: {}\n    };\n  },\n\n  handleClick: function handleClick(event) {\n    var allowTransition = true;\n\n    if (this.props.onClick) this.props.onClick(event);\n\n    if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;\n\n    if (event.defaultPrevented === true) allowTransition = false;\n\n    // If target prop is set (e.g. to \"_blank\") let browser handle link.\n    /* istanbul ignore if: untestable with Karma */\n    if (this.props.target) {\n      if (!allowTransition) event.preventDefault();\n\n      return;\n    }\n\n    event.preventDefault();\n\n    if (allowTransition) {\n      var _props = this.props;\n      var to = _props.to;\n      var query = _props.query;\n      var hash = _props.hash;\n      var state = _props.state;\n\n      var _location = createLocationDescriptor(to, { query: query, hash: hash, state: state });\n\n      this.context.router.push(_location);\n    }\n  },\n\n  render: function render() {\n    var _props2 = this.props;\n    var to = _props2.to;\n    var query = _props2.query;\n    var hash = _props2.hash;\n    var state = _props2.state;\n    var activeClassName = _props2.activeClassName;\n    var activeStyle = _props2.activeStyle;\n    var onlyActiveOnIndex = _props2.onlyActiveOnIndex;\n\n    var props = _objectWithoutProperties(_props2, ['to', 'query', 'hash', 'state', 'activeClassName', 'activeStyle', 'onlyActiveOnIndex']);\n\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](!(query || hash || state), 'the `query`, `hash`, and `state` props on `<Link>` are deprecated, use `<Link to={{ pathname, query, hash, state }}/>. http://tiny.cc/router-isActivedeprecated') : undefined;\n\n    // Ignore if rendered outside the context of router, simplifies unit testing.\n    var router = this.context.router;\n\n    if (router) {\n      var _location2 = createLocationDescriptor(to, { query: query, hash: hash, state: state });\n      props.href = router.createHref(_location2);\n\n      if (activeClassName || activeStyle != null && !isEmptyObject(activeStyle)) {\n        if (router.isActive(_location2, onlyActiveOnIndex)) {\n          if (activeClassName) props.className += props.className === '' ? activeClassName : ' ' + activeClassName;\n\n          if (activeStyle) props.style = _extends({}, props.style, activeStyle);\n        }\n      }\n    }\n\n    return _react2['default'].createElement('a', _extends({}, props, { onClick: this.handleClick }));\n  }\n\n});\n\nexports['default'] = Link;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\nexports.compilePattern = compilePattern;\nexports.matchPattern = matchPattern;\nexports.getParamNames = getParamNames;\nexports.getParams = getParams;\nexports.formatPattern = formatPattern;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nfunction escapeRegExp(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nfunction escapeSource(string) {\n  return escapeRegExp(string).replace(/\\/+/g, '/+');\n}\n\nfunction _compilePattern(pattern) {\n  var regexpSource = '';\n  var paramNames = [];\n  var tokens = [];\n\n  var match = undefined,\n      lastIndex = 0,\n      matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\\*\\*|\\*|\\(|\\)/g;\n  while (match = matcher.exec(pattern)) {\n    if (match.index !== lastIndex) {\n      tokens.push(pattern.slice(lastIndex, match.index));\n      regexpSource += escapeSource(pattern.slice(lastIndex, match.index));\n    }\n\n    if (match[1]) {\n      regexpSource += '([^/?#]+)';\n      paramNames.push(match[1]);\n    } else if (match[0] === '**') {\n      regexpSource += '([\\\\s\\\\S]*)';\n      paramNames.push('splat');\n    } else if (match[0] === '*') {\n      regexpSource += '([\\\\s\\\\S]*?)';\n      paramNames.push('splat');\n    } else if (match[0] === '(') {\n      regexpSource += '(?:';\n    } else if (match[0] === ')') {\n      regexpSource += ')?';\n    }\n\n    tokens.push(match[0]);\n\n    lastIndex = matcher.lastIndex;\n  }\n\n  if (lastIndex !== pattern.length) {\n    tokens.push(pattern.slice(lastIndex, pattern.length));\n    regexpSource += escapeSource(pattern.slice(lastIndex, pattern.length));\n  }\n\n  return {\n    pattern: pattern,\n    regexpSource: regexpSource,\n    paramNames: paramNames,\n    tokens: tokens\n  };\n}\n\nvar CompiledPatternsCache = {};\n\nfunction compilePattern(pattern) {\n  if (!(pattern in CompiledPatternsCache)) CompiledPatternsCache[pattern] = _compilePattern(pattern);\n\n  return CompiledPatternsCache[pattern];\n}\n\n/**\n * Attempts to match a pattern on the given pathname. Patterns may use\n * the following special characters:\n *\n * - :paramName     Matches a URL segment up to the next /, ?, or #. The\n *                  captured string is considered a \"param\"\n * - ()             Wraps a segment of the URL that is optional\n * - *              Consumes (non-greedy) all characters up to the next\n *                  character in the pattern, or to the end of the URL if\n *                  there is none\n * - **             Consumes (greedy) all characters up to the next character\n *                  in the pattern, or to the end of the URL if there is none\n *\n * The return value is an object with the following properties:\n *\n * - remainingPathname\n * - paramNames\n * - paramValues\n */\n\nfunction matchPattern(pattern, pathname) {\n  // Make leading slashes consistent between pattern and pathname.\n  if (pattern.charAt(0) !== '/') {\n    pattern = '/' + pattern;\n  }\n  if (pathname.charAt(0) !== '/') {\n    pathname = '/' + pathname;\n  }\n\n  var _compilePattern2 = compilePattern(pattern);\n\n  var regexpSource = _compilePattern2.regexpSource;\n  var paramNames = _compilePattern2.paramNames;\n  var tokens = _compilePattern2.tokens;\n\n  regexpSource += '/*'; // Capture path separators\n\n  // Special-case patterns like '*' for catch-all routes.\n  var captureRemaining = tokens[tokens.length - 1] !== '*';\n\n  if (captureRemaining) {\n    // This will match newlines in the remaining path.\n    regexpSource += '([\\\\s\\\\S]*?)';\n  }\n\n  var match = pathname.match(new RegExp('^' + regexpSource + '$', 'i'));\n\n  var remainingPathname = undefined,\n      paramValues = undefined;\n  if (match != null) {\n    if (captureRemaining) {\n      remainingPathname = match.pop();\n      var matchedPath = match[0].substr(0, match[0].length - remainingPathname.length);\n\n      // If we didn't match the entire pathname, then make sure that the match\n      // we did get ends at a path separator (potentially the one we added\n      // above at the beginning of the path, if the actual match was empty).\n      if (remainingPathname && matchedPath.charAt(matchedPath.length - 1) !== '/') {\n        return {\n          remainingPathname: null,\n          paramNames: paramNames,\n          paramValues: null\n        };\n      }\n    } else {\n      // If this matched at all, then the match was the entire pathname.\n      remainingPathname = '';\n    }\n\n    paramValues = match.slice(1).map(function (v) {\n      return v != null ? decodeURIComponent(v) : v;\n    });\n  } else {\n    remainingPathname = paramValues = null;\n  }\n\n  return {\n    remainingPathname: remainingPathname,\n    paramNames: paramNames,\n    paramValues: paramValues\n  };\n}\n\nfunction getParamNames(pattern) {\n  return compilePattern(pattern).paramNames;\n}\n\nfunction getParams(pattern, pathname) {\n  var _matchPattern = matchPattern(pattern, pathname);\n\n  var paramNames = _matchPattern.paramNames;\n  var paramValues = _matchPattern.paramValues;\n\n  if (paramValues != null) {\n    return paramNames.reduce(function (memo, paramName, index) {\n      memo[paramName] = paramValues[index];\n      return memo;\n    }, {});\n  }\n\n  return null;\n}\n\n/**\n * Returns a version of the given pattern with params interpolated. Throws\n * if there is a dynamic segment of the pattern for which there is no param.\n */\n\nfunction formatPattern(pattern, params) {\n  params = params || {};\n\n  var _compilePattern3 = compilePattern(pattern);\n\n  var tokens = _compilePattern3.tokens;\n\n  var parenCount = 0,\n      pathname = '',\n      splatIndex = 0;\n\n  var token = undefined,\n      paramName = undefined,\n      paramValue = undefined;\n  for (var i = 0, len = tokens.length; i < len; ++i) {\n    token = tokens[i];\n\n    if (token === '*' || token === '**') {\n      paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;\n\n      !(paramValue != null || parenCount > 0) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Missing splat #%s for path \"%s\"', splatIndex, pattern) : _invariant2['default'](false) : undefined;\n\n      if (paramValue != null) pathname += encodeURI(paramValue);\n    } else if (token === '(') {\n      parenCount += 1;\n    } else if (token === ')') {\n      parenCount -= 1;\n    } else if (token.charAt(0) === ':') {\n      paramName = token.substring(1);\n      paramValue = params[paramName];\n\n      !(paramValue != null || parenCount > 0) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Missing \"%s\" parameter for path \"%s\"', paramName, pattern) : _invariant2['default'](false) : undefined;\n\n      if (paramValue != null) pathname += encodeURIComponent(paramValue);\n    } else {\n      pathname += token;\n    }\n  }\n\n  return pathname.replace(/\\/+/g, '/');\n}","'use strict';\n\nexports.__esModule = true;\nexports.falsy = falsy;\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar func = _react.PropTypes.func;\nvar object = _react.PropTypes.object;\nvar arrayOf = _react.PropTypes.arrayOf;\nvar oneOfType = _react.PropTypes.oneOfType;\nvar element = _react.PropTypes.element;\nvar shape = _react.PropTypes.shape;\nvar string = _react.PropTypes.string;\n\nfunction falsy(props, propName, componentName) {\n  if (props[propName]) return new Error('<' + componentName + '> should not have a \"' + propName + '\" prop');\n}\n\nvar history = shape({\n  listen: func.isRequired,\n  pushState: func.isRequired,\n  replaceState: func.isRequired,\n  go: func.isRequired\n});\n\nexports.history = history;\nvar location = shape({\n  pathname: string.isRequired,\n  search: string.isRequired,\n  state: object,\n  action: string.isRequired,\n  key: string\n});\n\nexports.location = location;\nvar component = oneOfType([func, string]);\nexports.component = component;\nvar components = oneOfType([component, object]);\nexports.components = components;\nvar route = oneOfType([object, element]);\nexports.route = route;\nvar routes = oneOfType([route, arrayOf(route)]);\n\nexports.routes = routes;\nexports['default'] = {\n  falsy: falsy,\n  history: history,\n  location: location,\n  component: component,\n  components: components,\n  route: route\n};","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _RouteUtils = require('./RouteUtils');\n\nvar _PatternUtils = require('./PatternUtils');\n\nvar _PropTypes = require('./PropTypes');\n\nvar _React$PropTypes = _react2['default'].PropTypes;\nvar string = _React$PropTypes.string;\nvar object = _React$PropTypes.object;\n\n/**\n * A <Redirect> is used to declare another URL path a client should\n * be sent to when they request a given URL.\n *\n * Redirects are placed alongside routes in the route configuration\n * and are traversed in the same manner.\n */\nvar Redirect = _react2['default'].createClass({\n  displayName: 'Redirect',\n\n  statics: {\n\n    createRouteFromReactElement: function createRouteFromReactElement(element) {\n      var route = _RouteUtils.createRouteFromReactElement(element);\n\n      if (route.from) route.path = route.from;\n\n      route.onEnter = function (nextState, replace) {\n        var location = nextState.location;\n        var params = nextState.params;\n\n        var pathname = undefined;\n        if (route.to.charAt(0) === '/') {\n          pathname = _PatternUtils.formatPattern(route.to, params);\n        } else if (!route.to) {\n          pathname = location.pathname;\n        } else {\n          var routeIndex = nextState.routes.indexOf(route);\n          var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);\n          var pattern = parentPattern.replace(/\\/*$/, '/') + route.to;\n          pathname = _PatternUtils.formatPattern(pattern, params);\n        }\n\n        replace({\n          pathname: pathname,\n          query: route.query || location.query,\n          state: route.state || location.state\n        });\n      };\n\n      return route;\n    },\n\n    getRoutePattern: function getRoutePattern(routes, routeIndex) {\n      var parentPattern = '';\n\n      for (var i = routeIndex; i >= 0; i--) {\n        var route = routes[i];\n        var pattern = route.path || '';\n\n        parentPattern = pattern.replace(/\\/*$/, '/') + parentPattern;\n\n        if (pattern.indexOf('/') === 0) break;\n      }\n\n      return '/' + parentPattern;\n    }\n\n  },\n\n  propTypes: {\n    path: string,\n    from: string, // Alias for path\n    to: string.isRequired,\n    query: object,\n    state: object,\n    onEnter: _PropTypes.falsy,\n    children: _PropTypes.falsy\n  },\n\n  /* istanbul ignore next: sanity check */\n  render: function render() {\n    !false ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, '<Redirect> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;\n  }\n\n});\n\nexports['default'] = Redirect;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _RouteUtils = require('./RouteUtils');\n\nvar _PropTypes = require('./PropTypes');\n\nvar _React$PropTypes = _react2['default'].PropTypes;\nvar string = _React$PropTypes.string;\nvar func = _React$PropTypes.func;\n\n/**\n * A <Route> is used to declare which components are rendered to the\n * page when the URL matches a given pattern.\n *\n * Routes are arranged in a nested tree structure. When a new URL is\n * requested, the tree is searched depth-first to find a route whose\n * path matches the URL.  When one is found, all routes in the tree\n * that lead to it are considered \"active\" and their components are\n * rendered into the DOM, nested in the same order as in the tree.\n */\nvar Route = _react2['default'].createClass({\n  displayName: 'Route',\n\n  statics: {\n    createRouteFromReactElement: _RouteUtils.createRouteFromReactElement\n  },\n\n  propTypes: {\n    path: string,\n    component: _PropTypes.component,\n    components: _PropTypes.components,\n    getComponent: func,\n    getComponents: func\n  },\n\n  /* istanbul ignore next: sanity check */\n  render: function render() {\n    !false ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, '<Route> elements are for router configuration only and should not be rendered') : _invariant2['default'](false) : undefined;\n  }\n\n});\n\nexports['default'] = Route;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar object = _react2['default'].PropTypes.object;\n\n/**\n * The RouteContext mixin provides a convenient way for route\n * components to set the route in context. This is needed for\n * routes that render elements that want to use the Lifecycle\n * mixin to prevent transitions.\n */\nvar RouteContext = {\n\n  propTypes: {\n    route: object.isRequired\n  },\n\n  childContextTypes: {\n    route: object.isRequired\n  },\n\n  getChildContext: function getChildContext() {\n    return {\n      route: this.props.route\n    };\n  },\n\n  componentWillMount: function componentWillMount() {\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'The `RouteContext` mixin is deprecated. You can provide `this.props.route` on context with your own `contextTypes`. http://tiny.cc/router-routecontextmixin') : undefined;\n  }\n\n};\n\nexports['default'] = RouteContext;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.isReactChildren = isReactChildren;\nexports.createRouteFromReactElement = createRouteFromReactElement;\nexports.createRoutesFromReactChildren = createRoutesFromReactChildren;\nexports.createRoutes = createRoutes;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nfunction isValidChild(object) {\n  return object == null || _react2['default'].isValidElement(object);\n}\n\nfunction isReactChildren(object) {\n  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);\n}\n\nfunction checkPropTypes(componentName, propTypes, props) {\n  componentName = componentName || 'UnknownComponent';\n\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error = propTypes[propName](props, propName, componentName);\n\n      /* istanbul ignore if: error logging */\n      if (error instanceof Error) process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, error.message) : undefined;\n    }\n  }\n}\n\nfunction createRoute(defaultProps, props) {\n  return _extends({}, defaultProps, props);\n}\n\nfunction createRouteFromReactElement(element) {\n  var type = element.type;\n  var route = createRoute(type.defaultProps, element.props);\n\n  if (type.propTypes) checkPropTypes(type.displayName || type.name, type.propTypes, route);\n\n  if (route.children) {\n    var childRoutes = createRoutesFromReactChildren(route.children, route);\n\n    if (childRoutes.length) route.childRoutes = childRoutes;\n\n    delete route.children;\n  }\n\n  return route;\n}\n\n/**\n * Creates and returns a routes object from the given ReactChildren. JSX\n * provides a convenient way to visualize how routes in the hierarchy are\n * nested.\n *\n *   import { Route, createRoutesFromReactChildren } from 'react-router'\n *   \n *   const routes = createRoutesFromReactChildren(\n *     <Route component={App}>\n *       <Route path=\"home\" component={Dashboard}/>\n *       <Route path=\"news\" component={NewsFeed}/>\n *     </Route>\n *   )\n *\n * Note: This method is automatically used when you provide <Route> children\n * to a <Router> component.\n */\n\nfunction createRoutesFromReactChildren(children, parentRoute) {\n  var routes = [];\n\n  _react2['default'].Children.forEach(children, function (element) {\n    if (_react2['default'].isValidElement(element)) {\n      // Component classes may have a static create* method.\n      if (element.type.createRouteFromReactElement) {\n        var route = element.type.createRouteFromReactElement(element, parentRoute);\n\n        if (route) routes.push(route);\n      } else {\n        routes.push(createRouteFromReactElement(element));\n      }\n    }\n  });\n\n  return routes;\n}\n\n/**\n * Creates and returns an array of routes from the given object which\n * may be a JSX route, a plain object route, or an array of either.\n */\n\nfunction createRoutes(routes) {\n  if (isReactChildren(routes)) {\n    routes = createRoutesFromReactChildren(routes);\n  } else if (routes && !Array.isArray(routes)) {\n    routes = [routes];\n  }\n\n  return routes;\n}","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar _historyLibCreateHashHistory = require('history/lib/createHashHistory');\n\nvar _historyLibCreateHashHistory2 = _interopRequireDefault(_historyLibCreateHashHistory);\n\nvar _historyLibUseQueries = require('history/lib/useQueries');\n\nvar _historyLibUseQueries2 = _interopRequireDefault(_historyLibUseQueries);\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _createTransitionManager = require('./createTransitionManager');\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nvar _PropTypes = require('./PropTypes');\n\nvar _RouterContext = require('./RouterContext');\n\nvar _RouterContext2 = _interopRequireDefault(_RouterContext);\n\nvar _RouteUtils = require('./RouteUtils');\n\nvar _RouterUtils = require('./RouterUtils');\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nfunction isDeprecatedHistory(history) {\n  return !history || !history.__v2_compatible__;\n}\n\nvar _React$PropTypes = _react2['default'].PropTypes;\nvar func = _React$PropTypes.func;\nvar object = _React$PropTypes.object;\n\n/**\n * A <Router> is a high-level API for automatically setting up\n * a router that renders a <RouterContext> with all the props\n * it needs each time the URL changes.\n */\nvar Router = _react2['default'].createClass({\n  displayName: 'Router',\n\n  propTypes: {\n    history: object,\n    children: _PropTypes.routes,\n    routes: _PropTypes.routes, // alias for children\n    render: func,\n    createElement: func,\n    onError: func,\n    onUpdate: func,\n\n    // PRIVATE: For client-side rehydration of server match.\n    matchContext: object\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      render: function render(props) {\n        return _react2['default'].createElement(_RouterContext2['default'], props);\n      }\n    };\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      location: null,\n      routes: null,\n      params: null,\n      components: null\n    };\n  },\n\n  handleError: function handleError(error) {\n    if (this.props.onError) {\n      this.props.onError.call(this, error);\n    } else {\n      // Throw errors by default so we don't silently swallow them!\n      throw error; // This error probably occurred in getChildRoutes or getComponents.\n    }\n  },\n\n  componentWillMount: function componentWillMount() {\n    var _this = this;\n\n    var _props = this.props;\n    var parseQueryString = _props.parseQueryString;\n    var stringifyQuery = _props.stringifyQuery;\n\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](!(parseQueryString || stringifyQuery), '`parseQueryString` and `stringifyQuery` are deprecated. Please create a custom history. http://tiny.cc/router-customquerystring') : undefined;\n\n    var _createRouterObjects = this.createRouterObjects();\n\n    var history = _createRouterObjects.history;\n    var transitionManager = _createRouterObjects.transitionManager;\n    var router = _createRouterObjects.router;\n\n    this._unlisten = transitionManager.listen(function (error, state) {\n      if (error) {\n        _this.handleError(error);\n      } else {\n        _this.setState(state, _this.props.onUpdate);\n      }\n    });\n\n    this.history = history;\n    this.router = router;\n  },\n\n  createRouterObjects: function createRouterObjects() {\n    var matchContext = this.props.matchContext;\n\n    if (matchContext) {\n      return matchContext;\n    }\n\n    var history = this.props.history;\n    var _props2 = this.props;\n    var routes = _props2.routes;\n    var children = _props2.children;\n\n    if (isDeprecatedHistory(history)) {\n      history = this.wrapDeprecatedHistory(history);\n    }\n\n    var transitionManager = _createTransitionManager2['default'](history, _RouteUtils.createRoutes(routes || children));\n    var router = _RouterUtils.createRouterObject(history, transitionManager);\n    var routingHistory = _RouterUtils.createRoutingHistory(history, transitionManager);\n\n    return { history: routingHistory, transitionManager: transitionManager, router: router };\n  },\n\n  wrapDeprecatedHistory: function wrapDeprecatedHistory(history) {\n    var _props3 = this.props;\n    var parseQueryString = _props3.parseQueryString;\n    var stringifyQuery = _props3.stringifyQuery;\n\n    var createHistory = undefined;\n    if (history) {\n      process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'It appears you have provided a deprecated history object to `<Router/>`, please use a history provided by ' + 'React Router with `import { browserHistory } from \\'react-router\\'` or `import { hashHistory } from \\'react-router\\'`. ' + 'If you are using a custom history please create it with `useRouterHistory`, see http://tiny.cc/router-usinghistory for details.') : undefined;\n      createHistory = function () {\n        return history;\n      };\n    } else {\n      process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, '`Router` no longer defaults the history prop to hash history. Please use the `hashHistory` singleton instead. http://tiny.cc/router-defaulthistory') : undefined;\n      createHistory = _historyLibCreateHashHistory2['default'];\n    }\n\n    return _historyLibUseQueries2['default'](createHistory)({ parseQueryString: parseQueryString, stringifyQuery: stringifyQuery });\n  },\n\n  /* istanbul ignore next: sanity check */\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](nextProps.history === this.props.history, 'You cannot change <Router history>; it will be ignored') : undefined;\n\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default']((nextProps.routes || nextProps.children) === (this.props.routes || this.props.children), 'You cannot change <Router routes>; it will be ignored') : undefined;\n  },\n\n  componentWillUnmount: function componentWillUnmount() {\n    if (this._unlisten) this._unlisten();\n  },\n\n  render: function render() {\n    var _state = this.state;\n    var location = _state.location;\n    var routes = _state.routes;\n    var params = _state.params;\n    var components = _state.components;\n    var _props4 = this.props;\n    var createElement = _props4.createElement;\n    var render = _props4.render;\n\n    var props = _objectWithoutProperties(_props4, ['createElement', 'render']);\n\n    if (location == null) return null; // Async match\n\n    // Only forward non-Router-specific props to routing context, as those are\n    // the only ones that might be custom routing context props.\n    Object.keys(Router.propTypes).forEach(function (propType) {\n      return delete props[propType];\n    });\n\n    return render(_extends({}, props, {\n      history: this.history,\n      router: this.router,\n      location: location,\n      routes: routes,\n      params: params,\n      components: components,\n      createElement: createElement\n    }));\n  }\n\n});\n\nexports['default'] = Router;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _deprecateObjectProperties = require('./deprecateObjectProperties');\n\nvar _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);\n\nvar _getRouteParams = require('./getRouteParams');\n\nvar _getRouteParams2 = _interopRequireDefault(_getRouteParams);\n\nvar _RouteUtils = require('./RouteUtils');\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nvar _React$PropTypes = _react2['default'].PropTypes;\nvar array = _React$PropTypes.array;\nvar func = _React$PropTypes.func;\nvar object = _React$PropTypes.object;\n\n/**\n * A <RouterContext> renders the component tree for a given router state\n * and sets the history object and the current location in context.\n */\nvar RouterContext = _react2['default'].createClass({\n  displayName: 'RouterContext',\n\n  propTypes: {\n    history: object,\n    router: object.isRequired,\n    location: object.isRequired,\n    routes: array.isRequired,\n    params: object.isRequired,\n    components: array.isRequired,\n    createElement: func.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      createElement: _react2['default'].createElement\n    };\n  },\n\n  childContextTypes: {\n    history: object,\n    location: object.isRequired,\n    router: object.isRequired\n  },\n\n  getChildContext: function getChildContext() {\n    var _props = this.props;\n    var router = _props.router;\n    var history = _props.history;\n    var location = _props.location;\n\n    if (!router) {\n      process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, '`<RouterContext>` expects a `router` rather than a `history`') : undefined;\n\n      router = _extends({}, history, {\n        setRouteLeaveHook: history.listenBeforeLeavingRoute\n      });\n      delete router.listenBeforeLeavingRoute;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      location = _deprecateObjectProperties2['default'](location, '`context.location` is deprecated, please use a route component\\'s `props.location` instead. http://tiny.cc/router-accessinglocation');\n    }\n\n    return { history: history, location: location, router: router };\n  },\n\n  createElement: function createElement(component, props) {\n    return component == null ? null : this.props.createElement(component, props);\n  },\n\n  render: function render() {\n    var _this = this;\n\n    var _props2 = this.props;\n    var history = _props2.history;\n    var location = _props2.location;\n    var routes = _props2.routes;\n    var params = _props2.params;\n    var components = _props2.components;\n\n    var element = null;\n\n    if (components) {\n      element = components.reduceRight(function (element, components, index) {\n        if (components == null) return element; // Don't create new children; use the grandchildren.\n\n        var route = routes[index];\n        var routeParams = _getRouteParams2['default'](route, params);\n        var props = {\n          history: history,\n          location: location,\n          params: params,\n          route: route,\n          routeParams: routeParams,\n          routes: routes\n        };\n\n        if (_RouteUtils.isReactChildren(element)) {\n          props.children = element;\n        } else if (element) {\n          for (var prop in element) {\n            if (element.hasOwnProperty(prop)) props[prop] = element[prop];\n          }\n        }\n\n        if (typeof components === 'object') {\n          var elements = {};\n\n          for (var key in components) {\n            if (components.hasOwnProperty(key)) {\n              // Pass through the key as a prop to createElement to allow\n              // custom createElement functions to know which named component\n              // they're rendering, for e.g. matching up to fetched data.\n              elements[key] = _this.createElement(components[key], _extends({\n                key: key }, props));\n            }\n          }\n\n          return elements;\n        }\n\n        return _this.createElement(components, props);\n      }, element);\n    }\n\n    !(element === null || element === false || _react2['default'].isValidElement(element)) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'The root route must render a single element') : _invariant2['default'](false) : undefined;\n\n    return element;\n  }\n\n});\n\nexports['default'] = RouterContext;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.createRouterObject = createRouterObject;\nexports.createRoutingHistory = createRoutingHistory;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _deprecateObjectProperties = require('./deprecateObjectProperties');\n\nvar _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);\n\nfunction createRouterObject(history, transitionManager) {\n  return _extends({}, history, {\n    setRouteLeaveHook: transitionManager.listenBeforeLeavingRoute,\n    isActive: transitionManager.isActive\n  });\n}\n\n// deprecated\n\nfunction createRoutingHistory(history, transitionManager) {\n  history = _extends({}, history, transitionManager);\n\n  if (process.env.NODE_ENV !== 'production') {\n    history = _deprecateObjectProperties2['default'](history, '`props.history` and `context.history` are deprecated. Please use `context.router`. http://tiny.cc/router-contextchanges');\n  }\n\n  return history;\n}","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _react = (typeof window !== \"undefined\" ? window['React'] : typeof global !== \"undefined\" ? global['React'] : null);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _RouterContext = require('./RouterContext');\n\nvar _RouterContext2 = _interopRequireDefault(_RouterContext);\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nvar RoutingContext = _react2['default'].createClass({\n  displayName: 'RoutingContext',\n\n  componentWillMount: function componentWillMount() {\n    process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, '`RoutingContext` has been renamed to `RouterContext`. Please use `import { RouterContext } from \\'react-router\\'`. http://tiny.cc/router-routercontext') : undefined;\n  },\n\n  render: function render() {\n    return _react2['default'].createElement(_RouterContext2['default'], this.props);\n  }\n});\n\nexports['default'] = RoutingContext;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\nexports.runEnterHooks = runEnterHooks;\nexports.runLeaveHooks = runLeaveHooks;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nfunction createEnterHook(hook, route) {\n  return function (a, b, callback) {\n    hook.apply(route, arguments);\n\n    if (hook.length < 3) {\n      // Assume hook executes synchronously and\n      // automatically call the callback.\n      callback();\n    }\n  };\n}\n\nfunction getEnterHooks(routes) {\n  return routes.reduce(function (hooks, route) {\n    if (route.onEnter) hooks.push(createEnterHook(route.onEnter, route));\n\n    return hooks;\n  }, []);\n}\n\n/**\n * Runs all onEnter hooks in the given array of routes in order\n * with onEnter(nextState, replace, callback) and calls\n * callback(error, redirectInfo) when finished. The first hook\n * to use replace short-circuits the loop.\n *\n * If a hook needs to run asynchronously, it may use the callback\n * function. However, doing so will cause the transition to pause,\n * which could lead to a non-responsive UI if the hook is slow.\n */\n\nfunction runEnterHooks(routes, nextState, callback) {\n  var hooks = getEnterHooks(routes);\n\n  if (!hooks.length) {\n    callback();\n    return;\n  }\n\n  var redirectInfo = undefined;\n  function replace(location, deprecatedPathname, deprecatedQuery) {\n    if (deprecatedPathname) {\n      process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, '`replaceState(state, pathname, query) is deprecated; use `replace(location)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : undefined;\n      redirectInfo = {\n        pathname: deprecatedPathname,\n        query: deprecatedQuery,\n        state: location\n      };\n\n      return;\n    }\n\n    redirectInfo = location;\n  }\n\n  _AsyncUtils.loopAsync(hooks.length, function (index, next, done) {\n    hooks[index](nextState, replace, function (error) {\n      if (error || redirectInfo) {\n        done(error, redirectInfo); // No need to continue.\n      } else {\n          next();\n        }\n    });\n  }, callback);\n}\n\n/**\n * Runs all onLeave hooks in the given array of routes in order.\n */\n\nfunction runLeaveHooks(routes) {\n  for (var i = 0, len = routes.length; i < len; ++i) {\n    if (routes[i].onLeave) routes[i].onLeave.call(routes[i]);\n  }\n}","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _historyLibCreateBrowserHistory = require('history/lib/createBrowserHistory');\n\nvar _historyLibCreateBrowserHistory2 = _interopRequireDefault(_historyLibCreateBrowserHistory);\n\nvar _createRouterHistory = require('./createRouterHistory');\n\nvar _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);\n\nexports['default'] = _createRouterHistory2['default'](_historyLibCreateBrowserHistory2['default']);\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _PatternUtils = require('./PatternUtils');\n\nfunction routeParamsChanged(route, prevState, nextState) {\n  if (!route.path) return false;\n\n  var paramNames = _PatternUtils.getParamNames(route.path);\n\n  return paramNames.some(function (paramName) {\n    return prevState.params[paramName] !== nextState.params[paramName];\n  });\n}\n\n/**\n * Returns an object of { leaveRoutes, enterRoutes } determined by\n * the change from prevState to nextState. We leave routes if either\n * 1) they are not in the next state or 2) they are in the next state\n * but their params have changed (i.e. /users/123 => /users/456).\n *\n * leaveRoutes are ordered starting at the leaf route of the tree\n * we're leaving up to the common parent route. enterRoutes are ordered\n * from the top of the tree we're entering down to the leaf route.\n */\nfunction computeChangedRoutes(prevState, nextState) {\n  var prevRoutes = prevState && prevState.routes;\n  var nextRoutes = nextState.routes;\n\n  var leaveRoutes = undefined,\n      enterRoutes = undefined;\n  if (prevRoutes) {\n    leaveRoutes = prevRoutes.filter(function (route) {\n      return nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);\n    });\n\n    // onLeave hooks start at the leaf route.\n    leaveRoutes.reverse();\n\n    enterRoutes = nextRoutes.filter(function (route) {\n      return prevRoutes.indexOf(route) === -1 || leaveRoutes.indexOf(route) !== -1;\n    });\n  } else {\n    leaveRoutes = [];\n    enterRoutes = nextRoutes;\n  }\n\n  return {\n    leaveRoutes: leaveRoutes,\n    enterRoutes: enterRoutes\n  };\n}\n\nexports['default'] = computeChangedRoutes;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\nexports['default'] = createMemoryHistory;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _historyLibUseQueries = require('history/lib/useQueries');\n\nvar _historyLibUseQueries2 = _interopRequireDefault(_historyLibUseQueries);\n\nvar _historyLibUseBasename = require('history/lib/useBasename');\n\nvar _historyLibUseBasename2 = _interopRequireDefault(_historyLibUseBasename);\n\nvar _historyLibCreateMemoryHistory = require('history/lib/createMemoryHistory');\n\nvar _historyLibCreateMemoryHistory2 = _interopRequireDefault(_historyLibCreateMemoryHistory);\n\nfunction createMemoryHistory(options) {\n  // signatures and type checking differ between `useRoutes` and\n  // `createMemoryHistory`, have to create `memoryHistory` first because\n  // `useQueries` doesn't understand the signature\n  var memoryHistory = _historyLibCreateMemoryHistory2['default'](options);\n  var createHistory = function createHistory() {\n    return memoryHistory;\n  };\n  var history = _historyLibUseQueries2['default'](_historyLibUseBasename2['default'](createHistory))(options);\n  history.__v2_compatible__ = true;\n  return history;\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _useRouterHistory = require('./useRouterHistory');\n\nvar _useRouterHistory2 = _interopRequireDefault(_useRouterHistory);\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nexports['default'] = function (createHistory) {\n  var history = undefined;\n  if (canUseDOM) history = _useRouterHistory2['default'](createHistory)();\n  return history;\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports['default'] = createTransitionManager;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nvar _historyLibActions = require('history/lib/Actions');\n\nvar _computeChangedRoutes2 = require('./computeChangedRoutes');\n\nvar _computeChangedRoutes3 = _interopRequireDefault(_computeChangedRoutes2);\n\nvar _TransitionUtils = require('./TransitionUtils');\n\nvar _isActive2 = require('./isActive');\n\nvar _isActive3 = _interopRequireDefault(_isActive2);\n\nvar _getComponents = require('./getComponents');\n\nvar _getComponents2 = _interopRequireDefault(_getComponents);\n\nvar _matchRoutes = require('./matchRoutes');\n\nvar _matchRoutes2 = _interopRequireDefault(_matchRoutes);\n\nfunction hasAnyProperties(object) {\n  for (var p in object) {\n    if (object.hasOwnProperty(p)) return true;\n  }return false;\n}\n\nfunction createTransitionManager(history, routes) {\n  var state = {};\n\n  // Signature should be (location, indexOnly), but needs to support (path,\n  // query, indexOnly)\n  function isActive(location) {\n    var indexOnlyOrDeprecatedQuery = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];\n    var deprecatedIndexOnly = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n    var indexOnly = undefined;\n    if (indexOnlyOrDeprecatedQuery && indexOnlyOrDeprecatedQuery !== true || deprecatedIndexOnly !== null) {\n      process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, '`isActive(pathname, query, indexOnly) is deprecated; use `isActive(location, indexOnly)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : undefined;\n      location = { pathname: location, query: indexOnlyOrDeprecatedQuery };\n      indexOnly = deprecatedIndexOnly || false;\n    } else {\n      location = history.createLocation(location);\n      indexOnly = indexOnlyOrDeprecatedQuery;\n    }\n\n    return _isActive3['default'](location, indexOnly, state.location, state.routes, state.params);\n  }\n\n  function createLocationFromRedirectInfo(location) {\n    return history.createLocation(location, _historyLibActions.REPLACE);\n  }\n\n  var partialNextState = undefined;\n\n  function match(location, callback) {\n    if (partialNextState && partialNextState.location === location) {\n      // Continue from where we left off.\n      finishMatch(partialNextState, callback);\n    } else {\n      _matchRoutes2['default'](routes, location, function (error, nextState) {\n        if (error) {\n          callback(error);\n        } else if (nextState) {\n          finishMatch(_extends({}, nextState, { location: location }), callback);\n        } else {\n          callback();\n        }\n      });\n    }\n  }\n\n  function finishMatch(nextState, callback) {\n    var _computeChangedRoutes = _computeChangedRoutes3['default'](state, nextState);\n\n    var leaveRoutes = _computeChangedRoutes.leaveRoutes;\n    var enterRoutes = _computeChangedRoutes.enterRoutes;\n\n    _TransitionUtils.runLeaveHooks(leaveRoutes);\n\n    // Tear down confirmation hooks for left routes\n    leaveRoutes.forEach(removeListenBeforeHooksForRoute);\n\n    _TransitionUtils.runEnterHooks(enterRoutes, nextState, function (error, redirectInfo) {\n      if (error) {\n        callback(error);\n      } else if (redirectInfo) {\n        callback(null, createLocationFromRedirectInfo(redirectInfo));\n      } else {\n        // TODO: Fetch components after state is updated.\n        _getComponents2['default'](nextState, function (error, components) {\n          if (error) {\n            callback(error);\n          } else {\n            // TODO: Make match a pure function and have some other API\n            // for \"match and update state\".\n            callback(null, null, state = _extends({}, nextState, { components: components }));\n          }\n        });\n      }\n    });\n  }\n\n  var RouteGuid = 1;\n\n  function getRouteID(route) {\n    var create = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\n    return route.__id__ || create && (route.__id__ = RouteGuid++);\n  }\n\n  var RouteHooks = {};\n\n  function getRouteHooksForRoutes(routes) {\n    return routes.reduce(function (hooks, route) {\n      hooks.push.apply(hooks, RouteHooks[getRouteID(route)]);\n      return hooks;\n    }, []);\n  }\n\n  function transitionHook(location, callback) {\n    _matchRoutes2['default'](routes, location, function (error, nextState) {\n      if (nextState == null) {\n        // TODO: We didn't actually match anything, but hang\n        // onto error/nextState so we don't have to matchRoutes\n        // again in the listen callback.\n        callback();\n        return;\n      }\n\n      // Cache some state here so we don't have to\n      // matchRoutes() again in the listen callback.\n      partialNextState = _extends({}, nextState, { location: location });\n\n      var hooks = getRouteHooksForRoutes(_computeChangedRoutes3['default'](state, partialNextState).leaveRoutes);\n\n      var result = undefined;\n      for (var i = 0, len = hooks.length; result == null && i < len; ++i) {\n        // Passing the location arg here indicates to\n        // the user that this is a transition hook.\n        result = hooks[i](location);\n      }\n\n      callback(result);\n    });\n  }\n\n  /* istanbul ignore next: untestable with Karma */\n  function beforeUnloadHook() {\n    // Synchronously check to see if any route hooks want\n    // to prevent the current window/tab from closing.\n    if (state.routes) {\n      var hooks = getRouteHooksForRoutes(state.routes);\n\n      var message = undefined;\n      for (var i = 0, len = hooks.length; typeof message !== 'string' && i < len; ++i) {\n        // Passing no args indicates to the user that this is a\n        // beforeunload hook. We don't know the next location.\n        message = hooks[i]();\n      }\n\n      return message;\n    }\n  }\n\n  var unlistenBefore = undefined,\n      unlistenBeforeUnload = undefined;\n\n  function removeListenBeforeHooksForRoute(route) {\n    var routeID = getRouteID(route, false);\n    if (!routeID) {\n      return;\n    }\n\n    delete RouteHooks[routeID];\n\n    if (!hasAnyProperties(RouteHooks)) {\n      // teardown transition & beforeunload hooks\n      if (unlistenBefore) {\n        unlistenBefore();\n        unlistenBefore = null;\n      }\n\n      if (unlistenBeforeUnload) {\n        unlistenBeforeUnload();\n        unlistenBeforeUnload = null;\n      }\n    }\n  }\n\n  /**\n   * Registers the given hook function to run before leaving the given route.\n   *\n   * During a normal transition, the hook function receives the next location\n   * as its only argument and must return either a) a prompt message to show\n   * the user, to make sure they want to leave the page or b) false, to prevent\n   * the transition.\n   *\n   * During the beforeunload event (in browsers) the hook receives no arguments.\n   * In this case it must return a prompt message to prevent the transition.\n   *\n   * Returns a function that may be used to unbind the listener.\n   */\n  function listenBeforeLeavingRoute(route, hook) {\n    // TODO: Warn if they register for a route that isn't currently\n    // active. They're probably doing something wrong, like re-creating\n    // route objects on every location change.\n    var routeID = getRouteID(route);\n    var hooks = RouteHooks[routeID];\n\n    if (!hooks) {\n      var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);\n\n      RouteHooks[routeID] = [hook];\n\n      if (thereWereNoRouteHooks) {\n        // setup transition & beforeunload hooks\n        unlistenBefore = history.listenBefore(transitionHook);\n\n        if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);\n      }\n    } else {\n      if (hooks.indexOf(hook) === -1) {\n        process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'adding multiple leave hooks for the same route is deprecated; manage multiple confirmations in your own code instead') : undefined;\n\n        hooks.push(hook);\n      }\n    }\n\n    return function () {\n      var hooks = RouteHooks[routeID];\n\n      if (hooks) {\n        var newHooks = hooks.filter(function (item) {\n          return item !== hook;\n        });\n\n        if (newHooks.length === 0) {\n          removeListenBeforeHooksForRoute(route);\n        } else {\n          RouteHooks[routeID] = newHooks;\n        }\n      }\n    };\n  }\n\n  /**\n   * This is the API for stateful environments. As the location\n   * changes, we update state and call the listener. We can also\n   * gracefully handle errors and redirects.\n   */\n  function listen(listener) {\n    // TODO: Only use a single history listener. Otherwise we'll\n    // end up with multiple concurrent calls to match.\n    return history.listen(function (location) {\n      if (state.location === location) {\n        listener(null, state);\n      } else {\n        match(location, function (error, redirectLocation, nextState) {\n          if (error) {\n            listener(error);\n          } else if (redirectLocation) {\n            history.transitionTo(redirectLocation);\n          } else if (nextState) {\n            listener(null, nextState);\n          } else {\n            process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, 'Location \"%s\" did not match any routes', location.pathname + location.search + location.hash) : undefined;\n          }\n        });\n      }\n    });\n  }\n\n  return {\n    isActive: isActive,\n    match: match,\n    listenBeforeLeavingRoute: listenBeforeLeavingRoute,\n    listen: listen\n  };\n}\n\n//export default useRoutes\nmodule.exports = exports['default'];","/*eslint no-empty: 0*/\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = deprecateObjectProperties;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nvar useMembrane = false;\n\nif (process.env.NODE_ENV !== 'production') {\n  try {\n    if (Object.defineProperty({}, 'x', { get: function get() {\n        return true;\n      } }).x) {\n      useMembrane = true;\n    }\n  } catch (e) {}\n}\n\n// wraps an object in a membrane to warn about deprecated property access\n\nfunction deprecateObjectProperties(object, message) {\n  if (!useMembrane) return object;\n\n  var membrane = {};\n\n  var _loop = function (prop) {\n    if (typeof object[prop] === 'function') {\n      membrane[prop] = function () {\n        process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, message) : undefined;\n        return object[prop].apply(object, arguments);\n      };\n    } else {\n      Object.defineProperty(membrane, prop, {\n        configurable: false,\n        enumerable: false,\n        get: function get() {\n          process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, message) : undefined;\n          return object[prop];\n        }\n      });\n    }\n  };\n\n  for (var prop in object) {\n    _loop(prop);\n  }\n\n  return membrane;\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nfunction getComponentsForRoute(location, route, callback) {\n  if (route.component || route.components) {\n    callback(null, route.component || route.components);\n  } else if (route.getComponent) {\n    route.getComponent(location, callback);\n  } else if (route.getComponents) {\n    route.getComponents(location, callback);\n  } else {\n    callback();\n  }\n}\n\n/**\n * Asynchronously fetches all components needed for the given router\n * state and calls callback(error, components) when finished.\n *\n * Note: This operation may finish synchronously if no routes have an\n * asynchronous getComponents method.\n */\nfunction getComponents(nextState, callback) {\n  _AsyncUtils.mapAsync(nextState.routes, function (route, index, callback) {\n    getComponentsForRoute(nextState.location, route, callback);\n  }, callback);\n}\n\nexports['default'] = getComponents;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _PatternUtils = require('./PatternUtils');\n\n/**\n * Extracts an object of params the given route cares about from\n * the given params object.\n */\nfunction getRouteParams(route, params) {\n  var routeParams = {};\n\n  if (!route.path) return routeParams;\n\n  var paramNames = _PatternUtils.getParamNames(route.path);\n\n  for (var p in params) {\n    if (params.hasOwnProperty(p) && paramNames.indexOf(p) !== -1) routeParams[p] = params[p];\n  }return routeParams;\n}\n\nexports['default'] = getRouteParams;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _historyLibCreateHashHistory = require('history/lib/createHashHistory');\n\nvar _historyLibCreateHashHistory2 = _interopRequireDefault(_historyLibCreateHashHistory);\n\nvar _createRouterHistory = require('./createRouterHistory');\n\nvar _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);\n\nexports['default'] = _createRouterHistory2['default'](_historyLibCreateHashHistory2['default']);\nmodule.exports = exports['default'];","/* components */\n'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _Router2 = require('./Router');\n\nvar _Router3 = _interopRequireDefault(_Router2);\n\nexports.Router = _Router3['default'];\n\nvar _Link2 = require('./Link');\n\nvar _Link3 = _interopRequireDefault(_Link2);\n\nexports.Link = _Link3['default'];\n\nvar _IndexLink2 = require('./IndexLink');\n\nvar _IndexLink3 = _interopRequireDefault(_IndexLink2);\n\nexports.IndexLink = _IndexLink3['default'];\n\n/* components (configuration) */\n\nvar _IndexRedirect2 = require('./IndexRedirect');\n\nvar _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);\n\nexports.IndexRedirect = _IndexRedirect3['default'];\n\nvar _IndexRoute2 = require('./IndexRoute');\n\nvar _IndexRoute3 = _interopRequireDefault(_IndexRoute2);\n\nexports.IndexRoute = _IndexRoute3['default'];\n\nvar _Redirect2 = require('./Redirect');\n\nvar _Redirect3 = _interopRequireDefault(_Redirect2);\n\nexports.Redirect = _Redirect3['default'];\n\nvar _Route2 = require('./Route');\n\nvar _Route3 = _interopRequireDefault(_Route2);\n\nexports.Route = _Route3['default'];\n\n/* mixins */\n\nvar _History2 = require('./History');\n\nvar _History3 = _interopRequireDefault(_History2);\n\nexports.History = _History3['default'];\n\nvar _Lifecycle2 = require('./Lifecycle');\n\nvar _Lifecycle3 = _interopRequireDefault(_Lifecycle2);\n\nexports.Lifecycle = _Lifecycle3['default'];\n\nvar _RouteContext2 = require('./RouteContext');\n\nvar _RouteContext3 = _interopRequireDefault(_RouteContext2);\n\nexports.RouteContext = _RouteContext3['default'];\n\n/* utils */\n\nvar _useRoutes2 = require('./useRoutes');\n\nvar _useRoutes3 = _interopRequireDefault(_useRoutes2);\n\nexports.useRoutes = _useRoutes3['default'];\n\nvar _RouteUtils = require('./RouteUtils');\n\nexports.createRoutes = _RouteUtils.createRoutes;\n\nvar _RouterContext2 = require('./RouterContext');\n\nvar _RouterContext3 = _interopRequireDefault(_RouterContext2);\n\nexports.RouterContext = _RouterContext3['default'];\n\nvar _RoutingContext2 = require('./RoutingContext');\n\nvar _RoutingContext3 = _interopRequireDefault(_RoutingContext2);\n\nexports.RoutingContext = _RoutingContext3['default'];\n\nvar _PropTypes2 = require('./PropTypes');\n\nvar _PropTypes3 = _interopRequireDefault(_PropTypes2);\n\nexports.PropTypes = _PropTypes3['default'];\n\nvar _match2 = require('./match');\n\nvar _match3 = _interopRequireDefault(_match2);\n\nexports.match = _match3['default'];\n\nvar _useRouterHistory2 = require('./useRouterHistory');\n\nvar _useRouterHistory3 = _interopRequireDefault(_useRouterHistory2);\n\nexports.useRouterHistory = _useRouterHistory3['default'];\n\nvar _PatternUtils = require('./PatternUtils');\n\nexports.formatPattern = _PatternUtils.formatPattern;\n\n/* histories */\n\nvar _browserHistory2 = require('./browserHistory');\n\nvar _browserHistory3 = _interopRequireDefault(_browserHistory2);\n\nexports.browserHistory = _browserHistory3['default'];\n\nvar _hashHistory2 = require('./hashHistory');\n\nvar _hashHistory3 = _interopRequireDefault(_hashHistory2);\n\nexports.hashHistory = _hashHistory3['default'];\n\nvar _createMemoryHistory2 = require('./createMemoryHistory');\n\nvar _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);\n\nexports.createMemoryHistory = _createMemoryHistory3['default'];","'use strict';\n\nexports.__esModule = true;\nexports['default'] = isActive;\n\nvar _PatternUtils = require('./PatternUtils');\n\nfunction deepEqual(a, b) {\n  if (a == b) return true;\n\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {\n      return deepEqual(item, b[index]);\n    });\n  }\n\n  if (typeof a === 'object') {\n    for (var p in a) {\n      if (!a.hasOwnProperty(p)) {\n        continue;\n      }\n\n      if (a[p] === undefined) {\n        if (b[p] !== undefined) {\n          return false;\n        }\n      } else if (!b.hasOwnProperty(p)) {\n        return false;\n      } else if (!deepEqual(a[p], b[p])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction paramsAreActive(paramNames, paramValues, activeParams) {\n  // FIXME: This doesn't work on repeated params in activeParams.\n  return paramNames.every(function (paramName, index) {\n    return String(paramValues[index]) === String(activeParams[paramName]);\n  });\n}\n\nfunction getMatchingRouteIndex(pathname, activeRoutes, activeParams) {\n  var remainingPathname = pathname,\n      paramNames = [],\n      paramValues = [];\n\n  for (var i = 0, len = activeRoutes.length; i < len; ++i) {\n    var route = activeRoutes[i];\n    var pattern = route.path || '';\n\n    if (pattern.charAt(0) === '/') {\n      remainingPathname = pathname;\n      paramNames = [];\n      paramValues = [];\n    }\n\n    if (remainingPathname !== null) {\n      var matched = _PatternUtils.matchPattern(pattern, remainingPathname);\n      remainingPathname = matched.remainingPathname;\n      paramNames = [].concat(paramNames, matched.paramNames);\n      paramValues = [].concat(paramValues, matched.paramValues);\n    }\n\n    if (remainingPathname === '' && route.path && paramsAreActive(paramNames, paramValues, activeParams)) return i;\n  }\n\n  return null;\n}\n\n/**\n * Returns true if the given pathname matches the active routes\n * and params.\n */\nfunction routeIsActive(pathname, routes, params, indexOnly) {\n  var i = getMatchingRouteIndex(pathname, routes, params);\n\n  if (i === null) {\n    // No match.\n    return false;\n  } else if (!indexOnly) {\n    // Any match is good enough.\n    return true;\n  }\n\n  // If any remaining routes past the match index have paths, then we can't\n  // be on the index route.\n  return routes.slice(i + 1).every(function (route) {\n    return !route.path;\n  });\n}\n\n/**\n * Returns true if all key/value pairs in the given query are\n * currently active.\n */\nfunction queryIsActive(query, activeQuery) {\n  if (activeQuery == null) return query == null;\n\n  if (query == null) return true;\n\n  return deepEqual(query, activeQuery);\n}\n\n/**\n * Returns true if a <Link> to the given pathname/query combination is\n * currently active.\n */\n\nfunction isActive(_ref, indexOnly, currentLocation, routes, params) {\n  var pathname = _ref.pathname;\n  var query = _ref.query;\n\n  if (currentLocation == null) return false;\n\n  if (!routeIsActive(pathname, routes, params, indexOnly)) return false;\n\n  return queryIsActive(query, currentLocation.query);\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _createMemoryHistory = require('./createMemoryHistory');\n\nvar _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);\n\nvar _createTransitionManager = require('./createTransitionManager');\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nvar _RouteUtils = require('./RouteUtils');\n\nvar _RouterUtils = require('./RouterUtils');\n\n/**\n * A high-level API to be used for server-side rendering.\n *\n * This function matches a location to a set of routes and calls\n * callback(error, redirectLocation, renderProps) when finished.\n *\n * Note: You probably don't want to use this in a browser unless you're using\n * server-side rendering with async routes.\n */\nfunction match(_ref, callback) {\n  var history = _ref.history;\n  var routes = _ref.routes;\n  var location = _ref.location;\n\n  var options = _objectWithoutProperties(_ref, ['history', 'routes', 'location']);\n\n  !(history || location) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'match needs a history or a location') : _invariant2['default'](false) : undefined;\n\n  history = history ? history : _createMemoryHistory2['default'](options);\n  var transitionManager = _createTransitionManager2['default'](history, _RouteUtils.createRoutes(routes));\n\n  var unlisten = undefined;\n\n  if (location) {\n    // Allow match({ location: '/the/path', ... })\n    location = history.createLocation(location);\n  } else {\n    // Pick up the location from the history via synchronous history.listen\n    // call if needed.\n    unlisten = history.listen(function (historyLocation) {\n      location = historyLocation;\n    });\n  }\n\n  var router = _RouterUtils.createRouterObject(history, transitionManager);\n  history = _RouterUtils.createRoutingHistory(history, transitionManager);\n\n  transitionManager.match(location, function (error, redirectLocation, nextState) {\n    callback(error, redirectLocation, nextState && _extends({}, nextState, {\n      history: history,\n      router: router,\n      matchContext: { history: history, transitionManager: transitionManager, router: router }\n    }));\n\n    // Defer removing the listener to here to prevent DOM histories from having\n    // to unwind DOM event listeners unnecessarily, in case callback renders a\n    // <Router> and attaches another history listener.\n    if (unlisten) {\n      unlisten();\n    }\n  });\n}\n\nexports['default'] = match;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nvar _PatternUtils = require('./PatternUtils');\n\nvar _RouteUtils = require('./RouteUtils');\n\nfunction getChildRoutes(route, location, callback) {\n  if (route.childRoutes) {\n    return [null, route.childRoutes];\n  }\n  if (!route.getChildRoutes) {\n    return [];\n  }\n\n  var sync = true,\n      result = undefined;\n\n  route.getChildRoutes(location, function (error, childRoutes) {\n    childRoutes = !error && _RouteUtils.createRoutes(childRoutes);\n    if (sync) {\n      result = [error, childRoutes];\n      return;\n    }\n\n    callback(error, childRoutes);\n  });\n\n  sync = false;\n  return result; // Might be undefined.\n}\n\nfunction getIndexRoute(route, location, callback) {\n  if (route.indexRoute) {\n    callback(null, route.indexRoute);\n  } else if (route.getIndexRoute) {\n    route.getIndexRoute(location, function (error, indexRoute) {\n      callback(error, !error && _RouteUtils.createRoutes(indexRoute)[0]);\n    });\n  } else if (route.childRoutes) {\n    (function () {\n      var pathless = route.childRoutes.filter(function (obj) {\n        return !obj.hasOwnProperty('path');\n      });\n\n      _AsyncUtils.loopAsync(pathless.length, function (index, next, done) {\n        getIndexRoute(pathless[index], location, function (error, indexRoute) {\n          if (error || indexRoute) {\n            var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);\n            done(error, routes);\n          } else {\n            next();\n          }\n        });\n      }, function (err, routes) {\n        callback(null, routes);\n      });\n    })();\n  } else {\n    callback();\n  }\n}\n\nfunction assignParams(params, paramNames, paramValues) {\n  return paramNames.reduce(function (params, paramName, index) {\n    var paramValue = paramValues && paramValues[index];\n\n    if (Array.isArray(params[paramName])) {\n      params[paramName].push(paramValue);\n    } else if (paramName in params) {\n      params[paramName] = [params[paramName], paramValue];\n    } else {\n      params[paramName] = paramValue;\n    }\n\n    return params;\n  }, params);\n}\n\nfunction createParams(paramNames, paramValues) {\n  return assignParams({}, paramNames, paramValues);\n}\n\nfunction matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {\n  var pattern = route.path || '';\n\n  if (pattern.charAt(0) === '/') {\n    remainingPathname = location.pathname;\n    paramNames = [];\n    paramValues = [];\n  }\n\n  if (remainingPathname !== null) {\n    var matched = _PatternUtils.matchPattern(pattern, remainingPathname);\n    remainingPathname = matched.remainingPathname;\n    paramNames = [].concat(paramNames, matched.paramNames);\n    paramValues = [].concat(paramValues, matched.paramValues);\n\n    if (remainingPathname === '' && route.path) {\n      var _ret2 = (function () {\n        var match = {\n          routes: [route],\n          params: createParams(paramNames, paramValues)\n        };\n\n        getIndexRoute(route, location, function (error, indexRoute) {\n          if (error) {\n            callback(error);\n          } else {\n            if (Array.isArray(indexRoute)) {\n              var _match$routes;\n\n              process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](indexRoute.every(function (route) {\n                return !route.path;\n              }), 'Index routes should not have paths') : undefined;\n              (_match$routes = match.routes).push.apply(_match$routes, indexRoute);\n            } else if (indexRoute) {\n              process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](!indexRoute.path, 'Index routes should not have paths') : undefined;\n              match.routes.push(indexRoute);\n            }\n\n            callback(null, match);\n          }\n        });\n        return {\n          v: undefined\n        };\n      })();\n\n      if (typeof _ret2 === 'object') return _ret2.v;\n    }\n  }\n\n  if (remainingPathname != null || route.childRoutes) {\n    // Either a) this route matched at least some of the path or b)\n    // we don't have to load this route's children asynchronously. In\n    // either case continue checking for matches in the subtree.\n    var onChildRoutes = function onChildRoutes(error, childRoutes) {\n      if (error) {\n        callback(error);\n      } else if (childRoutes) {\n        // Check the child routes to see if any of them match.\n        matchRoutes(childRoutes, location, function (error, match) {\n          if (error) {\n            callback(error);\n          } else if (match) {\n            // A child route matched! Augment the match and pass it up the stack.\n            match.routes.unshift(route);\n            callback(null, match);\n          } else {\n            callback();\n          }\n        }, remainingPathname, paramNames, paramValues);\n      } else {\n        callback();\n      }\n    };\n\n    var result = getChildRoutes(route, location, onChildRoutes);\n    if (result) {\n      onChildRoutes.apply(undefined, result);\n    }\n  } else {\n    callback();\n  }\n}\n\n/**\n * Asynchronously matches the given location to a set of routes and calls\n * callback(error, state) when finished. The state object will have the\n * following properties:\n *\n * - routes       An array of routes that matched, in hierarchical order\n * - params       An object of URL parameters\n *\n * Note: This operation may finish synchronously if no routes have an\n * asynchronous getChildRoutes method.\n */\nfunction matchRoutes(routes, location, callback) {\n  var remainingPathname = arguments.length <= 3 || arguments[3] === undefined ? location.pathname : arguments[3];\n  var paramNames = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];\n  var paramValues = arguments.length <= 5 || arguments[5] === undefined ? [] : arguments[5];\n  return (function () {\n    _AsyncUtils.loopAsync(routes.length, function (index, next, done) {\n      matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function (error, match) {\n        if (error || match) {\n          done(error, match);\n        } else {\n          next();\n        }\n      });\n    }, callback);\n  })();\n}\n\nexports['default'] = matchRoutes;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\nexports['default'] = routerWarning;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction routerWarning(falseToWarn, message) {\n  message = '[react-router] ' + message;\n\n  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  process.env.NODE_ENV !== 'production' ? _warning2['default'].apply(undefined, [falseToWarn, message].concat(args)) : undefined;\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\nexports['default'] = useRouterHistory;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _historyLibUseQueries = require('history/lib/useQueries');\n\nvar _historyLibUseQueries2 = _interopRequireDefault(_historyLibUseQueries);\n\nvar _historyLibUseBasename = require('history/lib/useBasename');\n\nvar _historyLibUseBasename2 = _interopRequireDefault(_historyLibUseBasename);\n\nfunction useRouterHistory(createHistory) {\n  return function (options) {\n    var history = _historyLibUseQueries2['default'](_historyLibUseBasename2['default'](createHistory))(options);\n    history.__v2_compatible__ = true;\n    return history;\n  };\n}\n\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar _historyLibUseQueries = require('history/lib/useQueries');\n\nvar _historyLibUseQueries2 = _interopRequireDefault(_historyLibUseQueries);\n\nvar _createTransitionManager = require('./createTransitionManager');\n\nvar _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);\n\nvar _routerWarning = require('./routerWarning');\n\nvar _routerWarning2 = _interopRequireDefault(_routerWarning);\n\n/**\n * Returns a new createHistory function that may be used to create\n * history objects that know about routing.\n *\n * Enhances history objects with the following methods:\n *\n * - listen((error, nextState) => {})\n * - listenBeforeLeavingRoute(route, (nextLocation) => {})\n * - match(location, (error, redirectLocation, nextState) => {})\n * - isActive(pathname, query, indexOnly=false)\n */\nfunction useRoutes(createHistory) {\n  process.env.NODE_ENV !== 'production' ? _routerWarning2['default'](false, '`useRoutes` is deprecated. Please use `createTransitionManager` instead.') : undefined;\n\n  return function () {\n    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n    var routes = _ref.routes;\n\n    var options = _objectWithoutProperties(_ref, ['routes']);\n\n    var history = _historyLibUseQueries2['default'](createHistory)(options);\n    var transitionManager = _createTransitionManager2['default'](history, routes);\n    return _extends({}, history, transitionManager);\n  };\n}\n\nexports['default'] = useRoutes;\nmodule.exports = exports['default'];","/*eslint-disable no-empty */\n'use strict';\n\nexports.__esModule = true;\nexports.saveState = saveState;\nexports.readState = readState;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar KeyPrefix = '@@History/';\nvar QuotaExceededErrors = ['QuotaExceededError', 'QUOTA_EXCEEDED_ERR'];\n\nvar SecurityError = 'SecurityError';\n\nfunction createKey(key) {\n  return KeyPrefix + key;\n}\n\nfunction saveState(key, state) {\n  try {\n    if (state == null) {\n      window.sessionStorage.removeItem(createKey(key));\n    } else {\n      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));\n    }\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;\n\n      return;\n    }\n\n    if (QuotaExceededErrors.indexOf(error.name) >= 0 && window.sessionStorage.length === 0) {\n      // Safari \"private mode\" throws QuotaExceededError.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;\n\n      return;\n    }\n\n    throw error;\n  }\n}\n\nfunction readState(key) {\n  var json = undefined;\n  try {\n    json = window.sessionStorage.getItem(createKey(key));\n  } catch (error) {\n    if (error.name === SecurityError) {\n      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any\n      // attempt to access window.sessionStorage.\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;\n\n      return null;\n    }\n  }\n\n  if (json) {\n    try {\n      return JSON.parse(json);\n    } catch (error) {\n      // Ignore invalid JSON.\n    }\n  }\n\n  return null;\n}","'use strict';\n\nexports.__esModule = true;\nexports.extractPath = extractPath;\nexports.parsePath = parsePath;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction extractPath(string) {\n  var match = string.match(/^https?:\\/\\/[^\\/]*/);\n\n  if (match == null) return string;\n\n  return string.substring(match[0].length);\n}\n\nfunction parsePath(path) {\n  var pathname = extractPath(path);\n  var search = '';\n  var hash = '';\n\n  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like \"%s\"', path) : undefined;\n\n  var hashIndex = pathname.indexOf('#');\n  if (hashIndex !== -1) {\n    hash = pathname.substring(hashIndex);\n    pathname = pathname.substring(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n  if (searchIndex !== -1) {\n    search = pathname.substring(searchIndex);\n    pathname = pathname.substring(0, searchIndex);\n  }\n\n  if (pathname === '') pathname = '/';\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash\n  };\n}","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _Actions = require('./Actions');\n\nvar _PathUtils = require('./PathUtils');\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _DOMStateStorage = require('./DOMStateStorage');\n\nvar _createDOMHistory = require('./createDOMHistory');\n\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);\n\n/**\n * Creates and returns a history object that uses HTML5's history API\n * (pushState, replaceState, and the popstate event) to manage history.\n * This is the recommended method of managing history in browsers because\n * it provides the cleanest URLs.\n *\n * Note: In browsers that do not support the HTML5 history API full\n * page reloads will be used to preserve URLs.\n */\nfunction createBrowserHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;\n\n  var forceRefresh = options.forceRefresh;\n\n  var isSupported = _DOMUtils.supportsHistory();\n  var useRefresh = !isSupported || forceRefresh;\n\n  function getCurrentLocation(historyState) {\n    historyState = historyState || window.history.state || {};\n\n    var path = _DOMUtils.getWindowPath();\n    var _historyState = historyState;\n    var key = _historyState.key;\n\n    var state = undefined;\n    if (key) {\n      state = _DOMStateStorage.readState(key);\n    } else {\n      state = null;\n      key = history.createKey();\n\n      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null, path);\n    }\n\n    var location = _PathUtils.parsePath(path);\n\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\n  }\n\n  function startPopStateListener(_ref) {\n    var transitionTo = _ref.transitionTo;\n\n    function popStateListener(event) {\n      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.\n\n      transitionTo(getCurrentLocation(event.state));\n    }\n\n    _DOMUtils.addEventListener(window, 'popstate', popStateListener);\n\n    return function () {\n      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);\n    };\n  }\n\n  function finishTransition(location) {\n    var basename = location.basename;\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n    var state = location.state;\n    var action = location.action;\n    var key = location.key;\n\n    if (action === _Actions.POP) return; // Nothing to do.\n\n    _DOMStateStorage.saveState(key, state);\n\n    var path = (basename || '') + pathname + search + hash;\n    var historyState = {\n      key: key\n    };\n\n    if (action === _Actions.PUSH) {\n      if (useRefresh) {\n        window.location.href = path;\n        return false; // Prevent location update.\n      } else {\n          window.history.pushState(historyState, null, path);\n        }\n    } else {\n      // REPLACE\n      if (useRefresh) {\n        window.location.replace(path);\n        return false; // Prevent location update.\n      } else {\n          window.history.replaceState(historyState, null, path);\n        }\n    }\n  }\n\n  var history = _createDOMHistory2['default'](_extends({}, options, {\n    getCurrentLocation: getCurrentLocation,\n    finishTransition: finishTransition,\n    saveState: _DOMStateStorage.saveState\n  }));\n\n  var listenerCount = 0,\n      stopPopStateListener = undefined;\n\n  function listenBefore(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listenBefore(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  function listen(listener) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    var unlisten = history.listen(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopPopStateListener();\n    };\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);\n\n    history.registerTransitionHook(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    history.unregisterTransitionHook(hook);\n\n    if (--listenerCount === 0) stopPopStateListener();\n  }\n\n  return _extends({}, history, {\n    listenBefore: listenBefore,\n    listen: listen,\n    registerTransitionHook: registerTransitionHook,\n    unregisterTransitionHook: unregisterTransitionHook\n  });\n}\n\nexports['default'] = createBrowserHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _createHistory = require('./createHistory');\n\nvar _createHistory2 = _interopRequireDefault(_createHistory);\n\nfunction createDOMHistory(options) {\n  var history = _createHistory2['default'](_extends({\n    getUserConfirmation: _DOMUtils.getUserConfirmation\n  }, options, {\n    go: _DOMUtils.go\n  }));\n\n  function listen(listener) {\n    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;\n\n    return history.listen(listener);\n  }\n\n  return _extends({}, history, {\n    listen: listen\n  });\n}\n\nexports['default'] = createDOMHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _Actions = require('./Actions');\n\nvar _PathUtils = require('./PathUtils');\n\nvar _ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar _DOMUtils = require('./DOMUtils');\n\nvar _DOMStateStorage = require('./DOMStateStorage');\n\nvar _createDOMHistory = require('./createDOMHistory');\n\nvar _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);\n\nfunction isAbsolutePath(path) {\n  return typeof path === 'string' && path.charAt(0) === '/';\n}\n\nfunction ensureSlash() {\n  var path = _DOMUtils.getHashPath();\n\n  if (isAbsolutePath(path)) return true;\n\n  _DOMUtils.replaceHashPath('/' + path);\n\n  return false;\n}\n\nfunction addQueryStringValueToPath(path, key, value) {\n  return path + (path.indexOf('?') === -1 ? '?' : '&') + (key + '=' + value);\n}\n\nfunction stripQueryStringValueFromPath(path, key) {\n  return path.replace(new RegExp('[?&]?' + key + '=[a-zA-Z0-9]+'), '');\n}\n\nfunction getQueryStringValueFromPath(path, key) {\n  var match = path.match(new RegExp('\\\\?.*?\\\\b' + key + '=(.+?)\\\\b'));\n  return match && match[1];\n}\n\nvar DefaultQueryKey = '_k';\n\nfunction createHashHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Hash history needs a DOM') : _invariant2['default'](false) : undefined;\n\n  var queryKey = options.queryKey;\n\n  if (queryKey === undefined || !!queryKey) queryKey = typeof queryKey === 'string' ? queryKey : DefaultQueryKey;\n\n  function getCurrentLocation() {\n    var path = _DOMUtils.getHashPath();\n\n    var key = undefined,\n        state = undefined;\n    if (queryKey) {\n      key = getQueryStringValueFromPath(path, queryKey);\n      path = stripQueryStringValueFromPath(path, queryKey);\n\n      if (key) {\n        state = _DOMStateStorage.readState(key);\n      } else {\n        state = null;\n        key = history.createKey();\n        _DOMUtils.replaceHashPath(addQueryStringValueToPath(path, queryKey, key));\n      }\n    } else {\n      key = state = null;\n    }\n\n    var location = _PathUtils.parsePath(path);\n\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\n  }\n\n  function startHashChangeListener(_ref) {\n    var transitionTo = _ref.transitionTo;\n\n    function hashChangeListener() {\n      if (!ensureSlash()) return; // Always make sure hashes are preceeded with a /.\n\n      transitionTo(getCurrentLocation());\n    }\n\n    ensureSlash();\n    _DOMUtils.addEventListener(window, 'hashchange', hashChangeListener);\n\n    return function () {\n      _DOMUtils.removeEventListener(window, 'hashchange', hashChangeListener);\n    };\n  }\n\n  function finishTransition(location) {\n    var basename = location.basename;\n    var pathname = location.pathname;\n    var search = location.search;\n    var state = location.state;\n    var action = location.action;\n    var key = location.key;\n\n    if (action === _Actions.POP) return; // Nothing to do.\n\n    var path = (basename || '') + pathname + search;\n\n    if (queryKey) {\n      path = addQueryStringValueToPath(path, queryKey, key);\n      _DOMStateStorage.saveState(key, state);\n    } else {\n      // Drop key and state.\n      location.key = location.state = null;\n    }\n\n    var currentHash = _DOMUtils.getHashPath();\n\n    if (action === _Actions.PUSH) {\n      if (currentHash !== path) {\n        window.location.hash = path;\n      } else {\n        process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'You cannot PUSH the same path using hash history') : undefined;\n      }\n    } else if (currentHash !== path) {\n      // REPLACE\n      _DOMUtils.replaceHashPath(path);\n    }\n  }\n\n  var history = _createDOMHistory2['default'](_extends({}, options, {\n    getCurrentLocation: getCurrentLocation,\n    finishTransition: finishTransition,\n    saveState: _DOMStateStorage.saveState\n  }));\n\n  var listenerCount = 0,\n      stopHashChangeListener = undefined;\n\n  function listenBefore(listener) {\n    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);\n\n    var unlisten = history.listenBefore(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopHashChangeListener();\n    };\n  }\n\n  function listen(listener) {\n    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);\n\n    var unlisten = history.listen(listener);\n\n    return function () {\n      unlisten();\n\n      if (--listenerCount === 0) stopHashChangeListener();\n    };\n  }\n\n  function push(location) {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n\n    history.push(location);\n  }\n\n  function replace(location) {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n\n    history.replace(location);\n  }\n\n  var goIsSupportedWithoutReload = _DOMUtils.supportsGoWithoutReloadUsingHash();\n\n  function go(n) {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : undefined;\n\n    history.go(n);\n  }\n\n  function createHref(path) {\n    return '#' + history.createHref(path);\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);\n\n    history.registerTransitionHook(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    history.unregisterTransitionHook(hook);\n\n    if (--listenerCount === 0) stopHashChangeListener();\n  }\n\n  // deprecated\n  function pushState(state, path) {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n\n    history.pushState(state, path);\n  }\n\n  // deprecated\n  function replaceState(state, path) {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;\n\n    history.replaceState(state, path);\n  }\n\n  return _extends({}, history, {\n    listenBefore: listenBefore,\n    listen: listen,\n    push: push,\n    replace: replace,\n    go: go,\n    createHref: createHref,\n\n    registerTransitionHook: registerTransitionHook, // deprecated - warning is in createHistory\n    unregisterTransitionHook: unregisterTransitionHook, // deprecated - warning is in createHistory\n    pushState: pushState, // deprecated - warning is in createHistory\n    replaceState: replaceState // deprecated - warning is in createHistory\n  });\n}\n\nexports['default'] = createHashHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _deepEqual = require('deep-equal');\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _PathUtils = require('./PathUtils');\n\nvar _AsyncUtils = require('./AsyncUtils');\n\nvar _Actions = require('./Actions');\n\nvar _createLocation2 = require('./createLocation');\n\nvar _createLocation3 = _interopRequireDefault(_createLocation2);\n\nvar _runTransitionHook = require('./runTransitionHook');\n\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nfunction createRandomKey(length) {\n  return Math.random().toString(36).substr(2, length);\n}\n\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search &&\n  //a.action === b.action && // Different action !== location change.\n  a.key === b.key && _deepEqual2['default'](a.state, b.state);\n}\n\nvar DefaultKeyLength = 6;\n\nfunction createHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n  var getCurrentLocation = options.getCurrentLocation;\n  var finishTransition = options.finishTransition;\n  var saveState = options.saveState;\n  var go = options.go;\n  var keyLength = options.keyLength;\n  var getUserConfirmation = options.getUserConfirmation;\n\n  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;\n\n  var transitionHooks = [];\n\n  function listenBefore(hook) {\n    transitionHooks.push(hook);\n\n    return function () {\n      transitionHooks = transitionHooks.filter(function (item) {\n        return item !== hook;\n      });\n    };\n  }\n\n  var allKeys = [];\n  var changeListeners = [];\n  var location = undefined;\n\n  function getCurrent() {\n    if (pendingLocation && pendingLocation.action === _Actions.POP) {\n      return allKeys.indexOf(pendingLocation.key);\n    } else if (location) {\n      return allKeys.indexOf(location.key);\n    } else {\n      return -1;\n    }\n  }\n\n  function updateLocation(newLocation) {\n    var current = getCurrent();\n\n    location = newLocation;\n\n    if (location.action === _Actions.PUSH) {\n      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);\n    } else if (location.action === _Actions.REPLACE) {\n      allKeys[current] = location.key;\n    }\n\n    changeListeners.forEach(function (listener) {\n      listener(location);\n    });\n  }\n\n  function listen(listener) {\n    changeListeners.push(listener);\n\n    if (location) {\n      listener(location);\n    } else {\n      var _location = getCurrentLocation();\n      allKeys = [_location.key];\n      updateLocation(_location);\n    }\n\n    return function () {\n      changeListeners = changeListeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function confirmTransitionTo(location, callback) {\n    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {\n      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {\n        if (result != null) {\n          done(result);\n        } else {\n          next();\n        }\n      });\n    }, function (message) {\n      if (getUserConfirmation && typeof message === 'string') {\n        getUserConfirmation(message, function (ok) {\n          callback(ok !== false);\n        });\n      } else {\n        callback(message !== false);\n      }\n    });\n  }\n\n  var pendingLocation = undefined;\n\n  function transitionTo(nextLocation) {\n    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.\n\n    pendingLocation = nextLocation;\n\n    confirmTransitionTo(nextLocation, function (ok) {\n      if (pendingLocation !== nextLocation) return; // Transition was interrupted.\n\n      if (ok) {\n        // treat PUSH to current path like REPLACE to be consistent with browsers\n        if (nextLocation.action === _Actions.PUSH) {\n          var prevPath = createPath(location);\n          var nextPath = createPath(nextLocation);\n\n          if (nextPath === prevPath && _deepEqual2['default'](location.state, nextLocation.state)) nextLocation.action = _Actions.REPLACE;\n        }\n\n        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);\n      } else if (location && nextLocation.action === _Actions.POP) {\n        var prevIndex = allKeys.indexOf(location.key);\n        var nextIndex = allKeys.indexOf(nextLocation.key);\n\n        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.\n      }\n    });\n  }\n\n  function push(location) {\n    transitionTo(createLocation(location, _Actions.PUSH, createKey()));\n  }\n\n  function replace(location) {\n    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function createKey() {\n    return createRandomKey(keyLength);\n  }\n\n  function createPath(location) {\n    if (location == null || typeof location === 'string') return location;\n\n    var pathname = location.pathname;\n    var search = location.search;\n    var hash = location.hash;\n\n    var result = pathname;\n\n    if (search) result += search;\n\n    if (hash) result += hash;\n\n    return result;\n  }\n\n  function createHref(location) {\n    return createPath(location);\n  }\n\n  function createLocation(location, action) {\n    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];\n\n    if (typeof action === 'object') {\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to history.createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;\n\n      if (typeof location === 'string') location = _PathUtils.parsePath(location);\n\n      location = _extends({}, location, { state: action });\n\n      action = key;\n      key = arguments[3] || createKey();\n    }\n\n    return _createLocation3['default'](location, action, key);\n  }\n\n  // deprecated\n  function setState(state) {\n    if (location) {\n      updateLocationState(location, state);\n      updateLocation(location);\n    } else {\n      updateLocationState(getCurrentLocation(), state);\n    }\n  }\n\n  function updateLocationState(location, state) {\n    location.state = _extends({}, location.state, state);\n    saveState(location.key, location.state);\n  }\n\n  // deprecated\n  function registerTransitionHook(hook) {\n    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);\n  }\n\n  // deprecated\n  function unregisterTransitionHook(hook) {\n    transitionHooks = transitionHooks.filter(function (item) {\n      return item !== hook;\n    });\n  }\n\n  // deprecated\n  function pushState(state, path) {\n    if (typeof path === 'string') path = _PathUtils.parsePath(path);\n\n    push(_extends({ state: state }, path));\n  }\n\n  // deprecated\n  function replaceState(state, path) {\n    if (typeof path === 'string') path = _PathUtils.parsePath(path);\n\n    replace(_extends({ state: state }, path));\n  }\n\n  return {\n    listenBefore: listenBefore,\n    listen: listen,\n    transitionTo: transitionTo,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    createKey: createKey,\n    createPath: createPath,\n    createHref: createHref,\n    createLocation: createLocation,\n\n    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),\n    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),\n    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),\n    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),\n    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')\n  };\n}\n\nexports['default'] = createHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _Actions = require('./Actions');\n\nvar _PathUtils = require('./PathUtils');\n\nfunction createLocation() {\n  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];\n  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];\n  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];\n\n  if (typeof location === 'string') location = _PathUtils.parsePath(location);\n\n  if (typeof action === 'object') {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;\n\n    location = _extends({}, location, { state: action });\n\n    action = key || _Actions.POP;\n    key = _fourthArg;\n  }\n\n  var pathname = location.pathname || '/';\n  var search = location.search || '';\n  var hash = location.hash || '';\n  var state = location.state || null;\n\n  return {\n    pathname: pathname,\n    search: search,\n    hash: hash,\n    state: state,\n    action: action,\n    key: key\n  };\n}\n\nexports['default'] = createLocation;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _invariant = require('invariant');\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _PathUtils = require('./PathUtils');\n\nvar _Actions = require('./Actions');\n\nvar _createHistory = require('./createHistory');\n\nvar _createHistory2 = _interopRequireDefault(_createHistory);\n\nfunction createStateStorage(entries) {\n  return entries.filter(function (entry) {\n    return entry.state;\n  }).reduce(function (memo, entry) {\n    memo[entry.key] = entry.state;\n    return memo;\n  }, {});\n}\n\nfunction createMemoryHistory() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  if (Array.isArray(options)) {\n    options = { entries: options };\n  } else if (typeof options === 'string') {\n    options = { entries: [options] };\n  }\n\n  var history = _createHistory2['default'](_extends({}, options, {\n    getCurrentLocation: getCurrentLocation,\n    finishTransition: finishTransition,\n    saveState: saveState,\n    go: go\n  }));\n\n  var _options = options;\n  var entries = _options.entries;\n  var current = _options.current;\n\n  if (typeof entries === 'string') {\n    entries = [entries];\n  } else if (!Array.isArray(entries)) {\n    entries = ['/'];\n  }\n\n  entries = entries.map(function (entry) {\n    var key = history.createKey();\n\n    if (typeof entry === 'string') return { pathname: entry, key: key };\n\n    if (typeof entry === 'object' && entry) return _extends({}, entry, { key: key });\n\n    !false ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Unable to create history entry from %s', entry) : _invariant2['default'](false) : undefined;\n  });\n\n  if (current == null) {\n    current = entries.length - 1;\n  } else {\n    !(current >= 0 && current < entries.length) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : _invariant2['default'](false) : undefined;\n  }\n\n  var storage = createStateStorage(entries);\n\n  function saveState(key, state) {\n    storage[key] = state;\n  }\n\n  function readState(key) {\n    return storage[key];\n  }\n\n  function getCurrentLocation() {\n    var entry = entries[current];\n    var key = entry.key;\n    var basename = entry.basename;\n    var pathname = entry.pathname;\n    var search = entry.search;\n\n    var path = (basename || '') + pathname + (search || '');\n\n    var state = undefined;\n    if (key) {\n      state = readState(key);\n    } else {\n      state = null;\n      key = history.createKey();\n      entry.key = key;\n    }\n\n    var location = _PathUtils.parsePath(path);\n\n    return history.createLocation(_extends({}, location, { state: state }), undefined, key);\n  }\n\n  function canGo(n) {\n    var index = current + n;\n    return index >= 0 && index < entries.length;\n  }\n\n  function go(n) {\n    if (n) {\n      if (!canGo(n)) {\n        process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'Cannot go(%s) there is not enough history', n) : undefined;\n        return;\n      }\n\n      current += n;\n\n      var currentLocation = getCurrentLocation();\n\n      // change action to POP\n      history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));\n    }\n  }\n\n  function finishTransition(location) {\n    switch (location.action) {\n      case _Actions.PUSH:\n        current += 1;\n\n        // if we are not on the top of stack\n        // remove rest and push new\n        if (current < entries.length) entries.splice(current);\n\n        entries.push(location);\n        saveState(location.key, location.state);\n        break;\n      case _Actions.REPLACE:\n        entries[current] = location;\n        saveState(location.key, location.state);\n        break;\n    }\n  }\n\n  return history;\n}\n\nexports['default'] = createMemoryHistory;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction deprecate(fn, message) {\n  return function () {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] ' + message) : undefined;\n    return fn.apply(this, arguments);\n  };\n}\n\nexports['default'] = deprecate;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nfunction runTransitionHook(hook, location, callback) {\n  var result = hook(location, callback);\n\n  if (hook.length < 2) {\n    // Assume the hook runs synchronously and automatically\n    // call the callback with the return value.\n    callback(result);\n  } else {\n    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not \"return\" in a transition hook with a callback argument; call the callback instead') : undefined;\n  }\n}\n\nexports['default'] = runTransitionHook;\nmodule.exports = exports['default'];","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _queryString = require('query-string');\n\nvar _runTransitionHook = require('./runTransitionHook');\n\nvar _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);\n\nvar _PathUtils = require('./PathUtils');\n\nvar _deprecate = require('./deprecate');\n\nvar _deprecate2 = _interopRequireDefault(_deprecate);\n\nvar SEARCH_BASE_KEY = '$searchBase';\n\nfunction defaultStringifyQuery(query) {\n  return _queryString.stringify(query).replace(/%20/g, '+');\n}\n\nvar defaultParseQueryString = _queryString.parse;\n\nfunction isNestedObject(object) {\n  for (var p in object) {\n    if (object.hasOwnProperty(p) && typeof object[p] === 'object' && !Array.isArray(object[p]) && object[p] !== null) return true;\n  }return false;\n}\n\n/**\n * Returns a new createHistory function that may be used to create\n * history objects that know how to handle URL queries.\n */\nfunction useQueries(createHistory) {\n  return function () {\n    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n    var stringifyQuery = options.stringifyQuery;\n    var parseQueryString = options.parseQueryString;\n\n    var historyOptions = _objectWithoutProperties(options, ['stringifyQuery', 'parseQueryString']);\n\n    var history = createHistory(historyOptions);\n\n    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;\n\n    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;\n\n    function addQuery(location) {\n      if (location.query == null) {\n        var search = location.search;\n\n        location.query = parseQueryString(search.substring(1));\n        location[SEARCH_BASE_KEY] = { search: search, searchBase: '' };\n      }\n\n      // TODO: Instead of all the book-keeping here, this should just strip the\n      // stringified query from the search.\n\n      return location;\n    }\n\n    function appendQuery(location, query) {\n      var _extends2;\n\n      var searchBaseSpec = location[SEARCH_BASE_KEY];\n      var queryString = query ? stringifyQuery(query) : '';\n      if (!searchBaseSpec && !queryString) {\n        return location;\n      }\n\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](stringifyQuery !== defaultStringifyQuery || !isNestedObject(query), 'useQueries does not stringify nested query objects by default; ' + 'use a custom stringifyQuery function') : undefined;\n\n      if (typeof location === 'string') location = _PathUtils.parsePath(location);\n\n      var searchBase = undefined;\n      if (searchBaseSpec && location.search === searchBaseSpec.search) {\n        searchBase = searchBaseSpec.searchBase;\n      } else {\n        searchBase = location.search || '';\n      }\n\n      var search = searchBase;\n      if (queryString) {\n        search += (search ? '&' : '?') + queryString;\n      }\n\n      return _extends({}, location, (_extends2 = {\n        search: search\n      }, _extends2[SEARCH_BASE_KEY] = { search: search, searchBase: searchBase }, _extends2));\n    }\n\n    // Override all read methods with query-aware versions.\n    function listenBefore(hook) {\n      return history.listenBefore(function (location, callback) {\n        _runTransitionHook2['default'](hook, addQuery(location), callback);\n      });\n    }\n\n    function listen(listener) {\n      return history.listen(function (location) {\n        listener(addQuery(location));\n      });\n    }\n\n    // Override all write methods with query-aware versions.\n    function push(location) {\n      history.push(appendQuery(location, location.query));\n    }\n\n    function replace(location) {\n      history.replace(appendQuery(location, location.query));\n    }\n\n    function createPath(location, query) {\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](!query, 'the query argument to createPath is deprecated; use a location descriptor instead') : undefined;\n\n      return history.createPath(appendQuery(location, query || location.query));\n    }\n\n    function createHref(location, query) {\n      process.env.NODE_ENV !== 'production' ? _warning2['default'](!query, 'the query argument to createHref is deprecated; use a location descriptor instead') : undefined;\n\n      return history.createHref(appendQuery(location, query || location.query));\n    }\n\n    function createLocation(location) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var fullLocation = history.createLocation.apply(history, [appendQuery(location, location.query)].concat(args));\n      if (location.query) {\n        fullLocation.query = location.query;\n      }\n      return addQuery(fullLocation);\n    }\n\n    // deprecated\n    function pushState(state, path, query) {\n      if (typeof path === 'string') path = _PathUtils.parsePath(path);\n\n      push(_extends({ state: state }, path, { query: query }));\n    }\n\n    // deprecated\n    function replaceState(state, path, query) {\n      if (typeof path === 'string') path = _PathUtils.parsePath(path);\n\n      replace(_extends({ state: state }, path, { query: query }));\n    }\n\n    return _extends({}, history, {\n      listenBefore: listenBefore,\n      listen: listen,\n      push: push,\n      replace: replace,\n      createPath: createPath,\n      createHref: createHref,\n      createLocation: createLocation,\n\n      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),\n      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')\n    });\n  };\n}\n\nexports['default'] = useQueries;\nmodule.exports = exports['default'];","/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n        '`warning(condition, format, ...args)` requires a warning ' +\n        'message argument'\n      );\n    }\n\n    if (format.length < 10 || (/^[s\\W]*$/).test(format)) {\n      throw new Error(\n        'The warning format should be able to uniquely identify this ' +\n        'warning. Please, use a more descriptive format than: ' + format\n      );\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' +\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch(x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n"]}}]