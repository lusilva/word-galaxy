{"{react-runtime-dev}/react.browserify.js":"9d7eeaed92298203d9137a661a36b665d4c6c2d0","{react-runtime-dev}/react.browserify.options.json":"ea75300f8b0aba32cdd3e594f48f1837187f63a6"}
{"source":"require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n},{}],2:[function(require,module,exports){\nReact = require(\"react\");\nReactDOM = require(\"react-dom\");\n\nif (Meteor.isServer) {\n  ReactDOMServer = require(\"react-dom/server\");\n}\n\n// Addons\nReact.addons = {\n  TransitionGroup   : require('react-addons-transition-group'),\n  CSSTransitionGroup: require('react-addons-css-transition-group'),\n  LinkedStateMixin  : require('react-addons-linked-state-mixin'),\n  createFragment    : require('react-addons-create-fragment'),\n  update            : require('react-addons-update'),\n  PureRenderMixin   : require('react-addons-pure-render-mixin'),\n  TestUtils         : require('react-addons-test-utils'),\n  Perf              : require('react-addons-perf')\n}\n\n},{\"react\":\"react\",\"react-addons-create-fragment\":3,\"react-addons-css-transition-group\":4,\"react-addons-linked-state-mixin\":5,\"react-addons-perf\":6,\"react-addons-pure-render-mixin\":7,\"react-addons-test-utils\":8,\"react-addons-transition-group\":9,\"react-addons-update\":10,\"react-dom\":\"react-dom\",\"react-dom/server\":\"react-dom/server\"}],3:[function(require,module,exports){\nmodule.exports = require('react/lib/ReactFragment').create;\n},{\"react/lib/ReactFragment\":\"react/lib/ReactFragment\"}],4:[function(require,module,exports){\nmodule.exports = require('react/lib/ReactCSSTransitionGroup');\n},{\"react/lib/ReactCSSTransitionGroup\":\"react/lib/ReactCSSTransitionGroup\"}],5:[function(require,module,exports){\nmodule.exports = require('react/lib/LinkedStateMixin');\n},{\"react/lib/LinkedStateMixin\":\"react/lib/LinkedStateMixin\"}],6:[function(require,module,exports){\nmodule.exports = require('react/lib/ReactDefaultPerf');\n},{\"react/lib/ReactDefaultPerf\":\"react/lib/ReactDefaultPerf\"}],7:[function(require,module,exports){\nmodule.exports = require('react/lib/ReactComponentWithPureRenderMixin');\n},{\"react/lib/ReactComponentWithPureRenderMixin\":\"react/lib/ReactComponentWithPureRenderMixin\"}],8:[function(require,module,exports){\nmodule.exports = require('react/lib/ReactTestUtils');\n},{\"react/lib/ReactTestUtils\":\"react/lib/ReactTestUtils\"}],9:[function(require,module,exports){\nmodule.exports = require('react/lib/ReactTransitionGroup');\n},{\"react/lib/ReactTransitionGroup\":\"react/lib/ReactTransitionGroup\"}],10:[function(require,module,exports){\nmodule.exports = require('react/lib/update');\n},{\"react/lib/update\":\"react/lib/update\"}],11:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule canDefineProperty\n */\n\n'use strict';\n\nvar canDefineProperty = false;\nif (process.env.NODE_ENV !== 'production') {\n  try {\n    Object.defineProperty({}, 'x', { get: function () {} });\n    canDefineProperty = true;\n  } catch (x) {\n    // IE will fail on defineProperty\n  }\n}\n\nmodule.exports = canDefineProperty;\n}).call(this,require('_process'))\n\n},{\"_process\":1}],12:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSCore\n * @typechecks\n */\n\n'use strict';\n\nvar invariant = require('./invariant');\n\n/**\n * The CSSCore module specifies the API (and implements most of the methods)\n * that should be used when dealing with the display of elements (via their\n * CSS classes and visibility on screen. It is an API focused on mutating the\n * display and not reading it as no logical state should be encoded in the\n * display of elements.\n */\n\nvar CSSCore = {\n\n  /**\n   * Adds the class passed in to the element if it doesn't already have it.\n   *\n   * @param {DOMElement} element the element to set the class on\n   * @param {string} className the CSS className\n   * @return {DOMElement} the element passed in\n   */\n  addClass: function (element, className) {\n    !!/\\s/.test(className) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'CSSCore.addClass takes only a single class name. \"%s\" contains ' + 'multiple classes.', className) : invariant(false) : undefined;\n\n    if (className) {\n      if (element.classList) {\n        element.classList.add(className);\n      } else if (!CSSCore.hasClass(element, className)) {\n        element.className = element.className + ' ' + className;\n      }\n    }\n    return element;\n  },\n\n  /**\n   * Removes the class passed in from the element\n   *\n   * @param {DOMElement} element the element to set the class on\n   * @param {string} className the CSS className\n   * @return {DOMElement} the element passed in\n   */\n  removeClass: function (element, className) {\n    !!/\\s/.test(className) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'CSSCore.removeClass takes only a single class name. \"%s\" contains ' + 'multiple classes.', className) : invariant(false) : undefined;\n\n    if (className) {\n      if (element.classList) {\n        element.classList.remove(className);\n      } else if (CSSCore.hasClass(element, className)) {\n        element.className = element.className.replace(new RegExp('(^|\\\\s)' + className + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ') // multiple spaces to one\n        .replace(/^\\s*|\\s*$/g, ''); // trim the ends\n      }\n    }\n    return element;\n  },\n\n  /**\n   * Helper to add or remove a class from an element based on a condition.\n   *\n   * @param {DOMElement} element the element to set the class on\n   * @param {string} className the CSS className\n   * @param {*} bool condition to whether to add or remove the class\n   * @return {DOMElement} the element passed in\n   */\n  conditionClass: function (element, className, bool) {\n    return (bool ? CSSCore.addClass : CSSCore.removeClass)(element, className);\n  },\n\n  /**\n   * Tests whether the element has the class specified.\n   *\n   * @param {DOMNode|DOMWindow} element the element to set the class on\n   * @param {string} className the CSS className\n   * @return {boolean} true if the element has the class, false if not\n   */\n  hasClass: function (element, className) {\n    !!/\\s/.test(className) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'CSS.hasClass takes only a single class name.') : invariant(false) : undefined;\n    if (element.classList) {\n      return !!className && element.classList.contains(className);\n    }\n    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;\n  }\n\n};\n\nmodule.exports = CSSCore;\n}).call(this,require('_process'))\n\n},{\"./invariant\":29,\"_process\":1}],13:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @providesModule EventListener\n * @typechecks\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function (target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function () {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function () {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function (target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function () {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function () {}\n};\n\nmodule.exports = EventListener;\n}).call(this,require('_process'))\n\n},{\"./emptyFunction\":21,\"_process\":1}],14:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ExecutionEnvironment\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n},{}],15:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule TouchEventUtils\n */\n\n\"use strict\";\n\nvar TouchEventUtils = {\n  /**\n   * Utility function for common case of extracting out the primary touch from a\n   * touch event.\n   * - `touchEnd` events usually do not have the `touches` property.\n   *   http://stackoverflow.com/questions/3666929/\n   *   mobile-sarai-touchend-event-not-firing-when-last-touch-is-removed\n   *\n   * @param {Event} nativeEvent Native event that may or may not be a touch.\n   * @return {TouchesObject?} an object with pageX and pageY or null.\n   */\n  extractSingleTouch: function (nativeEvent) {\n    var touches = nativeEvent.touches;\n    var changedTouches = nativeEvent.changedTouches;\n    var hasTouches = touches && touches.length > 0;\n    var hasChangedTouches = changedTouches && changedTouches.length > 0;\n\n    return !hasTouches && hasChangedTouches ? changedTouches[0] : hasTouches ? touches[0] : nativeEvent;\n  }\n};\n\nmodule.exports = TouchEventUtils;\n},{}],16:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelize\n * @typechecks\n */\n\n\"use strict\";\n\nvar _hyphenPattern = /-(.)/g;\n\n/**\n * Camelcases a hyphenated string, for example:\n *\n *   > camelize('background-color')\n *   < \"backgroundColor\"\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelize(string) {\n  return string.replace(_hyphenPattern, function (_, character) {\n    return character.toUpperCase();\n  });\n}\n\nmodule.exports = camelize;\n},{}],17:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule camelizeStyleName\n * @typechecks\n */\n\n'use strict';\n\nvar camelize = require('./camelize');\n\nvar msPattern = /^-ms-/;\n\n/**\n * Camelcases a hyphenated CSS property name, for example:\n *\n *   > camelizeStyleName('background-color')\n *   < \"backgroundColor\"\n *   > camelizeStyleName('-moz-transition')\n *   < \"MozTransition\"\n *   > camelizeStyleName('-ms-transition')\n *   < \"msTransition\"\n *\n * As Andi Smith suggests\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\n * is converted to lowercase `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction camelizeStyleName(string) {\n  return camelize(string.replace(msPattern, 'ms-'));\n}\n\nmodule.exports = camelizeStyleName;\n},{\"./camelize\":16}],18:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule containsNode\n * @typechecks\n */\n\n'use strict';\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n *\n * @param {?DOMNode} outerNode Outer DOM node.\n * @param {?DOMNode} innerNode Inner DOM node.\n * @return {boolean} True if `outerNode` contains or is `innerNode`.\n */\nfunction containsNode(_x, _x2) {\n  var _again = true;\n\n  _function: while (_again) {\n    var outerNode = _x,\n        innerNode = _x2;\n    _again = false;\n\n    if (!outerNode || !innerNode) {\n      return false;\n    } else if (outerNode === innerNode) {\n      return true;\n    } else if (isTextNode(outerNode)) {\n      return false;\n    } else if (isTextNode(innerNode)) {\n      _x = outerNode;\n      _x2 = innerNode.parentNode;\n      _again = true;\n      continue _function;\n    } else if (outerNode.contains) {\n      return outerNode.contains(innerNode);\n    } else if (outerNode.compareDocumentPosition) {\n      return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n    } else {\n      return false;\n    }\n  }\n}\n\nmodule.exports = containsNode;\n},{\"./isTextNode\":31}],19:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createArrayFromMixed\n * @typechecks\n */\n\n'use strict';\n\nvar toArray = require('./toArray');\n\n/**\n * Perform a heuristic test to determine if an object is \"array-like\".\n *\n *   A monk asked Joshu, a Zen master, \"Has a dog Buddha nature?\"\n *   Joshu replied: \"Mu.\"\n *\n * This function determines if its argument has \"array nature\": it returns\n * true if the argument is an actual array, an `arguments' object, or an\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\n *\n * It will return false for other array-like objects like Filelist.\n *\n * @param {*} obj\n * @return {boolean}\n */\nfunction hasArrayNature(obj) {\n  return(\n    // not null/false\n    !!obj && (\n    // arrays are objects, NodeLists are functions in Safari\n    typeof obj == 'object' || typeof obj == 'function') &&\n    // quacks like an array\n    'length' in obj &&\n    // not window\n    !('setInterval' in obj) &&\n    // no DOM node should be considered an array-like\n    // a 'select' element has 'length' and 'item' properties on IE8\n    typeof obj.nodeType != 'number' && (\n    // a real array\n    Array.isArray(obj) ||\n    // arguments\n    'callee' in obj ||\n    // HTMLCollection/NodeList\n    'item' in obj)\n  );\n}\n\n/**\n * Ensure that the argument is an array by wrapping it in an array if it is not.\n * Creates a copy of the argument if it is already an array.\n *\n * This is mostly useful idiomatically:\n *\n *   var createArrayFromMixed = require('createArrayFromMixed');\n *\n *   function takesOneOrMoreThings(things) {\n *     things = createArrayFromMixed(things);\n *     ...\n *   }\n *\n * This allows you to treat `things' as an array, but accept scalars in the API.\n *\n * If you need to convert an array-like object, like `arguments`, into an array\n * use toArray instead.\n *\n * @param {*} obj\n * @return {array}\n */\nfunction createArrayFromMixed(obj) {\n  if (!hasArrayNature(obj)) {\n    return [obj];\n  } else if (Array.isArray(obj)) {\n    return obj.slice();\n  } else {\n    return toArray(obj);\n  }\n}\n\nmodule.exports = createArrayFromMixed;\n},{\"./toArray\":40}],20:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createNodesFromMarkup\n * @typechecks\n */\n\n/*eslint-disable fb-www/unsafe-html*/\n\n'use strict';\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar createArrayFromMixed = require('./createArrayFromMixed');\nvar getMarkupWrap = require('./getMarkupWrap');\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to render all markup.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Pattern used by `getNodeName`.\n */\nvar nodeNamePattern = /^\\s*<(\\w+)/;\n\n/**\n * Extracts the `nodeName` of the first element in a string of markup.\n *\n * @param {string} markup String of markup.\n * @return {?string} Node name of the supplied markup.\n */\nfunction getNodeName(markup) {\n  var nodeNameMatch = markup.match(nodeNamePattern);\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\n}\n\n/**\n * Creates an array containing the nodes rendered from the supplied markup. The\n * optionally supplied `handleScript` function will be invoked once for each\n * <script> element that is rendered. If no `handleScript` function is supplied,\n * an exception is thrown if any <script> elements are rendered.\n *\n * @param {string} markup A string of valid HTML markup.\n * @param {?function} handleScript Invoked once for each rendered <script>.\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\n */\nfunction createNodesFromMarkup(markup, handleScript) {\n  var node = dummyNode;\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;\n  var nodeName = getNodeName(markup);\n\n  var wrap = nodeName && getMarkupWrap(nodeName);\n  if (wrap) {\n    node.innerHTML = wrap[1] + markup + wrap[2];\n\n    var wrapDepth = wrap[0];\n    while (wrapDepth--) {\n      node = node.lastChild;\n    }\n  } else {\n    node.innerHTML = markup;\n  }\n\n  var scripts = node.getElementsByTagName('script');\n  if (scripts.length) {\n    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;\n    createArrayFromMixed(scripts).forEach(handleScript);\n  }\n\n  var nodes = createArrayFromMixed(node.childNodes);\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n  return nodes;\n}\n\nmodule.exports = createNodesFromMarkup;\n}).call(this,require('_process'))\n\n},{\"./ExecutionEnvironment\":14,\"./createArrayFromMixed\":19,\"./getMarkupWrap\":25,\"./invariant\":29,\"_process\":1}],21:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyFunction\n */\n\n\"use strict\";\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nfunction emptyFunction() {}\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n},{}],22:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule emptyObject\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object_freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n}).call(this,require('_process'))\n\n},{\"_process\":1}],23:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule focusNode\n */\n\n'use strict';\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;\n},{}],24:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getActiveElement\n * @typechecks\n */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not yet defined.\n */\n'use strict';\n\nfunction getActiveElement() /*?DOMElement*/{\n  if (typeof document === 'undefined') {\n    return null;\n  }\n\n  try {\n    return document.activeElement || document.body;\n  } catch (e) {\n    return document.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n},{}],25:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getMarkupWrap\n */\n\n/*eslint-disable fb-www/unsafe-html */\n\n'use strict';\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar invariant = require('./invariant');\n\n/**\n * Dummy container used to detect which wraps are necessary.\n */\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\n\n/**\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\n * so we wrap them, render the wrapped nodes, then extract the desired node.\n *\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\n */\n\nvar shouldWrap = {};\n\nvar selectWrap = [1, '<select multiple=\"true\">', '</select>'];\nvar tableWrap = [1, '<table>', '</table>'];\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nvar svgWrap = [1, '<svg xmlns=\"http://www.w3.org/2000/svg\">', '</svg>'];\n\nvar markupWrap = {\n  '*': [1, '?<div>', '</div>'],\n\n  'area': [1, '<map>', '</map>'],\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  'legend': [1, '<fieldset>', '</fieldset>'],\n  'param': [1, '<object>', '</object>'],\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\n\n  'optgroup': selectWrap,\n  'option': selectWrap,\n\n  'caption': tableWrap,\n  'colgroup': tableWrap,\n  'tbody': tableWrap,\n  'tfoot': tableWrap,\n  'thead': tableWrap,\n\n  'td': trWrap,\n  'th': trWrap\n};\n\n// Initialize the SVG elements since we know they'll always need to be wrapped\n// consistently. If they are created inside a <div> they will be initialized in\n// the wrong namespace (and will not display).\nvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\nsvgElements.forEach(function (nodeName) {\n  markupWrap[nodeName] = svgWrap;\n  shouldWrap[nodeName] = true;\n});\n\n/**\n * Gets the markup wrap configuration for the supplied `nodeName`.\n *\n * NOTE: This lazily detects which wraps are necessary for the current browser.\n *\n * @param {string} nodeName Lowercase `nodeName`.\n * @return {?array} Markup wrap configuration, if applicable.\n */\nfunction getMarkupWrap(nodeName) {\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;\n  if (!markupWrap.hasOwnProperty(nodeName)) {\n    nodeName = '*';\n  }\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\n    if (nodeName === '*') {\n      dummyNode.innerHTML = '<link />';\n    } else {\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\n    }\n    shouldWrap[nodeName] = !dummyNode.firstChild;\n  }\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\n}\n\nmodule.exports = getMarkupWrap;\n}).call(this,require('_process'))\n\n},{\"./ExecutionEnvironment\":14,\"./invariant\":29,\"_process\":1}],26:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getUnboundedScrollPosition\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable === window) {\n    return {\n      x: window.pageXOffset || document.documentElement.scrollLeft,\n      y: window.pageYOffset || document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;\n},{}],27:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenate\n * @typechecks\n */\n\n'use strict';\n\nvar _uppercasePattern = /([A-Z])/g;\n\n/**\n * Hyphenates a camelcased string, for example:\n *\n *   > hyphenate('backgroundColor')\n *   < \"background-color\"\n *\n * For CSS style names, use `hyphenateStyleName` instead which works properly\n * with all vendor prefixes, including `ms`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenate(string) {\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\n}\n\nmodule.exports = hyphenate;\n},{}],28:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule hyphenateStyleName\n * @typechecks\n */\n\n'use strict';\n\nvar hyphenate = require('./hyphenate');\n\nvar msPattern = /^ms-/;\n\n/**\n * Hyphenates a camelcased CSS property name, for example:\n *\n *   > hyphenateStyleName('backgroundColor')\n *   < \"background-color\"\n *   > hyphenateStyleName('MozTransition')\n *   < \"-moz-transition\"\n *   > hyphenateStyleName('msTransition')\n *   < \"-ms-transition\"\n *\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\n * is converted to `-ms-`.\n *\n * @param {string} string\n * @return {string}\n */\nfunction hyphenateStyleName(string) {\n  return hyphenate(string).replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n},{\"./hyphenate\":27}],29:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule invariant\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function (condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error('Invariant Violation: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n}).call(this,require('_process'))\n\n},{\"_process\":1}],30:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isNode\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\n'use strict';\n\nfunction isNode(object) {\n  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n},{}],31:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextNode\n * @typechecks\n */\n\n'use strict';\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n},{\"./isNode\":30}],32:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule joinClasses\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Combines multiple className strings into one.\n * http://jsperf.com/joinclasses-args-vs-array\n *\n * @param {...?string} className\n * @return {string}\n */\nfunction joinClasses(className /*, ... */) {\n  if (!className) {\n    className = '';\n  }\n  var nextClass;\n  var argLength = arguments.length;\n  if (argLength > 1) {\n    for (var ii = 1; ii < argLength; ii++) {\n      nextClass = arguments[ii];\n      if (nextClass) {\n        className = (className ? className + ' ' : '') + nextClass;\n      }\n    }\n  }\n  return className;\n}\n\nmodule.exports = joinClasses;\n},{}],33:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyMirror\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require('./invariant');\n\n/**\n * Constructs an enumeration with keys equal to their value.\n *\n * For example:\n *\n *   var COLORS = keyMirror({blue: null, red: null});\n *   var myColor = COLORS.blue;\n *   var isColorValid = !!COLORS[myColor];\n *\n * The last line could not be performed if the values of the generated enum were\n * not equal to their keys.\n *\n *   Input:  {key1: val1, key2: val2}\n *   Output: {key1: key1, key2: key2}\n *\n * @param {object} obj\n * @return {object}\n */\nvar keyMirror = function (obj) {\n  var ret = {};\n  var key;\n  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;\n  for (key in obj) {\n    if (!obj.hasOwnProperty(key)) {\n      continue;\n    }\n    ret[key] = key;\n  }\n  return ret;\n};\n\nmodule.exports = keyMirror;\n}).call(this,require('_process'))\n\n},{\"./invariant\":29,\"_process\":1}],34:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyOf\n */\n\n/**\n * Allows extraction of a minified key. Let's the build system minify keys\n * without losing the ability to dynamically use key strings as values\n * themselves. Pass in an object with a single key/val pair and it will return\n * you the string key of that single record. Suppose you want to grab the\n * value for a key 'className' inside of an object. Key/val minification may\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\n * reuse those resolutions.\n */\n\"use strict\";\n\nvar keyOf = function (oneKeyObj) {\n  var key;\n  for (key in oneKeyObj) {\n    if (!oneKeyObj.hasOwnProperty(key)) {\n      continue;\n    }\n    return key;\n  }\n  return null;\n};\n\nmodule.exports = keyOf;\n},{}],35:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule mapObject\n */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Executes the provided `callback` once for each enumerable own property in the\n * object and constructs a new object from the results. The `callback` is\n * invoked with three arguments:\n *\n *  - the property value\n *  - the property name\n *  - the object being traversed\n *\n * Properties that are added after the call to `mapObject` will not be visited\n * by `callback`. If the values of existing properties are changed, the value\n * passed to `callback` will be the value at the time `mapObject` visits them.\n * Properties that are deleted before being visited are not visited.\n *\n * @grep function objectMap()\n * @grep function objMap()\n *\n * @param {?object} object\n * @param {function} callback\n * @param {*} context\n * @return {?object}\n */\nfunction mapObject(object, callback, context) {\n  if (!object) {\n    return null;\n  }\n  var result = {};\n  for (var name in object) {\n    if (hasOwnProperty.call(object, name)) {\n      result[name] = callback.call(context, object[name], name, object);\n    }\n  }\n  return result;\n}\n\nmodule.exports = mapObject;\n},{}],36:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule memoizeStringOnly\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n *\n * @param {function} callback\n * @return {function}\n */\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;\n},{}],37:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule performance\n * @typechecks\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\n\nvar performance;\n\nif (ExecutionEnvironment.canUseDOM) {\n  performance = window.performance || window.msPerformance || window.webkitPerformance;\n}\n\nmodule.exports = performance || {};\n},{\"./ExecutionEnvironment\":14}],38:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule performanceNow\n * @typechecks\n */\n\n'use strict';\n\nvar performance = require('./performance');\nvar curPerformance = performance;\n\n/**\n * Detect if we can use `window.performance.now()` and gracefully fallback to\n * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now\n * because of Facebook's testing infrastructure.\n */\nif (!curPerformance || !curPerformance.now) {\n  curPerformance = Date;\n}\n\nvar performanceNow = curPerformance.now.bind(curPerformance);\n\nmodule.exports = performanceNow;\n},{\"./performance\":37}],39:[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shallowEqual\n * @typechecks\n * \n */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  var bHasOwnProperty = hasOwnProperty.bind(objB);\n  for (var i = 0; i < keysA.length; i++) {\n    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n},{}],40:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule toArray\n * @typechecks\n */\n\n'use strict';\n\nvar invariant = require('./invariant');\n\n/**\n * Convert array-like objects to arrays.\n *\n * This API assumes the caller knows the contents of the data type. For less\n * well defined inputs use createArrayFromMixed.\n *\n * @param {object|function|filelist} obj\n * @return {array}\n */\nfunction toArray(obj) {\n  var length = obj.length;\n\n  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in\n  // old versions of Safari).\n  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;\n\n  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;\n\n  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;\n\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\n  // without method will throw during the slice call and skip straight to the\n  // fallback.\n  if (obj.hasOwnProperty) {\n    try {\n      return Array.prototype.slice.call(obj);\n    } catch (e) {\n      // IE < 9 does not support Array#slice on collections objects\n    }\n  }\n\n  // Fall back to copying key by key. This assumes all keys have a value,\n  // so will not preserve sparsely populated inputs.\n  var ret = Array(length);\n  for (var ii = 0; ii < length; ii++) {\n    ret[ii] = obj[ii];\n  }\n  return ret;\n}\n\nmodule.exports = toArray;\n}).call(this,require('_process'))\n\n},{\"./invariant\":29,\"_process\":1}],41:[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule warning\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = function (condition, format) {\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    }\n  };\n}\n\nmodule.exports = warning;\n}).call(this,require('_process'))\n\n},{\"./emptyFunction\":21,\"_process\":1}],\"react-dom/server\":[function(require,module,exports){\n'use strict';\n\nmodule.exports = require('react/lib/ReactDOMServer');\n\n},{\"react/lib/ReactDOMServer\":\"react/lib/ReactDOMServer\"}],\"react-dom\":[function(require,module,exports){\n'use strict';\n\nmodule.exports = require('react/lib/ReactDOM');\n\n},{\"react/lib/ReactDOM\":\"react/lib/ReactDOM\"}],\"react/addons\":[function(require,module,exports){\n'use strict';\n\nvar warning = require('fbjs/lib/warning');\nwarning(\n  false,\n  // Require examples in this string must be split to prevent React's\n  // build tools from mistaking them for real requires.\n  // Otherwise the build tools will attempt to build a 'react-addons-{addon}' module.\n  'require' + \"('react/addons') is deprecated. \" +\n  'Access using require' + \"('react-addons-{addon}') instead.\"\n);\n\nmodule.exports = require('./lib/ReactWithAddons');\n\n},{\"./lib/ReactWithAddons\":\"react/lib/ReactWithAddons\",\"fbjs/lib/warning\":41}],\"react/lib/AutoFocusUtils\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule AutoFocusUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactMount = require('./ReactMount');\n\nvar findDOMNode = require('./findDOMNode');\nvar focusNode = require('fbjs/lib/focusNode');\n\nvar Mixin = {\n  componentDidMount: function () {\n    if (this.props.autoFocus) {\n      focusNode(findDOMNode(this));\n    }\n  }\n};\n\nvar AutoFocusUtils = {\n  Mixin: Mixin,\n\n  focusDOMComponent: function () {\n    focusNode(ReactMount.getNode(this._rootNodeID));\n  }\n};\n\nmodule.exports = AutoFocusUtils;\n},{\"./ReactMount\":\"react/lib/ReactMount\",\"./findDOMNode\":\"react/lib/findDOMNode\",\"fbjs/lib/focusNode\":23}],\"react/lib/BeforeInputEventPlugin\":[function(require,module,exports){\n/**\n * Copyright 2013-2015 Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule BeforeInputEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar FallbackCompositionState = require('./FallbackCompositionState');\nvar SyntheticCompositionEvent = require('./SyntheticCompositionEvent');\nvar SyntheticInputEvent = require('./SyntheticInputEvent');\n\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\nvar START_KEYCODE = 229;\n\nvar canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;\n\nvar documentMode = null;\nif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\n  documentMode = document.documentMode;\n}\n\n// Webkit offers a very useful `textInput` event that can be used to\n// directly represent `beforeInput`. The IE `textinput` event is not as\n// useful, so we don't use it.\nvar canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();\n\n// In IE9+, we have access to composition events, but the data supplied\n// by the native compositionend event may be incorrect. Japanese ideographic\n// spaces, for instance (\\u3000) are not recorded correctly.\nvar useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\n\n/**\n * Opera <= 12 includes TextEvent in window, but does not fire\n * text input events. Rely on keypress instead.\n */\nfunction isPresto() {\n  var opera = window.opera;\n  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;\n}\n\nvar SPACEBAR_CODE = 32;\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\n// Events and their corresponding property names.\nvar eventTypes = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onBeforeInput: null }),\n      captured: keyOf({ onBeforeInputCapture: null })\n    },\n    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCompositionEnd: null }),\n      captured: keyOf({ onCompositionEndCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCompositionStart: null }),\n      captured: keyOf({ onCompositionStartCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCompositionUpdate: null }),\n      captured: keyOf({ onCompositionUpdateCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\n  }\n};\n\n// Track whether we've ever handled a keypress on the space key.\nvar hasSpaceKeypress = false;\n\n/**\n * Return whether a native keypress event is assumed to be a command.\n * This is required because Firefox fires `keypress` events for key commands\n * (cut, copy, select-all, etc.) even though no character is inserted.\n */\nfunction isKeypressCommand(nativeEvent) {\n  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\n  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\n  !(nativeEvent.ctrlKey && nativeEvent.altKey);\n}\n\n/**\n * Translate native top level events into event types.\n *\n * @param {string} topLevelType\n * @return {object}\n */\nfunction getCompositionEventType(topLevelType) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionStart:\n      return eventTypes.compositionStart;\n    case topLevelTypes.topCompositionEnd:\n      return eventTypes.compositionEnd;\n    case topLevelTypes.topCompositionUpdate:\n      return eventTypes.compositionUpdate;\n  }\n}\n\n/**\n * Does our fallback best-guess model think this event signifies that\n * composition has begun?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\n  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;\n}\n\n/**\n * Does our fallback mode think that this event is the end of composition?\n *\n * @param {string} topLevelType\n * @param {object} nativeEvent\n * @return {boolean}\n */\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topKeyUp:\n      // Command keys insert or clear IME input.\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\n    case topLevelTypes.topKeyDown:\n      // Expect IME keyCode on each keydown. If we get any other\n      // code we must have exited earlier.\n      return nativeEvent.keyCode !== START_KEYCODE;\n    case topLevelTypes.topKeyPress:\n    case topLevelTypes.topMouseDown:\n    case topLevelTypes.topBlur:\n      // Events are not possible without cancelling IME.\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Google Input Tools provides composition data via a CustomEvent,\n * with the `data` property populated in the `detail` object. If this\n * is available on the event object, use it. If not, this is a plain\n * composition event and we have nothing special to extract.\n *\n * @param {object} nativeEvent\n * @return {?string}\n */\nfunction getDataFromCustomEvent(nativeEvent) {\n  var detail = nativeEvent.detail;\n  if (typeof detail === 'object' && 'data' in detail) {\n    return detail.data;\n  }\n  return null;\n}\n\n// Track the current IME composition fallback object, if any.\nvar currentComposition = null;\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\n * @param {object} nativeEvent Native browser event.\n * @return {?object} A SyntheticCompositionEvent.\n */\nfunction extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n  var eventType;\n  var fallbackData;\n\n  if (canUseCompositionEvent) {\n    eventType = getCompositionEventType(topLevelType);\n  } else if (!currentComposition) {\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\n      eventType = eventTypes.compositionStart;\n    }\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n    eventType = eventTypes.compositionEnd;\n  }\n\n  if (!eventType) {\n    return null;\n  }\n\n  if (useFallbackCompositionData) {\n    // The current composition is stored statically and must not be\n    // overwritten while composition continues.\n    if (!currentComposition && eventType === eventTypes.compositionStart) {\n      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);\n    } else if (eventType === eventTypes.compositionEnd) {\n      if (currentComposition) {\n        fallbackData = currentComposition.getData();\n      }\n    }\n  }\n\n  var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);\n\n  if (fallbackData) {\n    // Inject data generated from fallback path into the synthetic event.\n    // This matches the property of native CompositionEventInterface.\n    event.data = fallbackData;\n  } else {\n    var customData = getDataFromCustomEvent(nativeEvent);\n    if (customData !== null) {\n      event.data = customData;\n    }\n  }\n\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The string corresponding to this `beforeInput` event.\n */\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\n  switch (topLevelType) {\n    case topLevelTypes.topCompositionEnd:\n      return getDataFromCustomEvent(nativeEvent);\n    case topLevelTypes.topKeyPress:\n      /**\n       * If native `textInput` events are available, our goal is to make\n       * use of them. However, there is a special case: the spacebar key.\n       * In Webkit, preventing default on a spacebar `textInput` event\n       * cancels character insertion, but it *also* causes the browser\n       * to fall back to its default spacebar behavior of scrolling the\n       * page.\n       *\n       * Tracking at:\n       * https://code.google.com/p/chromium/issues/detail?id=355103\n       *\n       * To avoid this issue, use the keypress event as if no `textInput`\n       * event is available.\n       */\n      var which = nativeEvent.which;\n      if (which !== SPACEBAR_CODE) {\n        return null;\n      }\n\n      hasSpaceKeypress = true;\n      return SPACEBAR_CHAR;\n\n    case topLevelTypes.topTextInput:\n      // Record the characters to be added to the DOM.\n      var chars = nativeEvent.data;\n\n      // If it's a spacebar character, assume that we have already handled\n      // it at the keypress level and bail immediately. Android Chrome\n      // doesn't give us keycodes, so we need to blacklist it.\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\n        return null;\n      }\n\n      return chars;\n\n    default:\n      // For other native event types, do nothing.\n      return null;\n  }\n}\n\n/**\n * For browsers that do not provide the `textInput` event, extract the\n * appropriate string to use for SyntheticInputEvent.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {object} nativeEvent Native browser event.\n * @return {?string} The fallback string for this `beforeInput` event.\n */\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\n  // If we are currently composing (IME) and using a fallback to do so,\n  // try to extract the composed characters from the fallback object.\n  if (currentComposition) {\n    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {\n      var chars = currentComposition.getData();\n      FallbackCompositionState.release(currentComposition);\n      currentComposition = null;\n      return chars;\n    }\n    return null;\n  }\n\n  switch (topLevelType) {\n    case topLevelTypes.topPaste:\n      // If a paste event occurs after a keypress, throw out the input\n      // chars. Paste events should not lead to BeforeInput events.\n      return null;\n    case topLevelTypes.topKeyPress:\n      /**\n       * As of v27, Firefox may fire keypress events even when no character\n       * will be inserted. A few possibilities:\n       *\n       * - `which` is `0`. Arrow keys, Esc key, etc.\n       *\n       * - `which` is the pressed key code, but no char is available.\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\n       *   this key combination and no character is inserted into the\n       *   document, but FF fires the keypress for char code `100` anyway.\n       *   No `input` event will occur.\n       *\n       * - `which` is the pressed key code, but a command combination is\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\n       *   `input` event will occur.\n       */\n      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\n        return String.fromCharCode(nativeEvent.which);\n      }\n      return null;\n    case topLevelTypes.topCompositionEnd:\n      return useFallbackCompositionData ? null : nativeEvent.data;\n    default:\n      return null;\n  }\n}\n\n/**\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\n * `textInput` or fallback behavior.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\n * @param {object} nativeEvent Native browser event.\n * @return {?object} A SyntheticInputEvent.\n */\nfunction extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n  var chars;\n\n  if (canUseTextInputEvent) {\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\n  } else {\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\n  }\n\n  // If no characters are being inserted, no BeforeInput event should\n  // be fired.\n  if (!chars) {\n    return null;\n  }\n\n  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);\n\n  event.data = chars;\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n  return event;\n}\n\n/**\n * Create an `onBeforeInput` event to match\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\n *\n * This event plugin is based on the native `textInput` event\n * available in Chrome, Safari, Opera, and IE. This event fires after\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\n *\n * `beforeInput` is spec'd but not implemented in any browsers, and\n * the `input` event does not provide any useful information about what has\n * actually been added, contrary to the spec. Thus, `textInput` is the best\n * available event to identify the characters that have actually been inserted\n * into the target node.\n *\n * This plugin is also responsible for emitting `composition` events, thus\n * allowing us to share composition fallback code for both `beforeInput` and\n * `composition` event types.\n */\nvar BeforeInputEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];\n  }\n};\n\nmodule.exports = BeforeInputEventPlugin;\n},{\"./EventConstants\":\"react/lib/EventConstants\",\"./EventPropagators\":\"react/lib/EventPropagators\",\"./FallbackCompositionState\":\"react/lib/FallbackCompositionState\",\"./SyntheticCompositionEvent\":\"react/lib/SyntheticCompositionEvent\",\"./SyntheticInputEvent\":\"react/lib/SyntheticInputEvent\",\"fbjs/lib/ExecutionEnvironment\":14,\"fbjs/lib/keyOf\":34}],\"react/lib/CSSPropertyOperations\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactPerf = require('./ReactPerf');\n\nvar camelizeStyleName = require('fbjs/lib/camelizeStyleName');\nvar dangerousStyleValue = require('./dangerousStyleValue');\nvar hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');\nvar memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');\nvar warning = require('fbjs/lib/warning');\n\nvar processStyleName = memoizeStringOnly(function (styleName) {\n  return hyphenateStyleName(styleName);\n});\n\nvar hasShorthandPropertyBug = false;\nvar styleFloatAccessor = 'cssFloat';\nif (ExecutionEnvironment.canUseDOM) {\n  var tempStyle = document.createElement('div').style;\n  try {\n    // IE8 throws \"Invalid argument.\" if resetting shorthand style properties.\n    tempStyle.font = '';\n  } catch (e) {\n    hasShorthandPropertyBug = true;\n  }\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\n  if (document.documentElement.style.cssFloat === undefined) {\n    styleFloatAccessor = 'styleFloat';\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  // 'msTransform' is correct, but the other prefixes should be capitalized\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\n\n  // style values shouldn't contain a semicolon\n  var badStyleValueWithSemicolonPattern = /;\\s*$/;\n\n  var warnedStyleNames = {};\n  var warnedStyleValues = {};\n\n  var warnHyphenatedStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;\n  };\n\n  var warnBadVendoredStyleName = function (name) {\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\n      return;\n    }\n\n    warnedStyleNames[name] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;\n  };\n\n  var warnStyleValueWithSemicolon = function (name, value) {\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\n      return;\n    }\n\n    warnedStyleValues[value] = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\'t contain a semicolon. ' + 'Try \"%s: %s\" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;\n  };\n\n  /**\n   * @param {string} name\n   * @param {*} value\n   */\n  var warnValidStyle = function (name, value) {\n    if (name.indexOf('-') > -1) {\n      warnHyphenatedStyleName(name);\n    } else if (badVendoredStyleNamePattern.test(name)) {\n      warnBadVendoredStyleName(name);\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\n      warnStyleValueWithSemicolon(name, value);\n    }\n  };\n}\n\n/**\n * Operations for dealing with CSS properties.\n */\nvar CSSPropertyOperations = {\n\n  /**\n   * Serializes a mapping of style properties for use as inline styles:\n   *\n   *   > createMarkupForStyles({width: '200px', height: 0})\n   *   \"width:200px;height:0;\"\n   *\n   * Undefined values are ignored so that declarative programming is easier.\n   * The result should be HTML-escaped before insertion into the DOM.\n   *\n   * @param {object} styles\n   * @return {?string}\n   */\n  createMarkupForStyles: function (styles) {\n    var serialized = '';\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      var styleValue = styles[styleName];\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styleValue);\n      }\n      if (styleValue != null) {\n        serialized += processStyleName(styleName) + ':';\n        serialized += dangerousStyleValue(styleName, styleValue) + ';';\n      }\n    }\n    return serialized || null;\n  },\n\n  /**\n   * Sets the value for multiple styles on a node.  If a value is specified as\n   * '' (empty string), the corresponding style property will be unset.\n   *\n   * @param {DOMElement} node\n   * @param {object} styles\n   */\n  setValueForStyles: function (node, styles) {\n    var style = node.style;\n    for (var styleName in styles) {\n      if (!styles.hasOwnProperty(styleName)) {\n        continue;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        warnValidStyle(styleName, styles[styleName]);\n      }\n      var styleValue = dangerousStyleValue(styleName, styles[styleName]);\n      if (styleName === 'float') {\n        styleName = styleFloatAccessor;\n      }\n      if (styleValue) {\n        style[styleName] = styleValue;\n      } else {\n        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\n        if (expansion) {\n          // Shorthand property that IE8 won't like unsetting, so unset each\n          // component to placate it\n          for (var individualStyleName in expansion) {\n            style[individualStyleName] = '';\n          }\n        } else {\n          style[styleName] = '';\n        }\n      }\n    }\n  }\n\n};\n\nReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {\n  setValueForStyles: 'setValueForStyles'\n});\n\nmodule.exports = CSSPropertyOperations;\n}).call(this,require('_process'))\n\n},{\"./CSSProperty\":\"react/lib/CSSProperty\",\"./ReactPerf\":\"react/lib/ReactPerf\",\"./dangerousStyleValue\":\"react/lib/dangerousStyleValue\",\"_process\":1,\"fbjs/lib/ExecutionEnvironment\":14,\"fbjs/lib/camelizeStyleName\":17,\"fbjs/lib/hyphenateStyleName\":28,\"fbjs/lib/memoizeStringOnly\":36,\"fbjs/lib/warning\":41}],\"react/lib/CSSProperty\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CSSProperty\n */\n\n'use strict';\n\n/**\n * CSS properties which accept numbers but are not in units of \"px\".\n */\nvar isUnitlessNumber = {\n  animationIterationCount: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  stopOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\n/**\n * @param {string} prefix vendor-specific prefix, eg: Webkit\n * @param {string} key style name, eg: transitionDuration\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\n * WebkitTransitionDuration\n */\nfunction prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n}\n\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\n// infinite loop, because it iterates over the newly added props too.\nObject.keys(isUnitlessNumber).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\n  });\n});\n\n/**\n * Most style properties can be unset by doing .style[prop] = '' but IE8\n * doesn't like doing that with shorthand properties so for the properties that\n * IE8 breaks on, which are listed here, we instead unset each of the\n * individual properties. See http://bugs.jquery.com/ticket/12385.\n * The 4-value 'clock' properties like margin, padding, border-width seem to\n * behave without any problems. Curiously, list-style works too without any\n * special prodding.\n */\nvar shorthandPropertyExpansions = {\n  background: {\n    backgroundAttachment: true,\n    backgroundColor: true,\n    backgroundImage: true,\n    backgroundPositionX: true,\n    backgroundPositionY: true,\n    backgroundRepeat: true\n  },\n  backgroundPosition: {\n    backgroundPositionX: true,\n    backgroundPositionY: true\n  },\n  border: {\n    borderWidth: true,\n    borderStyle: true,\n    borderColor: true\n  },\n  borderBottom: {\n    borderBottomWidth: true,\n    borderBottomStyle: true,\n    borderBottomColor: true\n  },\n  borderLeft: {\n    borderLeftWidth: true,\n    borderLeftStyle: true,\n    borderLeftColor: true\n  },\n  borderRight: {\n    borderRightWidth: true,\n    borderRightStyle: true,\n    borderRightColor: true\n  },\n  borderTop: {\n    borderTopWidth: true,\n    borderTopStyle: true,\n    borderTopColor: true\n  },\n  font: {\n    fontStyle: true,\n    fontVariant: true,\n    fontWeight: true,\n    fontSize: true,\n    lineHeight: true,\n    fontFamily: true\n  },\n  outline: {\n    outlineWidth: true,\n    outlineStyle: true,\n    outlineColor: true\n  }\n};\n\nvar CSSProperty = {\n  isUnitlessNumber: isUnitlessNumber,\n  shorthandPropertyExpansions: shorthandPropertyExpansions\n};\n\nmodule.exports = CSSProperty;\n},{}],\"react/lib/CallbackQueue\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CallbackQueue\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * A specialized pseudo-event module to help keep track of components waiting to\n * be notified when their DOM representations are available for use.\n *\n * This implements `PooledClass`, so you should never need to instantiate this.\n * Instead, use `CallbackQueue.getPooled()`.\n *\n * @class ReactMountReady\n * @implements PooledClass\n * @internal\n */\nfunction CallbackQueue() {\n  this._callbacks = null;\n  this._contexts = null;\n}\n\nassign(CallbackQueue.prototype, {\n\n  /**\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\n   *\n   * @param {function} callback Invoked when `notifyAll` is invoked.\n   * @param {?object} context Context to call `callback` with.\n   * @internal\n   */\n  enqueue: function (callback, context) {\n    this._callbacks = this._callbacks || [];\n    this._contexts = this._contexts || [];\n    this._callbacks.push(callback);\n    this._contexts.push(context);\n  },\n\n  /**\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\n   * the DOM representation of a component has been created or updated.\n   *\n   * @internal\n   */\n  notifyAll: function () {\n    var callbacks = this._callbacks;\n    var contexts = this._contexts;\n    if (callbacks) {\n      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;\n      this._callbacks = null;\n      this._contexts = null;\n      for (var i = 0; i < callbacks.length; i++) {\n        callbacks[i].call(contexts[i]);\n      }\n      callbacks.length = 0;\n      contexts.length = 0;\n    }\n  },\n\n  /**\n   * Resets the internal queue.\n   *\n   * @internal\n   */\n  reset: function () {\n    this._callbacks = null;\n    this._contexts = null;\n  },\n\n  /**\n   * `PooledClass` looks for this.\n   */\n  destructor: function () {\n    this.reset();\n  }\n\n});\n\nPooledClass.addPoolingTo(CallbackQueue);\n\nmodule.exports = CallbackQueue;\n}).call(this,require('_process'))\n\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./PooledClass\":\"react/lib/PooledClass\",\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/ChangeEventPlugin\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ChangeEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactUpdates = require('./ReactUpdates');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\nvar isEventSupported = require('./isEventSupported');\nvar isTextInputElement = require('./isTextInputElement');\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onChange: null }),\n      captured: keyOf({ onChangeCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]\n  }\n};\n\n/**\n * For IE shims\n */\nvar activeElement = null;\nvar activeElementID = null;\nvar activeElementValue = null;\nvar activeElementValueProp = null;\n\n/**\n * SECTION: handle `change` event\n */\nfunction shouldUseChangeEvent(elem) {\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\n}\n\nvar doesChangeEventBubble = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // See `handleChange` comment below\n  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);\n}\n\nfunction manualDispatchChangeEvent(nativeEvent) {\n  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));\n  EventPropagators.accumulateTwoPhaseDispatches(event);\n\n  // If change and propertychange bubbled, we'd just bind to it like all the\n  // other events and have it go through ReactBrowserEventEmitter. Since it\n  // doesn't, we manually listen for the events and so we have to enqueue and\n  // process the abstract event manually.\n  //\n  // Batching is necessary here in order to ensure that all event handlers run\n  // before the next rerender (including event handlers attached to ancestor\n  // elements instead of directly on the input). Without this, controlled\n  // components don't work properly in conjunction with event bubbling because\n  // the component is rerendered and the value reverted before all the event\n  // handlers can run. See https://github.com/facebook/react/issues/708.\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\n}\n\nfunction runEventInBatch(event) {\n  EventPluginHub.enqueueEvents(event);\n  EventPluginHub.processEventQueue(false);\n}\n\nfunction startWatchingForChangeEventIE8(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\n}\n\nfunction stopWatchingForChangeEventIE8() {\n  if (!activeElement) {\n    return;\n  }\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\n  activeElement = null;\n  activeElementID = null;\n}\n\nfunction getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topChange) {\n    return topLevelTargetID;\n  }\n}\nfunction handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForChangeEventIE8();\n    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForChangeEventIE8();\n  }\n}\n\n/**\n * SECTION: handle `input` event\n */\nvar isInputEventSupported = false;\nif (ExecutionEnvironment.canUseDOM) {\n  // IE9 claims to support the input event but fails to trigger it when\n  // deleting text, so we ignore its input events\n  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);\n}\n\n/**\n * (For old IE.) Replacement getter/setter for the `value` property that gets\n * set on the active element.\n */\nvar newValueProp = {\n  get: function () {\n    return activeElementValueProp.get.call(this);\n  },\n  set: function (val) {\n    // Cast to a string so we can do equality checks.\n    activeElementValue = '' + val;\n    activeElementValueProp.set.call(this, val);\n  }\n};\n\n/**\n * (For old IE.) Starts tracking propertychange events on the passed-in element\n * and override the value property so that we can distinguish user events from\n * value changes in JS.\n */\nfunction startWatchingForValueChange(target, targetID) {\n  activeElement = target;\n  activeElementID = targetID;\n  activeElementValue = target.value;\n  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\n\n  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\n  // on DOM elements\n  Object.defineProperty(activeElement, 'value', newValueProp);\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\n}\n\n/**\n * (For old IE.) Removes the event listeners from the currently-tracked element,\n * if any exists.\n */\nfunction stopWatchingForValueChange() {\n  if (!activeElement) {\n    return;\n  }\n\n  // delete restores the original property definition\n  delete activeElement.value;\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\n\n  activeElement = null;\n  activeElementID = null;\n  activeElementValue = null;\n  activeElementValueProp = null;\n}\n\n/**\n * (For old IE.) Handles a propertychange event, sending a `change` event if\n * the value of the active element has changed.\n */\nfunction handlePropertyChange(nativeEvent) {\n  if (nativeEvent.propertyName !== 'value') {\n    return;\n  }\n  var value = nativeEvent.srcElement.value;\n  if (value === activeElementValue) {\n    return;\n  }\n  activeElementValue = value;\n\n  manualDispatchChangeEvent(nativeEvent);\n}\n\n/**\n * If a `change` event should be fired, returns the target's ID.\n */\nfunction getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topInput) {\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\n    // what we want so fall through here and trigger an abstract event\n    return topLevelTargetID;\n  }\n}\n\n// For IE8 and IE9.\nfunction handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topFocus) {\n    // In IE8, we can capture almost all .value changes by adding a\n    // propertychange handler and looking for events with propertyName\n    // equal to 'value'\n    // In IE9, propertychange fires for most input events but is buggy and\n    // doesn't fire when text is deleted, but conveniently, selectionchange\n    // appears to fire in all of the remaining cases so we catch those and\n    // forward the event if the value has changed\n    // In either case, we don't want to call the event handler if the value\n    // is changed from JS so we redefine a setter for `.value` that updates\n    // our activeElementValue variable, allowing us to ignore those changes\n    //\n    // stopWatching() should be a noop here but we call it just in case we\n    // missed a blur event somehow.\n    stopWatchingForValueChange();\n    startWatchingForValueChange(topLevelTarget, topLevelTargetID);\n  } else if (topLevelType === topLevelTypes.topBlur) {\n    stopWatchingForValueChange();\n  }\n}\n\n// For IE8 and IE9.\nfunction getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {\n    // On the selectionchange event, the target is just document which isn't\n    // helpful for us so just check activeElement instead.\n    //\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\n    // propertychange on the first input event after setting `value` from a\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\n    // gets it and catching keydown lets us fire an event for the first\n    // keystroke if user does a key repeat (it'll be a little delayed: right\n    // before the second keystroke). Other input methods (e.g., paste) seem to\n    // fire selectionchange normally.\n    if (activeElement && activeElement.value !== activeElementValue) {\n      activeElementValue = activeElement.value;\n      return activeElementID;\n    }\n  }\n}\n\n/**\n * SECTION: handle `click` event\n */\nfunction shouldUseClickEvent(elem) {\n  // Use the `click` event to detect changes to checkbox and radio inputs.\n  // This approach works across all browsers, whereas `change` does not fire\n  // until `blur` in IE8.\n  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\n}\n\nfunction getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {\n  if (topLevelType === topLevelTypes.topClick) {\n    return topLevelTargetID;\n  }\n}\n\n/**\n * This plugin creates an `onChange` event that normalizes change events\n * across form elements. This event fires at a time when it's possible to\n * change the element's value without seeing a flicker.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - select\n */\nvar ChangeEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n\n    var getTargetIDFunc, handleEventFunc;\n    if (shouldUseChangeEvent(topLevelTarget)) {\n      if (doesChangeEventBubble) {\n        getTargetIDFunc = getTargetIDForChangeEvent;\n      } else {\n        handleEventFunc = handleEventsForChangeEventIE8;\n      }\n    } else if (isTextInputElement(topLevelTarget)) {\n      if (isInputEventSupported) {\n        getTargetIDFunc = getTargetIDForInputEvent;\n      } else {\n        getTargetIDFunc = getTargetIDForInputEventIE;\n        handleEventFunc = handleEventsForInputEventIE;\n      }\n    } else if (shouldUseClickEvent(topLevelTarget)) {\n      getTargetIDFunc = getTargetIDForClickEvent;\n    }\n\n    if (getTargetIDFunc) {\n      var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);\n      if (targetID) {\n        var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);\n        event.type = 'change';\n        EventPropagators.accumulateTwoPhaseDispatches(event);\n        return event;\n      }\n    }\n\n    if (handleEventFunc) {\n      handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);\n    }\n  }\n\n};\n\nmodule.exports = ChangeEventPlugin;\n},{\"./EventConstants\":\"react/lib/EventConstants\",\"./EventPluginHub\":\"react/lib/EventPluginHub\",\"./EventPropagators\":\"react/lib/EventPropagators\",\"./ReactUpdates\":\"react/lib/ReactUpdates\",\"./SyntheticEvent\":\"react/lib/SyntheticEvent\",\"./getEventTarget\":\"react/lib/getEventTarget\",\"./isEventSupported\":\"react/lib/isEventSupported\",\"./isTextInputElement\":\"react/lib/isTextInputElement\",\"fbjs/lib/ExecutionEnvironment\":14,\"fbjs/lib/keyOf\":34}],\"react/lib/ClientReactRootIndex\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ClientReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\nvar nextReactRootIndex = 0;\n\nvar ClientReactRootIndex = {\n  createReactRootIndex: function () {\n    return nextReactRootIndex++;\n  }\n};\n\nmodule.exports = ClientReactRootIndex;\n},{}],\"react/lib/DOMChildrenOperations\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMChildrenOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar Danger = require('./Danger');\nvar ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');\nvar ReactPerf = require('./ReactPerf');\n\nvar setInnerHTML = require('./setInnerHTML');\nvar setTextContent = require('./setTextContent');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Inserts `childNode` as a child of `parentNode` at the `index`.\n *\n * @param {DOMElement} parentNode Parent node in which to insert.\n * @param {DOMElement} childNode Child node to insert.\n * @param {number} index Index at which to insert the child.\n * @internal\n */\nfunction insertChildAt(parentNode, childNode, index) {\n  // By exploiting arrays returning `undefined` for an undefined index, we can\n  // rely exclusively on `insertBefore(node, null)` instead of also using\n  // `appendChild(node)`. However, using `undefined` is not allowed by all\n  // browsers so we must replace it with `null`.\n\n  // fix render order error in safari\n  // IE8 will throw error when index out of list size.\n  var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);\n\n  parentNode.insertBefore(childNode, beforeChild);\n}\n\n/**\n * Operations for updating with DOM children.\n */\nvar DOMChildrenOperations = {\n\n  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,\n\n  updateTextContent: setTextContent,\n\n  /**\n   * Updates a component's children by processing a series of updates. The\n   * update configurations are each expected to have a `parentNode` property.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markupList List of markup strings.\n   * @internal\n   */\n  processUpdates: function (updates, markupList) {\n    var update;\n    // Mapping from parent IDs to initial child orderings.\n    var initialChildren = null;\n    // List of children that will be moved or removed.\n    var updatedChildren = null;\n\n    for (var i = 0; i < updates.length; i++) {\n      update = updates[i];\n      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {\n        var updatedIndex = update.fromIndex;\n        var updatedChild = update.parentNode.childNodes[updatedIndex];\n        var parentID = update.parentID;\n\n        !updatedChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;\n\n        initialChildren = initialChildren || {};\n        initialChildren[parentID] = initialChildren[parentID] || [];\n        initialChildren[parentID][updatedIndex] = updatedChild;\n\n        updatedChildren = updatedChildren || [];\n        updatedChildren.push(updatedChild);\n      }\n    }\n\n    var renderedMarkup;\n    // markupList is either a list of markup or just a list of elements\n    if (markupList.length && typeof markupList[0] === 'string') {\n      renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);\n    } else {\n      renderedMarkup = markupList;\n    }\n\n    // Remove updated children first so that `toIndex` is consistent.\n    if (updatedChildren) {\n      for (var j = 0; j < updatedChildren.length; j++) {\n        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);\n      }\n    }\n\n    for (var k = 0; k < updates.length; k++) {\n      update = updates[k];\n      switch (update.type) {\n        case ReactMultiChildUpdateTypes.INSERT_MARKUP:\n          insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);\n          break;\n        case ReactMultiChildUpdateTypes.MOVE_EXISTING:\n          insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);\n          break;\n        case ReactMultiChildUpdateTypes.SET_MARKUP:\n          setInnerHTML(update.parentNode, update.content);\n          break;\n        case ReactMultiChildUpdateTypes.TEXT_CONTENT:\n          setTextContent(update.parentNode, update.content);\n          break;\n        case ReactMultiChildUpdateTypes.REMOVE_NODE:\n          // Already removed by the for-loop above.\n          break;\n      }\n    }\n  }\n\n};\n\nReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {\n  updateTextContent: 'updateTextContent'\n});\n\nmodule.exports = DOMChildrenOperations;\n}).call(this,require('_process'))\n\n},{\"./Danger\":\"react/lib/Danger\",\"./ReactMultiChildUpdateTypes\":\"react/lib/ReactMultiChildUpdateTypes\",\"./ReactPerf\":\"react/lib/ReactPerf\",\"./setInnerHTML\":\"react/lib/setInnerHTML\",\"./setTextContent\":\"react/lib/setTextContent\",\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/DOMPropertyOperations\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMPropertyOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactPerf = require('./ReactPerf');\n\nvar quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');\nvar warning = require('fbjs/lib/warning');\n\n// Simplified subset\nvar VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\\w\\.\\-]*$/;\nvar illegalAttributeNameCache = {};\nvar validatedAttributeNameCache = {};\n\nfunction isAttributeNameSafe(attributeName) {\n  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\n    return true;\n  }\n  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\n    return false;\n  }\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\n    validatedAttributeNameCache[attributeName] = true;\n    return true;\n  }\n  illegalAttributeNameCache[attributeName] = true;\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;\n  return false;\n}\n\nfunction shouldIgnoreValue(propertyInfo, value) {\n  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var reactProps = {\n    children: true,\n    dangerouslySetInnerHTML: true,\n    key: true,\n    ref: true\n  };\n  var warnedProperties = {};\n\n  var warnUnknownProperty = function (name) {\n    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\n      return;\n    }\n\n    warnedProperties[name] = true;\n    var lowerCasedName = name.toLowerCase();\n\n    // data-* attributes should be lowercase; suggest the lowercase version\n    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;\n\n    // For now, only warn when we have a suggested correction. This prevents\n    // logging too much when using transferPropsTo.\n    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;\n  };\n}\n\n/**\n * Operations for dealing with DOM properties.\n */\nvar DOMPropertyOperations = {\n\n  /**\n   * Creates markup for the ID property.\n   *\n   * @param {string} id Unescaped ID.\n   * @return {string} Markup string.\n   */\n  createMarkupForID: function (id) {\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\n  },\n\n  setAttributeForID: function (node, id) {\n    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\n  },\n\n  /**\n   * Creates markup for a property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {?string} Markup string, or null if the property was invalid.\n   */\n  createMarkupForProperty: function (name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      if (shouldIgnoreValue(propertyInfo, value)) {\n        return '';\n      }\n      var attributeName = propertyInfo.attributeName;\n      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n        return attributeName + '=\"\"';\n      }\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      if (value == null) {\n        return '';\n      }\n      return name + '=' + quoteAttributeValueForBrowser(value);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warnUnknownProperty(name);\n    }\n    return null;\n  },\n\n  /**\n   * Creates markup for a custom property.\n   *\n   * @param {string} name\n   * @param {*} value\n   * @return {string} Markup string, or empty string if the property was invalid.\n   */\n  createMarkupForCustomAttribute: function (name, value) {\n    if (!isAttributeNameSafe(name) || value == null) {\n      return '';\n    }\n    return name + '=' + quoteAttributeValueForBrowser(value);\n  },\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n  setValueForProperty: function (node, name, value) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, value);\n      } else if (shouldIgnoreValue(propertyInfo, value)) {\n        this.deleteValueForProperty(node, name);\n      } else if (propertyInfo.mustUseAttribute) {\n        var attributeName = propertyInfo.attributeName;\n        var namespace = propertyInfo.attributeNamespace;\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\n        // ('' + value) makes it output the correct toString()-value.\n        if (namespace) {\n          node.setAttributeNS(namespace, attributeName, '' + value);\n        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\n          node.setAttribute(attributeName, '');\n        } else {\n          node.setAttribute(attributeName, '' + value);\n        }\n      } else {\n        var propName = propertyInfo.propertyName;\n        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the\n        // property type before comparing; only `value` does and is string.\n        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {\n          // Contrary to `setAttribute`, object properties are properly\n          // `toString`ed by IE8/9.\n          node[propName] = value;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      DOMPropertyOperations.setValueForAttribute(node, name, value);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warnUnknownProperty(name);\n    }\n  },\n\n  setValueForAttribute: function (node, name, value) {\n    if (!isAttributeNameSafe(name)) {\n      return;\n    }\n    if (value == null) {\n      node.removeAttribute(name);\n    } else {\n      node.setAttribute(name, '' + value);\n    }\n  },\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n  deleteValueForProperty: function (node, name) {\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\n    if (propertyInfo) {\n      var mutationMethod = propertyInfo.mutationMethod;\n      if (mutationMethod) {\n        mutationMethod(node, undefined);\n      } else if (propertyInfo.mustUseAttribute) {\n        node.removeAttribute(propertyInfo.attributeName);\n      } else {\n        var propName = propertyInfo.propertyName;\n        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);\n        if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {\n          node[propName] = defaultValue;\n        }\n      }\n    } else if (DOMProperty.isCustomAttribute(name)) {\n      node.removeAttribute(name);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warnUnknownProperty(name);\n    }\n  }\n\n};\n\nReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {\n  setValueForProperty: 'setValueForProperty',\n  setValueForAttribute: 'setValueForAttribute',\n  deleteValueForProperty: 'deleteValueForProperty'\n});\n\nmodule.exports = DOMPropertyOperations;\n}).call(this,require('_process'))\n\n},{\"./DOMProperty\":\"react/lib/DOMProperty\",\"./ReactPerf\":\"react/lib/ReactPerf\",\"./quoteAttributeValueForBrowser\":\"react/lib/quoteAttributeValueForBrowser\",\"_process\":1,\"fbjs/lib/warning\":41}],\"react/lib/DOMProperty\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DOMProperty\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\nfunction checkMask(value, bitmask) {\n  return (value & bitmask) === bitmask;\n}\n\nvar DOMPropertyInjection = {\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  MUST_USE_ATTRIBUTE: 0x1,\n  MUST_USE_PROPERTY: 0x2,\n  HAS_SIDE_EFFECTS: 0x4,\n  HAS_BOOLEAN_VALUE: 0x8,\n  HAS_NUMERIC_VALUE: 0x10,\n  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,\n\n  /**\n   * Inject some specialized knowledge about the DOM. This takes a config object\n   * with the following properties:\n   *\n   * isCustomAttribute: function that given an attribute name will return true\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\n   * attributes where it's impossible to enumerate all of the possible\n   * attribute names,\n   *\n   * Properties: object mapping DOM property name to one of the\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\n   * it won't get written to the DOM.\n   *\n   * DOMAttributeNames: object mapping React attribute name to the DOM\n   * attribute name. Attribute names not specified use the **lowercase**\n   * normalized name.\n   *\n   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\n   * attribute namespace URL. (Attribute names not specified use no namespace.)\n   *\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\n   * Property names not specified use the normalized name.\n   *\n   * DOMMutationMethods: Properties that require special mutation methods. If\n   * `value` is undefined, the mutation method should unset the property.\n   *\n   * @param {object} domPropertyConfig the config as described above.\n   */\n  injectDOMPropertyConfig: function (domPropertyConfig) {\n    var Injection = DOMPropertyInjection;\n    var Properties = domPropertyConfig.Properties || {};\n    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\n\n    if (domPropertyConfig.isCustomAttribute) {\n      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\n    }\n\n    for (var propName in Properties) {\n      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\\'re trying to inject DOM property ' + '\\'%s\\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;\n\n      var lowerCased = propName.toLowerCase();\n      var propConfig = Properties[propName];\n\n      var propertyInfo = {\n        attributeName: lowerCased,\n        attributeNamespace: null,\n        propertyName: propName,\n        mutationMethod: null,\n\n        mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),\n        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\n        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),\n        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\n        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\n        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\n        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\n      };\n\n      !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;\n      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;\n      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;\n\n      if (process.env.NODE_ENV !== 'production') {\n        DOMProperty.getPossibleStandardName[lowerCased] = propName;\n      }\n\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\n        var attributeName = DOMAttributeNames[propName];\n        propertyInfo.attributeName = attributeName;\n        if (process.env.NODE_ENV !== 'production') {\n          DOMProperty.getPossibleStandardName[attributeName] = propName;\n        }\n      }\n\n      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\n        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\n      }\n\n      if (DOMPropertyNames.hasOwnProperty(propName)) {\n        propertyInfo.propertyName = DOMPropertyNames[propName];\n      }\n\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\n        propertyInfo.mutationMethod = DOMMutationMethods[propName];\n      }\n\n      DOMProperty.properties[propName] = propertyInfo;\n    }\n  }\n};\nvar defaultValueCache = {};\n\n/**\n * DOMProperty exports lookup objects that can be used like functions:\n *\n *   > DOMProperty.isValid['id']\n *   true\n *   > DOMProperty.isValid['foobar']\n *   undefined\n *\n * Although this may be confusing, it performs better in general.\n *\n * @see http://jsperf.com/key-exists\n * @see http://jsperf.com/key-missing\n */\nvar DOMProperty = {\n\n  ID_ATTRIBUTE_NAME: 'data-reactid',\n\n  /**\n   * Map from property \"standard name\" to an object with info about how to set\n   * the property in the DOM. Each object contains:\n   *\n   * attributeName:\n   *   Used when rendering markup or with `*Attribute()`.\n   * attributeNamespace\n   * propertyName:\n   *   Used on DOM node instances. (This includes properties that mutate due to\n   *   external factors.)\n   * mutationMethod:\n   *   If non-null, used instead of the property or `setAttribute()` after\n   *   initial render.\n   * mustUseAttribute:\n   *   Whether the property must be accessed and mutated using `*Attribute()`.\n   *   (This includes anything that fails `<propName> in <element>`.)\n   * mustUseProperty:\n   *   Whether the property must be accessed and mutated as an object property.\n   * hasSideEffects:\n   *   Whether or not setting a value causes side effects such as triggering\n   *   resources to be loaded or text selection changes. If true, we read from\n   *   the DOM before updating to ensure that the value is only set if it has\n   *   changed.\n   * hasBooleanValue:\n   *   Whether the property should be removed when set to a falsey value.\n   * hasNumericValue:\n   *   Whether the property must be numeric or parse as a numeric and should be\n   *   removed when set to a falsey value.\n   * hasPositiveNumericValue:\n   *   Whether the property must be positive numeric or parse as a positive\n   *   numeric and should be removed when set to a falsey value.\n   * hasOverloadedBooleanValue:\n   *   Whether the property can be used as a flag as well as with a value.\n   *   Removed when strictly equal to false; present without a value when\n   *   strictly equal to true; present with a value otherwise.\n   */\n  properties: {},\n\n  /**\n   * Mapping from lowercase property names to the properly cased version, used\n   * to warn in the case of missing properties. Available only in __DEV__.\n   * @type {Object}\n   */\n  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,\n\n  /**\n   * All of the isCustomAttribute() functions that have been injected.\n   */\n  _isCustomAttributeFunctions: [],\n\n  /**\n   * Checks whether a property name is a custom attribute.\n   * @method\n   */\n  isCustomAttribute: function (attributeName) {\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\n      if (isCustomAttributeFn(attributeName)) {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  /**\n   * Returns the default property value for a DOM property (i.e., not an\n   * attribute). Most default values are '' or false, but not all. Worse yet,\n   * some (in particular, `type`) vary depending on the type of element.\n   *\n   * TODO: Is it better to grab all the possible properties when creating an\n   * element to avoid having to create the same element twice?\n   */\n  getDefaultValueForProperty: function (nodeName, prop) {\n    var nodeDefaults = defaultValueCache[nodeName];\n    var testElement;\n    if (!nodeDefaults) {\n      defaultValueCache[nodeName] = nodeDefaults = {};\n    }\n    if (!(prop in nodeDefaults)) {\n      testElement = document.createElement(nodeName);\n      nodeDefaults[prop] = testElement[prop];\n    }\n    return nodeDefaults[prop];\n  },\n\n  injection: DOMPropertyInjection\n};\n\nmodule.exports = DOMProperty;\n}).call(this,require('_process'))\n\n},{\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/Danger\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Danger\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getMarkupWrap = require('fbjs/lib/getMarkupWrap');\nvar invariant = require('fbjs/lib/invariant');\n\nvar OPEN_TAG_NAME_EXP = /^(<[^ \\/>]+)/;\nvar RESULT_INDEX_ATTR = 'data-danger-index';\n\n/**\n * Extracts the `nodeName` from a string of markup.\n *\n * NOTE: Extracting the `nodeName` does not require a regular expression match\n * because we make assumptions about React-generated markup (i.e. there are no\n * spaces surrounding the opening tag and there is at least one attribute).\n *\n * @param {string} markup String of markup.\n * @return {string} Node name of the supplied markup.\n * @see http://jsperf.com/extract-nodename\n */\nfunction getNodeName(markup) {\n  return markup.substring(1, markup.indexOf(' '));\n}\n\nvar Danger = {\n\n  /**\n   * Renders markup into an array of nodes. The markup is expected to render\n   * into a list of root nodes. Also, the length of `resultList` and\n   * `markupList` should be the same.\n   *\n   * @param {array<string>} markupList List of markup strings to render.\n   * @return {array<DOMElement>} List of rendered nodes.\n   * @internal\n   */\n  dangerouslyRenderMarkup: function (markupList) {\n    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;\n    var nodeName;\n    var markupByNodeName = {};\n    // Group markup by `nodeName` if a wrap is necessary, else by '*'.\n    for (var i = 0; i < markupList.length; i++) {\n      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;\n      nodeName = getNodeName(markupList[i]);\n      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';\n      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];\n      markupByNodeName[nodeName][i] = markupList[i];\n    }\n    var resultList = [];\n    var resultListAssignmentCount = 0;\n    for (nodeName in markupByNodeName) {\n      if (!markupByNodeName.hasOwnProperty(nodeName)) {\n        continue;\n      }\n      var markupListByNodeName = markupByNodeName[nodeName];\n\n      // This for-in loop skips the holes of the sparse array. The order of\n      // iteration should follow the order of assignment, which happens to match\n      // numerical index order, but we don't rely on that.\n      var resultIndex;\n      for (resultIndex in markupListByNodeName) {\n        if (markupListByNodeName.hasOwnProperty(resultIndex)) {\n          var markup = markupListByNodeName[resultIndex];\n\n          // Push the requested markup with an additional RESULT_INDEX_ATTR\n          // attribute.  If the markup does not start with a < character, it\n          // will be discarded below (with an appropriate console.error).\n          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,\n          // This index will be parsed back out below.\n          '$1 ' + RESULT_INDEX_ATTR + '=\"' + resultIndex + '\" ');\n        }\n      }\n\n      // Render each group of markup with similar wrapping `nodeName`.\n      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.\n      );\n\n      for (var j = 0; j < renderNodes.length; ++j) {\n        var renderNode = renderNodes[j];\n        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {\n\n          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);\n          renderNode.removeAttribute(RESULT_INDEX_ATTR);\n\n          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;\n\n          resultList[resultIndex] = renderNode;\n\n          // This should match resultList.length and markupList.length when\n          // we're done.\n          resultListAssignmentCount += 1;\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Danger: Discarding unexpected node:', renderNode);\n        }\n      }\n    }\n\n    // Although resultList was populated out of order, it should now be a dense\n    // array.\n    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;\n\n    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;\n\n    return resultList;\n  },\n\n  /**\n   * Replaces a node with a string of markup at its current position within its\n   * parent. The markup must render into a single root node.\n   *\n   * @param {DOMElement} oldChild Child node to replace.\n   * @param {string} markup Markup to render in place of the child node.\n   * @internal\n   */\n  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\n    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;\n    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;\n    !(oldChild.tagName.toLowerCase() !== 'html') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;\n\n    var newChild;\n    if (typeof markup === 'string') {\n      newChild = createNodesFromMarkup(markup, emptyFunction)[0];\n    } else {\n      newChild = markup;\n    }\n    oldChild.parentNode.replaceChild(newChild, oldChild);\n  }\n\n};\n\nmodule.exports = Danger;\n}).call(this,require('_process'))\n\n},{\"_process\":1,\"fbjs/lib/ExecutionEnvironment\":14,\"fbjs/lib/createNodesFromMarkup\":20,\"fbjs/lib/emptyFunction\":21,\"fbjs/lib/getMarkupWrap\":25,\"fbjs/lib/invariant\":29}],\"react/lib/DefaultEventPluginOrder\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DefaultEventPluginOrder\n */\n\n'use strict';\n\nvar keyOf = require('fbjs/lib/keyOf');\n\n/**\n * Module that is injectable into `EventPluginHub`, that specifies a\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\n * plugins, without having to package every one of them. This is better than\n * having plugins be ordered in the same order that they are injected because\n * that ordering would be influenced by the packaging order.\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\n */\nvar DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];\n\nmodule.exports = DefaultEventPluginOrder;\n},{\"fbjs/lib/keyOf\":34}],\"react/lib/EnterLeaveEventPlugin\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EnterLeaveEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPropagators = require('./EventPropagators');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\nvar ReactMount = require('./ReactMount');\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\nvar getFirstReactDOM = ReactMount.getFirstReactDOM;\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: keyOf({ onMouseEnter: null }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  },\n  mouseLeave: {\n    registrationName: keyOf({ onMouseLeave: null }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  }\n};\n\nvar extractedEvents = [null, null];\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (topLevelTarget.window === topLevelTarget) {\n      // `topLevelTarget` is probably a window object.\n      win = topLevelTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = topLevelTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from;\n    var to;\n    var fromID = '';\n    var toID = '';\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = topLevelTarget;\n      fromID = topLevelTargetID;\n      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);\n      if (to) {\n        toID = ReactMount.getID(to);\n      } else {\n        to = win;\n      }\n      to = to || win;\n    } else {\n      from = win;\n      to = topLevelTarget;\n      toID = topLevelTargetID;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);\n    leave.type = 'mouseleave';\n    leave.target = from;\n    leave.relatedTarget = to;\n\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);\n    enter.type = 'mouseenter';\n    enter.target = to;\n    enter.relatedTarget = from;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\n\n    extractedEvents[0] = leave;\n    extractedEvents[1] = enter;\n\n    return extractedEvents;\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;\n},{\"./EventConstants\":\"react/lib/EventConstants\",\"./EventPropagators\":\"react/lib/EventPropagators\",\"./ReactMount\":\"react/lib/ReactMount\",\"./SyntheticMouseEvent\":\"react/lib/SyntheticMouseEvent\",\"fbjs/lib/keyOf\":34}],\"react/lib/EventConstants\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventConstants\n */\n\n'use strict';\n\nvar keyMirror = require('fbjs/lib/keyMirror');\n\nvar PropagationPhases = keyMirror({ bubbled: null, captured: null });\n\n/**\n * Types of raw signals from the browser caught at the top level.\n */\nvar topLevelTypes = keyMirror({\n  topAbort: null,\n  topBlur: null,\n  topCanPlay: null,\n  topCanPlayThrough: null,\n  topChange: null,\n  topClick: null,\n  topCompositionEnd: null,\n  topCompositionStart: null,\n  topCompositionUpdate: null,\n  topContextMenu: null,\n  topCopy: null,\n  topCut: null,\n  topDoubleClick: null,\n  topDrag: null,\n  topDragEnd: null,\n  topDragEnter: null,\n  topDragExit: null,\n  topDragLeave: null,\n  topDragOver: null,\n  topDragStart: null,\n  topDrop: null,\n  topDurationChange: null,\n  topEmptied: null,\n  topEncrypted: null,\n  topEnded: null,\n  topError: null,\n  topFocus: null,\n  topInput: null,\n  topKeyDown: null,\n  topKeyPress: null,\n  topKeyUp: null,\n  topLoad: null,\n  topLoadedData: null,\n  topLoadedMetadata: null,\n  topLoadStart: null,\n  topMouseDown: null,\n  topMouseMove: null,\n  topMouseOut: null,\n  topMouseOver: null,\n  topMouseUp: null,\n  topPaste: null,\n  topPause: null,\n  topPlay: null,\n  topPlaying: null,\n  topProgress: null,\n  topRateChange: null,\n  topReset: null,\n  topScroll: null,\n  topSeeked: null,\n  topSeeking: null,\n  topSelectionChange: null,\n  topStalled: null,\n  topSubmit: null,\n  topSuspend: null,\n  topTextInput: null,\n  topTimeUpdate: null,\n  topTouchCancel: null,\n  topTouchEnd: null,\n  topTouchMove: null,\n  topTouchStart: null,\n  topVolumeChange: null,\n  topWaiting: null,\n  topWheel: null\n});\n\nvar EventConstants = {\n  topLevelTypes: topLevelTypes,\n  PropagationPhases: PropagationPhases\n};\n\nmodule.exports = EventConstants;\n},{\"fbjs/lib/keyMirror\":33}],\"react/lib/EventPluginHub\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginHub\n */\n\n'use strict';\n\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Internal store for event listeners\n */\nvar listenerBank = {};\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nvar eventQueue = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @private\n */\nvar executeDispatchesAndRelease = function (event, simulated) {\n  if (event) {\n    EventPluginUtils.executeDispatchesInOrder(event, simulated);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nvar executeDispatchesAndReleaseSimulated = function (e) {\n  return executeDispatchesAndRelease(e, true);\n};\nvar executeDispatchesAndReleaseTopLevel = function (e) {\n  return executeDispatchesAndRelease(e, false);\n};\n\n/**\n * - `InstanceHandle`: [required] Module that performs logical traversals of DOM\n *   hierarchy given ids of the logical DOM elements involved.\n */\nvar InstanceHandle = null;\n\nfunction validateInstanceHandle() {\n  var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;\n  process.env.NODE_ENV !== 'production' ? warning(valid, 'InstanceHandle not injected before use!') : undefined;\n}\n\n/**\n * This is a unified interface for event plugins to be installed and configured.\n *\n * Event plugins can implement the following properties:\n *\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\n *     Required. When a top-level event is fired, this method is expected to\n *     extract synthetic events that will in turn be queued and dispatched.\n *\n *   `eventTypes` {object}\n *     Optional, plugins that fire events must publish a mapping of registration\n *     names that are used to register listeners. Values of this mapping must\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\n *\n *   `executeDispatch` {function(object, function, string)}\n *     Optional, allows plugins to override how an event gets dispatched. By\n *     default, the listener is simply invoked.\n *\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\n *\n * @public\n */\nvar EventPluginHub = {\n\n  /**\n   * Methods for injecting dependencies.\n   */\n  injection: {\n\n    /**\n     * @param {object} InjectedMount\n     * @public\n     */\n    injectMount: EventPluginUtils.injection.injectMount,\n\n    /**\n     * @param {object} InjectedInstanceHandle\n     * @public\n     */\n    injectInstanceHandle: function (InjectedInstanceHandle) {\n      InstanceHandle = InjectedInstanceHandle;\n      if (process.env.NODE_ENV !== 'production') {\n        validateInstanceHandle();\n      }\n    },\n\n    getInstanceHandle: function () {\n      if (process.env.NODE_ENV !== 'production') {\n        validateInstanceHandle();\n      }\n      return InstanceHandle;\n    },\n\n    /**\n     * @param {array} InjectedEventPluginOrder\n     * @public\n     */\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\n\n    /**\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n     */\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\n\n  },\n\n  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginRegistry.registrationNameModules,\n\n  /**\n   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.\n   *\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {?function} listener The callback to store.\n   */\n  putListener: function (id, registrationName, listener) {\n    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;\n\n    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\n    bankForRegistrationName[id] = listener;\n\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.didPutListener) {\n      PluginModule.didPutListener(id, registrationName, listener);\n    }\n  },\n\n  /**\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @return {?function} The stored callback.\n   */\n  getListener: function (id, registrationName) {\n    var bankForRegistrationName = listenerBank[registrationName];\n    return bankForRegistrationName && bankForRegistrationName[id];\n  },\n\n  /**\n   * Deletes a listener from the registration bank.\n   *\n   * @param {string} id ID of the DOM element.\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   */\n  deleteListener: function (id, registrationName) {\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n    if (PluginModule && PluginModule.willDeleteListener) {\n      PluginModule.willDeleteListener(id, registrationName);\n    }\n\n    var bankForRegistrationName = listenerBank[registrationName];\n    // TODO: This should never be null -- when is it?\n    if (bankForRegistrationName) {\n      delete bankForRegistrationName[id];\n    }\n  },\n\n  /**\n   * Deletes all listeners for the DOM element with the supplied ID.\n   *\n   * @param {string} id ID of the DOM element.\n   */\n  deleteAllListeners: function (id) {\n    for (var registrationName in listenerBank) {\n      if (!listenerBank[registrationName][id]) {\n        continue;\n      }\n\n      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\n      if (PluginModule && PluginModule.willDeleteListener) {\n        PluginModule.willDeleteListener(id, registrationName);\n      }\n\n      delete listenerBank[registrationName][id];\n    }\n  },\n\n  /**\n   * Allows registered plugins an opportunity to extract events from top-level\n   * native browser events.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @internal\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    var events;\n    var plugins = EventPluginRegistry.plugins;\n    for (var i = 0; i < plugins.length; i++) {\n      // Not every plugin in the ordering may be loaded at runtime.\n      var possiblePlugin = plugins[i];\n      if (possiblePlugin) {\n        var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);\n        if (extractedEvents) {\n          events = accumulateInto(events, extractedEvents);\n        }\n      }\n    }\n    return events;\n  },\n\n  /**\n   * Enqueues a synthetic event that should be dispatched when\n   * `processEventQueue` is invoked.\n   *\n   * @param {*} events An accumulation of synthetic events.\n   * @internal\n   */\n  enqueueEvents: function (events) {\n    if (events) {\n      eventQueue = accumulateInto(eventQueue, events);\n    }\n  },\n\n  /**\n   * Dispatches all synthetic events on the event queue.\n   *\n   * @internal\n   */\n  processEventQueue: function (simulated) {\n    // Set `eventQueue` to null before processing it so that we can tell if more\n    // events get enqueued while processing.\n    var processingEventQueue = eventQueue;\n    eventQueue = null;\n    if (simulated) {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\n    } else {\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n    }\n    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;\n    // This would be a good time to rethrow if any of the event handlers threw.\n    ReactErrorUtils.rethrowCaughtError();\n  },\n\n  /**\n   * These are needed for tests only. Do not use!\n   */\n  __purge: function () {\n    listenerBank = {};\n  },\n\n  __getListenerBank: function () {\n    return listenerBank;\n  }\n\n};\n\nmodule.exports = EventPluginHub;\n}).call(this,require('_process'))\n\n},{\"./EventPluginRegistry\":\"react/lib/EventPluginRegistry\",\"./EventPluginUtils\":\"react/lib/EventPluginUtils\",\"./ReactErrorUtils\":\"react/lib/ReactErrorUtils\",\"./accumulateInto\":\"react/lib/accumulateInto\",\"./forEachAccumulated\":\"react/lib/forEachAccumulated\",\"_process\":1,\"fbjs/lib/invariant\":29,\"fbjs/lib/warning\":41}],\"react/lib/EventPluginRegistry\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginRegistry\n * @typechecks static-only\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Injectable ordering of event plugins.\n */\nvar EventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nvar namesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering() {\n  if (!EventPluginOrder) {\n    // Wait until an `EventPluginOrder` is injected.\n    return;\n  }\n  for (var pluginName in namesToPlugins) {\n    var PluginModule = namesToPlugins[pluginName];\n    var pluginIndex = EventPluginOrder.indexOf(pluginName);\n    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;\n    if (EventPluginRegistry.plugins[pluginIndex]) {\n      continue;\n    }\n    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;\n    EventPluginRegistry.plugins[pluginIndex] = PluginModule;\n    var publishedEvents = PluginModule.eventTypes;\n    for (var eventName in publishedEvents) {\n      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(dispatchConfig, PluginModule, eventName) {\n  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;\n  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (var phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events and\n * can be used with `EventPluginHub.putListener` to register listeners.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(registrationName, PluginModule, eventName) {\n  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;\n  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;\n  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n *\n * @see {EventPluginHub}\n */\nvar EventPluginRegistry = {\n\n  /**\n   * Ordered list of injected plugins.\n   */\n  plugins: [],\n\n  /**\n   * Mapping from event name to dispatch config\n   */\n  eventNameDispatchConfigs: {},\n\n  /**\n   * Mapping from registration name to plugin module\n   */\n  registrationNameModules: {},\n\n  /**\n   * Mapping from registration name to event name\n   */\n  registrationNameDependencies: {},\n\n  /**\n   * Injects an ordering of plugins (by plugin name). This allows the ordering\n   * to be decoupled from injection of the actual plugins so that ordering is\n   * always deterministic regardless of packaging, on-the-fly injection, etc.\n   *\n   * @param {array} InjectedEventPluginOrder\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginOrder}\n   */\n  injectEventPluginOrder: function (InjectedEventPluginOrder) {\n    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;\n    // Clone the ordering so it cannot be dynamically mutated.\n    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);\n    recomputePluginOrdering();\n  },\n\n  /**\n   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\n   * in the ordering injected by `injectEventPluginOrder`.\n   *\n   * Plugins can be injected as part of page initialization or on-the-fly.\n   *\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n   * @internal\n   * @see {EventPluginHub.injection.injectEventPluginsByName}\n   */\n  injectEventPluginsByName: function (injectedNamesToPlugins) {\n    var isOrderingDirty = false;\n    for (var pluginName in injectedNamesToPlugins) {\n      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n        continue;\n      }\n      var PluginModule = injectedNamesToPlugins[pluginName];\n      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {\n        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;\n        namesToPlugins[pluginName] = PluginModule;\n        isOrderingDirty = true;\n      }\n    }\n    if (isOrderingDirty) {\n      recomputePluginOrdering();\n    }\n  },\n\n  /**\n   * Looks up the plugin for the supplied event.\n   *\n   * @param {object} event A synthetic event.\n   * @return {?object} The plugin that created the supplied event.\n   * @internal\n   */\n  getPluginModuleForEvent: function (event) {\n    var dispatchConfig = event.dispatchConfig;\n    if (dispatchConfig.registrationName) {\n      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;\n    }\n    for (var phase in dispatchConfig.phasedRegistrationNames) {\n      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {\n        continue;\n      }\n      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];\n      if (PluginModule) {\n        return PluginModule;\n      }\n    }\n    return null;\n  },\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _resetEventPlugins: function () {\n    EventPluginOrder = null;\n    for (var pluginName in namesToPlugins) {\n      if (namesToPlugins.hasOwnProperty(pluginName)) {\n        delete namesToPlugins[pluginName];\n      }\n    }\n    EventPluginRegistry.plugins.length = 0;\n\n    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\n    for (var eventName in eventNameDispatchConfigs) {\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\n        delete eventNameDispatchConfigs[eventName];\n      }\n    }\n\n    var registrationNameModules = EventPluginRegistry.registrationNameModules;\n    for (var registrationName in registrationNameModules) {\n      if (registrationNameModules.hasOwnProperty(registrationName)) {\n        delete registrationNameModules[registrationName];\n      }\n    }\n  }\n\n};\n\nmodule.exports = EventPluginRegistry;\n}).call(this,require('_process'))\n\n},{\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/EventPluginUtils\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPluginUtils\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar ReactErrorUtils = require('./ReactErrorUtils');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Injected dependencies:\n */\n\n/**\n * - `Mount`: [required] Module that can convert between React dom IDs and\n *   actual node references.\n */\nvar injection = {\n  Mount: null,\n  injectMount: function (InjectedMount) {\n    injection.Mount = InjectedMount;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;\n    }\n  }\n};\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction isEndish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;\n}\n\nfunction isMoveish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;\n}\nfunction isStartish(topLevelType) {\n  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;\n}\n\nvar validateEventDispatches;\nif (process.env.NODE_ENV !== 'production') {\n  validateEventDispatches = function (event) {\n    var dispatchListeners = event._dispatchListeners;\n    var dispatchIDs = event._dispatchIDs;\n\n    var listenersIsArr = Array.isArray(dispatchListeners);\n    var idsIsArr = Array.isArray(dispatchIDs);\n    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\n\n    process.env.NODE_ENV !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\n * @param {function} listener Application-level callback\n * @param {string} domID DOM id to pass to the callback.\n */\nfunction executeDispatch(event, simulated, listener, domID) {\n  var type = event.type || 'unknown-event';\n  event.currentTarget = injection.Mount.getNode(domID);\n  if (simulated) {\n    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);\n  } else {\n    ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);\n  }\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nfunction executeDispatchesInOrder(event, simulated) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, simulated, dispatchListeners, dispatchIDs);\n  }\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  var dispatchListeners = event._dispatchListeners;\n  var dispatchIDs = event._dispatchIDs;\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  if (Array.isArray(dispatchListeners)) {\n    for (var i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and IDs are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchIDs[i])) {\n        return dispatchIDs[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchIDs)) {\n      return dispatchIDs;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nfunction executeDispatchesInOrderStopAtTrue(event) {\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchIDs = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nfunction executeDirectDispatch(event) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateEventDispatches(event);\n  }\n  var dispatchListener = event._dispatchListeners;\n  var dispatchID = event._dispatchIDs;\n  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;\n  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;\n  event._dispatchListeners = null;\n  event._dispatchIDs = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nfunction hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n\n/**\n * General utilities that are useful in creating custom Event Plugins.\n */\nvar EventPluginUtils = {\n  isEndish: isEndish,\n  isMoveish: isMoveish,\n  isStartish: isStartish,\n\n  executeDirectDispatch: executeDirectDispatch,\n  executeDispatchesInOrder: executeDispatchesInOrder,\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\n  hasDispatches: hasDispatches,\n\n  getNode: function (id) {\n    return injection.Mount.getNode(id);\n  },\n  getID: function (node) {\n    return injection.Mount.getID(node);\n  },\n\n  injection: injection\n};\n\nmodule.exports = EventPluginUtils;\n}).call(this,require('_process'))\n\n},{\"./EventConstants\":\"react/lib/EventConstants\",\"./ReactErrorUtils\":\"react/lib/ReactErrorUtils\",\"_process\":1,\"fbjs/lib/invariant\":29,\"fbjs/lib/warning\":41}],\"react/lib/EventPropagators\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EventPropagators\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\n\nvar warning = require('fbjs/lib/warning');\n\nvar accumulateInto = require('./accumulateInto');\nvar forEachAccumulated = require('./forEachAccumulated');\n\nvar PropagationPhases = EventConstants.PropagationPhases;\nvar getListener = EventPluginHub.getListener;\n\n/**\n * Some event types have a notion of different registration names for different\n * \"phases\" of propagation. This finds listeners by a given phase.\n */\nfunction listenerAtPhase(id, event, propagationPhase) {\n  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(id, registrationName);\n}\n\n/**\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\n * here, allows us to not have to bind or create functions for each event.\n * Mutating the event's members allows us to not have to create a wrapping\n * \"dispatch\" object that pairs the event with the listener.\n */\nfunction accumulateDirectionalDispatches(domID, upwards, event) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;\n  }\n  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;\n  var listener = listenerAtPhase(domID, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);\n  }\n}\n\n/**\n * Collect dispatches (must be entirely collected before dispatching - see unit\n * tests). Lazily allocate the array to conserve memory.  We must loop through\n * each event and perform the traversal for each one. We cannot perform a\n * single traversal for the entire collection of events because each event may\n * have a different target.\n */\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\n */\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);\n  }\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(id, ignoredDirection, event) {\n  if (event && event.dispatchConfig.registrationName) {\n    var registrationName = event.dispatchConfig.registrationName;\n    var listener = getListener(id, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\n      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event.dispatchMarker, null, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nfunction accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {\n  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);\n}\n\nfunction accumulateDirectDispatches(events) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n/**\n * A small set of propagation patterns, each of which will accept a small amount\n * of information, and generate a set of \"dispatch ready event objects\" - which\n * are sets of events that have already been annotated with a set of dispatched\n * listener functions/ids. The API is designed this way to discourage these\n * propagation strategies from actually executing the dispatches, since we\n * always want to collect the entire set of dispatches before executing event a\n * single one.\n *\n * @constructor EventPropagators\n */\nvar EventPropagators = {\n  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\n  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,\n  accumulateDirectDispatches: accumulateDirectDispatches,\n  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\n};\n\nmodule.exports = EventPropagators;\n}).call(this,require('_process'))\n\n},{\"./EventConstants\":\"react/lib/EventConstants\",\"./EventPluginHub\":\"react/lib/EventPluginHub\",\"./accumulateInto\":\"react/lib/accumulateInto\",\"./forEachAccumulated\":\"react/lib/forEachAccumulated\",\"_process\":1,\"fbjs/lib/warning\":41}],\"react/lib/FallbackCompositionState\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FallbackCompositionState\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\n\nvar assign = require('./Object.assign');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\nassign(FallbackCompositionState.prototype, {\n  destructor: function () {\n    this._root = null;\n    this._startText = null;\n    this._fallbackText = null;\n  },\n\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function () {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function () {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./PooledClass\":\"react/lib/PooledClass\",\"./getTextContentAccessor\":\"react/lib/getTextContentAccessor\"}],\"react/lib/HTMLDOMPropertyConfig\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule HTMLDOMPropertyConfig\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\nvar HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\nvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\nvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\n\nvar hasSVG;\nif (ExecutionEnvironment.canUseDOM) {\n  var implementation = document.implementation;\n  hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');\n}\n\nvar HTMLDOMPropertyConfig = {\n  isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\\d_.\\-]*$/),\n  Properties: {\n    /**\n     * Standard Properties\n     */\n    accept: null,\n    acceptCharset: null,\n    accessKey: null,\n    action: null,\n    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    allowTransparency: MUST_USE_ATTRIBUTE,\n    alt: null,\n    async: HAS_BOOLEAN_VALUE,\n    autoComplete: null,\n    // autoFocus is polyfilled/normalized by AutoFocusUtils\n    // autoFocus: HAS_BOOLEAN_VALUE,\n    autoPlay: HAS_BOOLEAN_VALUE,\n    capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    cellPadding: null,\n    cellSpacing: null,\n    charSet: MUST_USE_ATTRIBUTE,\n    challenge: MUST_USE_ATTRIBUTE,\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    classID: MUST_USE_ATTRIBUTE,\n    // To set className on SVG elements, it's necessary to use .setAttribute;\n    // this works on HTML elements too in all browsers except IE8. Conveniently,\n    // IE8 doesn't support SVG and so we can simply use the attribute in\n    // browsers that support SVG and the property in browsers that don't,\n    // regardless of whether the element is HTML or SVG.\n    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,\n    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    colSpan: null,\n    content: null,\n    contentEditable: null,\n    contextMenu: MUST_USE_ATTRIBUTE,\n    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    coords: null,\n    crossOrigin: null,\n    data: null, // For `<object />` acts as `src`.\n    dateTime: MUST_USE_ATTRIBUTE,\n    'default': HAS_BOOLEAN_VALUE,\n    defer: HAS_BOOLEAN_VALUE,\n    dir: null,\n    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\n    draggable: null,\n    encType: null,\n    form: MUST_USE_ATTRIBUTE,\n    formAction: MUST_USE_ATTRIBUTE,\n    formEncType: MUST_USE_ATTRIBUTE,\n    formMethod: MUST_USE_ATTRIBUTE,\n    formNoValidate: HAS_BOOLEAN_VALUE,\n    formTarget: MUST_USE_ATTRIBUTE,\n    frameBorder: MUST_USE_ATTRIBUTE,\n    headers: null,\n    height: MUST_USE_ATTRIBUTE,\n    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    high: null,\n    href: null,\n    hrefLang: null,\n    htmlFor: null,\n    httpEquiv: null,\n    icon: null,\n    id: MUST_USE_PROPERTY,\n    inputMode: MUST_USE_ATTRIBUTE,\n    integrity: null,\n    is: MUST_USE_ATTRIBUTE,\n    keyParams: MUST_USE_ATTRIBUTE,\n    keyType: MUST_USE_ATTRIBUTE,\n    kind: null,\n    label: null,\n    lang: null,\n    list: MUST_USE_ATTRIBUTE,\n    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    low: null,\n    manifest: MUST_USE_ATTRIBUTE,\n    marginHeight: null,\n    marginWidth: null,\n    max: null,\n    maxLength: MUST_USE_ATTRIBUTE,\n    media: MUST_USE_ATTRIBUTE,\n    mediaGroup: null,\n    method: null,\n    min: null,\n    minLength: MUST_USE_ATTRIBUTE,\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    name: null,\n    nonce: MUST_USE_ATTRIBUTE,\n    noValidate: HAS_BOOLEAN_VALUE,\n    open: HAS_BOOLEAN_VALUE,\n    optimum: null,\n    pattern: null,\n    placeholder: null,\n    poster: null,\n    preload: null,\n    radioGroup: null,\n    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    rel: null,\n    required: HAS_BOOLEAN_VALUE,\n    reversed: HAS_BOOLEAN_VALUE,\n    role: MUST_USE_ATTRIBUTE,\n    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    rowSpan: null,\n    sandbox: null,\n    scope: null,\n    scoped: HAS_BOOLEAN_VALUE,\n    scrolling: null,\n    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n    shape: null,\n    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\n    sizes: MUST_USE_ATTRIBUTE,\n    span: HAS_POSITIVE_NUMERIC_VALUE,\n    spellCheck: null,\n    src: null,\n    srcDoc: MUST_USE_PROPERTY,\n    srcLang: null,\n    srcSet: MUST_USE_ATTRIBUTE,\n    start: HAS_NUMERIC_VALUE,\n    step: null,\n    style: null,\n    summary: null,\n    tabIndex: null,\n    target: null,\n    title: null,\n    type: null,\n    useMap: null,\n    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,\n    width: MUST_USE_ATTRIBUTE,\n    wmode: MUST_USE_ATTRIBUTE,\n    wrap: null,\n\n    /**\n     * RDFa Properties\n     */\n    about: MUST_USE_ATTRIBUTE,\n    datatype: MUST_USE_ATTRIBUTE,\n    inlist: MUST_USE_ATTRIBUTE,\n    prefix: MUST_USE_ATTRIBUTE,\n    // property is also supported for OpenGraph in meta tags.\n    property: MUST_USE_ATTRIBUTE,\n    resource: MUST_USE_ATTRIBUTE,\n    'typeof': MUST_USE_ATTRIBUTE,\n    vocab: MUST_USE_ATTRIBUTE,\n\n    /**\n     * Non-standard Properties\n     */\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\n    // keyboard hints.\n    autoCapitalize: null,\n    autoCorrect: null,\n    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n    autoSave: null,\n    // color is for Safari mask-icon link\n    color: null,\n    // itemProp, itemScope, itemType are for\n    // Microdata support. See http://schema.org/docs/gs.html\n    itemProp: MUST_USE_ATTRIBUTE,\n    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\n    itemType: MUST_USE_ATTRIBUTE,\n    // itemID and itemRef are for Microdata support as well but\n    // only specified in the the WHATWG spec document. See\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n    itemID: MUST_USE_ATTRIBUTE,\n    itemRef: MUST_USE_ATTRIBUTE,\n    // results show looking glass icon and recent searches on input\n    // search fields in WebKit/Blink\n    results: null,\n    // IE-only attribute that specifies security restrictions on an iframe\n    // as an alternative to the sandbox attribute on IE<10\n    security: MUST_USE_ATTRIBUTE,\n    // IE-only attribute that controls focus behavior\n    unselectable: MUST_USE_ATTRIBUTE\n  },\n  DOMAttributeNames: {\n    acceptCharset: 'accept-charset',\n    className: 'class',\n    htmlFor: 'for',\n    httpEquiv: 'http-equiv'\n  },\n  DOMPropertyNames: {\n    autoCapitalize: 'autocapitalize',\n    autoComplete: 'autocomplete',\n    autoCorrect: 'autocorrect',\n    autoFocus: 'autofocus',\n    autoPlay: 'autoplay',\n    autoSave: 'autosave',\n    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.\n    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding\n    encType: 'encoding',\n    hrefLang: 'hreflang',\n    radioGroup: 'radiogroup',\n    spellCheck: 'spellcheck',\n    srcDoc: 'srcdoc',\n    srcSet: 'srcset'\n  }\n};\n\nmodule.exports = HTMLDOMPropertyConfig;\n},{\"./DOMProperty\":\"react/lib/DOMProperty\",\"fbjs/lib/ExecutionEnvironment\":14}],\"react/lib/LinkedStateMixin\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedStateMixin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactLink = require('./ReactLink');\nvar ReactStateSetters = require('./ReactStateSetters');\n\n/**\n * A simple mixin around ReactLink.forState().\n */\nvar LinkedStateMixin = {\n  /**\n   * Create a ReactLink that's linked to part of this component's state. The\n   * ReactLink will have the current value of this.state[key] and will call\n   * setState() when a change is requested.\n   *\n   * @param {string} key state key to update. Note: you may want to use keyOf()\n   * if you're using Google Closure Compiler advanced mode.\n   * @return {ReactLink} ReactLink instance linking to the state.\n   */\n  linkState: function (key) {\n    return new ReactLink(this.state[key], ReactStateSetters.createStateKeySetter(this, key));\n  }\n};\n\nmodule.exports = LinkedStateMixin;\n},{\"./ReactLink\":\"react/lib/ReactLink\",\"./ReactStateSetters\":\"react/lib/ReactStateSetters\"}],\"react/lib/LinkedValueUtils\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\\'t want to use valueLink and vice versa.') : invariant(false) : undefined;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\\'t want to use valueLink.') : invariant(false) : undefined;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\\'t want to ' + 'use checkedLink') : invariant(false) : undefined;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: ReactPropTypes.func\n};\n\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\n\nmodule.exports = LinkedValueUtils;\n}).call(this,require('_process'))\n\n},{\"./ReactPropTypeLocations\":\"react/lib/ReactPropTypeLocations\",\"./ReactPropTypes\":\"react/lib/ReactPropTypes\",\"_process\":1,\"fbjs/lib/invariant\":29,\"fbjs/lib/warning\":41}],\"react/lib/MetaMatchers\":[function(require,module,exports){\n/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule MetaMatchers\n */\n\n'use strict';\n\n/**\n * This modules adds a jasmine matcher toEqualSpecsIn that can be used to\n * compare the specs in two different \"describe\" functions and their result.\n * It can be used to test a test.\n */\n\nfunction getRunnerWithResults(describeFunction) {\n  if (describeFunction._cachedRunner) {\n    // Cached result of execution. This is a convenience way to test against\n    // the same authorative function multiple times.\n    return describeFunction._cachedRunner;\n  }\n  // Patch the current global environment.\n  var env = new jasmine.Env();\n  // Execute the tests synchronously.\n  env.updateInterval = 0;\n  var outerGetEnv = jasmine.getEnv;\n  jasmine.getEnv = function () {\n    return env;\n  };\n  // TODO: Bring over matchers from the existing environment.\n  var runner = env.currentRunner();\n  try {\n    env.describe('', describeFunction);\n    env.execute();\n  } finally {\n    // Restore the environment.\n    jasmine.getEnv = outerGetEnv;\n  }\n  describeFunction._cachedRunner = runner;\n  return runner;\n}\n\nfunction compareSpec(actual, expected) {\n  if (actual.results().totalCount !== expected.results().totalCount) {\n    return 'Expected ' + expected.results().totalCount + ' expects, ' + 'but got ' + actual.results().totalCount + ':' + actual.getFullName();\n  }\n  return null;\n}\n\nfunction includesDescription(specs, description, startIndex) {\n  for (var i = startIndex; i < specs.length; i++) {\n    if (specs[i].description === description) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction compareSpecs(actualSpecs, expectedSpecs) {\n  for (var i = 0; i < actualSpecs.length && i < expectedSpecs.length; i++) {\n    var actual = actualSpecs[i];\n    var expected = expectedSpecs[i];\n    if (actual.description === expected.description) {\n      var errorMessage = compareSpec(actual, expected);\n      if (errorMessage) {\n        return errorMessage;\n      }\n      continue;\n    } else if (includesDescription(actualSpecs, expected.description, i)) {\n      return 'Did not expect the spec:' + actualSpecs[i].getFullName();\n    } else {\n      return 'Expected an equivalent to:' + expectedSpecs[i].getFullName();\n    }\n  }\n  if (i < actualSpecs.length) {\n    return 'Did not expect the spec:' + actualSpecs[i].getFullName();\n  }\n  if (i < expectedSpecs.length) {\n    return 'Expected an equivalent to:' + expectedSpecs[i].getFullName();\n  }\n  return null;\n}\n\nfunction compareDescription(a, b) {\n  if (a.description === b.description) {\n    return 0;\n  }\n  return a.description < b.description ? -1 : 1;\n}\n\nfunction compareRunners(actual, expected) {\n  return compareSpecs(actual.specs().sort(compareDescription), expected.specs().sort(compareDescription));\n}\n\nvar MetaMatchers = {\n  toEqualSpecsIn: function (expectedDescribeFunction) {\n    var actualDescribeFunction = this.actual;\n    if (typeof actualDescribeFunction !== 'function') {\n      throw Error('toEqualSpecsIn() should be used on a describe function');\n    }\n    if (typeof expectedDescribeFunction !== 'function') {\n      throw Error('toEqualSpecsIn() should be passed a describe function');\n    }\n    var actual = getRunnerWithResults(actualDescribeFunction);\n    var expected = getRunnerWithResults(expectedDescribeFunction);\n    var errorMessage = compareRunners(actual, expected);\n    this.message = function () {\n      return [errorMessage, 'The specs are equal. Expected them to be different.'];\n    };\n    return !errorMessage;\n  }\n};\n\nmodule.exports = MetaMatchers;\n},{}],\"react/lib/Object.assign\":[function(require,module,exports){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Object.assign\n */\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\n\n'use strict';\n\nfunction assign(target, sources) {\n  if (target == null) {\n    throw new TypeError('Object.assign target cannot be null or undefined');\n  }\n\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource);\n\n    // We don't currently support accessors nor proxies. Therefore this\n    // copy cannot throw. If we ever supported this then we must handle\n    // exceptions and side-effects. We don't support symbols so they won't\n    // be transferred.\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  return to;\n}\n\nmodule.exports = assign;\n},{}],\"react/lib/OrderedMap\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule OrderedMap\n */\n\n'use strict';\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\n\nvar PREFIX = 'key:';\n\n/**\n * Utility to extract a backing object from an initialization `Array`, allowing\n * the caller to assist in resolving the unique ID for each entry via the\n * `keyExtractor` callback. The `keyExtractor` must extract non-empty strings or\n * numbers.\n * @param {Array<Object!>} arr Array of items.\n * @param {function} keyExtractor Extracts a unique key from each item.\n * @return {Object} Map from unique key to originating value that the key was\n * extracted from.\n * @throws Exception if the initialization array has duplicate extracted keys.\n */\nfunction extractObjectFromArray(arr, keyExtractor) {\n  var normalizedObj = {};\n  for (var i = 0; i < arr.length; i++) {\n    var item = arr[i];\n    var key = keyExtractor(item);\n    assertValidPublicKey(key);\n    var normalizedKey = PREFIX + key;\n    !!(normalizedKey in normalizedObj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap: IDs returned by the key extraction function must be unique.') : invariant(false) : undefined;\n    normalizedObj[normalizedKey] = item;\n  }\n  return normalizedObj;\n}\n\n/**\n * Utility class for mappings with ordering. This class is to be used in an\n * immutable manner. A `OrderedMap` is very much like the native JavaScript\n * object, where keys map to values via the `get()` function. Also, like the\n * native JavaScript object, there is an ordering associated with the mapping.\n * This class is helpful because it eliminates many of the pitfalls that come\n * with the native JavaScript ordered mappings. Specifically, there are\n * inconsistencies with numeric keys in some JavaScript implementations\n * (enumeration ordering). This class protects against those pitfalls and\n * provides functional utilities for dealing with these `OrderedMap`s.\n *\n * - TODO:\n * - orderedMergeExclusive: Merges mutually exclusive `OrderedMap`s.\n * - mapReverse().\n *\n * @class {OrderedMap}\n * @constructor {OrderedMap}\n * @param {Object} normalizedObj Object that is known to be a defensive copy of\n * caller supplied data. We require a defensive copy to guard against callers\n * mutating.  It is also assumed that the keys of `normalizedObj` have been\n * normalized and do not contain any numeric-appearing strings.\n * @param {number} computedLength The precomputed length of `_normalizedObj`\n * keys.\n * @private\n */\nfunction OrderedMapImpl(normalizedObj, computedLength) {\n  this._normalizedObj = normalizedObj;\n  this._computedPositions = null;\n  this.length = computedLength;\n}\n\n/**\n * Validates a \"public\" key - that is, one that the public facing API supplies.\n * The key is then normalized for internal storage. In order to be considered\n * valid, all keys must be non-empty, defined, non-null strings or numbers.\n *\n * @param {string?} key Validates that the key is suitable for use in a\n * `OrderedMap`.\n * @throws Error if key is not appropriate for use in `OrderedMap`.\n */\nfunction assertValidPublicKey(key) {\n  !(key !== '' && (typeof key === 'string' || typeof key === 'number')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap: Key must be non-empty, non-null string or number.') : invariant(false) : undefined;\n}\n\n/**\n * Validates that arguments to range operations are within the correct limits.\n *\n * @param {number} start Start of range.\n * @param {number} length Length of range.\n * @param {number} actualLen Actual length of range that should not be\n * exceeded.\n * @throws Error if range arguments are out of bounds.\n */\nfunction assertValidRangeIndices(start, length, actualLen) {\n  !(typeof start === 'number' && typeof length === 'number' && length >= 0 && start >= 0 && start + length <= actualLen) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap: `mapRange` and `forEachRange` expect non-negative start and ' + 'length arguments within the bounds of the instance.') : invariant(false) : undefined;\n}\n\n/**\n * Merges two \"normalized\" objects (objects who's key have been normalized) into\n * a `OrderedMap`.\n *\n * @param {Object} a Object of key value pairs.\n * @param {Object} b Object of key value pairs.\n * @return {OrderedMap} new `OrderedMap` that results in merging `a` and `b`.\n */\nfunction _fromNormalizedObjects(a, b) {\n  // Second optional, both must be plain JavaScript objects.\n  !(a && a.constructor === Object && (!b || b.constructor === Object)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap: Corrupted instance of OrderedMap detected.') : invariant(false) : undefined;\n\n  var newSet = {};\n  var length = 0;\n  var key;\n  for (key in a) {\n    if (a.hasOwnProperty(key)) {\n      newSet[key] = a[key];\n      length++;\n    }\n  }\n\n  for (key in b) {\n    if (b.hasOwnProperty(key)) {\n      // Increment length if not already added via first object (a)\n      if (!(key in newSet)) {\n        length++;\n      }\n      newSet[key] = b[key];\n    }\n  }\n  return new OrderedMapImpl(newSet, length);\n}\n\n/**\n * Methods for `OrderedMap` instances.\n *\n * @lends OrderedMap.prototype\n * TODO: Make this data structure lazy, unify with LazyArray.\n * TODO: Unify this with ImmutableObject - it is to be used immutably.\n * TODO: If so, consider providing `fromObject` API.\n * TODO: Create faster implementation of merging/mapping from original Array,\n * without having to first create an object - simply for the sake of merging.\n */\nvar OrderedMapMethods = {\n\n  /**\n   * Returns whether or not a given key is present in the map.\n   *\n   * @param {string} key Valid string key to lookup membership for.\n   * @return {boolean} Whether or not `key` is a member of the map.\n   * @throws Error if provided known invalid key.\n   */\n  has: function (key) {\n    assertValidPublicKey(key);\n    var normalizedKey = PREFIX + key;\n    return normalizedKey in this._normalizedObj;\n  },\n\n  /**\n   * Returns the object for a given key, or `undefined` if not present. To\n   * distinguish an undefined entry vs not being in the set, use `has()`.\n   *\n   * @param {string} key String key to lookup the value for.\n   * @return {Object?} Object at key `key`, or undefined if not in map.\n   * @throws Error if provided known invalid key.\n   */\n  get: function (key) {\n    assertValidPublicKey(key);\n    var normalizedKey = PREFIX + key;\n    return this.has(key) ? this._normalizedObj[normalizedKey] : undefined;\n  },\n\n  /**\n   * Merges, appending new keys to the end of the ordering. Keys in `orderedMap`\n   * that are redundant with `this`, maintain the same ordering index that they\n   * had in `this`.  This is how standard JavaScript object merging would work.\n   * If you wish to prepend a `OrderedMap` to the beginning of another\n   * `OrderedMap` then simply reverse the order of operation. This is the analog\n   * to `merge(x, y)`.\n   *\n   * @param {OrderedMap} orderedMap OrderedMap to merge onto the end.\n   * @return {OrderedMap} New OrderedMap that represents the result of the\n   * merge.\n   */\n  merge: function (orderedMap) {\n    !(orderedMap instanceof OrderedMapImpl) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap.merge(...): Expected an OrderedMap instance.') : invariant(false) : undefined;\n    return _fromNormalizedObjects(this._normalizedObj, orderedMap._normalizedObj);\n  },\n\n  /**\n   * Functional map API. Returns a new `OrderedMap`.\n   *\n   * @param {Function} cb Callback to invoke for each item.\n   * @param {Object?=} context Context to invoke callback from.\n   * @return {OrderedMap} OrderedMap that results from mapping.\n   */\n  map: function (cb, context) {\n    return this.mapRange(cb, 0, this.length, context);\n  },\n\n  /**\n   * The callback `cb` is invoked with the arguments (item, key,\n   * indexInOriginal).\n   *\n   * @param {Function} cb Determines result for each item.\n   * @param {number} start Start index of map range.\n   * @param {end} length End index of map range.\n   * @param {*!?} context Context of callback invocation.\n   * @return {OrderedMap} OrderedMap resulting from mapping the range.\n   */\n  mapRange: function (cb, start, length, context) {\n    var thisSet = this._normalizedObj;\n    var newSet = {};\n    var i = 0;\n    assertValidRangeIndices(start, length, this.length);\n    var end = start + length - 1;\n    for (var key in thisSet) {\n      if (thisSet.hasOwnProperty(key)) {\n        if (i >= start) {\n          if (i > end) {\n            break;\n          }\n          var item = thisSet[key];\n          newSet[key] = cb.call(context, item, key.substr(PREFIX.length), i);\n        }\n        i++;\n      }\n    }\n    return new OrderedMapImpl(newSet, length);\n  },\n\n  /**\n   * Function filter API. Returns new `OrderedMap`.\n   *\n   * @param {Function} cb Callback to invoke for each item.\n   * @param {Object?=} context Context to invoke callback from.\n   * @return {OrderedMap} OrderedMap that results from filtering.\n   */\n  filter: function (cb, context) {\n    return this.filterRange(cb, 0, this.length, context);\n  },\n\n  /**\n   * The callback `cb` is invoked with the arguments (item, key,\n   * indexInOriginal).\n   *\n   * @param {Function} cb Returns true if item should be in result.\n   * @param {number} start Start index of filter range.\n   * @param {number} length End index of map range.\n   * @param {*!?} context Context of callback invocation.\n   * @return {OrderedMap} OrderedMap resulting from filtering the range.\n   */\n  filterRange: function (cb, start, length, context) {\n    var newSet = {};\n    var newSetLength = 0;\n    this.forEachRange(function (item, key, originalIndex) {\n      if (cb.call(context, item, key, originalIndex)) {\n        var normalizedKey = PREFIX + key;\n        newSet[normalizedKey] = item;\n        newSetLength++;\n      }\n    }, start, length);\n    return new OrderedMapImpl(newSet, newSetLength);\n  },\n\n  forEach: function (cb, context) {\n    this.forEachRange(cb, 0, this.length, context);\n  },\n\n  forEachRange: function (cb, start, length, context) {\n    assertValidRangeIndices(start, length, this.length);\n    var thisSet = this._normalizedObj;\n    var i = 0;\n    var end = start + length - 1;\n    for (var key in thisSet) {\n      if (thisSet.hasOwnProperty(key)) {\n        if (i >= start) {\n          if (i > end) {\n            break;\n          }\n          var item = thisSet[key];\n          cb.call(context, item, key.substr(PREFIX.length), i);\n        }\n        i++;\n      }\n    }\n  },\n\n  /**\n   * Even though `mapRange`/`forEachKeyRange` allow zero length mappings, we'll\n   * impose an additional restriction here that the length of mapping be greater\n   * than zero - the only reason is that there are many ways to express length\n   * zero in terms of two keys and that is confusing.\n   */\n  mapKeyRange: function (cb, startKey, endKey, context) {\n    var startIndex = this.indexOfKey(startKey);\n    var endIndex = this.indexOfKey(endKey);\n    !(startIndex !== undefined && endIndex !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mapKeyRange must be given keys that are present.') : invariant(false) : undefined;\n    !(endIndex >= startIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap.mapKeyRange(...): `endKey` must not come before `startIndex`.') : invariant(false) : undefined;\n    return this.mapRange(cb, startIndex, endIndex - startIndex + 1, context);\n  },\n\n  forEachKeyRange: function (cb, startKey, endKey, context) {\n    var startIndex = this.indexOfKey(startKey);\n    var endIndex = this.indexOfKey(endKey);\n    !(startIndex !== undefined && endIndex !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'forEachKeyRange must be given keys that are present.') : invariant(false) : undefined;\n    !(endIndex >= startIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap.forEachKeyRange(...): `endKey` must not come before ' + '`startIndex`.') : invariant(false) : undefined;\n    this.forEachRange(cb, startIndex, endIndex - startIndex + 1, context);\n  },\n\n  /**\n   * @param {number} pos Index to search for key at.\n   * @return {string|undefined} Either the key at index `pos` or undefined if\n   * not in map.\n   */\n  keyAtIndex: function (pos) {\n    var computedPositions = this._getOrComputePositions();\n    var keyAtPos = computedPositions.keyByIndex[pos];\n    return keyAtPos ? keyAtPos.substr(PREFIX.length) : undefined;\n  },\n\n  /**\n   * @param {string} key String key from which to find the next key.\n   * @return {string|undefined} Either the next key, or undefined if there is no\n   * next key.\n   * @throws Error if `key` is not in this `OrderedMap`.\n   */\n  keyAfter: function (key) {\n    return this.nthKeyAfter(key, 1);\n  },\n\n  /**\n   * @param {string} key String key from which to find the preceding key.\n   * @return {string|undefined} Either the preceding key, or undefined if there\n   * is no preceding.key.\n   * @throws Error if `key` is not in this `OrderedMap`.\n   */\n  keyBefore: function (key) {\n    return this.nthKeyBefore(key, 1);\n  },\n\n  /**\n   * @param {string} key String key from which to find a following key.\n   * @param {number} n Distance to scan forward after `key`.\n   * @return {string|undefined} Either the nth key after `key`, or undefined if\n   * there is no next key.\n   * @throws Error if `key` is not in this `OrderedMap`.\n   */\n  nthKeyAfter: function (key, n) {\n    var curIndex = this.indexOfKey(key);\n    !(curIndex !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap.nthKeyAfter: The key `%s` does not exist in this instance.', key) : invariant(false) : undefined;\n    return this.keyAtIndex(curIndex + n);\n  },\n\n  /**\n   * @param {string} key String key from which to find a preceding key.\n   * @param {number} n Distance to scan backwards before `key`.\n   * @return {string|undefined} Either the nth key before `key`, or undefined if\n   * there is no previous key.\n   * @throws Error if `key` is not in this `OrderedMap`.\n   */\n  nthKeyBefore: function (key, n) {\n    return this.nthKeyAfter(key, -n);\n  },\n\n  /**\n   * @param {string} key Key to find the index of.\n   * @return {number|undefined} Index of the provided key, or `undefined` if the\n   * key is not found.\n   */\n  indexOfKey: function (key) {\n    assertValidPublicKey(key);\n    var normalizedKey = PREFIX + key;\n    var computedPositions = this._getOrComputePositions();\n    var computedPosition = computedPositions.indexByKey[normalizedKey];\n    // Just writing it this way to make it clear this is intentional.\n    return computedPosition === undefined ? undefined : computedPosition;\n  },\n\n  /**\n   * @return {Array} An ordered array of this object's values.\n   */\n  toArray: function () {\n    var result = [];\n    var thisSet = this._normalizedObj;\n    for (var key in thisSet) {\n      if (thisSet.hasOwnProperty(key)) {\n        result.push(thisSet[key]);\n      }\n    }\n    return result;\n  },\n\n  /**\n   * Finds the key at a given position, or indicates via `undefined` that that\n   * position does not exist in the `OrderedMap`. It is appropriate to return\n   * undefined, indicating that the key doesn't exist in the `OrderedMap`\n   * because `undefined` is not ever a valid `OrderedMap` key.\n   *\n   * @private\n   * @return {string?} Name of the item at position `pos`, or `undefined` if\n   * there is no item at that position.\n   */\n  _getOrComputePositions: function () {\n    // TODO: Entertain computing this at construction time in some less\n    // performance critical paths.\n    var computedPositions = this._computedPositions;\n    if (!computedPositions) {\n      this._computePositions();\n    }\n    return this._computedPositions;\n  },\n\n  /**\n   * Precomputes the index/key mapping for future lookup. Since `OrderedMap`s\n   * are immutable, there is only ever a need to perform this once.\n   * @private\n   */\n  _computePositions: function () {\n    this._computedPositions = {\n      keyByIndex: {},\n      indexByKey: {}\n    };\n    var keyByIndex = this._computedPositions.keyByIndex;\n    var indexByKey = this._computedPositions.indexByKey;\n    var index = 0;\n    var thisSet = this._normalizedObj;\n    for (var key in thisSet) {\n      if (thisSet.hasOwnProperty(key)) {\n        keyByIndex[index] = key;\n        indexByKey[key] = index;\n        index++;\n      }\n    }\n  }\n};\n\nassign(OrderedMapImpl.prototype, OrderedMapMethods);\n\nvar OrderedMap = {\n  from: function (orderedMap) {\n    !(orderedMap instanceof OrderedMapImpl) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap.from(...): Expected an OrderedMap instance.') : invariant(false) : undefined;\n    return _fromNormalizedObjects(orderedMap._normalizedObj, null);\n  },\n\n  fromArray: function (arr, keyExtractor) {\n    !Array.isArray(arr) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap.fromArray(...): First argument must be an array.') : invariant(false) : undefined;\n    !(typeof keyExtractor === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap.fromArray(...): Second argument must be a function used ' + 'to determine the unique key for each entry.') : invariant(false) : undefined;\n    return new OrderedMapImpl(extractObjectFromArray(arr, keyExtractor), arr.length);\n  }\n};\n\nmodule.exports = OrderedMap;\n}).call(this,require('_process'))\n\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/PooledClass\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule PooledClass\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function (copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function (a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function (a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function (a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar fiveArgumentPooler = function (a1, a2, a3, a4, a5) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4, a5);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4, a5);\n  }\n};\n\nvar standardReleaser = function (instance) {\n  var Klass = this;\n  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances (optional).\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function (CopyConstructor, pooler) {\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fourArgumentPooler: fourArgumentPooler,\n  fiveArgumentPooler: fiveArgumentPooler\n};\n\nmodule.exports = PooledClass;\n}).call(this,require('_process'))\n\n},{\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/ReactBrowserComponentMixin\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserComponentMixin\n */\n\n'use strict';\n\nvar ReactInstanceMap = require('./ReactInstanceMap');\n\nvar findDOMNode = require('./findDOMNode');\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnKey = '_getDOMNodeDidWarn';\n\nvar ReactBrowserComponentMixin = {\n  /**\n   * Returns the DOM node rendered by this component.\n   *\n   * @return {DOMElement} The root node of this component.\n   * @final\n   * @protected\n   */\n  getDOMNode: function () {\n    process.env.NODE_ENV !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;\n    this.constructor[didWarnKey] = true;\n    return findDOMNode(this);\n  }\n};\n\nmodule.exports = ReactBrowserComponentMixin;\n}).call(this,require('_process'))\n\n},{\"./ReactInstanceMap\":\"react/lib/ReactInstanceMap\",\"./findDOMNode\":\"react/lib/findDOMNode\",\"_process\":1,\"fbjs/lib/warning\":41}],\"react/lib/ReactBrowserEventEmitter\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactBrowserEventEmitter\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPluginRegistry = require('./EventPluginRegistry');\nvar ReactEventEmitterMixin = require('./ReactEventEmitterMixin');\nvar ReactPerf = require('./ReactPerf');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar assign = require('./Object.assign');\nvar isEventSupported = require('./isEventSupported');\n\n/**\n * Summary of `ReactBrowserEventEmitter` event handling:\n *\n *  - Top-level delegation is used to trap most native browser events. This\n *    may only occur in the main thread and is the responsibility of\n *    ReactEventListener, which is injected and can therefore support pluggable\n *    event sources. This is the only work that occurs in the main thread.\n *\n *  - We normalize and de-duplicate events to account for browser quirks. This\n *    may be done in the worker thread.\n *\n *  - Forward these native events (with the associated top-level type used to\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\n *    to extract any synthetic events.\n *\n *  - The `EventPluginHub` will then process each event by annotating them with\n *    \"dispatches\", a sequence of listeners and IDs that care about that event.\n *\n *  - The `EventPluginHub` then dispatches the events.\n *\n * Overview of React and the event system:\n *\n * +------------+    .\n * |    DOM     |    .\n * +------------+    .\n *       |           .\n *       v           .\n * +------------+    .\n * | ReactEvent |    .\n * |  Listener  |    .\n * +------------+    .                         +-----------+\n *       |           .               +--------+|SimpleEvent|\n *       |           .               |         |Plugin     |\n * +-----|------+    .               v         +-----------+\n * |     |      |    .    +--------------+                    +------------+\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\n * |            |    .    |              |     +-----------+  | Propagators|\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\n * |            |    .    |              |     +-----------+  |  utilities |\n * |     +-----------.--->|              |                    +------------+\n * |     |      |    .    +--------------+\n * +-----|------+    .                ^        +-----------+\n *       |           .                |        |Enter/Leave|\n *       +           .                +-------+|Plugin     |\n * +-------------+   .                         +-----------+\n * | application |   .\n * |-------------|   .\n * |             |   .\n * |             |   .\n * +-------------+   .\n *                   .\n *    React Core     .  General Purpose Event Plugin System\n */\n\nvar alreadyListeningTo = {};\nvar isMonitoringScrollValue = false;\nvar reactTopListenersCounter = 0;\n\n// For events like 'submit' which don't consistently bubble (which we trap at a\n// lower node than `document`), binding at `document` would cause duplicate\n// events so we don't include them here\nvar topEventMapping = {\n  topAbort: 'abort',\n  topBlur: 'blur',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topChange: 'change',\n  topClick: 'click',\n  topCompositionEnd: 'compositionend',\n  topCompositionStart: 'compositionstart',\n  topCompositionUpdate: 'compositionupdate',\n  topContextMenu: 'contextmenu',\n  topCopy: 'copy',\n  topCut: 'cut',\n  topDoubleClick: 'dblclick',\n  topDrag: 'drag',\n  topDragEnd: 'dragend',\n  topDragEnter: 'dragenter',\n  topDragExit: 'dragexit',\n  topDragLeave: 'dragleave',\n  topDragOver: 'dragover',\n  topDragStart: 'dragstart',\n  topDrop: 'drop',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topFocus: 'focus',\n  topInput: 'input',\n  topKeyDown: 'keydown',\n  topKeyPress: 'keypress',\n  topKeyUp: 'keyup',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topMouseDown: 'mousedown',\n  topMouseMove: 'mousemove',\n  topMouseOut: 'mouseout',\n  topMouseOver: 'mouseover',\n  topMouseUp: 'mouseup',\n  topPaste: 'paste',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topScroll: 'scroll',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topSelectionChange: 'selectionchange',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTextInput: 'textInput',\n  topTimeUpdate: 'timeupdate',\n  topTouchCancel: 'touchcancel',\n  topTouchEnd: 'touchend',\n  topTouchMove: 'touchmove',\n  topTouchStart: 'touchstart',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting',\n  topWheel: 'wheel'\n};\n\n/**\n * To ensure no conflicts with other potential React instances on the page\n */\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\n\nfunction getListeningForDocument(mountAt) {\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\n  // directly.\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\n  }\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\n}\n\n/**\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\n * example:\n *\n *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);\n *\n * This would allocate a \"registration\" of `('onClick', myFunction)` on 'myID'.\n *\n * @internal\n */\nvar ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {\n\n  /**\n   * Injectable event backend\n   */\n  ReactEventListener: null,\n\n  injection: {\n    /**\n     * @param {object} ReactEventListener\n     */\n    injectReactEventListener: function (ReactEventListener) {\n      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\n    }\n  },\n\n  /**\n   * Sets whether or not any created callbacks should be enabled.\n   *\n   * @param {boolean} enabled True if callbacks should be enabled.\n   */\n  setEnabled: function (enabled) {\n    if (ReactBrowserEventEmitter.ReactEventListener) {\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\n    }\n  },\n\n  /**\n   * @return {boolean} True if callbacks are enabled.\n   */\n  isEnabled: function () {\n    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\n  },\n\n  /**\n   * We listen for bubbled touch events on the document object.\n   *\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\n   * mounting `onmousemove` events at some node that was not the document\n   * element. The symptoms were that if your mouse is not moving over something\n   * contained within that mount point (for example on the background) the\n   * top-level listeners for `onmousemove` won't be called. However, if you\n   * register the `mousemove` on the document object, then it will of course\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\n   * top-level listeners to the document object only, at least for these\n   * movement types of events and possibly all events.\n   *\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n   *\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\n   * they bubble to document.\n   *\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\n   * @param {object} contentDocumentHandle Document which owns the container\n   */\n  listenTo: function (registrationName, contentDocumentHandle) {\n    var mountAt = contentDocumentHandle;\n    var isListening = getListeningForDocument(mountAt);\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\n\n    var topLevelTypes = EventConstants.topLevelTypes;\n    for (var i = 0; i < dependencies.length; i++) {\n      var dependency = dependencies[i];\n      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\n        if (dependency === topLevelTypes.topWheel) {\n          if (isEventSupported('wheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);\n          } else if (isEventSupported('mousewheel')) {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);\n          } else {\n            // Firefox needs to capture a different mouse scroll event.\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);\n          }\n        } else if (dependency === topLevelTypes.topScroll) {\n\n          if (isEventSupported('scroll', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);\n          } else {\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\n          }\n        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {\n\n          if (isEventSupported('focus', true)) {\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);\n          } else if (isEventSupported('focusin')) {\n            // IE has `focusin` and `focusout` events which bubble.\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);\n          }\n\n          // to make sure blur and focus event listeners are only attached once\n          isListening[topLevelTypes.topBlur] = true;\n          isListening[topLevelTypes.topFocus] = true;\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\n        }\n\n        isListening[dependency] = true;\n      }\n    }\n  },\n\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\n  },\n\n  /**\n   * Listens to window scroll and resize events. We cache scroll values so that\n   * application code can access them without triggering reflows.\n   *\n   * NOTE: Scroll events do not bubble.\n   *\n   * @see http://www.quirksmode.org/dom/events/scroll.html\n   */\n  ensureScrollValueMonitoring: function () {\n    if (!isMonitoringScrollValue) {\n      var refresh = ViewportMetrics.refreshScrollValues;\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\n      isMonitoringScrollValue = true;\n    }\n  },\n\n  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,\n\n  registrationNameModules: EventPluginHub.registrationNameModules,\n\n  putListener: EventPluginHub.putListener,\n\n  getListener: EventPluginHub.getListener,\n\n  deleteListener: EventPluginHub.deleteListener,\n\n  deleteAllListeners: EventPluginHub.deleteAllListeners\n\n});\n\nReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {\n  putListener: 'putListener',\n  deleteListener: 'deleteListener'\n});\n\nmodule.exports = ReactBrowserEventEmitter;\n},{\"./EventConstants\":\"react/lib/EventConstants\",\"./EventPluginHub\":\"react/lib/EventPluginHub\",\"./EventPluginRegistry\":\"react/lib/EventPluginRegistry\",\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactEventEmitterMixin\":\"react/lib/ReactEventEmitterMixin\",\"./ReactPerf\":\"react/lib/ReactPerf\",\"./ViewportMetrics\":\"react/lib/ViewportMetrics\",\"./isEventSupported\":\"react/lib/isEventSupported\"}],\"react/lib/ReactCSSTransitionGroupChild\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * @providesModule ReactCSSTransitionGroupChild\n */\n\n'use strict';\n\nvar React = require('./React');\nvar ReactDOM = require('./ReactDOM');\n\nvar CSSCore = require('fbjs/lib/CSSCore');\nvar ReactTransitionEvents = require('./ReactTransitionEvents');\n\nvar onlyChild = require('./onlyChild');\n\n// We don't remove the element from the DOM until we receive an animationend or\n// transitionend event. If the user screws up and forgets to add an animation\n// their node will be stuck in the DOM forever, so we detect if an animation\n// does not start and if it doesn't, we just call the end listener immediately.\nvar TICK = 17;\n\nvar ReactCSSTransitionGroupChild = React.createClass({\n  displayName: 'ReactCSSTransitionGroupChild',\n\n  propTypes: {\n    name: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.shape({\n      enter: React.PropTypes.string,\n      leave: React.PropTypes.string,\n      active: React.PropTypes.string\n    }), React.PropTypes.shape({\n      enter: React.PropTypes.string,\n      enterActive: React.PropTypes.string,\n      leave: React.PropTypes.string,\n      leaveActive: React.PropTypes.string,\n      appear: React.PropTypes.string,\n      appearActive: React.PropTypes.string\n    })]).isRequired,\n\n    // Once we require timeouts to be specified, we can remove the\n    // boolean flags (appear etc.) and just accept a number\n    // or a bool for the timeout flags (appearTimeout etc.)\n    appear: React.PropTypes.bool,\n    enter: React.PropTypes.bool,\n    leave: React.PropTypes.bool,\n    appearTimeout: React.PropTypes.number,\n    enterTimeout: React.PropTypes.number,\n    leaveTimeout: React.PropTypes.number\n  },\n\n  transition: function (animationType, finishCallback, userSpecifiedDelay) {\n    var node = ReactDOM.findDOMNode(this);\n\n    if (!node) {\n      if (finishCallback) {\n        finishCallback();\n      }\n      return;\n    }\n\n    var className = this.props.name[animationType] || this.props.name + '-' + animationType;\n    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';\n    var timeout = null;\n\n    var endListener = function (e) {\n      if (e && e.target !== node) {\n        return;\n      }\n\n      clearTimeout(timeout);\n\n      CSSCore.removeClass(node, className);\n      CSSCore.removeClass(node, activeClassName);\n\n      ReactTransitionEvents.removeEndEventListener(node, endListener);\n\n      // Usually this optional callback is used for informing an owner of\n      // a leave animation and telling it to remove the child.\n      if (finishCallback) {\n        finishCallback();\n      }\n    };\n\n    CSSCore.addClass(node, className);\n\n    // Need to do this to actually trigger a transition.\n    this.queueClass(activeClassName);\n\n    // If the user specified a timeout delay.\n    if (userSpecifiedDelay) {\n      // Clean-up the animation after the specified delay\n      timeout = setTimeout(endListener, userSpecifiedDelay);\n      this.transitionTimeouts.push(timeout);\n    } else {\n      // DEPRECATED: this listener will be removed in a future version of react\n      ReactTransitionEvents.addEndEventListener(node, endListener);\n    }\n  },\n\n  queueClass: function (className) {\n    this.classNameQueue.push(className);\n\n    if (!this.timeout) {\n      this.timeout = setTimeout(this.flushClassNameQueue, TICK);\n    }\n  },\n\n  flushClassNameQueue: function () {\n    if (this.isMounted()) {\n      this.classNameQueue.forEach(CSSCore.addClass.bind(CSSCore, ReactDOM.findDOMNode(this)));\n    }\n    this.classNameQueue.length = 0;\n    this.timeout = null;\n  },\n\n  componentWillMount: function () {\n    this.classNameQueue = [];\n    this.transitionTimeouts = [];\n  },\n\n  componentWillUnmount: function () {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n    this.transitionTimeouts.forEach(function (timeout) {\n      clearTimeout(timeout);\n    });\n  },\n\n  componentWillAppear: function (done) {\n    if (this.props.appear) {\n      this.transition('appear', done, this.props.appearTimeout);\n    } else {\n      done();\n    }\n  },\n\n  componentWillEnter: function (done) {\n    if (this.props.enter) {\n      this.transition('enter', done, this.props.enterTimeout);\n    } else {\n      done();\n    }\n  },\n\n  componentWillLeave: function (done) {\n    if (this.props.leave) {\n      this.transition('leave', done, this.props.leaveTimeout);\n    } else {\n      done();\n    }\n  },\n\n  render: function () {\n    return onlyChild(this.props.children);\n  }\n});\n\nmodule.exports = ReactCSSTransitionGroupChild;\n},{\"./React\":\"react/lib/React\",\"./ReactDOM\":\"react/lib/ReactDOM\",\"./ReactTransitionEvents\":\"react/lib/ReactTransitionEvents\",\"./onlyChild\":\"react/lib/onlyChild\",\"fbjs/lib/CSSCore\":12}],\"react/lib/ReactCSSTransitionGroup\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks\n * @providesModule ReactCSSTransitionGroup\n */\n\n'use strict';\n\nvar React = require('./React');\n\nvar assign = require('./Object.assign');\n\nvar ReactTransitionGroup = require('./ReactTransitionGroup');\nvar ReactCSSTransitionGroupChild = require('./ReactCSSTransitionGroupChild');\n\nfunction createTransitionTimeoutPropValidator(transitionType) {\n  var timeoutPropName = 'transition' + transitionType + 'Timeout';\n  var enabledPropName = 'transition' + transitionType;\n\n  return function (props) {\n    // If the transition is enabled\n    if (props[enabledPropName]) {\n      // If no timeout duration is provided\n      if (props[timeoutPropName] == null) {\n        return new Error(timeoutPropName + ' wasn\\'t supplied to ReactCSSTransitionGroup: ' + 'this can cause unreliable animations and won\\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');\n\n        // If the duration isn't a number\n      } else if (typeof props[timeoutPropName] !== 'number') {\n          return new Error(timeoutPropName + ' must be a number (in milliseconds)');\n        }\n    }\n  };\n}\n\nvar ReactCSSTransitionGroup = React.createClass({\n  displayName: 'ReactCSSTransitionGroup',\n\n  propTypes: {\n    transitionName: ReactCSSTransitionGroupChild.propTypes.name,\n\n    transitionAppear: React.PropTypes.bool,\n    transitionEnter: React.PropTypes.bool,\n    transitionLeave: React.PropTypes.bool,\n    transitionAppearTimeout: createTransitionTimeoutPropValidator('Appear'),\n    transitionEnterTimeout: createTransitionTimeoutPropValidator('Enter'),\n    transitionLeaveTimeout: createTransitionTimeoutPropValidator('Leave')\n  },\n\n  getDefaultProps: function () {\n    return {\n      transitionAppear: false,\n      transitionEnter: true,\n      transitionLeave: true\n    };\n  },\n\n  _wrapChild: function (child) {\n    // We need to provide this childFactory so that\n    // ReactCSSTransitionGroupChild can receive updates to name, enter, and\n    // leave while it is leaving.\n    return React.createElement(ReactCSSTransitionGroupChild, {\n      name: this.props.transitionName,\n      appear: this.props.transitionAppear,\n      enter: this.props.transitionEnter,\n      leave: this.props.transitionLeave,\n      appearTimeout: this.props.transitionAppearTimeout,\n      enterTimeout: this.props.transitionEnterTimeout,\n      leaveTimeout: this.props.transitionLeaveTimeout\n    }, child);\n  },\n\n  render: function () {\n    return React.createElement(ReactTransitionGroup, assign({}, this.props, { childFactory: this._wrapChild }));\n  }\n});\n\nmodule.exports = ReactCSSTransitionGroup;\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./React\":\"react/lib/React\",\"./ReactCSSTransitionGroupChild\":\"react/lib/ReactCSSTransitionGroupChild\",\"./ReactTransitionGroup\":\"react/lib/ReactTransitionGroup\"}],\"react/lib/ReactChildReconciler\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildReconciler\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactReconciler = require('./ReactReconciler');\n\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nfunction instantiateChild(childInstances, child, name) {\n  // We found a component instance.\n  var keyUnique = childInstances[name] === undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;\n  }\n  if (child != null && keyUnique) {\n    childInstances[name] = instantiateReactComponent(child, null);\n  }\n}\n\n/**\n * ReactChildReconciler provides helpers for initializing or updating a set of\n * children. Its output is suitable for passing it onto ReactMultiChild which\n * does diffed reordering and insertion.\n */\nvar ReactChildReconciler = {\n  /**\n   * Generates a \"mount image\" for each of the supplied children. In the case\n   * of `ReactDOMComponent`, a mount image is a string of markup.\n   *\n   * @param {?object} nestedChildNodes Nested child maps.\n   * @return {?object} A set of child instances.\n   * @internal\n   */\n  instantiateChildren: function (nestedChildNodes, transaction, context) {\n    if (nestedChildNodes == null) {\n      return null;\n    }\n    var childInstances = {};\n    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\n    return childInstances;\n  },\n\n  /**\n   * Updates the rendered children and returns a new set of children.\n   *\n   * @param {?object} prevChildren Previously initialized set of children.\n   * @param {?object} nextChildren Flat child element maps.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @return {?object} A new set of child instances.\n   * @internal\n   */\n  updateChildren: function (prevChildren, nextChildren, transaction, context) {\n    // We currently don't have a way to track moves here but if we use iterators\n    // instead of for..in we can zip the iterators and check if an item has\n    // moved.\n    // TODO: If nothing has changed, return the prevChildren object so that we\n    // can quickly bailout if nothing has changed.\n    if (!nextChildren && !prevChildren) {\n      return null;\n    }\n    var name;\n    for (name in nextChildren) {\n      if (!nextChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      var prevChild = prevChildren && prevChildren[name];\n      var prevElement = prevChild && prevChild._currentElement;\n      var nextElement = nextChildren[name];\n      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\n        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\n        nextChildren[name] = prevChild;\n      } else {\n        if (prevChild) {\n          ReactReconciler.unmountComponent(prevChild, name);\n        }\n        // The child must be instantiated before it's mounted.\n        var nextChildInstance = instantiateReactComponent(nextElement, null);\n        nextChildren[name] = nextChildInstance;\n      }\n    }\n    // Unmount children that are no longer present.\n    for (name in prevChildren) {\n      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n        ReactReconciler.unmountComponent(prevChildren[name]);\n      }\n    }\n    return nextChildren;\n  },\n\n  /**\n   * Unmounts all rendered children. This should be used to clean up children\n   * when this component is unmounted.\n   *\n   * @param {?object} renderedChildren Previously initialized set of children.\n   * @internal\n   */\n  unmountChildren: function (renderedChildren) {\n    for (var name in renderedChildren) {\n      if (renderedChildren.hasOwnProperty(name)) {\n        var renderedChild = renderedChildren[name];\n        ReactReconciler.unmountComponent(renderedChild);\n      }\n    }\n  }\n\n};\n\nmodule.exports = ReactChildReconciler;\n}).call(this,require('_process'))\n\n},{\"./ReactReconciler\":\"react/lib/ReactReconciler\",\"./instantiateReactComponent\":\"react/lib/instantiateReactComponent\",\"./shouldUpdateReactComponent\":\"react/lib/shouldUpdateReactComponent\",\"./traverseAllChildren\":\"react/lib/traverseAllChildren\",\"_process\":1,\"fbjs/lib/warning\":41}],\"react/lib/ReactChildren\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactChildren\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\nvar ReactElement = require('./ReactElement');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar traverseAllChildren = require('./traverseAllChildren');\n\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\nvar fourArgumentPooler = PooledClass.fourArgumentPooler;\n\nvar userProvidedKeyEscapeRegex = /\\/(?!\\/)/g;\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '//');\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * traversal. Allows avoiding binding callbacks.\n *\n * @constructor ForEachBookKeeping\n * @param {!function} forEachFunction Function to perform traversal with.\n * @param {?*} forEachContext Context to perform context with.\n */\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\n  this.func = forEachFunction;\n  this.context = forEachContext;\n  this.count = 0;\n}\nForEachBookKeeping.prototype.destructor = function () {\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\n\nfunction forEachSingleChild(bookKeeping, child, name) {\n  var func = bookKeeping.func;\n  var context = bookKeeping.context;\n\n  func.call(context, child, bookKeeping.count++);\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  if (children == null) {\n    return children;\n  }\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\n  ForEachBookKeeping.release(traverseContext);\n}\n\n/**\n * PooledClass representing the bookkeeping associated with performing a child\n * mapping. Allows avoiding binding callbacks.\n *\n * @constructor MapBookKeeping\n * @param {!*} mapResult Object containing the ordered map of results.\n * @param {!function} mapFunction Function to perform mapping with.\n * @param {?*} mapContext Context to perform mapping with.\n */\nfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\n  this.result = mapResult;\n  this.keyPrefix = keyPrefix;\n  this.func = mapFunction;\n  this.context = mapContext;\n  this.count = 0;\n}\nMapBookKeeping.prototype.destructor = function () {\n  this.result = null;\n  this.keyPrefix = null;\n  this.func = null;\n  this.context = null;\n  this.count = 0;\n};\nPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\n\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\n  var result = bookKeeping.result;\n  var keyPrefix = bookKeeping.keyPrefix;\n  var func = bookKeeping.func;\n  var context = bookKeeping.context;\n\n  var mappedChild = func.call(context, child, bookKeeping.count++);\n  if (Array.isArray(mappedChild)) {\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\n  } else if (mappedChild != null) {\n    if (ReactElement.isValidElement(mappedChild)) {\n      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\n      // Keep both the (mapped) and old keys if they differ, just as\n      // traverseAllChildren used to do for objects as children\n      keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);\n    }\n    result.push(mappedChild);\n  }\n}\n\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\n  var escapedPrefix = '';\n  if (prefix != null) {\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\n  }\n  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\n  MapBookKeeping.release(traverseContext);\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * The provided mapFunction(child, key, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\n  return result;\n}\n\nfunction forEachSingleChildDummy(traverseContext, child, name) {\n  return null;\n}\n\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\nfunction countChildren(children, context) {\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\n}\n\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n */\nfunction toArray(children) {\n  var result = [];\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\n  return result;\n}\n\nvar ReactChildren = {\n  forEach: forEachChildren,\n  map: mapChildren,\n  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\n  count: countChildren,\n  toArray: toArray\n};\n\nmodule.exports = ReactChildren;\n},{\"./PooledClass\":\"react/lib/PooledClass\",\"./ReactElement\":\"react/lib/ReactElement\",\"./traverseAllChildren\":\"react/lib/traverseAllChildren\",\"fbjs/lib/emptyFunction\":21}],\"react/lib/ReactClass\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactClass\n */\n\n'use strict';\n\nvar ReactComponent = require('./ReactComponent');\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar assign = require('./Object.assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar keyMirror = require('fbjs/lib/keyMirror');\nvar keyOf = require('fbjs/lib/keyOf');\nvar warning = require('fbjs/lib/warning');\n\nvar MIXINS_KEY = keyOf({ mixins: null });\n\n/**\n * Policies that describe methods in `ReactClassInterface`.\n */\nvar SpecPolicy = keyMirror({\n  /**\n   * These methods may be defined only once by the class specification or mixin.\n   */\n  DEFINE_ONCE: null,\n  /**\n   * These methods may be defined by both the class specification and mixins.\n   * Subsequent definitions will be chained. These methods must return void.\n   */\n  DEFINE_MANY: null,\n  /**\n   * These methods are overriding the base class.\n   */\n  OVERRIDE_BASE: null,\n  /**\n   * These methods are similar to DEFINE_MANY, except we assume they return\n   * objects. We try to merge the keys of the return values of all the mixed in\n   * functions. If there is a key conflict we throw.\n   */\n  DEFINE_MANY_MERGED: null\n});\n\nvar injectedMixins = [];\n\nvar warnedSetProps = false;\nfunction warnSetProps() {\n  if (!warnedSetProps) {\n    warnedSetProps = true;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;\n  }\n}\n\n/**\n * Composite components are higher-level components that compose other composite\n * or native components.\n *\n * To create a new type of `ReactClass`, pass a specification of\n * your new class to `React.createClass`. The only requirement of your class\n * specification is that you implement a `render` method.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return <div>Hello World</div>;\n *     }\n *   });\n *\n * The class specification supports a specific protocol of methods that have\n * special meaning (e.g. `render`). See `ReactClassInterface` for\n * more the comprehensive protocol. Any other properties and methods in the\n * class specification will be available on the prototype.\n *\n * @interface ReactClassInterface\n * @internal\n */\nvar ReactClassInterface = {\n\n  /**\n   * An array of Mixin objects to include when defining your component.\n   *\n   * @type {array}\n   * @optional\n   */\n  mixins: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * An object containing properties and methods that should be defined on\n   * the component's constructor instead of its prototype (static methods).\n   *\n   * @type {object}\n   * @optional\n   */\n  statics: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of prop types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  propTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types for this component.\n   *\n   * @type {object}\n   * @optional\n   */\n  contextTypes: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Definition of context types this component sets for its children.\n   *\n   * @type {object}\n   * @optional\n   */\n  childContextTypes: SpecPolicy.DEFINE_MANY,\n\n  // ==== Definition methods ====\n\n  /**\n   * Invoked when the component is mounted. Values in the mapping will be set on\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\n   *\n   * This method is invoked before `getInitialState` and therefore cannot rely\n   * on `this.state` or use `this.setState`.\n   *\n   * @return {object}\n   * @optional\n   */\n  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Invoked once before the component is mounted. The return value will be used\n   * as the initial value of `this.state`.\n   *\n   *   getInitialState: function() {\n   *     return {\n   *       isOn: false,\n   *       fooBaz: new BazFoo()\n   *     }\n   *   }\n   *\n   * @return {object}\n   * @optional\n   */\n  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * @return {object}\n   * @optional\n   */\n  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,\n\n  /**\n   * Uses props from `this.props` and state from `this.state` to render the\n   * structure of the component.\n   *\n   * No guarantees are made about when or how often this method is invoked, so\n   * it must not have side effects.\n   *\n   *   render: function() {\n   *     var name = this.props.name;\n   *     return <div>Hello, {name}!</div>;\n   *   }\n   *\n   * @return {ReactComponent}\n   * @nosideeffects\n   * @required\n   */\n  render: SpecPolicy.DEFINE_ONCE,\n\n  // ==== Delegate methods ====\n\n  /**\n   * Invoked when the component is initially created and about to be mounted.\n   * This may have side effects, but any external subscriptions or data created\n   * by this method must be cleaned up in `componentWillUnmount`.\n   *\n   * @optional\n   */\n  componentWillMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component has been mounted and has a DOM representation.\n   * However, there is no guarantee that the DOM node is in the document.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been mounted (initialized and rendered) for the first time.\n   *\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidMount: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked before the component receives new props.\n   *\n   * Use this as an opportunity to react to a prop transition by updating the\n   * state using `this.setState`. Current props are accessed via `this.props`.\n   *\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\n   *     this.setState({\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n   *     });\n   *   }\n   *\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n   * transition may cause a state change, but the opposite is not true. If you\n   * need it, you are probably looking for `componentWillUpdate`.\n   *\n   * @param {object} nextProps\n   * @optional\n   */\n  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked while deciding if the component should be updated as a result of\n   * receiving new props, state and/or context.\n   *\n   * Use this as an opportunity to `return false` when you're certain that the\n   * transition to the new props/state/context will not require a component\n   * update.\n   *\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n   *     return !equal(nextProps, this.props) ||\n   *       !equal(nextState, this.state) ||\n   *       !equal(nextContext, this.context);\n   *   }\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @return {boolean} True if the component should update.\n   * @optional\n   */\n  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,\n\n  /**\n   * Invoked when the component is about to update due to a transition from\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n   * and `nextContext`.\n   *\n   * Use this as an opportunity to perform preparation before an update occurs.\n   *\n   * NOTE: You **cannot** use `this.setState()` in this method.\n   *\n   * @param {object} nextProps\n   * @param {?object} nextState\n   * @param {?object} nextContext\n   * @param {ReactReconcileTransaction} transaction\n   * @optional\n   */\n  componentWillUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component's DOM representation has been updated.\n   *\n   * Use this as an opportunity to operate on the DOM when the component has\n   * been updated.\n   *\n   * @param {object} prevProps\n   * @param {?object} prevState\n   * @param {?object} prevContext\n   * @param {DOMElement} rootNode DOM element representing the component.\n   * @optional\n   */\n  componentDidUpdate: SpecPolicy.DEFINE_MANY,\n\n  /**\n   * Invoked when the component is about to be removed from its parent and have\n   * its DOM representation destroyed.\n   *\n   * Use this as an opportunity to deallocate any external resources.\n   *\n   * NOTE: There is no `componentDidUnmount` since your component will have been\n   * destroyed by that point.\n   *\n   * @optional\n   */\n  componentWillUnmount: SpecPolicy.DEFINE_MANY,\n\n  // ==== Advanced methods ====\n\n  /**\n   * Updates the component's currently mounted DOM representation.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   * @overridable\n   */\n  updateComponent: SpecPolicy.OVERRIDE_BASE\n\n};\n\n/**\n * Mapping from class specification keys to special processing functions.\n *\n * Although these are declared like instance properties in the specification\n * when defining classes using `React.createClass`, they are actually static\n * and are accessible on the constructor instead of the prototype. Despite\n * being static, they must be defined outside of the \"statics\" key under\n * which all other static methods are defined.\n */\nvar RESERVED_SPEC_KEYS = {\n  displayName: function (Constructor, displayName) {\n    Constructor.displayName = displayName;\n  },\n  mixins: function (Constructor, mixins) {\n    if (mixins) {\n      for (var i = 0; i < mixins.length; i++) {\n        mixSpecIntoComponent(Constructor, mixins[i]);\n      }\n    }\n  },\n  childContextTypes: function (Constructor, childContextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);\n    }\n    Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);\n  },\n  contextTypes: function (Constructor, contextTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);\n    }\n    Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);\n  },\n  /**\n   * Special case getDefaultProps which should move into statics but requires\n   * automatic merging.\n   */\n  getDefaultProps: function (Constructor, getDefaultProps) {\n    if (Constructor.getDefaultProps) {\n      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\n    } else {\n      Constructor.getDefaultProps = getDefaultProps;\n    }\n  },\n  propTypes: function (Constructor, propTypes) {\n    if (process.env.NODE_ENV !== 'production') {\n      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);\n    }\n    Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);\n  },\n  statics: function (Constructor, statics) {\n    mixStaticSpecIntoComponent(Constructor, statics);\n  },\n  autobind: function () {} };\n\n// noop\nfunction validateTypeDef(Constructor, typeDef, location) {\n  for (var propName in typeDef) {\n    if (typeDef.hasOwnProperty(propName)) {\n      // use a warning instead of an invariant so components\n      // don't show up in prod but not in __DEV__\n      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;\n    }\n  }\n}\n\nfunction validateMethodOverride(proto, name) {\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\n\n  // Disallow overriding of base class methods unless explicitly allowed.\n  if (ReactClassMixin.hasOwnProperty(name)) {\n    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;\n  }\n\n  // Disallow defining methods more than once unless explicitly allowed.\n  if (proto.hasOwnProperty(name)) {\n    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;\n  }\n}\n\n/**\n * Mixin helper which handles policy validation and reserved\n * specification keys when building React classses.\n */\nfunction mixSpecIntoComponent(Constructor, spec) {\n  if (!spec) {\n    return;\n  }\n\n  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;\n  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;\n\n  var proto = Constructor.prototype;\n\n  // By handling mixins before any other properties, we ensure the same\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\n  // mixins are listed before or after these methods in the spec.\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n  }\n\n  for (var name in spec) {\n    if (!spec.hasOwnProperty(name)) {\n      continue;\n    }\n\n    if (name === MIXINS_KEY) {\n      // We have already handled mixins in a special case above.\n      continue;\n    }\n\n    var property = spec[name];\n    validateMethodOverride(proto, name);\n\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n      RESERVED_SPEC_KEYS[name](Constructor, property);\n    } else {\n      // Setup methods on prototype:\n      // The following member methods should not be automatically bound:\n      // 1. Expected ReactClass methods (in the \"interface\").\n      // 2. Overridden methods (that were mixed in).\n      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      var isFunction = typeof property === 'function';\n      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n      if (shouldAutoBind) {\n        if (!proto.__reactAutoBindMap) {\n          proto.__reactAutoBindMap = {};\n        }\n        proto.__reactAutoBindMap[name] = property;\n        proto[name] = property;\n      } else {\n        if (isAlreadyDefined) {\n          var specPolicy = ReactClassInterface[name];\n\n          // These cases should already be caught by validateMethodOverride.\n          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;\n\n          // For methods which are defined more than once, call the existing\n          // methods before calling the new property, merging if appropriate.\n          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {\n            proto[name] = createMergedResultFunction(proto[name], property);\n          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {\n            proto[name] = createChainedFunction(proto[name], property);\n          }\n        } else {\n          proto[name] = property;\n          if (process.env.NODE_ENV !== 'production') {\n            // Add verbose displayName to the function, which helps when looking\n            // at profiling tools.\n            if (typeof property === 'function' && spec.displayName) {\n              proto[name].displayName = spec.displayName + '_' + name;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\n  if (!statics) {\n    return;\n  }\n  for (var name in statics) {\n    var property = statics[name];\n    if (!statics.hasOwnProperty(name)) {\n      continue;\n    }\n\n    var isReserved = (name in RESERVED_SPEC_KEYS);\n    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;\n\n    var isInherited = (name in Constructor);\n    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;\n    Constructor[name] = property;\n  }\n}\n\n/**\n * Merge two objects, but throw if both contain the same key.\n *\n * @param {object} one The first object, which is mutated.\n * @param {object} two The second object\n * @return {object} one after it has been mutated to contain everything in two.\n */\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\n  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;\n\n  for (var key in two) {\n    if (two.hasOwnProperty(key)) {\n      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;\n      one[key] = two[key];\n    }\n  }\n  return one;\n}\n\n/**\n * Creates a function that invokes two functions and merges their return values.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createMergedResultFunction(one, two) {\n  return function mergedResult() {\n    var a = one.apply(this, arguments);\n    var b = two.apply(this, arguments);\n    if (a == null) {\n      return b;\n    } else if (b == null) {\n      return a;\n    }\n    var c = {};\n    mergeIntoWithNoDuplicateKeys(c, a);\n    mergeIntoWithNoDuplicateKeys(c, b);\n    return c;\n  };\n}\n\n/**\n * Creates a function that invokes two functions and ignores their return vales.\n *\n * @param {function} one Function to invoke first.\n * @param {function} two Function to invoke second.\n * @return {function} Function that invokes the two argument functions.\n * @private\n */\nfunction createChainedFunction(one, two) {\n  return function chainedFunction() {\n    one.apply(this, arguments);\n    two.apply(this, arguments);\n  };\n}\n\n/**\n * Binds a method to the component.\n *\n * @param {object} component Component whose method is going to be bound.\n * @param {function} method Method to be bound.\n * @return {function} The bound method.\n */\nfunction bindAutoBindMethod(component, method) {\n  var boundMethod = method.bind(component);\n  if (process.env.NODE_ENV !== 'production') {\n    boundMethod.__reactBoundContext = component;\n    boundMethod.__reactBoundMethod = method;\n    boundMethod.__reactBoundArguments = null;\n    var componentName = component.constructor.displayName;\n    var _bind = boundMethod.bind;\n    /* eslint-disable block-scoped-var, no-undef */\n    boundMethod.bind = function (newThis) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      // User is trying to bind() an autobound method; we effectively will\n      // ignore the value of \"this\" that the user is trying to use, so\n      // let's warn.\n      if (newThis !== component && newThis !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;\n      } else if (!args.length) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;\n        return boundMethod;\n      }\n      var reboundMethod = _bind.apply(boundMethod, arguments);\n      reboundMethod.__reactBoundContext = component;\n      reboundMethod.__reactBoundMethod = method;\n      reboundMethod.__reactBoundArguments = args;\n      return reboundMethod;\n      /* eslint-enable */\n    };\n  }\n  return boundMethod;\n}\n\n/**\n * Binds all auto-bound methods in a component.\n *\n * @param {object} component Component whose method is going to be bound.\n */\nfunction bindAutoBindMethods(component) {\n  for (var autoBindKey in component.__reactAutoBindMap) {\n    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {\n      var method = component.__reactAutoBindMap[autoBindKey];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n}\n\n/**\n * Add more to the ReactClass base class. These are all legacy features and\n * therefore not already part of the modern ReactComponent.\n */\nvar ReactClassMixin = {\n\n  /**\n   * TODO: This will be deprecated because state should always keep a consistent\n   * type signature and the only use case for this, is to avoid that.\n   */\n  replaceState: function (newState, callback) {\n    this.updater.enqueueReplaceState(this, newState);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function () {\n    return this.updater.isMounted(this);\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {object} partialProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  setProps: function (partialProps, callback) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnSetProps();\n    }\n    this.updater.enqueueSetProps(this, partialProps);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback);\n    }\n  },\n\n  /**\n   * Replace all the props.\n   *\n   * @param {object} newProps Subset of the next props.\n   * @param {?function} callback Called after props are updated.\n   * @final\n   * @public\n   * @deprecated\n   */\n  replaceProps: function (newProps, callback) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnSetProps();\n    }\n    this.updater.enqueueReplaceProps(this, newProps);\n    if (callback) {\n      this.updater.enqueueCallback(this, callback);\n    }\n  }\n};\n\nvar ReactClassComponent = function () {};\nassign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n\n/**\n * Module for creating composite components.\n *\n * @class ReactClass\n */\nvar ReactClass = {\n\n  /**\n   * Creates a composite component class given a class specification.\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  createClass: function (spec) {\n    var Constructor = function (props, context, updater) {\n      // This constructor is overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindMap) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;\n\n      this.state = initialState;\n    };\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, spec);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  },\n\n  injection: {\n    injectMixin: function (mixin) {\n      injectedMixins.push(mixin);\n    }\n  }\n\n};\n\nmodule.exports = ReactClass;\n}).call(this,require('_process'))\n\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactComponent\":\"react/lib/ReactComponent\",\"./ReactElement\":\"react/lib/ReactElement\",\"./ReactNoopUpdateQueue\":\"react/lib/ReactNoopUpdateQueue\",\"./ReactPropTypeLocationNames\":\"react/lib/ReactPropTypeLocationNames\",\"./ReactPropTypeLocations\":\"react/lib/ReactPropTypeLocations\",\"_process\":1,\"fbjs/lib/emptyObject\":22,\"fbjs/lib/invariant\":29,\"fbjs/lib/keyMirror\":33,\"fbjs/lib/keyOf\":34,\"fbjs/lib/warning\":41}],\"react/lib/ReactComponentBrowserEnvironment\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentBrowserEnvironment\n */\n\n'use strict';\n\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\nvar ReactMount = require('./ReactMount');\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n\n  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,\n\n  /**\n   * If a particular environment requires that some resources be cleaned up,\n   * specify this in the injected Mixin. In the DOM, we would likely want to\n   * purge any cached node ID lookups.\n   *\n   * @private\n   */\n  unmountIDFromEnvironment: function (rootNodeID) {\n    ReactMount.purgeID(rootNodeID);\n  }\n\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;\n},{\"./ReactDOMIDOperations\":\"react/lib/ReactDOMIDOperations\",\"./ReactMount\":\"react/lib/ReactMount\"}],\"react/lib/ReactComponentEnvironment\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentEnvironment\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n\n  /**\n   * Optionally injectable environment dependent cleanup hook. (server vs.\n   * browser etc). Example: A browser system caches DOM nodes based on component\n   * ID and must remove that cache entry when this instance is unmounted.\n   */\n  unmountIDFromEnvironment: null,\n\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkupByID: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function (environment) {\n      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;\n      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;\n      ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n\n};\n\nmodule.exports = ReactComponentEnvironment;\n}).call(this,require('_process'))\n\n},{\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/ReactComponentWithPureRenderMixin\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentWithPureRenderMixin\n */\n\n'use strict';\n\nvar shallowCompare = require('./shallowCompare');\n\n/**\n * If your React component's render function is \"pure\", e.g. it will render the\n * same result given the same props and state, provide this Mixin for a\n * considerable performance boost.\n *\n * Most React components have pure render functions.\n *\n * Example:\n *\n *   var ReactComponentWithPureRenderMixin =\n *     require('ReactComponentWithPureRenderMixin');\n *   React.createClass({\n *     mixins: [ReactComponentWithPureRenderMixin],\n *\n *     render: function() {\n *       return <div className={this.props.className}>foo</div>;\n *     }\n *   });\n *\n * Note: This only checks shallow equality for props and state. If these contain\n * complex data structures this mixin may have false-negatives for deeper\n * differences. Only mixin to components which have simple props and state, or\n * use `forceUpdate()` when you know deep data structures have changed.\n */\nvar ReactComponentWithPureRenderMixin = {\n  shouldComponentUpdate: function (nextProps, nextState) {\n    return shallowCompare(this, nextProps, nextState);\n  }\n};\n\nmodule.exports = ReactComponentWithPureRenderMixin;\n},{\"./shallowCompare\":\"react/lib/shallowCompare\"}],\"react/lib/ReactComponent\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponent\n */\n\n'use strict';\n\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Base class helpers for the updating state of a component.\n */\nfunction ReactComponent(props, context, updater) {\n  this.props = props;\n  this.context = context;\n  this.refs = emptyObject;\n  // We initialize the default updater but the real one gets injected by the\n  // renderer.\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nReactComponent.prototype.isReactComponent = {};\n\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\nReactComponent.prototype.setState = function (partialState, callback) {\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;\n  }\n  this.updater.enqueueSetState(this, partialState);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback);\n  }\n};\n\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\nReactComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this);\n  if (callback) {\n    this.updater.enqueueCallback(this, callback);\n  }\n};\n\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var deprecatedAPIs = {\n    getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],\n    setProps: ['setProps', 'Instead, call render again at the top level.']\n  };\n  var defineDeprecationWarning = function (methodName, info) {\n    if (canDefineProperty) {\n      Object.defineProperty(ReactComponent.prototype, methodName, {\n        get: function () {\n          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;\n          return undefined;\n        }\n      });\n    }\n  };\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nmodule.exports = ReactComponent;\n}).call(this,require('_process'))\n\n},{\"./ReactNoopUpdateQueue\":\"react/lib/ReactNoopUpdateQueue\",\"./canDefineProperty\":11,\"_process\":1,\"fbjs/lib/emptyObject\":22,\"fbjs/lib/invariant\":29,\"fbjs/lib/warning\":41}],\"react/lib/ReactCompositeComponent\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCompositeComponent\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactPerf = require('./ReactPerf');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\n\nvar assign = require('./Object.assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar invariant = require('fbjs/lib/invariant');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar warning = require('fbjs/lib/warning');\n\nfunction getDeclarationErrorAddendum(component) {\n  var owner = component._currentElement._owner || null;\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nfunction StatelessComponent(Component) {}\nStatelessComponent.prototype.render = function () {\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\n  return Component(this.props, this.context, this.updater);\n};\n\n/**\n * ------------------ The Life-Cycle of a Composite Component ------------------\n *\n * - constructor: Initialization of state. The instance is now retained.\n *   - componentWillMount\n *   - render\n *   - [children's constructors]\n *     - [children's componentWillMount and render]\n *     - [children's componentDidMount]\n *     - componentDidMount\n *\n *       Update Phases:\n *       - componentWillReceiveProps (only called if parent updated)\n *       - shouldComponentUpdate\n *         - componentWillUpdate\n *           - render\n *           - [children's constructors or receive props phases]\n *         - componentDidUpdate\n *\n *     - componentWillUnmount\n *     - [children's componentWillUnmount]\n *   - [children destroyed]\n * - (destroyed): The instance is now blank, released by React and ready for GC.\n *\n * -----------------------------------------------------------------------------\n */\n\n/**\n * An incrementing ID assigned to each component when it is mounted. This is\n * used to enforce the order in which `ReactUpdates` updates dirty components.\n *\n * @private\n */\nvar nextMountID = 1;\n\n/**\n * @lends {ReactCompositeComponent.prototype}\n */\nvar ReactCompositeComponentMixin = {\n\n  /**\n   * Base constructor for all composite component.\n   *\n   * @param {ReactElement} element\n   * @final\n   * @internal\n   */\n  construct: function (element) {\n    this._currentElement = element;\n    this._rootNodeID = null;\n    this._instance = null;\n\n    // See ReactUpdateQueue\n    this._pendingElement = null;\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    this._renderedComponent = null;\n\n    this._context = null;\n    this._mountOrder = 0;\n    this._topLevelWrapper = null;\n\n    // See ReactUpdates and ReactUpdateQueue.\n    this._pendingCallbacks = null;\n  },\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (rootID, transaction, context) {\n    this._context = context;\n    this._mountOrder = nextMountID++;\n    this._rootNodeID = rootID;\n\n    var publicProps = this._processProps(this._currentElement.props);\n    var publicContext = this._processContext(context);\n\n    var Component = this._currentElement.type;\n\n    // Initialize the public class\n    var inst;\n    var renderedElement;\n\n    // This is a way to detect if Component is a stateless arrow function\n    // component, which is not newable. It might not be 100% reliable but is\n    // something we can do until we start detecting that Component extends\n    // React.Component. We already assume that typeof Component === 'function'.\n    var canInstantiate = ('prototype' in Component);\n\n    if (canInstantiate) {\n      if (process.env.NODE_ENV !== 'production') {\n        ReactCurrentOwner.current = this;\n        try {\n          inst = new Component(publicProps, publicContext, ReactUpdateQueue);\n        } finally {\n          ReactCurrentOwner.current = null;\n        }\n      } else {\n        inst = new Component(publicProps, publicContext, ReactUpdateQueue);\n      }\n    }\n\n    if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {\n      renderedElement = inst;\n      inst = new StatelessComponent(Component);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This will throw later in _renderValidatedComponent, but add an early\n      // warning now to help debugging\n      if (inst.render == null) {\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;\n      } else {\n        // We support ES6 inheriting from React.Component, the module pattern,\n        // and stateless components, but not ES6 classes that don't extend\n        process.env.NODE_ENV !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;\n      }\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    inst.props = publicProps;\n    inst.context = publicContext;\n    inst.refs = emptyObject;\n    inst.updater = ReactUpdateQueue;\n\n    this._instance = inst;\n\n    // Store a reference from the instance back to the internal representation\n    ReactInstanceMap.set(inst, this);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Since plain JS classes are defined without any special initialization\n      // logic, we can not catch common errors early. Therefore, we have to\n      // catch them here, at initialization time, instead.\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;\n    }\n\n    var initialState = inst.state;\n    if (initialState === undefined) {\n      inst.state = initialState = null;\n    }\n    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\n\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n\n    if (inst.componentWillMount) {\n      inst.componentWillMount();\n      // When mounting, calls to `setState` by `componentWillMount` will set\n      // `this._pendingStateQueue` without triggering a re-render.\n      if (this._pendingStateQueue) {\n        inst.state = this._processPendingState(inst.props, inst.context);\n      }\n    }\n\n    // If not a stateless component, we now render\n    if (renderedElement === undefined) {\n      renderedElement = this._renderValidatedComponent();\n    }\n\n    this._renderedComponent = this._instantiateReactComponent(renderedElement);\n\n    var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));\n    if (inst.componentDidMount) {\n      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\n    }\n\n    return markup;\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function () {\n    var inst = this._instance;\n\n    if (inst.componentWillUnmount) {\n      inst.componentWillUnmount();\n    }\n\n    ReactReconciler.unmountComponent(this._renderedComponent);\n    this._renderedComponent = null;\n    this._instance = null;\n\n    // Reset pending fields\n    // Even if this component is scheduled for another update in ReactUpdates,\n    // it would still be ignored because these fields are reset.\n    this._pendingStateQueue = null;\n    this._pendingReplaceState = false;\n    this._pendingForceUpdate = false;\n    this._pendingCallbacks = null;\n    this._pendingElement = null;\n\n    // These fields do not really need to be reset since this object is no\n    // longer accessible.\n    this._context = null;\n    this._rootNodeID = null;\n    this._topLevelWrapper = null;\n\n    // Delete the reference from the instance to this internal representation\n    // which allow the internals to be properly cleaned up even if the user\n    // leaks a reference to the public instance.\n    ReactInstanceMap.remove(inst);\n\n    // Some existing components rely on inst.props even after they've been\n    // destroyed (in event handlers).\n    // TODO: inst.props = null;\n    // TODO: inst.state = null;\n    // TODO: inst.context = null;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _maskContext: function (context) {\n    var maskedContext = null;\n    var Component = this._currentElement.type;\n    var contextTypes = Component.contextTypes;\n    if (!contextTypes) {\n      return emptyObject;\n    }\n    maskedContext = {};\n    for (var contextName in contextTypes) {\n      maskedContext[contextName] = context[contextName];\n    }\n    return maskedContext;\n  },\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`, and asserts that they are valid.\n   *\n   * @param {object} context\n   * @return {?object}\n   * @private\n   */\n  _processContext: function (context) {\n    var maskedContext = this._maskContext(context);\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.contextTypes) {\n        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);\n      }\n    }\n    return maskedContext;\n  },\n\n  /**\n   * @param {object} currentContext\n   * @return {object}\n   * @private\n   */\n  _processChildContext: function (currentContext) {\n    var Component = this._currentElement.type;\n    var inst = this._instance;\n    var childContext = inst.getChildContext && inst.getChildContext();\n    if (childContext) {\n      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\n      if (process.env.NODE_ENV !== 'production') {\n        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);\n      }\n      for (var name in childContext) {\n        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;\n      }\n      return assign({}, currentContext, childContext);\n    }\n    return currentContext;\n  },\n\n  /**\n   * Processes props by setting default values for unspecified props and\n   * asserting that the props are valid. Does not mutate its argument; returns\n   * a new props object with defaults merged in.\n   *\n   * @param {object} newProps\n   * @return {object}\n   * @private\n   */\n  _processProps: function (newProps) {\n    if (process.env.NODE_ENV !== 'production') {\n      var Component = this._currentElement.type;\n      if (Component.propTypes) {\n        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);\n      }\n    }\n    return newProps;\n  },\n\n  /**\n   * Assert that the props are valid\n   *\n   * @param {object} propTypes Map of prop name to a ReactPropType\n   * @param {object} props\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n   * @private\n   */\n  _checkPropTypes: function (propTypes, props, location) {\n    // TODO: Stop validating prop types here and only use the element\n    // validation.\n    var componentName = this.getName();\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error;\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;\n          error = propTypes[propName](props, propName, componentName, location);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error instanceof Error) {\n          // We may want to extend this logic for similar errors in\n          // top-level render calls, so I'm abstracting it away into\n          // a function to minimize refactoring in the future\n          var addendum = getDeclarationErrorAddendum(this);\n\n          if (location === ReactPropTypeLocations.prop) {\n            // Preface gives us something to blacklist in warning module\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;\n          } else {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;\n          }\n        }\n      }\n    }\n  },\n\n  receiveComponent: function (nextElement, transaction, nextContext) {\n    var prevElement = this._currentElement;\n    var prevContext = this._context;\n\n    this._pendingElement = null;\n\n    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\n  },\n\n  /**\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\n   * is set, update the component.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (transaction) {\n    if (this._pendingElement != null) {\n      ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);\n    }\n\n    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\n      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\n    }\n  },\n\n  /**\n   * Perform an update to a mounted component. The componentWillReceiveProps and\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\n   * skipped) the remaining update lifecycle methods are called and the DOM\n   * representation is updated.\n   *\n   * By default, this implements React's rendering and reconciliation algorithm.\n   * Sophisticated clients may wish to override this.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevParentElement\n   * @param {ReactElement} nextParentElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\n    var inst = this._instance;\n\n    var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);\n    var nextProps;\n\n    // Distinguish between a props update versus a simple state update\n    if (prevParentElement === nextParentElement) {\n      // Skip checking prop types again -- we don't read inst.props to avoid\n      // warning for DOM component props in this upgrade\n      nextProps = nextParentElement.props;\n    } else {\n      nextProps = this._processProps(nextParentElement.props);\n      // An update here will schedule an update but immediately set\n      // _pendingStateQueue which will ensure that any state updates gets\n      // immediately reconciled instead of waiting for the next batch.\n\n      if (inst.componentWillReceiveProps) {\n        inst.componentWillReceiveProps(nextProps, nextContext);\n      }\n    }\n\n    var nextState = this._processPendingState(nextProps, nextContext);\n\n    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;\n    }\n\n    if (shouldUpdate) {\n      this._pendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this._currentElement = nextParentElement;\n      this._context = nextUnmaskedContext;\n      inst.props = nextProps;\n      inst.state = nextState;\n      inst.context = nextContext;\n    }\n  },\n\n  _processPendingState: function (props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n    }\n\n    return nextState;\n  },\n\n  /**\n   * Merges new props and state, notifies delegate methods of update and\n   * performs update.\n   *\n   * @param {ReactElement} nextElement Next element\n   * @param {object} nextProps Next public object to set as properties.\n   * @param {?object} nextState Next object to set as state.\n   * @param {?object} nextContext Next public object to set as context.\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?object} unmaskedContext\n   * @private\n   */\n  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\n    var inst = this._instance;\n\n    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\n    var prevProps;\n    var prevState;\n    var prevContext;\n    if (hasComponentDidUpdate) {\n      prevProps = inst.props;\n      prevState = inst.state;\n      prevContext = inst.context;\n    }\n\n    if (inst.componentWillUpdate) {\n      inst.componentWillUpdate(nextProps, nextState, nextContext);\n    }\n\n    this._currentElement = nextElement;\n    this._context = unmaskedContext;\n    inst.props = nextProps;\n    inst.state = nextState;\n    inst.context = nextContext;\n\n    this._updateRenderedComponent(transaction, unmaskedContext);\n\n    if (hasComponentDidUpdate) {\n      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\n    }\n  },\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  _updateRenderedComponent: function (transaction, context) {\n    var prevComponentInstance = this._renderedComponent;\n    var prevRenderedElement = prevComponentInstance._currentElement;\n    var nextRenderedElement = this._renderValidatedComponent();\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\n      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\n    } else {\n      // These two IDs are actually the same! But nothing should rely on that.\n      var thisID = this._rootNodeID;\n      var prevComponentID = prevComponentInstance._rootNodeID;\n      ReactReconciler.unmountComponent(prevComponentInstance);\n\n      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);\n      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));\n      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  _replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {\n    ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\n  },\n\n  /**\n   * @protected\n   */\n  _renderValidatedComponentWithoutOwnerOrContext: function () {\n    var inst = this._instance;\n    var renderedComponent = inst.render();\n    if (process.env.NODE_ENV !== 'production') {\n      // We allow auto-mocks to proceed as if they're returning null.\n      if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {\n        // This is probably bad practice. Consider warning here and\n        // deprecating this convenience.\n        renderedComponent = null;\n      }\n    }\n\n    return renderedComponent;\n  },\n\n  /**\n   * @private\n   */\n  _renderValidatedComponent: function () {\n    var renderedComponent;\n    ReactCurrentOwner.current = this;\n    try {\n      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\n    } finally {\n      ReactCurrentOwner.current = null;\n    }\n    !(\n    // TODO: An `isValidNode` function would probably be more appropriate\n    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\n    return renderedComponent;\n  },\n\n  /**\n   * Lazily allocates the refs object and stores `component` as `ref`.\n   *\n   * @param {string} ref Reference name.\n   * @param {component} component Component to store as `ref`.\n   * @final\n   * @private\n   */\n  attachRef: function (ref, component) {\n    var inst = this.getPublicInstance();\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;\n    var publicComponentInstance = component.getPublicInstance();\n    if (process.env.NODE_ENV !== 'production') {\n      var componentName = component && component.getName ? component.getName() : 'a component';\n      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref \"%s\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;\n    }\n    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\n    refs[ref] = publicComponentInstance;\n  },\n\n  /**\n   * Detaches a reference name.\n   *\n   * @param {string} ref Name to dereference.\n   * @final\n   * @private\n   */\n  detachRef: function (ref) {\n    var refs = this.getPublicInstance().refs;\n    delete refs[ref];\n  },\n\n  /**\n   * Get a text description of the component that can be used to identify it\n   * in error messages.\n   * @return {string} The name or null.\n   * @internal\n   */\n  getName: function () {\n    var type = this._currentElement.type;\n    var constructor = this._instance && this._instance.constructor;\n    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\n  },\n\n  /**\n   * Get the publicly accessible representation of this component - i.e. what\n   * is exposed by refs and returned by render. Can be null for stateless\n   * components.\n   *\n   * @return {ReactComponent} the public component instance.\n   * @internal\n   */\n  getPublicInstance: function () {\n    var inst = this._instance;\n    if (inst instanceof StatelessComponent) {\n      return null;\n    }\n    return inst;\n  },\n\n  // Stub\n  _instantiateReactComponent: null\n\n};\n\nReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {\n  mountComponent: 'mountComponent',\n  updateComponent: 'updateComponent',\n  _renderValidatedComponent: '_renderValidatedComponent'\n});\n\nvar ReactCompositeComponent = {\n\n  Mixin: ReactCompositeComponentMixin\n\n};\n\nmodule.exports = ReactCompositeComponent;\n}).call(this,require('_process'))\n\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactComponentEnvironment\":\"react/lib/ReactComponentEnvironment\",\"./ReactCurrentOwner\":\"react/lib/ReactCurrentOwner\",\"./ReactElement\":\"react/lib/ReactElement\",\"./ReactInstanceMap\":\"react/lib/ReactInstanceMap\",\"./ReactPerf\":\"react/lib/ReactPerf\",\"./ReactPropTypeLocationNames\":\"react/lib/ReactPropTypeLocationNames\",\"./ReactPropTypeLocations\":\"react/lib/ReactPropTypeLocations\",\"./ReactReconciler\":\"react/lib/ReactReconciler\",\"./ReactUpdateQueue\":\"react/lib/ReactUpdateQueue\",\"./shouldUpdateReactComponent\":\"react/lib/shouldUpdateReactComponent\",\"_process\":1,\"fbjs/lib/emptyObject\":22,\"fbjs/lib/invariant\":29,\"fbjs/lib/warning\":41}],\"react/lib/ReactCurrentOwner\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactCurrentOwner\n */\n\n'use strict';\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n\n};\n\nmodule.exports = ReactCurrentOwner;\n},{}],\"react/lib/ReactDOMButton\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMButton\n */\n\n'use strict';\n\nvar mouseListenerNames = {\n  onClick: true,\n  onDoubleClick: true,\n  onMouseDown: true,\n  onMouseMove: true,\n  onMouseUp: true,\n\n  onClickCapture: true,\n  onDoubleClickCapture: true,\n  onMouseDownCapture: true,\n  onMouseMoveCapture: true,\n  onMouseUpCapture: true\n};\n\n/**\n * Implements a <button> native component that does not receive mouse events\n * when `disabled` is set.\n */\nvar ReactDOMButton = {\n  getNativeProps: function (inst, props, context) {\n    if (!props.disabled) {\n      return props;\n    }\n\n    // Copy the props, except the mouse listeners\n    var nativeProps = {};\n    for (var key in props) {\n      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {\n        nativeProps[key] = props[key];\n      }\n    }\n\n    return nativeProps;\n  }\n};\n\nmodule.exports = ReactDOMButton;\n},{}],\"react/lib/ReactDOMComponent\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMComponent\n * @typechecks static-only\n */\n\n/* global hasOwnProperty:true */\n\n'use strict';\n\nvar AutoFocusUtils = require('./AutoFocusUtils');\nvar CSSPropertyOperations = require('./CSSPropertyOperations');\nvar DOMProperty = require('./DOMProperty');\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar EventConstants = require('./EventConstants');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\nvar ReactDOMButton = require('./ReactDOMButton');\nvar ReactDOMInput = require('./ReactDOMInput');\nvar ReactDOMOption = require('./ReactDOMOption');\nvar ReactDOMSelect = require('./ReactDOMSelect');\nvar ReactDOMTextarea = require('./ReactDOMTextarea');\nvar ReactMount = require('./ReactMount');\nvar ReactMultiChild = require('./ReactMultiChild');\nvar ReactPerf = require('./ReactPerf');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\n\nvar assign = require('./Object.assign');\nvar canDefineProperty = require('./canDefineProperty');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar invariant = require('fbjs/lib/invariant');\nvar isEventSupported = require('./isEventSupported');\nvar keyOf = require('fbjs/lib/keyOf');\nvar setInnerHTML = require('./setInnerHTML');\nvar setTextContent = require('./setTextContent');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\nvar validateDOMNesting = require('./validateDOMNesting');\nvar warning = require('fbjs/lib/warning');\n\nvar deleteListener = ReactBrowserEventEmitter.deleteListener;\nvar listenTo = ReactBrowserEventEmitter.listenTo;\nvar registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;\n\n// For quickly matching children type, to test if can be treated as content.\nvar CONTENT_TYPES = { 'string': true, 'number': true };\n\nvar CHILDREN = keyOf({ children: null });\nvar STYLE = keyOf({ style: null });\nvar HTML = keyOf({ __html: null });\n\nvar ELEMENT_NODE_TYPE = 1;\n\nfunction getDeclarationErrorAddendum(internalInstance) {\n  if (internalInstance) {\n    var owner = internalInstance._currentElement._owner || null;\n    if (owner) {\n      var name = owner.getName();\n      if (name) {\n        return ' This DOM node was rendered by `' + name + '`.';\n      }\n    }\n  }\n  return '';\n}\n\nvar legacyPropsDescriptor;\nif (process.env.NODE_ENV !== 'production') {\n  legacyPropsDescriptor = {\n    props: {\n      enumerable: false,\n      get: function () {\n        var component = this._reactInternalComponent;\n        process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;\n        return component._currentElement.props;\n      }\n    }\n  };\n}\n\nfunction legacyGetDOMNode() {\n  if (process.env.NODE_ENV !== 'production') {\n    var component = this._reactInternalComponent;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;\n  }\n  return this;\n}\n\nfunction legacyIsMounted() {\n  var component = this._reactInternalComponent;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;\n  }\n  return !!component;\n}\n\nfunction legacySetStateEtc() {\n  if (process.env.NODE_ENV !== 'production') {\n    var component = this._reactInternalComponent;\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;\n  }\n}\n\nfunction legacySetProps(partialProps, callback) {\n  var component = this._reactInternalComponent;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;\n  }\n  if (!component) {\n    return;\n  }\n  ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);\n  if (callback) {\n    ReactUpdateQueue.enqueueCallbackInternal(component, callback);\n  }\n}\n\nfunction legacyReplaceProps(partialProps, callback) {\n  var component = this._reactInternalComponent;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;\n  }\n  if (!component) {\n    return;\n  }\n  ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);\n  if (callback) {\n    ReactUpdateQueue.enqueueCallbackInternal(component, callback);\n  }\n}\n\nfunction friendlyStringify(obj) {\n  if (typeof obj === 'object') {\n    if (Array.isArray(obj)) {\n      return '[' + obj.map(friendlyStringify).join(', ') + ']';\n    } else {\n      var pairs = [];\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var keyEscaped = /^[a-z$_][\\w$_]*$/i.test(key) ? key : JSON.stringify(key);\n          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));\n        }\n      }\n      return '{' + pairs.join(', ') + '}';\n    }\n  } else if (typeof obj === 'string') {\n    return JSON.stringify(obj);\n  } else if (typeof obj === 'function') {\n    return '[function object]';\n  }\n  // Differs from JSON.stringify in that undefined becauses undefined and that\n  // inf and nan don't become null\n  return String(obj);\n}\n\nvar styleMutationWarning = {};\n\nfunction checkAndWarnForMutatedStyle(style1, style2, component) {\n  if (style1 == null || style2 == null) {\n    return;\n  }\n  if (shallowEqual(style1, style2)) {\n    return;\n  }\n\n  var componentName = component._tag;\n  var owner = component._currentElement._owner;\n  var ownerName;\n  if (owner) {\n    ownerName = owner.getName();\n  }\n\n  var hash = ownerName + '|' + componentName;\n\n  if (styleMutationWarning.hasOwnProperty(hash)) {\n    return;\n  }\n\n  styleMutationWarning[hash] = true;\n\n  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;\n}\n\n/**\n * @param {object} component\n * @param {?object} props\n */\nfunction assertValidProps(component, props) {\n  if (!props) {\n    return;\n  }\n  // Note the use of `==` which checks for null or undefined.\n  if (process.env.NODE_ENV !== 'production') {\n    if (voidElementTags[component._tag]) {\n      process.env.NODE_ENV !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;\n    }\n  }\n  if (props.dangerouslySetInnerHTML != null) {\n    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;\n    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;\n    process.env.NODE_ENV !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;\n  }\n  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \\'em\\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;\n}\n\nfunction enqueuePutListener(id, registrationName, listener, transaction) {\n  if (process.env.NODE_ENV !== 'production') {\n    // IE8 has no API for event capturing and the `onScroll` event doesn't\n    // bubble.\n    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\\'t support the `onScroll` event') : undefined;\n  }\n  var container = ReactMount.findReactContainerForID(id);\n  if (container) {\n    var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;\n    listenTo(registrationName, doc);\n  }\n  transaction.getReactMountReady().enqueue(putListener, {\n    id: id,\n    registrationName: registrationName,\n    listener: listener\n  });\n}\n\nfunction putListener() {\n  var listenerToPut = this;\n  ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);\n}\n\n// There are so many media events, it makes sense to just\n// maintain a list rather than create a `trapBubbledEvent` for each\nvar mediaEvents = {\n  topAbort: 'abort',\n  topCanPlay: 'canplay',\n  topCanPlayThrough: 'canplaythrough',\n  topDurationChange: 'durationchange',\n  topEmptied: 'emptied',\n  topEncrypted: 'encrypted',\n  topEnded: 'ended',\n  topError: 'error',\n  topLoadedData: 'loadeddata',\n  topLoadedMetadata: 'loadedmetadata',\n  topLoadStart: 'loadstart',\n  topPause: 'pause',\n  topPlay: 'play',\n  topPlaying: 'playing',\n  topProgress: 'progress',\n  topRateChange: 'ratechange',\n  topSeeked: 'seeked',\n  topSeeking: 'seeking',\n  topStalled: 'stalled',\n  topSuspend: 'suspend',\n  topTimeUpdate: 'timeupdate',\n  topVolumeChange: 'volumechange',\n  topWaiting: 'waiting'\n};\n\nfunction trapBubbledEventsLocal() {\n  var inst = this;\n  // If a component renders to null or if another component fatals and causes\n  // the state of the tree to be corrupted, `node` here can be null.\n  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;\n  var node = ReactMount.getNode(inst._rootNodeID);\n  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;\n\n  switch (inst._tag) {\n    case 'iframe':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\n      break;\n    case 'video':\n    case 'audio':\n\n      inst._wrapperState.listeners = [];\n      // create listener for each media event\n      for (var event in mediaEvents) {\n        if (mediaEvents.hasOwnProperty(event)) {\n          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));\n        }\n      }\n\n      break;\n    case 'img':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\n      break;\n    case 'form':\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];\n      break;\n  }\n}\n\nfunction mountReadyInputWrapper() {\n  ReactDOMInput.mountReadyWrapper(this);\n}\n\nfunction postUpdateSelectWrapper() {\n  ReactDOMSelect.postUpdateWrapper(this);\n}\n\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\n// those special cased tags.\n\nvar omittedCloseTags = {\n  'area': true,\n  'base': true,\n  'br': true,\n  'col': true,\n  'embed': true,\n  'hr': true,\n  'img': true,\n  'input': true,\n  'keygen': true,\n  'link': true,\n  'meta': true,\n  'param': true,\n  'source': true,\n  'track': true,\n  'wbr': true\n};\n\n// NOTE: menuitem's close tag should be omitted, but that causes problems.\nvar newlineEatingTags = {\n  'listing': true,\n  'pre': true,\n  'textarea': true\n};\n\n// For HTML, certain tags cannot have children. This has the same purpose as\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\n\nvar voidElementTags = assign({\n  'menuitem': true\n}, omittedCloseTags);\n\n// We accept any tag to be rendered but since this gets injected into arbitrary\n// HTML, we want to make sure that it's a safe tag.\n// http://www.w3.org/TR/REC-xml/#NT-Name\n\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\.\\-\\d]*$/; // Simplified subset\nvar validatedTagCache = {};\nvar hasOwnProperty = ({}).hasOwnProperty;\n\nfunction validateDangerousTag(tag) {\n  if (!hasOwnProperty.call(validatedTagCache, tag)) {\n    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;\n    validatedTagCache[tag] = true;\n  }\n}\n\nfunction processChildContextDev(context, inst) {\n  // Pass down our tag name to child components for validation purposes\n  context = assign({}, context);\n  var info = context[validateDOMNesting.ancestorInfoContextKey];\n  context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);\n  return context;\n}\n\nfunction isCustomComponent(tagName, props) {\n  return tagName.indexOf('-') >= 0 || props.is != null;\n}\n\n/**\n * Creates a new React class that is idempotent and capable of containing other\n * React components. It accepts event listeners and DOM properties that are\n * valid according to `DOMProperty`.\n *\n *  - Event listeners: `onClick`, `onMouseDown`, etc.\n *  - DOM properties: `className`, `name`, `title`, etc.\n *\n * The `style` property functions differently from the DOM API. It accepts an\n * object mapping of style properties to values.\n *\n * @constructor ReactDOMComponent\n * @extends ReactMultiChild\n */\nfunction ReactDOMComponent(tag) {\n  validateDangerousTag(tag);\n  this._tag = tag.toLowerCase();\n  this._renderedChildren = null;\n  this._previousStyle = null;\n  this._previousStyleCopy = null;\n  this._rootNodeID = null;\n  this._wrapperState = null;\n  this._topLevelWrapper = null;\n  this._nodeWithLegacyProperties = null;\n  if (process.env.NODE_ENV !== 'production') {\n    this._unprocessedContextDev = null;\n    this._processedContextDev = null;\n  }\n}\n\nReactDOMComponent.displayName = 'ReactDOMComponent';\n\nReactDOMComponent.Mixin = {\n\n  construct: function (element) {\n    this._currentElement = element;\n  },\n\n  /**\n   * Generates root tag markup then recurses. This method has side effects and\n   * is not idempotent.\n   *\n   * @internal\n   * @param {string} rootID The root DOM ID for this node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   * @return {string} The computed markup.\n   */\n  mountComponent: function (rootID, transaction, context) {\n    this._rootNodeID = rootID;\n\n    var props = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'iframe':\n      case 'img':\n      case 'form':\n      case 'video':\n      case 'audio':\n        this._wrapperState = {\n          listeners: null\n        };\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\n        break;\n      case 'button':\n        props = ReactDOMButton.getNativeProps(this, props, context);\n        break;\n      case 'input':\n        ReactDOMInput.mountWrapper(this, props, context);\n        props = ReactDOMInput.getNativeProps(this, props, context);\n        break;\n      case 'option':\n        ReactDOMOption.mountWrapper(this, props, context);\n        props = ReactDOMOption.getNativeProps(this, props, context);\n        break;\n      case 'select':\n        ReactDOMSelect.mountWrapper(this, props, context);\n        props = ReactDOMSelect.getNativeProps(this, props, context);\n        context = ReactDOMSelect.processChildContext(this, props, context);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.mountWrapper(this, props, context);\n        props = ReactDOMTextarea.getNativeProps(this, props, context);\n        break;\n    }\n\n    assertValidProps(this, props);\n    if (process.env.NODE_ENV !== 'production') {\n      if (context[validateDOMNesting.ancestorInfoContextKey]) {\n        validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._unprocessedContextDev = context;\n      this._processedContextDev = processChildContextDev(context, this);\n      context = this._processedContextDev;\n    }\n\n    var mountImage;\n    if (transaction.useCreateElement) {\n      var ownerDocument = context[ReactMount.ownerDocumentContextKey];\n      var el = ownerDocument.createElement(this._currentElement.type);\n      DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);\n      // Populate node cache\n      ReactMount.getID(el);\n      this._updateDOMProperties({}, props, transaction, el);\n      this._createInitialChildren(transaction, props, context, el);\n      mountImage = el;\n    } else {\n      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);\n      var tagContent = this._createContentMarkup(transaction, props, context);\n      if (!tagContent && omittedCloseTags[this._tag]) {\n        mountImage = tagOpen + '/>';\n      } else {\n        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';\n      }\n    }\n\n    switch (this._tag) {\n      case 'input':\n        transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);\n      // falls through\n      case 'button':\n      case 'select':\n      case 'textarea':\n        if (props.autoFocus) {\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\n        }\n        break;\n    }\n\n    return mountImage;\n  },\n\n  /**\n   * Creates markup for the open tag and all attributes.\n   *\n   * This method has side effects because events get registered.\n   *\n   * Iterating over object properties is faster than iterating over arrays.\n   * @see http://jsperf.com/obj-vs-arr-iteration\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @return {string} Markup of opening tag.\n   */\n  _createOpenTagMarkupAndPutListeners: function (transaction, props) {\n    var ret = '<' + this._currentElement.type;\n\n    for (var propKey in props) {\n      if (!props.hasOwnProperty(propKey)) {\n        continue;\n      }\n      var propValue = props[propKey];\n      if (propValue == null) {\n        continue;\n      }\n      if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (propValue) {\n          enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);\n        }\n      } else {\n        if (propKey === STYLE) {\n          if (propValue) {\n            if (process.env.NODE_ENV !== 'production') {\n              // See `_updateDOMProperties`. style block\n              this._previousStyle = propValue;\n            }\n            propValue = this._previousStyleCopy = assign({}, props.style);\n          }\n          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);\n        }\n        var markup = null;\n        if (this._tag != null && isCustomComponent(this._tag, props)) {\n          if (propKey !== CHILDREN) {\n            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);\n          }\n        } else {\n          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\n        }\n        if (markup) {\n          ret += ' ' + markup;\n        }\n      }\n    }\n\n    // For static pages, no need to put React ID and checksum. Saves lots of\n    // bytes.\n    if (transaction.renderToStaticMarkup) {\n      return ret;\n    }\n\n    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);\n    return ret + ' ' + markupForID;\n  },\n\n  /**\n   * Creates markup for the content between the tags.\n   *\n   * @private\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} props\n   * @param {object} context\n   * @return {string} Content markup.\n   */\n  _createContentMarkup: function (transaction, props, context) {\n    var ret = '';\n\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        ret = innerHTML.__html;\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        // TODO: Validate that text is allowed as a child of this node\n        ret = escapeTextContentForBrowser(contentToUse);\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        ret = mountImages.join('');\n      }\n    }\n    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\\n') {\n      // text/html ignores the first character in these tags if it's a newline\n      // Prefer to break application/xml over text/html (for now) by adding\n      // a newline specifically to get eaten by the parser. (Alternately for\n      // textareas, replacing \"^\\n\" with \"\\r\\n\" doesn't get eaten, and the first\n      // \\r is normalized out by HTMLTextAreaElement#value.)\n      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\n      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\n      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\n      // See: Parsing of \"textarea\" \"listing\" and \"pre\" elements\n      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\n      return '\\n' + ret;\n    } else {\n      return ret;\n    }\n  },\n\n  _createInitialChildren: function (transaction, props, context, el) {\n    // Intentional use of != to avoid catching zero/false.\n    var innerHTML = props.dangerouslySetInnerHTML;\n    if (innerHTML != null) {\n      if (innerHTML.__html != null) {\n        setInnerHTML(el, innerHTML.__html);\n      }\n    } else {\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\n      var childrenToUse = contentToUse != null ? null : props.children;\n      if (contentToUse != null) {\n        // TODO: Validate that text is allowed as a child of this node\n        setTextContent(el, contentToUse);\n      } else if (childrenToUse != null) {\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\n        for (var i = 0; i < mountImages.length; i++) {\n          el.appendChild(mountImages[i]);\n        }\n      }\n    }\n  },\n\n  /**\n   * Receives a next element and updates the component.\n   *\n   * @internal\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @param {object} context\n   */\n  receiveComponent: function (nextElement, transaction, context) {\n    var prevElement = this._currentElement;\n    this._currentElement = nextElement;\n    this.updateComponent(transaction, prevElement, nextElement, context);\n  },\n\n  /**\n   * Updates a native DOM component after it has already been allocated and\n   * attached to the DOM. Reconciles the root DOM node, then recurses.\n   *\n   * @param {ReactReconcileTransaction} transaction\n   * @param {ReactElement} prevElement\n   * @param {ReactElement} nextElement\n   * @internal\n   * @overridable\n   */\n  updateComponent: function (transaction, prevElement, nextElement, context) {\n    var lastProps = prevElement.props;\n    var nextProps = this._currentElement.props;\n\n    switch (this._tag) {\n      case 'button':\n        lastProps = ReactDOMButton.getNativeProps(this, lastProps);\n        nextProps = ReactDOMButton.getNativeProps(this, nextProps);\n        break;\n      case 'input':\n        ReactDOMInput.updateWrapper(this);\n        lastProps = ReactDOMInput.getNativeProps(this, lastProps);\n        nextProps = ReactDOMInput.getNativeProps(this, nextProps);\n        break;\n      case 'option':\n        lastProps = ReactDOMOption.getNativeProps(this, lastProps);\n        nextProps = ReactDOMOption.getNativeProps(this, nextProps);\n        break;\n      case 'select':\n        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);\n        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);\n        break;\n      case 'textarea':\n        ReactDOMTextarea.updateWrapper(this);\n        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);\n        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);\n        break;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // If the context is reference-equal to the old one, pass down the same\n      // processed object so the update bailout in ReactReconciler behaves\n      // correctly (and identically in dev and prod). See #5005.\n      if (this._unprocessedContextDev !== context) {\n        this._unprocessedContextDev = context;\n        this._processedContextDev = processChildContextDev(context, this);\n      }\n      context = this._processedContextDev;\n    }\n\n    assertValidProps(this, nextProps);\n    this._updateDOMProperties(lastProps, nextProps, transaction, null);\n    this._updateDOMChildren(lastProps, nextProps, transaction, context);\n\n    if (!canDefineProperty && this._nodeWithLegacyProperties) {\n      this._nodeWithLegacyProperties.props = nextProps;\n    }\n\n    if (this._tag === 'select') {\n      // <select> value update needs to occur after <option> children\n      // reconciliation\n      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);\n    }\n  },\n\n  /**\n   * Reconciles the properties by detecting differences in property values and\n   * updating the DOM as necessary. This function is probably the single most\n   * critical path for performance optimization.\n   *\n   * TODO: Benchmark whether checking for changed values in memory actually\n   *       improves performance (especially statically positioned elements).\n   * TODO: Benchmark the effects of putting this at the top since 99% of props\n   *       do not change for a given reconciliation.\n   * TODO: Benchmark areas that can be improved with caching.\n   *\n   * @private\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {ReactReconcileTransaction} transaction\n   * @param {?DOMElement} node\n   */\n  _updateDOMProperties: function (lastProps, nextProps, transaction, node) {\n    var propKey;\n    var styleName;\n    var styleUpdates;\n    for (propKey in lastProps) {\n      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        var lastStyle = this._previousStyleCopy;\n        for (styleName in lastStyle) {\n          if (lastStyle.hasOwnProperty(styleName)) {\n            styleUpdates = styleUpdates || {};\n            styleUpdates[styleName] = '';\n          }\n        }\n        this._previousStyleCopy = null;\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (lastProps[propKey]) {\n          // Only call deleteListener if there was a listener previously or\n          // else willDeleteListener gets called when there wasn't actually a\n          // listener (e.g., onClick={null})\n          deleteListener(this._rootNodeID, propKey);\n        }\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        if (!node) {\n          node = ReactMount.getNode(this._rootNodeID);\n        }\n        DOMPropertyOperations.deleteValueForProperty(node, propKey);\n      }\n    }\n    for (propKey in nextProps) {\n      var nextProp = nextProps[propKey];\n      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];\n      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {\n        continue;\n      }\n      if (propKey === STYLE) {\n        if (nextProp) {\n          if (process.env.NODE_ENV !== 'production') {\n            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);\n            this._previousStyle = nextProp;\n          }\n          nextProp = this._previousStyleCopy = assign({}, nextProp);\n        } else {\n          this._previousStyleCopy = null;\n        }\n        if (lastProp) {\n          // Unset styles on `lastProp` but not on `nextProp`.\n          for (styleName in lastProp) {\n            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `lastProp`.\n          for (styleName in nextProp) {\n            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Relies on `updateStylesByID` not mutating `styleUpdates`.\n          styleUpdates = nextProp;\n        }\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\n        if (nextProp) {\n          enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);\n        } else if (lastProp) {\n          deleteListener(this._rootNodeID, propKey);\n        }\n      } else if (isCustomComponent(this._tag, nextProps)) {\n        if (!node) {\n          node = ReactMount.getNode(this._rootNodeID);\n        }\n        if (propKey === CHILDREN) {\n          nextProp = null;\n        }\n        DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\n        if (!node) {\n          node = ReactMount.getNode(this._rootNodeID);\n        }\n        // If we're updating to null or undefined, we should remove the property\n        // from the DOM node instead of inadvertantly setting to a string. This\n        // brings us in line with the same behavior we have on initial render.\n        if (nextProp != null) {\n          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);\n        } else {\n          DOMPropertyOperations.deleteValueForProperty(node, propKey);\n        }\n      }\n    }\n    if (styleUpdates) {\n      if (!node) {\n        node = ReactMount.getNode(this._rootNodeID);\n      }\n      CSSPropertyOperations.setValueForStyles(node, styleUpdates);\n    }\n  },\n\n  /**\n   * Reconciles the children with the various properties that affect the\n   * children content.\n   *\n   * @param {object} lastProps\n   * @param {object} nextProps\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   */\n  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {\n    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\n    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\n\n    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;\n    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;\n\n    // Note the use of `!=` which checks for null or undefined.\n    var lastChildren = lastContent != null ? null : lastProps.children;\n    var nextChildren = nextContent != null ? null : nextProps.children;\n\n    // If we're switching from children to content/html or vice versa, remove\n    // the old content\n    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\n    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\n    if (lastChildren != null && nextChildren == null) {\n      this.updateChildren(null, transaction, context);\n    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\n      this.updateTextContent('');\n    }\n\n    if (nextContent != null) {\n      if (lastContent !== nextContent) {\n        this.updateTextContent('' + nextContent);\n      }\n    } else if (nextHtml != null) {\n      if (lastHtml !== nextHtml) {\n        this.updateMarkup('' + nextHtml);\n      }\n    } else if (nextChildren != null) {\n      this.updateChildren(nextChildren, transaction, context);\n    }\n  },\n\n  /**\n   * Destroys all event registrations for this instance. Does not remove from\n   * the DOM. That must be done by the parent.\n   *\n   * @internal\n   */\n  unmountComponent: function () {\n    switch (this._tag) {\n      case 'iframe':\n      case 'img':\n      case 'form':\n      case 'video':\n      case 'audio':\n        var listeners = this._wrapperState.listeners;\n        if (listeners) {\n          for (var i = 0; i < listeners.length; i++) {\n            listeners[i].remove();\n          }\n        }\n        break;\n      case 'input':\n        ReactDOMInput.unmountWrapper(this);\n        break;\n      case 'html':\n      case 'head':\n      case 'body':\n        /**\n         * Components like <html> <head> and <body> can't be removed or added\n         * easily in a cross-browser way, however it's valuable to be able to\n         * take advantage of React's reconciliation for styling and <title>\n         * management. So we just document it and throw in dangerous cases.\n         */\n        !false ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;\n        break;\n    }\n\n    this.unmountChildren();\n    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n    this._rootNodeID = null;\n    this._wrapperState = null;\n    if (this._nodeWithLegacyProperties) {\n      var node = this._nodeWithLegacyProperties;\n      node._reactInternalComponent = null;\n      this._nodeWithLegacyProperties = null;\n    }\n  },\n\n  getPublicInstance: function () {\n    if (!this._nodeWithLegacyProperties) {\n      var node = ReactMount.getNode(this._rootNodeID);\n\n      node._reactInternalComponent = this;\n      node.getDOMNode = legacyGetDOMNode;\n      node.isMounted = legacyIsMounted;\n      node.setState = legacySetStateEtc;\n      node.replaceState = legacySetStateEtc;\n      node.forceUpdate = legacySetStateEtc;\n      node.setProps = legacySetProps;\n      node.replaceProps = legacyReplaceProps;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (canDefineProperty) {\n          Object.defineProperties(node, legacyPropsDescriptor);\n        } else {\n          // updateComponent will update this property on subsequent renders\n          node.props = this._currentElement.props;\n        }\n      } else {\n        // updateComponent will update this property on subsequent renders\n        node.props = this._currentElement.props;\n      }\n\n      this._nodeWithLegacyProperties = node;\n    }\n    return this._nodeWithLegacyProperties;\n  }\n\n};\n\nReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {\n  mountComponent: 'mountComponent',\n  updateComponent: 'updateComponent'\n});\n\nassign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);\n\nmodule.exports = ReactDOMComponent;\n}).call(this,require('_process'))\n\n},{\"./AutoFocusUtils\":\"react/lib/AutoFocusUtils\",\"./CSSPropertyOperations\":\"react/lib/CSSPropertyOperations\",\"./DOMProperty\":\"react/lib/DOMProperty\",\"./DOMPropertyOperations\":\"react/lib/DOMPropertyOperations\",\"./EventConstants\":\"react/lib/EventConstants\",\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactBrowserEventEmitter\":\"react/lib/ReactBrowserEventEmitter\",\"./ReactComponentBrowserEnvironment\":\"react/lib/ReactComponentBrowserEnvironment\",\"./ReactDOMButton\":\"react/lib/ReactDOMButton\",\"./ReactDOMInput\":\"react/lib/ReactDOMInput\",\"./ReactDOMOption\":\"react/lib/ReactDOMOption\",\"./ReactDOMSelect\":\"react/lib/ReactDOMSelect\",\"./ReactDOMTextarea\":\"react/lib/ReactDOMTextarea\",\"./ReactMount\":\"react/lib/ReactMount\",\"./ReactMultiChild\":\"react/lib/ReactMultiChild\",\"./ReactPerf\":\"react/lib/ReactPerf\",\"./ReactUpdateQueue\":\"react/lib/ReactUpdateQueue\",\"./canDefineProperty\":11,\"./escapeTextContentForBrowser\":\"react/lib/escapeTextContentForBrowser\",\"./isEventSupported\":\"react/lib/isEventSupported\",\"./setInnerHTML\":\"react/lib/setInnerHTML\",\"./setTextContent\":\"react/lib/setTextContent\",\"./validateDOMNesting\":\"react/lib/validateDOMNesting\",\"_process\":1,\"fbjs/lib/invariant\":29,\"fbjs/lib/keyOf\":34,\"fbjs/lib/shallowEqual\":39,\"fbjs/lib/warning\":41}],\"react/lib/ReactDOMFactories\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMFactories\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\nvar ReactElementValidator = require('./ReactElementValidator');\n\nvar mapObject = require('fbjs/lib/mapObject');\n\n/**\n * Create a factory that creates HTML tag elements.\n *\n * @param {string} tag Tag name (e.g. `div`).\n * @private\n */\nfunction createDOMFactory(tag) {\n  if (process.env.NODE_ENV !== 'production') {\n    return ReactElementValidator.createFactory(tag);\n  }\n  return ReactElement.createFactory(tag);\n}\n\n/**\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n * This is also accessible via `React.DOM`.\n *\n * @public\n */\nvar ReactDOMFactories = mapObject({\n  a: 'a',\n  abbr: 'abbr',\n  address: 'address',\n  area: 'area',\n  article: 'article',\n  aside: 'aside',\n  audio: 'audio',\n  b: 'b',\n  base: 'base',\n  bdi: 'bdi',\n  bdo: 'bdo',\n  big: 'big',\n  blockquote: 'blockquote',\n  body: 'body',\n  br: 'br',\n  button: 'button',\n  canvas: 'canvas',\n  caption: 'caption',\n  cite: 'cite',\n  code: 'code',\n  col: 'col',\n  colgroup: 'colgroup',\n  data: 'data',\n  datalist: 'datalist',\n  dd: 'dd',\n  del: 'del',\n  details: 'details',\n  dfn: 'dfn',\n  dialog: 'dialog',\n  div: 'div',\n  dl: 'dl',\n  dt: 'dt',\n  em: 'em',\n  embed: 'embed',\n  fieldset: 'fieldset',\n  figcaption: 'figcaption',\n  figure: 'figure',\n  footer: 'footer',\n  form: 'form',\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  head: 'head',\n  header: 'header',\n  hgroup: 'hgroup',\n  hr: 'hr',\n  html: 'html',\n  i: 'i',\n  iframe: 'iframe',\n  img: 'img',\n  input: 'input',\n  ins: 'ins',\n  kbd: 'kbd',\n  keygen: 'keygen',\n  label: 'label',\n  legend: 'legend',\n  li: 'li',\n  link: 'link',\n  main: 'main',\n  map: 'map',\n  mark: 'mark',\n  menu: 'menu',\n  menuitem: 'menuitem',\n  meta: 'meta',\n  meter: 'meter',\n  nav: 'nav',\n  noscript: 'noscript',\n  object: 'object',\n  ol: 'ol',\n  optgroup: 'optgroup',\n  option: 'option',\n  output: 'output',\n  p: 'p',\n  param: 'param',\n  picture: 'picture',\n  pre: 'pre',\n  progress: 'progress',\n  q: 'q',\n  rp: 'rp',\n  rt: 'rt',\n  ruby: 'ruby',\n  s: 's',\n  samp: 'samp',\n  script: 'script',\n  section: 'section',\n  select: 'select',\n  small: 'small',\n  source: 'source',\n  span: 'span',\n  strong: 'strong',\n  style: 'style',\n  sub: 'sub',\n  summary: 'summary',\n  sup: 'sup',\n  table: 'table',\n  tbody: 'tbody',\n  td: 'td',\n  textarea: 'textarea',\n  tfoot: 'tfoot',\n  th: 'th',\n  thead: 'thead',\n  time: 'time',\n  title: 'title',\n  tr: 'tr',\n  track: 'track',\n  u: 'u',\n  ul: 'ul',\n  'var': 'var',\n  video: 'video',\n  wbr: 'wbr',\n\n  // SVG\n  circle: 'circle',\n  clipPath: 'clipPath',\n  defs: 'defs',\n  ellipse: 'ellipse',\n  g: 'g',\n  image: 'image',\n  line: 'line',\n  linearGradient: 'linearGradient',\n  mask: 'mask',\n  path: 'path',\n  pattern: 'pattern',\n  polygon: 'polygon',\n  polyline: 'polyline',\n  radialGradient: 'radialGradient',\n  rect: 'rect',\n  stop: 'stop',\n  svg: 'svg',\n  text: 'text',\n  tspan: 'tspan'\n\n}, createDOMFactory);\n\nmodule.exports = ReactDOMFactories;\n}).call(this,require('_process'))\n\n},{\"./ReactElement\":\"react/lib/ReactElement\",\"./ReactElementValidator\":\"react/lib/ReactElementValidator\",\"_process\":1,\"fbjs/lib/mapObject\":35}],\"react/lib/ReactDOMFeatureFlags\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMFeatureFlags\n */\n\n'use strict';\n\nvar ReactDOMFeatureFlags = {\n  useCreateElement: false\n};\n\nmodule.exports = ReactDOMFeatureFlags;\n},{}],\"react/lib/ReactDOMIDOperations\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMIDOperations\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar ReactMount = require('./ReactMount');\nvar ReactPerf = require('./ReactPerf');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Errors for properties that should not be updated with `updatePropertyByID()`.\n *\n * @type {object}\n * @private\n */\nvar INVALID_PROPERTY_ERRORS = {\n  dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',\n  style: '`style` must be set using `updateStylesByID()`.'\n};\n\n/**\n * Operations used to process updates to DOM nodes.\n */\nvar ReactDOMIDOperations = {\n\n  /**\n   * Updates a DOM node with new property values. This should only be used to\n   * update DOM properties in `DOMProperty`.\n   *\n   * @param {string} id ID of the node to update.\n   * @param {string} name A valid property name, see `DOMProperty`.\n   * @param {*} value New value of the property.\n   * @internal\n   */\n  updatePropertyByID: function (id, name, value) {\n    var node = ReactMount.getNode(id);\n    !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;\n\n    // If we're updating to null or undefined, we should remove the property\n    // from the DOM node instead of inadvertantly setting to a string. This\n    // brings us in line with the same behavior we have on initial render.\n    if (value != null) {\n      DOMPropertyOperations.setValueForProperty(node, name, value);\n    } else {\n      DOMPropertyOperations.deleteValueForProperty(node, name);\n    }\n  },\n\n  /**\n   * Replaces a DOM node that exists in the document with markup.\n   *\n   * @param {string} id ID of child to be replaced.\n   * @param {string} markup Dangerous markup to inject in place of child.\n   * @internal\n   * @see {Danger.dangerouslyReplaceNodeWithMarkup}\n   */\n  dangerouslyReplaceNodeWithMarkupByID: function (id, markup) {\n    var node = ReactMount.getNode(id);\n    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);\n  },\n\n  /**\n   * Updates a component's children by processing a series of updates.\n   *\n   * @param {array<object>} updates List of update configurations.\n   * @param {array<string>} markup List of markup strings.\n   * @internal\n   */\n  dangerouslyProcessChildrenUpdates: function (updates, markup) {\n    for (var i = 0; i < updates.length; i++) {\n      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);\n    }\n    DOMChildrenOperations.processUpdates(updates, markup);\n  }\n};\n\nReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {\n  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',\n  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'\n});\n\nmodule.exports = ReactDOMIDOperations;\n}).call(this,require('_process'))\n\n},{\"./DOMChildrenOperations\":\"react/lib/DOMChildrenOperations\",\"./DOMPropertyOperations\":\"react/lib/DOMPropertyOperations\",\"./ReactMount\":\"react/lib/ReactMount\",\"./ReactPerf\":\"react/lib/ReactPerf\",\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/ReactDOMInput\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMInput\n */\n\n'use strict';\n\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactMount = require('./ReactMount');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\n\nvar instancesByReactID = {};\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMInput.updateWrapper(this);\n  }\n}\n\n/**\n * Implements an <input> native component that allows setting these optional\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\n *\n * If `checked` or `value` are not supplied (or null/undefined), user actions\n * that affect the checked state or value will trigger updates to the element.\n *\n * If they are supplied (and not null/undefined), the rendered element will not\n * trigger updates to the element. Instead, the props must change in order for\n * the rendered element to be updated.\n *\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\n * with an empty value (or `defaultValue`).\n *\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\n */\nvar ReactDOMInput = {\n  getNativeProps: function (inst, props, context) {\n    var value = LinkedValueUtils.getValue(props);\n    var checked = LinkedValueUtils.getChecked(props);\n\n    var nativeProps = assign({}, props, {\n      defaultChecked: undefined,\n      defaultValue: undefined,\n      value: value != null ? value : inst._wrapperState.initialValue,\n      checked: checked != null ? checked : inst._wrapperState.initialChecked,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return nativeProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\n    }\n\n    var defaultValue = props.defaultValue;\n    inst._wrapperState = {\n      initialChecked: props.defaultChecked || false,\n      initialValue: defaultValue != null ? defaultValue : null,\n      onChange: _handleChange.bind(inst)\n    };\n  },\n\n  mountReadyWrapper: function (inst) {\n    // Can't be in mountWrapper or else server rendering leaks.\n    instancesByReactID[inst._rootNodeID] = inst;\n  },\n\n  unmountWrapper: function (inst) {\n    delete instancesByReactID[inst._rootNodeID];\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // TODO: Shouldn't this be getChecked(props)?\n    var checked = props.checked;\n    if (checked != null) {\n      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  // Here we use asap to wait until all updates have propagated, which\n  // is important when using controlled components within layers:\n  // https://github.com/facebook/react/issues/1698\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n\n  var name = props.name;\n  if (props.type === 'radio' && name != null) {\n    var rootNode = ReactMount.getNode(this._rootNodeID);\n    var queryRoot = rootNode;\n\n    while (queryRoot.parentNode) {\n      queryRoot = queryRoot.parentNode;\n    }\n\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\n    // but that sometimes behaves strangely in IE8. We could also try using\n    // `form.getElementsByName`, but that will only return direct children\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\n    // the input might not even be in a form, let's just use the global\n    // `querySelectorAll` to ensure we don't miss anything.\n    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\"radio\"]');\n\n    for (var i = 0; i < group.length; i++) {\n      var otherNode = group[i];\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\n        continue;\n      }\n      // This will throw if radio buttons rendered by different copies of React\n      // and the same name are rendered into the same form (same as #1939).\n      // That's probably okay; we don't support it just as we don't support\n      // mixing React with non-React.\n      var otherID = ReactMount.getID(otherNode);\n      !otherID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;\n      var otherInstance = instancesByReactID[otherID];\n      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;\n      // If this is a controlled radio button group, forcing the input that\n      // was previously checked to update will cause it to be come re-checked\n      // as appropriate.\n      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\n    }\n  }\n\n  return returnValue;\n}\n\nmodule.exports = ReactDOMInput;\n}).call(this,require('_process'))\n\n},{\"./LinkedValueUtils\":\"react/lib/LinkedValueUtils\",\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactDOMIDOperations\":\"react/lib/ReactDOMIDOperations\",\"./ReactMount\":\"react/lib/ReactMount\",\"./ReactUpdates\":\"react/lib/ReactUpdates\",\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/ReactDOMOption\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactDOMSelect = require('./ReactDOMSelect');\n\nvar assign = require('./Object.assign');\nvar warning = require('fbjs/lib/warning');\n\nvar valueContextKey = ReactDOMSelect.valueContextKey;\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = {\n  mountWrapper: function (inst, props, context) {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;\n    }\n\n    // Look up whether this option is 'selected' via context\n    var selectValue = context[valueContextKey];\n\n    // If context key is null (e.g., no specified value or after initial mount)\n    // or missing (e.g., for <datalist>), we don't change props.selected\n    var selected = null;\n    if (selectValue != null) {\n      selected = false;\n      if (Array.isArray(selectValue)) {\n        // multiple\n        for (var i = 0; i < selectValue.length; i++) {\n          if ('' + selectValue[i] === '' + props.value) {\n            selected = true;\n            break;\n          }\n        }\n      } else {\n        selected = '' + selectValue === '' + props.value;\n      }\n    }\n\n    inst._wrapperState = { selected: selected };\n  },\n\n  getNativeProps: function (inst, props, context) {\n    var nativeProps = assign({ selected: undefined, children: undefined }, props);\n\n    // Read state only from initial mount because <select> updates value\n    // manually; we need the initial state only for server rendering\n    if (inst._wrapperState.selected != null) {\n      nativeProps.selected = inst._wrapperState.selected;\n    }\n\n    var content = '';\n\n    // Flatten children and warn if they aren't strings or numbers;\n    // invalid types are ignored.\n    ReactChildren.forEach(props.children, function (child) {\n      if (child == null) {\n        return;\n      }\n      if (typeof child === 'string' || typeof child === 'number') {\n        content += child;\n      } else {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;\n      }\n    });\n\n    nativeProps.children = content;\n    return nativeProps;\n  }\n\n};\n\nmodule.exports = ReactDOMOption;\n}).call(this,require('_process'))\n\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactChildren\":\"react/lib/ReactChildren\",\"./ReactDOMSelect\":\"react/lib/ReactDOMSelect\",\"_process\":1,\"fbjs/lib/warning\":41}],\"react/lib/ReactDOMSelection\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelection\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar getNodeForCharacterOffset = require('./getNodeForCharacterOffset');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * While `isCollapsed` is available on the Selection object and `collapsed`\n * is available on the Range object, IE11 sometimes gets them wrong.\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\n */\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\n  return anchorNode === focusNode && anchorOffset === focusOffset;\n}\n\n/**\n * Get the appropriate anchor and focus node/offset pairs for IE.\n *\n * The catch here is that IE's selection API doesn't provide information\n * about whether the selection is forward or backward, so we have to\n * behave as though it's always forward.\n *\n * IE text differs from modern selection in that it behaves as though\n * block elements end with a new line. This means character offsets will\n * differ between the two APIs.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getIEOffsets(node) {\n  var selection = document.selection;\n  var selectedRange = selection.createRange();\n  var selectedLength = selectedRange.text.length;\n\n  // Duplicate selection so we can move range without breaking user selection.\n  var fromStart = selectedRange.duplicate();\n  fromStart.moveToElementText(node);\n  fromStart.setEndPoint('EndToStart', selectedRange);\n\n  var startOffset = fromStart.text.length;\n  var endOffset = startOffset + selectedLength;\n\n  return {\n    start: startOffset,\n    end: endOffset\n  };\n}\n\n/**\n * @param {DOMElement} node\n * @return {?object}\n */\nfunction getModernOffsets(node) {\n  var selection = window.getSelection && window.getSelection();\n\n  if (!selection || selection.rangeCount === 0) {\n    return null;\n  }\n\n  var anchorNode = selection.anchorNode;\n  var anchorOffset = selection.anchorOffset;\n  var focusNode = selection.focusNode;\n  var focusOffset = selection.focusOffset;\n\n  var currentRange = selection.getRangeAt(0);\n\n  // In Firefox, range.startContainer and range.endContainer can be \"anonymous\n  // divs\", e.g. the up/down buttons on an <input type=\"number\">. Anonymous\n  // divs do not seem to expose properties, triggering a \"Permission denied\n  // error\" if any of its properties are accessed. The only seemingly possible\n  // way to avoid erroring is to access a property that typically works for\n  // non-anonymous divs and catch any error that may otherwise arise. See\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\n  try {\n    /* eslint-disable no-unused-expressions */\n    currentRange.startContainer.nodeType;\n    currentRange.endContainer.nodeType;\n    /* eslint-enable no-unused-expressions */\n  } catch (e) {\n    return null;\n  }\n\n  // If the node and offset values are the same, the selection is collapsed.\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\n  // this value wrong.\n  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\n\n  var tempRange = currentRange.cloneRange();\n  tempRange.selectNodeContents(node);\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\n\n  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\n\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\n  var end = start + rangeLength;\n\n  // Detect whether the selection is backward.\n  var detectionRange = document.createRange();\n  detectionRange.setStart(anchorNode, anchorOffset);\n  detectionRange.setEnd(focusNode, focusOffset);\n  var isBackward = detectionRange.collapsed;\n\n  return {\n    start: isBackward ? end : start,\n    end: isBackward ? start : end\n  };\n}\n\n/**\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setIEOffsets(node, offsets) {\n  var range = document.selection.createRange().duplicate();\n  var start, end;\n\n  if (typeof offsets.end === 'undefined') {\n    start = offsets.start;\n    end = start;\n  } else if (offsets.start > offsets.end) {\n    start = offsets.end;\n    end = offsets.start;\n  } else {\n    start = offsets.start;\n    end = offsets.end;\n  }\n\n  range.moveToElementText(node);\n  range.moveStart('character', start);\n  range.setEndPoint('EndToStart', range);\n  range.moveEnd('character', end - start);\n  range.select();\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n *\n * @param {DOMElement|DOMTextNode} node\n * @param {object} offsets\n */\nfunction setModernOffsets(node, offsets) {\n  if (!window.getSelection) {\n    return;\n  }\n\n  var selection = window.getSelection();\n  var length = node[getTextContentAccessor()].length;\n  var start = Math.min(offsets.start, length);\n  var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);\n\n  // IE 11 uses modern selection, but doesn't support the extend method.\n  // Flip backward selections, so we can set with a single range.\n  if (!selection.extend && start > end) {\n    var temp = end;\n    end = start;\n    start = temp;\n  }\n\n  var startMarker = getNodeForCharacterOffset(node, start);\n  var endMarker = getNodeForCharacterOffset(node, end);\n\n  if (startMarker && endMarker) {\n    var range = document.createRange();\n    range.setStart(startMarker.node, startMarker.offset);\n    selection.removeAllRanges();\n\n    if (start > end) {\n      selection.addRange(range);\n      selection.extend(endMarker.node, endMarker.offset);\n    } else {\n      range.setEnd(endMarker.node, endMarker.offset);\n      selection.addRange(range);\n    }\n  }\n}\n\nvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\n\nvar ReactDOMSelection = {\n  /**\n   * @param {DOMElement} node\n   */\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\n\n  /**\n   * @param {DOMElement|DOMTextNode} node\n   * @param {object} offsets\n   */\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\n};\n\nmodule.exports = ReactDOMSelection;\n},{\"./getNodeForCharacterOffset\":\"react/lib/getNodeForCharacterOffset\",\"./getTextContentAccessor\":\"react/lib/getTextContentAccessor\",\"fbjs/lib/ExecutionEnvironment\":14}],\"react/lib/ReactDOMSelect\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMSelect\n */\n\n'use strict';\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactMount = require('./ReactMount');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar warning = require('fbjs/lib/warning');\n\nvar valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);\n\nfunction updateOptionsIfPendingUpdateAndMounted() {\n  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\n    this._wrapperState.pendingUpdate = false;\n\n    var props = this._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n\n    if (value != null) {\n      updateOptions(this, props, value);\n    }\n  }\n}\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nvar valuePropNames = ['value', 'defaultValue'];\n\n/**\n * Validation function for `value` and `defaultValue`.\n * @private\n */\nfunction checkSelectPropTypes(inst, props) {\n  var owner = inst._currentElement._owner;\n  LinkedValueUtils.checkPropTypes('select', props, owner);\n\n  for (var i = 0; i < valuePropNames.length; i++) {\n    var propName = valuePropNames[i];\n    if (props[propName] == null) {\n      continue;\n    }\n    if (props.multiple) {\n      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;\n    } else {\n      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;\n    }\n  }\n}\n\n/**\n * @param {ReactDOMComponent} inst\n * @param {boolean} multiple\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\n * @private\n */\nfunction updateOptions(inst, multiple, propValue) {\n  var selectedValue, i;\n  var options = ReactMount.getNode(inst._rootNodeID).options;\n\n  if (multiple) {\n    selectedValue = {};\n    for (i = 0; i < propValue.length; i++) {\n      selectedValue['' + propValue[i]] = true;\n    }\n    for (i = 0; i < options.length; i++) {\n      var selected = selectedValue.hasOwnProperty(options[i].value);\n      if (options[i].selected !== selected) {\n        options[i].selected = selected;\n      }\n    }\n  } else {\n    // Do not set `select.value` as exact behavior isn't consistent across all\n    // browsers for all cases.\n    selectedValue = '' + propValue;\n    for (i = 0; i < options.length; i++) {\n      if (options[i].value === selectedValue) {\n        options[i].selected = true;\n        return;\n      }\n    }\n    if (options.length) {\n      options[0].selected = true;\n    }\n  }\n}\n\n/**\n * Implements a <select> native component that allows optionally setting the\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\n * stringable. If `multiple` is true, the prop must be an array of stringables.\n *\n * If `value` is not supplied (or null/undefined), user actions that change the\n * selected option will trigger updates to the rendered options.\n *\n * If it is supplied (and not null/undefined), the rendered options will not\n * update in response to user actions. Instead, the `value` prop must change in\n * order for the rendered options to update.\n *\n * If `defaultValue` is provided, any options with the supplied values will be\n * selected.\n */\nvar ReactDOMSelect = {\n  valueContextKey: valueContextKey,\n\n  getNativeProps: function (inst, props, context) {\n    return assign({}, props, {\n      onChange: inst._wrapperState.onChange,\n      value: undefined\n    });\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      checkSelectPropTypes(inst, props);\n    }\n\n    var value = LinkedValueUtils.getValue(props);\n    inst._wrapperState = {\n      pendingUpdate: false,\n      initialValue: value != null ? value : props.defaultValue,\n      onChange: _handleChange.bind(inst),\n      wasMultiple: Boolean(props.multiple)\n    };\n  },\n\n  processChildContext: function (inst, props, context) {\n    // Pass down initial value so initial generated markup has correct\n    // `selected` attributes\n    var childContext = assign({}, context);\n    childContext[valueContextKey] = inst._wrapperState.initialValue;\n    return childContext;\n  },\n\n  postUpdateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n\n    // After the initial mount, we control selected-ness manually so don't pass\n    // the context value down\n    inst._wrapperState.initialValue = undefined;\n\n    var wasMultiple = inst._wrapperState.wasMultiple;\n    inst._wrapperState.wasMultiple = Boolean(props.multiple);\n\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      inst._wrapperState.pendingUpdate = false;\n      updateOptions(inst, Boolean(props.multiple), value);\n    } else if (wasMultiple !== Boolean(props.multiple)) {\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\n      if (props.defaultValue != null) {\n        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\n      } else {\n        // Revert the select back to its default unselected state.\n        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\n      }\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n\n  this._wrapperState.pendingUpdate = true;\n  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMSelect;\n}).call(this,require('_process'))\n\n},{\"./LinkedValueUtils\":\"react/lib/LinkedValueUtils\",\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactMount\":\"react/lib/ReactMount\",\"./ReactUpdates\":\"react/lib/ReactUpdates\",\"_process\":1,\"fbjs/lib/warning\":41}],\"react/lib/ReactDOMServer\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMServer\n */\n\n'use strict';\n\nvar ReactDefaultInjection = require('./ReactDefaultInjection');\nvar ReactServerRendering = require('./ReactServerRendering');\nvar ReactVersion = require('./ReactVersion');\n\nReactDefaultInjection.inject();\n\nvar ReactDOMServer = {\n  renderToString: ReactServerRendering.renderToString,\n  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,\n  version: ReactVersion\n};\n\nmodule.exports = ReactDOMServer;\n},{\"./ReactDefaultInjection\":\"react/lib/ReactDefaultInjection\",\"./ReactServerRendering\":\"react/lib/ReactServerRendering\",\"./ReactVersion\":\"react/lib/ReactVersion\"}],\"react/lib/ReactDOMTextComponent\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\nvar ReactMount = require('./ReactMount');\n\nvar assign = require('./Object.assign');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar setTextContent = require('./setTextContent');\nvar validateDOMNesting = require('./validateDOMNesting');\n\n/**\n * Text nodes violate a couple assumptions that React makes about components:\n *\n *  - When mounting text into the DOM, adjacent text nodes are merged.\n *  - Text nodes cannot be assigned a React root ID.\n *\n * This component is used to wrap strings in elements so that they can undergo\n * the same reconciliation that is applied to elements.\n *\n * TODO: Investigate representing React components in the DOM with text nodes.\n *\n * @class ReactDOMTextComponent\n * @extends ReactComponent\n * @internal\n */\nvar ReactDOMTextComponent = function (props) {\n  // This constructor and its argument is currently used by mocks.\n};\n\nassign(ReactDOMTextComponent.prototype, {\n\n  /**\n   * @param {ReactText} text\n   * @internal\n   */\n  construct: function (text) {\n    // TODO: This is really a ReactText (ReactNode), not a ReactElement\n    this._currentElement = text;\n    this._stringText = '' + text;\n\n    // Properties\n    this._rootNodeID = null;\n    this._mountIndex = 0;\n  },\n\n  /**\n   * Creates the markup for this text node. This node is not intended to have\n   * any features besides containing text content.\n   *\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {string} Markup for this text node.\n   * @internal\n   */\n  mountComponent: function (rootID, transaction, context) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (context[validateDOMNesting.ancestorInfoContextKey]) {\n        validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);\n      }\n    }\n\n    this._rootNodeID = rootID;\n    if (transaction.useCreateElement) {\n      var ownerDocument = context[ReactMount.ownerDocumentContextKey];\n      var el = ownerDocument.createElement('span');\n      DOMPropertyOperations.setAttributeForID(el, rootID);\n      // Populate node cache\n      ReactMount.getID(el);\n      setTextContent(el, this._stringText);\n      return el;\n    } else {\n      var escapedText = escapeTextContentForBrowser(this._stringText);\n\n      if (transaction.renderToStaticMarkup) {\n        // Normally we'd wrap this in a `span` for the reasons stated above, but\n        // since this is a situation where React won't take over (static pages),\n        // we can simply return the text as it is.\n        return escapedText;\n      }\n\n      return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';\n    }\n  },\n\n  /**\n   * Updates this component by updating the text content.\n   *\n   * @param {ReactText} nextText The next text content\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  receiveComponent: function (nextText, transaction) {\n    if (nextText !== this._currentElement) {\n      this._currentElement = nextText;\n      var nextStringText = '' + nextText;\n      if (nextStringText !== this._stringText) {\n        // TODO: Save this as pending props and use performUpdateIfNecessary\n        // and/or updateComponent to do the actual update for consistency with\n        // other component types?\n        this._stringText = nextStringText;\n        var node = ReactMount.getNode(this._rootNodeID);\n        DOMChildrenOperations.updateTextContent(node, nextStringText);\n      }\n    }\n  },\n\n  unmountComponent: function () {\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\n  }\n\n});\n\nmodule.exports = ReactDOMTextComponent;\n}).call(this,require('_process'))\n\n},{\"./DOMChildrenOperations\":\"react/lib/DOMChildrenOperations\",\"./DOMPropertyOperations\":\"react/lib/DOMPropertyOperations\",\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactComponentBrowserEnvironment\":\"react/lib/ReactComponentBrowserEnvironment\",\"./ReactMount\":\"react/lib/ReactMount\",\"./escapeTextContentForBrowser\":\"react/lib/escapeTextContentForBrowser\",\"./setTextContent\":\"react/lib/setTextContent\",\"./validateDOMNesting\":\"react/lib/validateDOMNesting\",\"_process\":1}],\"react/lib/ReactDOMTextarea\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMTextarea\n */\n\n'use strict';\n\nvar LinkedValueUtils = require('./LinkedValueUtils');\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction forceUpdateIfMounted() {\n  if (this._rootNodeID) {\n    // DOM component is still mounted; update\n    ReactDOMTextarea.updateWrapper(this);\n  }\n}\n\n/**\n * Implements a <textarea> native component that allows setting `value`, and\n * `defaultValue`. This differs from the traditional DOM API because value is\n * usually set as PCDATA children.\n *\n * If `value` is not supplied (or null/undefined), user actions that affect the\n * value will trigger updates to the element.\n *\n * If `value` is supplied (and not null/undefined), the rendered element will\n * not trigger updates to the element. Instead, the `value` prop must change in\n * order for the rendered element to be updated.\n *\n * The rendered element will be initialized with an empty value, the prop\n * `defaultValue` if specified, or the children content (deprecated).\n */\nvar ReactDOMTextarea = {\n  getNativeProps: function (inst, props, context) {\n    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;\n\n    // Always set children to the same thing. In IE9, the selection range will\n    // get reset if `textContent` is mutated.\n    var nativeProps = assign({}, props, {\n      defaultValue: undefined,\n      value: undefined,\n      children: inst._wrapperState.initialValue,\n      onChange: inst._wrapperState.onChange\n    });\n\n    return nativeProps;\n  },\n\n  mountWrapper: function (inst, props) {\n    if (process.env.NODE_ENV !== 'production') {\n      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\n    }\n\n    var defaultValue = props.defaultValue;\n    // TODO (yungsters): Remove support for children content in <textarea>.\n    var children = props.children;\n    if (children != null) {\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;\n      }\n      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;\n      if (Array.isArray(children)) {\n        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;\n        children = children[0];\n      }\n\n      defaultValue = '' + children;\n    }\n    if (defaultValue == null) {\n      defaultValue = '';\n    }\n    var value = LinkedValueUtils.getValue(props);\n\n    inst._wrapperState = {\n      // We save the initial value so that `ReactDOMComponent` doesn't update\n      // `textContent` (unnecessary since we update value).\n      // The initial value can be a boolean or object so that's why it's\n      // forced to be a string.\n      initialValue: '' + (value != null ? value : defaultValue),\n      onChange: _handleChange.bind(inst)\n    };\n  },\n\n  updateWrapper: function (inst) {\n    var props = inst._currentElement.props;\n    var value = LinkedValueUtils.getValue(props);\n    if (value != null) {\n      // Cast `value` to a string to ensure the value is set correctly. While\n      // browsers typically do this as necessary, jsdom doesn't.\n      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);\n    }\n  }\n};\n\nfunction _handleChange(event) {\n  var props = this._currentElement.props;\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\n  ReactUpdates.asap(forceUpdateIfMounted, this);\n  return returnValue;\n}\n\nmodule.exports = ReactDOMTextarea;\n}).call(this,require('_process'))\n\n},{\"./LinkedValueUtils\":\"react/lib/LinkedValueUtils\",\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactDOMIDOperations\":\"react/lib/ReactDOMIDOperations\",\"./ReactUpdates\":\"react/lib/ReactUpdates\",\"_process\":1,\"fbjs/lib/invariant\":29,\"fbjs/lib/warning\":41}],\"react/lib/ReactDOM\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOM\n */\n\n/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\nvar ReactDefaultInjection = require('./ReactDefaultInjection');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactMount = require('./ReactMount');\nvar ReactPerf = require('./ReactPerf');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdates = require('./ReactUpdates');\nvar ReactVersion = require('./ReactVersion');\n\nvar findDOMNode = require('./findDOMNode');\nvar renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');\nvar warning = require('fbjs/lib/warning');\n\nReactDefaultInjection.inject();\n\nvar render = ReactPerf.measure('React', 'render', ReactMount.render);\n\nvar React = {\n  findDOMNode: findDOMNode,\n  render: render,\n  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\n  version: ReactVersion,\n\n  /* eslint-disable camelcase */\n  unstable_batchedUpdates: ReactUpdates.batchedUpdates,\n  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer\n};\n\n// Inject the runtime into a devtools global hook regardless of browser.\n// Allows for debugging when the hook is injected on the page.\n/* eslint-enable camelcase */\nif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\n    CurrentOwner: ReactCurrentOwner,\n    InstanceHandles: ReactInstanceHandles,\n    Mount: ReactMount,\n    Reconciler: ReactReconciler,\n    TextComponent: ReactDOMTextComponent\n  });\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\n\n    // First check if devtools is not installed\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n      // If we're in Chrome or Firefox, provide a download link if not installed.\n      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\n        console.debug('Download the React DevTools for a better development experience: ' + 'https://fb.me/react-devtools');\n      }\n    }\n\n    // If we're in IE8, check to see if we are in compatibility mode and provide\n    // information on preventing compatibility mode\n    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;\n\n    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />') : undefined;\n\n    var expectedFeatures = [\n    // shims\n    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim,\n\n    // shams\n    Object_create, Object_freeze];\n\n    for (var i = 0; i < expectedFeatures.length; i++) {\n      if (!expectedFeatures[i]) {\n        console.error('One or more ES5 shims expected by React are not available: ' + 'Add the es5-shim package with `meteor add es5-shim`');\n        break;\n      }\n    }\n  }\n}\n\nmodule.exports = React;\n}).call(this,require('_process'))\n\n},{\"./ReactCurrentOwner\":\"react/lib/ReactCurrentOwner\",\"./ReactDOMTextComponent\":\"react/lib/ReactDOMTextComponent\",\"./ReactDefaultInjection\":\"react/lib/ReactDefaultInjection\",\"./ReactInstanceHandles\":\"react/lib/ReactInstanceHandles\",\"./ReactMount\":\"react/lib/ReactMount\",\"./ReactPerf\":\"react/lib/ReactPerf\",\"./ReactReconciler\":\"react/lib/ReactReconciler\",\"./ReactUpdates\":\"react/lib/ReactUpdates\",\"./ReactVersion\":\"react/lib/ReactVersion\",\"./findDOMNode\":\"react/lib/findDOMNode\",\"./renderSubtreeIntoContainer\":\"react/lib/renderSubtreeIntoContainer\",\"_process\":1,\"fbjs/lib/ExecutionEnvironment\":14,\"fbjs/lib/warning\":41}],\"react/lib/ReactDefaultBatchingStrategy\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultBatchingStrategy\n */\n\n'use strict';\n\nvar ReactUpdates = require('./ReactUpdates');\nvar Transaction = require('./Transaction');\n\nvar assign = require('./Object.assign');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar RESET_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: function () {\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\n  }\n};\n\nvar FLUSH_BATCHED_UPDATES = {\n  initialize: emptyFunction,\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\n};\n\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\n\nfunction ReactDefaultBatchingStrategyTransaction() {\n  this.reinitializeTransaction();\n}\n\nassign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  }\n});\n\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\n\nvar ReactDefaultBatchingStrategy = {\n  isBatchingUpdates: false,\n\n  /**\n   * Call the provided function in a context within which calls to `setState`\n   * and friends are batched such that components aren't updated unnecessarily.\n   */\n  batchedUpdates: function (callback, a, b, c, d, e) {\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\n\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\n\n    // The code is written this way to avoid extra allocations\n    if (alreadyBatchingUpdates) {\n      callback(a, b, c, d, e);\n    } else {\n      transaction.perform(callback, null, a, b, c, d, e);\n    }\n  }\n};\n\nmodule.exports = ReactDefaultBatchingStrategy;\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactUpdates\":\"react/lib/ReactUpdates\",\"./Transaction\":\"react/lib/Transaction\",\"fbjs/lib/emptyFunction\":21}],\"react/lib/ReactDefaultInjection\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultInjection\n */\n\n'use strict';\n\nvar BeforeInputEventPlugin = require('./BeforeInputEventPlugin');\nvar ChangeEventPlugin = require('./ChangeEventPlugin');\nvar ClientReactRootIndex = require('./ClientReactRootIndex');\nvar DefaultEventPluginOrder = require('./DefaultEventPluginOrder');\nvar EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');\nvar ReactBrowserComponentMixin = require('./ReactBrowserComponentMixin');\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\nvar ReactDOMComponent = require('./ReactDOMComponent');\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\nvar ReactEventListener = require('./ReactEventListener');\nvar ReactInjection = require('./ReactInjection');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactMount = require('./ReactMount');\nvar ReactReconcileTransaction = require('./ReactReconcileTransaction');\nvar SelectEventPlugin = require('./SelectEventPlugin');\nvar ServerReactRootIndex = require('./ServerReactRootIndex');\nvar SimpleEventPlugin = require('./SimpleEventPlugin');\nvar SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');\n\nvar alreadyInjected = false;\n\nfunction inject() {\n  if (alreadyInjected) {\n    // TODO: This is currently true because these injections are shared between\n    // the client and the server package. They should be built independently\n    // and not share any injection state. Then this problem will be solved.\n    return;\n  }\n  alreadyInjected = true;\n\n  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\n\n  /**\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\n   */\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\n  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);\n  ReactInjection.EventPluginHub.injectMount(ReactMount);\n\n  /**\n   * Some important event plugins included by default (without having to require\n   * them).\n   */\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\n    SimpleEventPlugin: SimpleEventPlugin,\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\n    ChangeEventPlugin: ChangeEventPlugin,\n    SelectEventPlugin: SelectEventPlugin,\n    BeforeInputEventPlugin: BeforeInputEventPlugin\n  });\n\n  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);\n\n  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);\n\n  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);\n\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\n\n  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');\n\n  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\n  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n\n  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);\n\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';\n    if (/[?&]react_perf\\b/.test(url)) {\n      var ReactDefaultPerf = require('./ReactDefaultPerf');\n      ReactDefaultPerf.start();\n    }\n  }\n}\n\nmodule.exports = {\n  inject: inject\n};\n}).call(this,require('_process'))\n\n},{\"./BeforeInputEventPlugin\":\"react/lib/BeforeInputEventPlugin\",\"./ChangeEventPlugin\":\"react/lib/ChangeEventPlugin\",\"./ClientReactRootIndex\":\"react/lib/ClientReactRootIndex\",\"./DefaultEventPluginOrder\":\"react/lib/DefaultEventPluginOrder\",\"./EnterLeaveEventPlugin\":\"react/lib/EnterLeaveEventPlugin\",\"./HTMLDOMPropertyConfig\":\"react/lib/HTMLDOMPropertyConfig\",\"./ReactBrowserComponentMixin\":\"react/lib/ReactBrowserComponentMixin\",\"./ReactComponentBrowserEnvironment\":\"react/lib/ReactComponentBrowserEnvironment\",\"./ReactDOMComponent\":\"react/lib/ReactDOMComponent\",\"./ReactDOMTextComponent\":\"react/lib/ReactDOMTextComponent\",\"./ReactDefaultBatchingStrategy\":\"react/lib/ReactDefaultBatchingStrategy\",\"./ReactDefaultPerf\":\"react/lib/ReactDefaultPerf\",\"./ReactEventListener\":\"react/lib/ReactEventListener\",\"./ReactInjection\":\"react/lib/ReactInjection\",\"./ReactInstanceHandles\":\"react/lib/ReactInstanceHandles\",\"./ReactMount\":\"react/lib/ReactMount\",\"./ReactReconcileTransaction\":\"react/lib/ReactReconcileTransaction\",\"./SVGDOMPropertyConfig\":\"react/lib/SVGDOMPropertyConfig\",\"./SelectEventPlugin\":\"react/lib/SelectEventPlugin\",\"./ServerReactRootIndex\":\"react/lib/ServerReactRootIndex\",\"./SimpleEventPlugin\":\"react/lib/SimpleEventPlugin\",\"_process\":1,\"fbjs/lib/ExecutionEnvironment\":14}],\"react/lib/ReactDefaultPerfAnalysis\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultPerfAnalysis\n */\n\n'use strict';\n\nvar assign = require('./Object.assign');\n\n// Don't try to save users less than 1.2ms (a number I made up)\nvar DONT_CARE_THRESHOLD = 1.2;\nvar DOM_OPERATION_TYPES = {\n  '_mountImageIntoNode': 'set innerHTML',\n  INSERT_MARKUP: 'set innerHTML',\n  MOVE_EXISTING: 'move',\n  REMOVE_NODE: 'remove',\n  SET_MARKUP: 'set innerHTML',\n  TEXT_CONTENT: 'set textContent',\n  'setValueForProperty': 'update attribute',\n  'setValueForAttribute': 'update attribute',\n  'deleteValueForProperty': 'remove attribute',\n  'dangerouslyReplaceNodeWithMarkupByID': 'replace'\n};\n\nfunction getTotalTime(measurements) {\n  // TODO: return number of DOM ops? could be misleading.\n  // TODO: measure dropped frames after reconcile?\n  // TODO: log total time of each reconcile and the top-level component\n  // class that triggered it.\n  var totalTime = 0;\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    totalTime += measurement.totalTime;\n  }\n  return totalTime;\n}\n\nfunction getDOMSummary(measurements) {\n  var items = [];\n  measurements.forEach(function (measurement) {\n    Object.keys(measurement.writes).forEach(function (id) {\n      measurement.writes[id].forEach(function (write) {\n        items.push({\n          id: id,\n          type: DOM_OPERATION_TYPES[write.type] || write.type,\n          args: write.args\n        });\n      });\n    });\n  });\n  return items;\n}\n\nfunction getExclusiveSummary(measurements) {\n  var candidates = {};\n  var displayName;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\n\n    for (var id in allIDs) {\n      displayName = measurement.displayNames[id].current;\n\n      candidates[displayName] = candidates[displayName] || {\n        componentName: displayName,\n        inclusive: 0,\n        exclusive: 0,\n        render: 0,\n        count: 0\n      };\n      if (measurement.render[id]) {\n        candidates[displayName].render += measurement.render[id];\n      }\n      if (measurement.exclusive[id]) {\n        candidates[displayName].exclusive += measurement.exclusive[id];\n      }\n      if (measurement.inclusive[id]) {\n        candidates[displayName].inclusive += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[displayName].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (displayName in candidates) {\n    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[displayName]);\n    }\n  }\n\n  arr.sort(function (a, b) {\n    return b.exclusive - a.exclusive;\n  });\n\n  return arr;\n}\n\nfunction getInclusiveSummary(measurements, onlyClean) {\n  var candidates = {};\n  var inclusiveKey;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\n    var cleanComponents;\n\n    if (onlyClean) {\n      cleanComponents = getUnchangedComponents(measurement);\n    }\n\n    for (var id in allIDs) {\n      if (onlyClean && !cleanComponents[id]) {\n        continue;\n      }\n\n      var displayName = measurement.displayNames[id];\n\n      // Inclusive time is not useful for many components without knowing where\n      // they are instantiated. So we aggregate inclusive time with both the\n      // owner and current displayName as the key.\n      inclusiveKey = displayName.owner + ' > ' + displayName.current;\n\n      candidates[inclusiveKey] = candidates[inclusiveKey] || {\n        componentName: inclusiveKey,\n        time: 0,\n        count: 0\n      };\n\n      if (measurement.inclusive[id]) {\n        candidates[inclusiveKey].time += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[inclusiveKey].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (inclusiveKey in candidates) {\n    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[inclusiveKey]);\n    }\n  }\n\n  arr.sort(function (a, b) {\n    return b.time - a.time;\n  });\n\n  return arr;\n}\n\nfunction getUnchangedComponents(measurement) {\n  // For a given reconcile, look at which components did not actually\n  // render anything to the DOM and return a mapping of their ID to\n  // the amount of time it took to render the entire subtree.\n  var cleanComponents = {};\n  var dirtyLeafIDs = Object.keys(measurement.writes);\n  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\n\n  for (var id in allIDs) {\n    var isDirty = false;\n    // For each component that rendered, see if a component that triggered\n    // a DOM op is in its subtree.\n    for (var i = 0; i < dirtyLeafIDs.length; i++) {\n      if (dirtyLeafIDs[i].indexOf(id) === 0) {\n        isDirty = true;\n        break;\n      }\n    }\n    // check if component newly created\n    if (measurement.created[id]) {\n      isDirty = true;\n    }\n    if (!isDirty && measurement.counts[id] > 0) {\n      cleanComponents[id] = true;\n    }\n  }\n  return cleanComponents;\n}\n\nvar ReactDefaultPerfAnalysis = {\n  getExclusiveSummary: getExclusiveSummary,\n  getInclusiveSummary: getInclusiveSummary,\n  getDOMSummary: getDOMSummary,\n  getTotalTime: getTotalTime\n};\n\nmodule.exports = ReactDefaultPerfAnalysis;\n},{\"./Object.assign\":\"react/lib/Object.assign\"}],\"react/lib/ReactDefaultPerf\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultPerf\n * @typechecks static-only\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactDefaultPerfAnalysis = require('./ReactDefaultPerfAnalysis');\nvar ReactMount = require('./ReactMount');\nvar ReactPerf = require('./ReactPerf');\n\nvar performanceNow = require('fbjs/lib/performanceNow');\n\nfunction roundFloat(val) {\n  return Math.floor(val * 100) / 100;\n}\n\nfunction addValue(obj, key, val) {\n  obj[key] = (obj[key] || 0) + val;\n}\n\nvar ReactDefaultPerf = {\n  _allMeasurements: [], // last item in the list is the current one\n  _mountStack: [0],\n  _injected: false,\n\n  start: function () {\n    if (!ReactDefaultPerf._injected) {\n      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);\n    }\n\n    ReactDefaultPerf._allMeasurements.length = 0;\n    ReactPerf.enableMeasure = true;\n  },\n\n  stop: function () {\n    ReactPerf.enableMeasure = false;\n  },\n\n  getLastMeasurements: function () {\n    return ReactDefaultPerf._allMeasurements;\n  },\n\n  printExclusive: function (measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);\n    console.table(summary.map(function (item) {\n      return {\n        'Component class name': item.componentName,\n        'Total inclusive time (ms)': roundFloat(item.inclusive),\n        'Exclusive mount time (ms)': roundFloat(item.exclusive),\n        'Exclusive render time (ms)': roundFloat(item.render),\n        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),\n        'Render time per instance (ms)': roundFloat(item.render / item.count),\n        'Instances': item.count\n      };\n    }));\n    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct\n    // number.\n  },\n\n  printInclusive: function (measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);\n    console.table(summary.map(function (item) {\n      return {\n        'Owner > component': item.componentName,\n        'Inclusive time (ms)': roundFloat(item.time),\n        'Instances': item.count\n      };\n    }));\n    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');\n  },\n\n  getMeasurementsSummaryMap: function (measurements) {\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);\n    return summary.map(function (item) {\n      return {\n        'Owner > component': item.componentName,\n        'Wasted time (ms)': item.time,\n        'Instances': item.count\n      };\n    });\n  },\n\n  printWasted: function (measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));\n    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');\n  },\n\n  printDOM: function (measurements) {\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\n    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);\n    console.table(summary.map(function (item) {\n      var result = {};\n      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;\n      result.type = item.type;\n      result.args = JSON.stringify(item.args);\n      return result;\n    }));\n    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');\n  },\n\n  _recordWrite: function (id, fnName, totalTime, args) {\n    // TODO: totalTime isn't that useful since it doesn't count paints/reflows\n    var writes = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].writes;\n    writes[id] = writes[id] || [];\n    writes[id].push({\n      type: fnName,\n      time: totalTime,\n      args: args\n    });\n  },\n\n  measure: function (moduleName, fnName, func) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var totalTime;\n      var rv;\n      var start;\n\n      if (fnName === '_renderNewRootComponent' || fnName === 'flushBatchedUpdates') {\n        // A \"measurement\" is a set of metrics recorded for each flush. We want\n        // to group the metrics for a given flush together so we can look at the\n        // components that rendered and the DOM operations that actually\n        // happened to determine the amount of \"wasted work\" performed.\n        ReactDefaultPerf._allMeasurements.push({\n          exclusive: {},\n          inclusive: {},\n          render: {},\n          counts: {},\n          writes: {},\n          displayNames: {},\n          totalTime: 0,\n          created: {}\n        });\n        start = performanceNow();\n        rv = func.apply(this, args);\n        ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].totalTime = performanceNow() - start;\n        return rv;\n      } else if (fnName === '_mountImageIntoNode' || moduleName === 'ReactBrowserEventEmitter' || moduleName === 'ReactDOMIDOperations' || moduleName === 'CSSPropertyOperations' || moduleName === 'DOMChildrenOperations' || moduleName === 'DOMPropertyOperations') {\n        start = performanceNow();\n        rv = func.apply(this, args);\n        totalTime = performanceNow() - start;\n\n        if (fnName === '_mountImageIntoNode') {\n          var mountID = ReactMount.getID(args[1]);\n          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);\n        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {\n          // special format\n          args[0].forEach(function (update) {\n            var writeArgs = {};\n            if (update.fromIndex !== null) {\n              writeArgs.fromIndex = update.fromIndex;\n            }\n            if (update.toIndex !== null) {\n              writeArgs.toIndex = update.toIndex;\n            }\n            if (update.textContent !== null) {\n              writeArgs.textContent = update.textContent;\n            }\n            if (update.markupIndex !== null) {\n              writeArgs.markup = args[1][update.markupIndex];\n            }\n            ReactDefaultPerf._recordWrite(update.parentID, update.type, totalTime, writeArgs);\n          });\n        } else {\n          // basic format\n          var id = args[0];\n          if (typeof id === 'object') {\n            id = ReactMount.getID(args[0]);\n          }\n          ReactDefaultPerf._recordWrite(id, fnName, totalTime, Array.prototype.slice.call(args, 1));\n        }\n        return rv;\n      } else if (moduleName === 'ReactCompositeComponent' && (fnName === 'mountComponent' || fnName === 'updateComponent' || // TODO: receiveComponent()?\n      fnName === '_renderValidatedComponent')) {\n\n        if (this._currentElement.type === ReactMount.TopLevelWrapper) {\n          return func.apply(this, args);\n        }\n\n        var rootNodeID = fnName === 'mountComponent' ? args[0] : this._rootNodeID;\n        var isRender = fnName === '_renderValidatedComponent';\n        var isMount = fnName === 'mountComponent';\n\n        var mountStack = ReactDefaultPerf._mountStack;\n        var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];\n\n        if (isRender) {\n          addValue(entry.counts, rootNodeID, 1);\n        } else if (isMount) {\n          entry.created[rootNodeID] = true;\n          mountStack.push(0);\n        }\n\n        start = performanceNow();\n        rv = func.apply(this, args);\n        totalTime = performanceNow() - start;\n\n        if (isRender) {\n          addValue(entry.render, rootNodeID, totalTime);\n        } else if (isMount) {\n          var subMountTime = mountStack.pop();\n          mountStack[mountStack.length - 1] += totalTime;\n          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);\n          addValue(entry.inclusive, rootNodeID, totalTime);\n        } else {\n          addValue(entry.inclusive, rootNodeID, totalTime);\n        }\n\n        entry.displayNames[rootNodeID] = {\n          current: this.getName(),\n          owner: this._currentElement._owner ? this._currentElement._owner.getName() : '<root>'\n        };\n\n        return rv;\n      } else {\n        return func.apply(this, args);\n      }\n    };\n  }\n};\n\nmodule.exports = ReactDefaultPerf;\n},{\"./DOMProperty\":\"react/lib/DOMProperty\",\"./ReactDefaultPerfAnalysis\":\"react/lib/ReactDefaultPerfAnalysis\",\"./ReactMount\":\"react/lib/ReactMount\",\"./ReactPerf\":\"react/lib/ReactPerf\",\"fbjs/lib/performanceNow\":38}],\"react/lib/ReactElementValidator\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElementValidator\n */\n\n/**\n * ReactElementValidator provides a wrapper around a element factory\n * which validates the props passed to the element. This is intended to be\n * used only in DEV and could be replaced by a static type checker for languages\n * that support it.\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar canDefineProperty = require('./canDefineProperty');\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = ReactCurrentOwner.current.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nvar ownerHasKeyUseWarning = {};\n\nvar loggedTypeFailures = {};\n\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n  element._store.validated = true;\n\n  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);\n  if (addenda === null) {\n    // we already showed the warning\n    return;\n  }\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;\n}\n\n/**\n * Shared warning and monitoring code for the key warnings.\n *\n * @internal\n * @param {string} messageType A key used for de-duping warnings.\n * @param {ReactElement} element Component that requires a key.\n * @param {*} parentType element's parent's type.\n * @returns {?object} A set of addenda to use in the warning message, or null\n * if the warning has already been shown before (and shouldn't be shown again).\n */\nfunction getAddendaForKeyUse(messageType, element, parentType) {\n  var addendum = getDeclarationErrorAddendum();\n  if (!addendum) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n    if (parentName) {\n      addendum = ' Check the top-level render call using <' + parentName + '>.';\n    }\n  }\n\n  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});\n  if (memoizer[addendum]) {\n    return null;\n  }\n  memoizer[addendum] = true;\n\n  var addenda = {\n    parentOrOwner: addendum,\n    url: ' See https://fb.me/react-warning-keys for more information.',\n    childOwner: null\n  };\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';\n  }\n\n  return addenda;\n}\n\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n  if (Array.isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n      if (ReactElement.isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (ReactElement.isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n    // Entry iterators provide implicit keys.\n    if (iteratorFn) {\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (ReactElement.isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n\n/**\n * Assert that the props are valid\n *\n * @param {string} componentName Name of the component for error messages.\n * @param {object} propTypes Map of prop name to a ReactPropType\n * @param {object} props\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @private\n */\nfunction checkPropTypes(componentName, propTypes, props, location) {\n  for (var propName in propTypes) {\n    if (propTypes.hasOwnProperty(propName)) {\n      var error;\n      // Prop type validation may throw. In case they do, we don't want to\n      // fail the render phase where it didn't fail before. So we log it.\n      // After these have been cleaned up, we'll let them throw.\n      try {\n        // This is intentionally an invariant that gets caught. It's the same\n        // behavior as without this statement except with a better message.\n        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;\n        error = propTypes[propName](props, propName, componentName, location);\n      } catch (ex) {\n        error = ex;\n      }\n      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum();\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;\n      }\n    }\n  }\n}\n\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\nfunction validatePropTypes(element) {\n  var componentClass = element.type;\n  if (typeof componentClass !== 'function') {\n    return;\n  }\n  var name = componentClass.displayName || componentClass.name;\n  if (componentClass.propTypes) {\n    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);\n  }\n  if (typeof componentClass.getDefaultProps === 'function') {\n    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;\n  }\n}\n\nvar ReactElementValidator = {\n\n  createElement: function (type, props, children) {\n    var validType = typeof type === 'string' || typeof type === 'function';\n    // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;\n\n    var element = ReactElement.createElement.apply(this, arguments);\n\n    // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n    if (element == null) {\n      return element;\n    }\n\n    // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n    if (validType) {\n      for (var i = 2; i < arguments.length; i++) {\n        validateChildKeys(arguments[i], type);\n      }\n    }\n\n    validatePropTypes(element);\n\n    return element;\n  },\n\n  createFactory: function (type) {\n    var validatedFactory = ReactElementValidator.createElement.bind(null, type);\n    // Legacy hook TODO: Warn if this is accessed\n    validatedFactory.type = type;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (canDefineProperty) {\n        Object.defineProperty(validatedFactory, 'type', {\n          enumerable: false,\n          get: function () {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;\n            Object.defineProperty(this, 'type', {\n              value: type\n            });\n            return type;\n          }\n        });\n      }\n    }\n\n    return validatedFactory;\n  },\n\n  cloneElement: function (element, props, children) {\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], newElement.type);\n    }\n    validatePropTypes(newElement);\n    return newElement;\n  }\n\n};\n\nmodule.exports = ReactElementValidator;\n}).call(this,require('_process'))\n\n},{\"./ReactCurrentOwner\":\"react/lib/ReactCurrentOwner\",\"./ReactElement\":\"react/lib/ReactElement\",\"./ReactPropTypeLocationNames\":\"react/lib/ReactPropTypeLocationNames\",\"./ReactPropTypeLocations\":\"react/lib/ReactPropTypeLocations\",\"./canDefineProperty\":11,\"./getIteratorFn\":\"react/lib/getIteratorFn\",\"_process\":1,\"fbjs/lib/invariant\":29,\"fbjs/lib/warning\":41}],\"react/lib/ReactElement\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactElement\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\n\nvar assign = require('./Object.assign');\nvar canDefineProperty = require('./canDefineProperty');\n\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\n\n/**\n * Base constructor for all React elements. This is only used to make this\n * work with a dynamic instanceof check. Nothing should live on this prototype.\n *\n * @param {*} type\n * @param {*} key\n * @param {string|object} ref\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @param {*} owner\n * @param {*} props\n * @internal\n */\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allow us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {};\n\n    // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n    if (canDefineProperty) {\n      Object.defineProperty(element._store, 'validated', {\n        configurable: false,\n        enumerable: false,\n        writable: true,\n        value: false\n      });\n      // self and source are DEV only properties.\n      Object.defineProperty(element, '_self', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: self\n      });\n      // Two elements created in two different places should be considered\n      // equal for testing purposes and therefore we hide it from enumeration.\n      Object.defineProperty(element, '_source', {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: source\n      });\n    } else {\n      element._store.validated = false;\n      element._self = self;\n      element._source = source;\n    }\n    Object_freeze(element.props);\n    Object_freeze(element);\n  }\n\n  return element;\n};\n\nReactElement.createElement = function (type, config, children) {\n  var propName;\n\n  // Reserved names are extracted\n  var props = {};\n\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    ref = config.ref === undefined ? null : config.ref;\n    key = config.key === undefined ? null : '' + config.key;\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source;\n    // Remaining properties are added to a new props object\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (typeof props[propName] === 'undefined') {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n};\n\nReactElement.createFactory = function (type) {\n  var factory = ReactElement.createElement.bind(null, type);\n  // Expose the type on the factory and the prototype so that it can be\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n  // This should not be named `constructor` since this may not be the function\n  // that created the element, and it may not even be a constructor.\n  // Legacy hook TODO: Warn if this is accessed\n  factory.type = type;\n  return factory;\n};\n\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n\n  return newElement;\n};\n\nReactElement.cloneAndReplaceProps = function (oldElement, newProps) {\n  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // If the key on the original is valid, then the clone is valid\n    newElement._store.validated = oldElement._store.validated;\n  }\n\n  return newElement;\n};\n\nReactElement.cloneElement = function (element, config, children) {\n  var propName;\n\n  // Original props are copied\n  var props = assign({}, element.props);\n\n  // Reserved names are extracted\n  var key = element.key;\n  var ref = element.ref;\n  // Self is preserved since the owner is preserved.\n  var self = element._self;\n  // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n  var source = element._source;\n\n  // Owner will be preserved, unless ref is overridden\n  var owner = element._owner;\n\n  if (config != null) {\n    if (config.ref !== undefined) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n    if (config.key !== undefined) {\n      key = '' + config.key;\n    }\n    // Remaining properties override existing props\n    for (propName in config) {\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  }\n\n  // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n  var childrenLength = arguments.length - 2;\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n};\n\n/**\n * @param {?object} object\n * @return {boolean} True if `object` is a valid component.\n * @final\n */\nReactElement.isValidElement = function (object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n};\n\nmodule.exports = ReactElement;\n}).call(this,require('_process'))\n\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactCurrentOwner\":\"react/lib/ReactCurrentOwner\",\"./canDefineProperty\":11,\"_process\":1}],\"react/lib/ReactEmptyComponentRegistry\":[function(require,module,exports){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEmptyComponentRegistry\n */\n\n'use strict';\n\n// This registry keeps track of the React IDs of the components that rendered to\n// `null` (in reality a placeholder such as `noscript`)\nvar nullComponentIDsRegistry = {};\n\n/**\n * @param {string} id Component's `_rootNodeID`.\n * @return {boolean} True if the component is rendered to null.\n */\nfunction isNullComponentID(id) {\n  return !!nullComponentIDsRegistry[id];\n}\n\n/**\n * Mark the component as having rendered to null.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction registerNullComponentID(id) {\n  nullComponentIDsRegistry[id] = true;\n}\n\n/**\n * Unmark the component as having rendered to null: it renders to something now.\n * @param {string} id Component's `_rootNodeID`.\n */\nfunction deregisterNullComponentID(id) {\n  delete nullComponentIDsRegistry[id];\n}\n\nvar ReactEmptyComponentRegistry = {\n  isNullComponentID: isNullComponentID,\n  registerNullComponentID: registerNullComponentID,\n  deregisterNullComponentID: deregisterNullComponentID\n};\n\nmodule.exports = ReactEmptyComponentRegistry;\n},{}],\"react/lib/ReactEmptyComponent\":[function(require,module,exports){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEmptyComponent\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\nvar ReactEmptyComponentRegistry = require('./ReactEmptyComponentRegistry');\nvar ReactReconciler = require('./ReactReconciler');\n\nvar assign = require('./Object.assign');\n\nvar placeholderElement;\n\nvar ReactEmptyComponentInjection = {\n  injectEmptyComponent: function (component) {\n    placeholderElement = ReactElement.createElement(component);\n  }\n};\n\nvar ReactEmptyComponent = function (instantiate) {\n  this._currentElement = null;\n  this._rootNodeID = null;\n  this._renderedComponent = instantiate(placeholderElement);\n};\nassign(ReactEmptyComponent.prototype, {\n  construct: function (element) {},\n  mountComponent: function (rootID, transaction, context) {\n    ReactEmptyComponentRegistry.registerNullComponentID(rootID);\n    this._rootNodeID = rootID;\n    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);\n  },\n  receiveComponent: function () {},\n  unmountComponent: function (rootID, transaction, context) {\n    ReactReconciler.unmountComponent(this._renderedComponent);\n    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);\n    this._rootNodeID = null;\n    this._renderedComponent = null;\n  }\n});\n\nReactEmptyComponent.injection = ReactEmptyComponentInjection;\n\nmodule.exports = ReactEmptyComponent;\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactElement\":\"react/lib/ReactElement\",\"./ReactEmptyComponentRegistry\":\"react/lib/ReactEmptyComponentRegistry\",\"./ReactReconciler\":\"react/lib/ReactReconciler\"}],\"react/lib/ReactErrorUtils\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactErrorUtils\n * @typechecks\n */\n\n'use strict';\n\nvar caughtError = null;\n\n/**\n * Call a function while guarding against errors that happens within it.\n *\n * @param {?String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} a First argument\n * @param {*} b Second argument\n */\nfunction invokeGuardedCallback(name, func, a, b) {\n  try {\n    return func(a, b);\n  } catch (x) {\n    if (caughtError === null) {\n      caughtError = x;\n    }\n    return undefined;\n  }\n}\n\nvar ReactErrorUtils = {\n  invokeGuardedCallback: invokeGuardedCallback,\n\n  /**\n   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event\n   * handler are sure to be rethrown by rethrowCaughtError.\n   */\n  invokeGuardedCallbackWithCatch: invokeGuardedCallback,\n\n  /**\n   * During execution of guarded functions we will capture the first error which\n   * we will rethrow to be handled by the top level error handler.\n   */\n  rethrowCaughtError: function () {\n    if (caughtError) {\n      var error = caughtError;\n      caughtError = null;\n      throw error;\n    }\n  }\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  /**\n   * To help development we can get better devtools integration by simulating a\n   * real browser event.\n   */\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\n    var fakeNode = document.createElement('react');\n    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {\n      var boundFunc = func.bind(null, a, b);\n      var evtType = 'react-' + name;\n      fakeNode.addEventListener(evtType, boundFunc, false);\n      var evt = document.createEvent('Event');\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n      fakeNode.removeEventListener(evtType, boundFunc, false);\n    };\n  }\n}\n\nmodule.exports = ReactErrorUtils;\n}).call(this,require('_process'))\n\n},{\"_process\":1}],\"react/lib/ReactEventEmitterMixin\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventEmitterMixin\n */\n\n'use strict';\n\nvar EventPluginHub = require('./EventPluginHub');\n\nfunction runEventQueueInBatch(events) {\n  EventPluginHub.enqueueEvents(events);\n  EventPluginHub.processEventQueue(false);\n}\n\nvar ReactEventEmitterMixin = {\n\n  /**\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\n   * opportunity to create `ReactEvent`s to be dispatched.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {object} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native environment event.\n   */\n  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);\n    runEventQueueInBatch(events);\n  }\n};\n\nmodule.exports = ReactEventEmitterMixin;\n},{\"./EventPluginHub\":\"react/lib/EventPluginHub\"}],\"react/lib/ReactEventListener\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactEventListener\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar PooledClass = require('./PooledClass');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactMount = require('./ReactMount');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar getEventTarget = require('./getEventTarget');\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\n\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\n/**\n * Finds the parent React component of `node`.\n *\n * @param {*} node\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\n *                           is not nested.\n */\nfunction findParent(node) {\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\n  // traversal, but caching is difficult to do correctly without using a\n  // mutation observer to listen for all DOM changes.\n  var nodeID = ReactMount.getID(node);\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n  var container = ReactMount.findReactContainerForID(rootID);\n  var parent = ReactMount.getFirstReactDOM(container);\n  return parent;\n}\n\n// Used to store ancestor hierarchy in top level callback\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\n  this.topLevelType = topLevelType;\n  this.nativeEvent = nativeEvent;\n  this.ancestors = [];\n}\nassign(TopLevelCallbackBookKeeping.prototype, {\n  destructor: function () {\n    this.topLevelType = null;\n    this.nativeEvent = null;\n    this.ancestors.length = 0;\n  }\n});\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\n\nfunction handleTopLevelImpl(bookKeeping) {\n  // TODO: Re-enable event.path handling\n  //\n  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {\n  //   // New browsers have a path attribute on native events\n  //   handleTopLevelWithPath(bookKeeping);\n  // } else {\n  //   // Legacy browsers don't have a path attribute on native events\n  //   handleTopLevelWithoutPath(bookKeeping);\n  // }\n\n  void handleTopLevelWithPath; // temporarily unused\n  handleTopLevelWithoutPath(bookKeeping);\n}\n\n// Legacy browsers don't have a path attribute on native events\nfunction handleTopLevelWithoutPath(bookKeeping) {\n  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;\n\n  // Loop through the hierarchy, in case there's any nested components.\n  // It's important that we build the array of ancestors before calling any\n  // event handlers, because event handlers can modify the DOM, leading to\n  // inconsistencies with ReactMount's node cache. See #1105.\n  var ancestor = topLevelTarget;\n  while (ancestor) {\n    bookKeeping.ancestors.push(ancestor);\n    ancestor = findParent(ancestor);\n  }\n\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\n    topLevelTarget = bookKeeping.ancestors[i];\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\n// New browsers have a path attribute on native events\nfunction handleTopLevelWithPath(bookKeeping) {\n  var path = bookKeeping.nativeEvent.path;\n  var currentNativeTarget = path[0];\n  var eventsFired = 0;\n  for (var i = 0; i < path.length; i++) {\n    var currentPathElement = path[i];\n    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {\n      currentNativeTarget = path[i + 1];\n    }\n    // TODO: slow\n    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);\n    if (reactParent === currentPathElement) {\n      var currentPathElementID = ReactMount.getID(currentPathElement);\n      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);\n      bookKeeping.ancestors.push(currentPathElement);\n\n      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';\n      eventsFired++;\n      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);\n\n      // Jump to the root of this React render tree\n      while (currentPathElementID !== newRootID) {\n        i++;\n        currentPathElement = path[i];\n        currentPathElementID = ReactMount.getID(currentPathElement);\n      }\n    }\n  }\n  if (eventsFired === 0) {\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\n  }\n}\n\nfunction scrollValueMonitor(cb) {\n  var scrollPosition = getUnboundedScrollPosition(window);\n  cb(scrollPosition);\n}\n\nvar ReactEventListener = {\n  _enabled: true,\n  _handleTopLevel: null,\n\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\n\n  setHandleTopLevel: function (handleTopLevel) {\n    ReactEventListener._handleTopLevel = handleTopLevel;\n  },\n\n  setEnabled: function (enabled) {\n    ReactEventListener._enabled = !!enabled;\n  },\n\n  isEnabled: function () {\n    return ReactEventListener._enabled;\n  },\n\n  /**\n   * Traps top-level events by using event bubbling.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  /**\n   * Traps a top-level event by using event capturing.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {string} handlerBaseName Event name (e.g. \"click\").\n   * @param {object} handle Element on which to attach listener.\n   * @return {?object} An object with a remove function which will forcefully\n   *                  remove the listener.\n   * @internal\n   */\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\n    var element = handle;\n    if (!element) {\n      return null;\n    }\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\n  },\n\n  monitorScrollValue: function (refresh) {\n    var callback = scrollValueMonitor.bind(null, refresh);\n    EventListener.listen(window, 'scroll', callback);\n  },\n\n  dispatchEvent: function (topLevelType, nativeEvent) {\n    if (!ReactEventListener._enabled) {\n      return;\n    }\n\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\n    try {\n      // Event queue being processed in the same cycle allows\n      // `preventDefault`.\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\n    } finally {\n      TopLevelCallbackBookKeeping.release(bookKeeping);\n    }\n  }\n};\n\nmodule.exports = ReactEventListener;\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./PooledClass\":\"react/lib/PooledClass\",\"./ReactInstanceHandles\":\"react/lib/ReactInstanceHandles\",\"./ReactMount\":\"react/lib/ReactMount\",\"./ReactUpdates\":\"react/lib/ReactUpdates\",\"./getEventTarget\":\"react/lib/getEventTarget\",\"fbjs/lib/EventListener\":13,\"fbjs/lib/ExecutionEnvironment\":14,\"fbjs/lib/getUnboundedScrollPosition\":26}],\"react/lib/ReactFragment\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactFragment\n */\n\n'use strict';\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactElement = require('./ReactElement');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * We used to allow keyed objects to serve as a collection of ReactElements,\n * or nested sets. This allowed us a way to explicitly key a set a fragment of\n * components. This is now being replaced with an opaque data structure.\n * The upgrade path is to call React.addons.createFragment({ key: value }) to\n * create a keyed fragment. The resulting data structure is an array.\n */\n\nvar numericPropertyRegex = /^\\d+$/;\n\nvar warnedAboutNumeric = false;\n\nvar ReactFragment = {\n  // Wrap a keyed object in an opaque proxy that warns you if you access any\n  // of its properties.\n  create: function (object) {\n    if (typeof object !== 'object' || !object || Array.isArray(object)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'React.addons.createFragment only accepts a single object. Got: %s', object) : undefined;\n      return object;\n    }\n    if (ReactElement.isValidElement(object)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'React.addons.createFragment does not accept a ReactElement ' + 'without a wrapper object.') : undefined;\n      return object;\n    }\n\n    !(object.nodeType !== 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.addons.createFragment(...): Encountered an invalid child; DOM ' + 'elements are not valid children of React components.') : invariant(false) : undefined;\n\n    var result = [];\n\n    for (var key in object) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!warnedAboutNumeric && numericPropertyRegex.test(key)) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React.addons.createFragment(...): Child objects should have ' + 'non-numeric keys so ordering is preserved.') : undefined;\n          warnedAboutNumeric = true;\n        }\n      }\n      ReactChildren.mapIntoWithKeyPrefixInternal(object[key], result, key, emptyFunction.thatReturnsArgument);\n    }\n\n    return result;\n  }\n};\n\nmodule.exports = ReactFragment;\n}).call(this,require('_process'))\n\n},{\"./ReactChildren\":\"react/lib/ReactChildren\",\"./ReactElement\":\"react/lib/ReactElement\",\"_process\":1,\"fbjs/lib/emptyFunction\":21,\"fbjs/lib/invariant\":29,\"fbjs/lib/warning\":41}],\"react/lib/ReactInjection\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInjection\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar EventPluginHub = require('./EventPluginHub');\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactClass = require('./ReactClass');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactNativeComponent = require('./ReactNativeComponent');\nvar ReactPerf = require('./ReactPerf');\nvar ReactRootIndex = require('./ReactRootIndex');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar ReactInjection = {\n  Component: ReactComponentEnvironment.injection,\n  Class: ReactClass.injection,\n  DOMProperty: DOMProperty.injection,\n  EmptyComponent: ReactEmptyComponent.injection,\n  EventPluginHub: EventPluginHub.injection,\n  EventEmitter: ReactBrowserEventEmitter.injection,\n  NativeComponent: ReactNativeComponent.injection,\n  Perf: ReactPerf.injection,\n  RootIndex: ReactRootIndex.injection,\n  Updates: ReactUpdates.injection\n};\n\nmodule.exports = ReactInjection;\n},{\"./DOMProperty\":\"react/lib/DOMProperty\",\"./EventPluginHub\":\"react/lib/EventPluginHub\",\"./ReactBrowserEventEmitter\":\"react/lib/ReactBrowserEventEmitter\",\"./ReactClass\":\"react/lib/ReactClass\",\"./ReactComponentEnvironment\":\"react/lib/ReactComponentEnvironment\",\"./ReactEmptyComponent\":\"react/lib/ReactEmptyComponent\",\"./ReactNativeComponent\":\"react/lib/ReactNativeComponent\",\"./ReactPerf\":\"react/lib/ReactPerf\",\"./ReactRootIndex\":\"react/lib/ReactRootIndex\",\"./ReactUpdates\":\"react/lib/ReactUpdates\"}],\"react/lib/ReactInputSelection\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInputSelection\n */\n\n'use strict';\n\nvar ReactDOMSelection = require('./ReactDOMSelection');\n\nvar containsNode = require('fbjs/lib/containsNode');\nvar focusNode = require('fbjs/lib/focusNode');\nvar getActiveElement = require('fbjs/lib/getActiveElement');\n\nfunction isInDocument(node) {\n  return containsNode(document.documentElement, node);\n}\n\n/**\n * @ReactInputSelection: React input selection module. Based on Selection.js,\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\n * assume buttons have range selections allowed).\n * Input selection module for React.\n */\nvar ReactInputSelection = {\n\n  hasSelectionCapabilities: function (elem) {\n    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\n  },\n\n  getSelectionInformation: function () {\n    var focusedElem = getActiveElement();\n    return {\n      focusedElem: focusedElem,\n      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\n    };\n  },\n\n  /**\n   * @restoreSelection: If any selection information was potentially lost,\n   * restore it. This is useful when performing operations that could remove dom\n   * nodes and place them back in, resulting in focus being lost.\n   */\n  restoreSelection: function (priorSelectionInformation) {\n    var curFocusedElem = getActiveElement();\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\n    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\n        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\n      }\n      focusNode(priorFocusedElem);\n    }\n  },\n\n  /**\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\n   * contentEditable node.\n   * -@input: Look up selection bounds of this input\n   * -@return {start: selectionStart, end: selectionEnd}\n   */\n  getSelection: function (input) {\n    var selection;\n\n    if ('selectionStart' in input) {\n      // Modern browser with input or textarea.\n      selection = {\n        start: input.selectionStart,\n        end: input.selectionEnd\n      };\n    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {\n      // IE8 input.\n      var range = document.selection.createRange();\n      // There can only be one selection per document in IE, so it must\n      // be in our element.\n      if (range.parentElement() === input) {\n        selection = {\n          start: -range.moveStart('character', -input.value.length),\n          end: -range.moveEnd('character', -input.value.length)\n        };\n      }\n    } else {\n      // Content editable or old IE textarea.\n      selection = ReactDOMSelection.getOffsets(input);\n    }\n\n    return selection || { start: 0, end: 0 };\n  },\n\n  /**\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\n   * the input.\n   * -@input     Set selection bounds of this input or textarea\n   * -@offsets   Object of same form that is returned from get*\n   */\n  setSelection: function (input, offsets) {\n    var start = offsets.start;\n    var end = offsets.end;\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n\n    if ('selectionStart' in input) {\n      input.selectionStart = start;\n      input.selectionEnd = Math.min(end, input.value.length);\n    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {\n      var range = input.createTextRange();\n      range.collapse(true);\n      range.moveStart('character', start);\n      range.moveEnd('character', end - start);\n      range.select();\n    } else {\n      ReactDOMSelection.setOffsets(input, offsets);\n    }\n  }\n};\n\nmodule.exports = ReactInputSelection;\n},{\"./ReactDOMSelection\":\"react/lib/ReactDOMSelection\",\"fbjs/lib/containsNode\":18,\"fbjs/lib/focusNode\":23,\"fbjs/lib/getActiveElement\":24}],\"react/lib/ReactInstanceHandles\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceHandles\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactRootIndex = require('./ReactRootIndex');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar SEPARATOR = '.';\nvar SEPARATOR_LENGTH = SEPARATOR.length;\n\n/**\n * Maximum depth of traversals before we consider the possibility of a bad ID.\n */\nvar MAX_TREE_DEPTH = 10000;\n\n/**\n * Creates a DOM ID prefix to use when mounting React components.\n *\n * @param {number} index A unique integer\n * @return {string} React root ID.\n * @internal\n */\nfunction getReactRootIDString(index) {\n  return SEPARATOR + index.toString(36);\n}\n\n/**\n * Checks if a character in the supplied ID is a separator or the end.\n *\n * @param {string} id A React DOM ID.\n * @param {number} index Index of the character to check.\n * @return {boolean} True if the character is a separator or end of the ID.\n * @private\n */\nfunction isBoundary(id, index) {\n  return id.charAt(index) === SEPARATOR || index === id.length;\n}\n\n/**\n * Checks if the supplied string is a valid React DOM ID.\n *\n * @param {string} id A React DOM ID, maybe.\n * @return {boolean} True if the string is a valid React DOM ID.\n * @private\n */\nfunction isValidID(id) {\n  return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;\n}\n\n/**\n * Checks if the first ID is an ancestor of or equal to the second ID.\n *\n * @param {string} ancestorID\n * @param {string} descendantID\n * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.\n * @internal\n */\nfunction isAncestorIDOf(ancestorID, descendantID) {\n  return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);\n}\n\n/**\n * Gets the parent ID of the supplied React DOM ID, `id`.\n *\n * @param {string} id ID of a component.\n * @return {string} ID of the parent, or an empty string.\n * @private\n */\nfunction getParentID(id) {\n  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';\n}\n\n/**\n * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the\n * supplied `destinationID`. If they are equal, the ID is returned.\n *\n * @param {string} ancestorID ID of an ancestor node of `destinationID`.\n * @param {string} destinationID ID of the destination node.\n * @return {string} Next ID on the path from `ancestorID` to `destinationID`.\n * @private\n */\nfunction getNextDescendantID(ancestorID, destinationID) {\n  !(isValidID(ancestorID) && isValidID(destinationID)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;\n  !isAncestorIDOf(ancestorID, destinationID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;\n  if (ancestorID === destinationID) {\n    return ancestorID;\n  }\n  // Skip over the ancestor and the immediate separator. Traverse until we hit\n  // another separator or we reach the end of `destinationID`.\n  var start = ancestorID.length + SEPARATOR_LENGTH;\n  var i;\n  for (i = start; i < destinationID.length; i++) {\n    if (isBoundary(destinationID, i)) {\n      break;\n    }\n  }\n  return destinationID.substr(0, i);\n}\n\n/**\n * Gets the nearest common ancestor ID of two IDs.\n *\n * Using this ID scheme, the nearest common ancestor ID is the longest common\n * prefix of the two IDs that immediately preceded a \"marker\" in both strings.\n *\n * @param {string} oneID\n * @param {string} twoID\n * @return {string} Nearest common ancestor ID, or the empty string if none.\n * @private\n */\nfunction getFirstCommonAncestorID(oneID, twoID) {\n  var minLength = Math.min(oneID.length, twoID.length);\n  if (minLength === 0) {\n    return '';\n  }\n  var lastCommonMarkerIndex = 0;\n  // Use `<=` to traverse until the \"EOL\" of the shorter string.\n  for (var i = 0; i <= minLength; i++) {\n    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {\n      lastCommonMarkerIndex = i;\n    } else if (oneID.charAt(i) !== twoID.charAt(i)) {\n      break;\n    }\n  }\n  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);\n  !isValidID(longestCommonID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;\n  return longestCommonID;\n}\n\n/**\n * Traverses the parent path between two IDs (either up or down). The IDs must\n * not be the same, and there must exist a parent path between them. If the\n * callback returns `false`, traversal is stopped.\n *\n * @param {?string} start ID at which to start traversal.\n * @param {?string} stop ID at which to end traversal.\n * @param {function} cb Callback to invoke each ID with.\n * @param {*} arg Argument to invoke the callback with.\n * @param {?boolean} skipFirst Whether or not to skip the first node.\n * @param {?boolean} skipLast Whether or not to skip the last node.\n * @private\n */\nfunction traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {\n  start = start || '';\n  stop = stop || '';\n  !(start !== stop) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;\n  var traverseUp = isAncestorIDOf(stop, start);\n  !(traverseUp || isAncestorIDOf(start, stop)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;\n  // Traverse from `start` to `stop` one depth at a time.\n  var depth = 0;\n  var traverse = traverseUp ? getParentID : getNextDescendantID;\n  for (var id = start;; /* until break */id = traverse(id, stop)) {\n    var ret;\n    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {\n      ret = cb(id, traverseUp, arg);\n    }\n    if (ret === false || id === stop) {\n      // Only break //after// visiting `stop`.\n      break;\n    }\n    !(depth++ < MAX_TREE_DEPTH) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;\n  }\n}\n\n/**\n * Manages the IDs assigned to DOM representations of React components. This\n * uses a specific scheme in order to traverse the DOM efficiently (e.g. in\n * order to simulate events).\n *\n * @internal\n */\nvar ReactInstanceHandles = {\n\n  /**\n   * Constructs a React root ID\n   * @return {string} A React root ID.\n   */\n  createReactRootID: function () {\n    return getReactRootIDString(ReactRootIndex.createReactRootIndex());\n  },\n\n  /**\n   * Constructs a React ID by joining a root ID with a name.\n   *\n   * @param {string} rootID Root ID of a parent component.\n   * @param {string} name A component's name (as flattened children).\n   * @return {string} A React ID.\n   * @internal\n   */\n  createReactID: function (rootID, name) {\n    return rootID + name;\n  },\n\n  /**\n   * Gets the DOM ID of the React component that is the root of the tree that\n   * contains the React component with the supplied DOM ID.\n   *\n   * @param {string} id DOM ID of a React component.\n   * @return {?string} DOM ID of the React component that is the root.\n   * @internal\n   */\n  getReactRootIDFromNodeID: function (id) {\n    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {\n      var index = id.indexOf(SEPARATOR, 1);\n      return index > -1 ? id.substr(0, index) : id;\n    }\n    return null;\n  },\n\n  /**\n   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\n   * should would receive a `mouseEnter` or `mouseLeave` event.\n   *\n   * NOTE: Does not invoke the callback on the nearest common ancestor because\n   * nothing \"entered\" or \"left\" that element.\n   *\n   * @param {string} leaveID ID being left.\n   * @param {string} enterID ID being entered.\n   * @param {function} cb Callback to invoke on each entered/left ID.\n   * @param {*} upArg Argument to invoke the callback with on left IDs.\n   * @param {*} downArg Argument to invoke the callback with on entered IDs.\n   * @internal\n   */\n  traverseEnterLeave: function (leaveID, enterID, cb, upArg, downArg) {\n    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);\n    if (ancestorID !== leaveID) {\n      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);\n    }\n    if (ancestorID !== enterID) {\n      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);\n    }\n  },\n\n  /**\n   * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n   *\n   * NOTE: This traversal happens on IDs without touching the DOM.\n   *\n   * @param {string} targetID ID of the target node.\n   * @param {function} cb Callback to invoke.\n   * @param {*} arg Argument to invoke the callback with.\n   * @internal\n   */\n  traverseTwoPhase: function (targetID, cb, arg) {\n    if (targetID) {\n      traverseParentPath('', targetID, cb, arg, true, false);\n      traverseParentPath(targetID, '', cb, arg, false, true);\n    }\n  },\n\n  /**\n   * Same as `traverseTwoPhase` but skips the `targetID`.\n   */\n  traverseTwoPhaseSkipTarget: function (targetID, cb, arg) {\n    if (targetID) {\n      traverseParentPath('', targetID, cb, arg, true, true);\n      traverseParentPath(targetID, '', cb, arg, true, true);\n    }\n  },\n\n  /**\n   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For\n   * example, passing `.0.$row-0.1` would result in `cb` getting called\n   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.\n   *\n   * NOTE: This traversal happens on IDs without touching the DOM.\n   *\n   * @param {string} targetID ID of the target node.\n   * @param {function} cb Callback to invoke.\n   * @param {*} arg Argument to invoke the callback with.\n   * @internal\n   */\n  traverseAncestors: function (targetID, cb, arg) {\n    traverseParentPath('', targetID, cb, arg, true, false);\n  },\n\n  getFirstCommonAncestorID: getFirstCommonAncestorID,\n\n  /**\n   * Exposed for unit testing.\n   * @private\n   */\n  _getNextDescendantID: getNextDescendantID,\n\n  isAncestorIDOf: isAncestorIDOf,\n\n  SEPARATOR: SEPARATOR\n\n};\n\nmodule.exports = ReactInstanceHandles;\n}).call(this,require('_process'))\n\n},{\"./ReactRootIndex\":\"react/lib/ReactRootIndex\",\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/ReactInstanceMap\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactInstanceMap\n */\n\n'use strict';\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n */\n\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\nvar ReactInstanceMap = {\n\n  /**\n   * This API should be called `delete` but we'd have to make sure to always\n   * transform these to strings for IE support. When this transform is fully\n   * supported we can rename it.\n   */\n  remove: function (key) {\n    key._reactInternalInstance = undefined;\n  },\n\n  get: function (key) {\n    return key._reactInternalInstance;\n  },\n\n  has: function (key) {\n    return key._reactInternalInstance !== undefined;\n  },\n\n  set: function (key, value) {\n    key._reactInternalInstance = value;\n  }\n\n};\n\nmodule.exports = ReactInstanceMap;\n},{}],\"react/lib/ReactIsomorphic\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactIsomorphic\n */\n\n'use strict';\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactComponent = require('./ReactComponent');\nvar ReactClass = require('./ReactClass');\nvar ReactDOMFactories = require('./ReactDOMFactories');\nvar ReactElement = require('./ReactElement');\nvar ReactElementValidator = require('./ReactElementValidator');\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactVersion = require('./ReactVersion');\n\nvar assign = require('./Object.assign');\nvar onlyChild = require('./onlyChild');\n\nvar createElement = ReactElement.createElement;\nvar createFactory = ReactElement.createFactory;\nvar cloneElement = ReactElement.cloneElement;\n\nif (process.env.NODE_ENV !== 'production') {\n  createElement = ReactElementValidator.createElement;\n  createFactory = ReactElementValidator.createFactory;\n  cloneElement = ReactElementValidator.cloneElement;\n}\n\nvar React = {\n\n  // Modern\n\n  Children: {\n    map: ReactChildren.map,\n    forEach: ReactChildren.forEach,\n    count: ReactChildren.count,\n    toArray: ReactChildren.toArray,\n    only: onlyChild\n  },\n\n  Component: ReactComponent,\n\n  createElement: createElement,\n  cloneElement: cloneElement,\n  isValidElement: ReactElement.isValidElement,\n\n  // Classic\n\n  PropTypes: ReactPropTypes,\n  createClass: ReactClass.createClass,\n  createFactory: createFactory,\n  createMixin: function (mixin) {\n    // Currently a noop. Will be used to validate and trace mixins.\n    return mixin;\n  },\n\n  // This looks DOM specific but these are actually isomorphic helpers\n  // since they are just generating DOM strings.\n  DOM: ReactDOMFactories,\n\n  version: ReactVersion,\n\n  // Hook for JSX spread, don't use this for anything else.\n  __spread: assign\n};\n\nmodule.exports = React;\n}).call(this,require('_process'))\n\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactChildren\":\"react/lib/ReactChildren\",\"./ReactClass\":\"react/lib/ReactClass\",\"./ReactComponent\":\"react/lib/ReactComponent\",\"./ReactDOMFactories\":\"react/lib/ReactDOMFactories\",\"./ReactElement\":\"react/lib/ReactElement\",\"./ReactElementValidator\":\"react/lib/ReactElementValidator\",\"./ReactPropTypes\":\"react/lib/ReactPropTypes\",\"./ReactVersion\":\"react/lib/ReactVersion\",\"./onlyChild\":\"react/lib/onlyChild\",\"_process\":1}],\"react/lib/ReactLink\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactLink\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * ReactLink encapsulates a common pattern in which a component wants to modify\n * a prop received from its parent. ReactLink allows the parent to pass down a\n * value coupled with a callback that, when invoked, expresses an intent to\n * modify that value. For example:\n *\n * React.createClass({\n *   getInitialState: function() {\n *     return {value: ''};\n *   },\n *   render: function() {\n *     var valueLink = new ReactLink(this.state.value, this._handleValueChange);\n *     return <input valueLink={valueLink} />;\n *   },\n *   _handleValueChange: function(newValue) {\n *     this.setState({value: newValue});\n *   }\n * });\n *\n * We have provided some sugary mixins to make the creation and\n * consumption of ReactLink easier; see LinkedValueUtils and LinkedStateMixin.\n */\n\nvar React = require('./React');\n\n/**\n * @param {*} value current value of the link\n * @param {function} requestChange callback to request a change\n */\nfunction ReactLink(value, requestChange) {\n  this.value = value;\n  this.requestChange = requestChange;\n}\n\n/**\n * Creates a PropType that enforces the ReactLink API and optionally checks the\n * type of the value being passed inside the link. Example:\n *\n * MyComponent.propTypes = {\n *   tabIndexLink: ReactLink.PropTypes.link(React.PropTypes.number)\n * }\n */\nfunction createLinkTypeChecker(linkType) {\n  var shapes = {\n    value: typeof linkType === 'undefined' ? React.PropTypes.any.isRequired : linkType.isRequired,\n    requestChange: React.PropTypes.func.isRequired\n  };\n  return React.PropTypes.shape(shapes);\n}\n\nReactLink.PropTypes = {\n  link: createLinkTypeChecker\n};\n\nmodule.exports = ReactLink;\n},{\"./React\":\"react/lib/React\"}],\"react/lib/ReactMarkupChecksum\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMarkupChecksum\n */\n\n'use strict';\n\nvar adler32 = require('./adler32');\n\nvar TAG_END = /\\/?>/;\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function (markup) {\n    var checksum = adler32(markup);\n\n    // Add checksum (handle both parent tags and self-closing tags)\n    return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function (markup, element) {\n    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;\n},{\"./adler32\":\"react/lib/adler32\"}],\"react/lib/ReactMount\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMount\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactElement = require('./ReactElement');\nvar ReactEmptyComponentRegistry = require('./ReactEmptyComponentRegistry');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactPerf = require('./ReactPerf');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar containsNode = require('fbjs/lib/containsNode');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\nvar setInnerHTML = require('./setInnerHTML');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar validateDOMNesting = require('./validateDOMNesting');\nvar warning = require('fbjs/lib/warning');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar nodeCache = {};\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\nvar ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);\n\n/** Mapping from reactRootID to React component instance. */\nvar instancesByReactRootID = {};\n\n/** Mapping from reactRootID to `container` nodes. */\nvar containersByReactRootID = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  /** __DEV__-only mapping from reactRootID to root elements. */\n  var rootElementsByReactRootID = {};\n}\n\n// Used to store breadth-first search state in findComponentRoot.\nvar findComponentRootReusableArray = [];\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n * a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\n/**\n * @param {DOMElement} container DOM element that may contain a React component.\n * @return {?string} A \"reactRoot\" ID, if a React component is rendered.\n */\nfunction getReactRootID(container) {\n  var rootElement = getReactRootElementInContainer(container);\n  return rootElement && ReactMount.getID(rootElement);\n}\n\n/**\n * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form\n * element can return its control whose name or ID equals ATTR_NAME. All\n * DOM nodes support `getAttributeNode` but this can also get called on\n * other objects so just return '' if we're given something other than a\n * DOM node (such as window).\n *\n * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.\n * @return {string} ID of the supplied `domNode`.\n */\nfunction getID(node) {\n  var id = internalGetID(node);\n  if (id) {\n    if (nodeCache.hasOwnProperty(id)) {\n      var cached = nodeCache[id];\n      if (cached !== node) {\n        !!isValid(cached, id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;\n\n        nodeCache[id] = node;\n      }\n    } else {\n      nodeCache[id] = node;\n    }\n  }\n\n  return id;\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Sets the React-specific ID of the given node.\n *\n * @param {DOMElement} node The DOM node whose ID will be set.\n * @param {string} id The value of the ID attribute.\n */\nfunction setID(node, id) {\n  var oldID = internalGetID(node);\n  if (oldID !== id) {\n    delete nodeCache[oldID];\n  }\n  node.setAttribute(ATTR_NAME, id);\n  nodeCache[id] = node;\n}\n\n/**\n * Finds the node with the supplied React-generated DOM ID.\n *\n * @param {string} id A React-generated DOM ID.\n * @return {DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNode(id) {\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * Finds the node with the supplied public React instance.\n *\n * @param {*} instance A public React instance.\n * @return {?DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNodeFromInstance(instance) {\n  var id = ReactInstanceMap.get(instance)._rootNodeID;\n  if (ReactEmptyComponentRegistry.isNullComponentID(id)) {\n    return null;\n  }\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * A node is \"valid\" if it is contained by a currently mounted container.\n *\n * This means that the node does not have to be contained by a document in\n * order to be considered valid.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @param {string} id The expected ID of the node.\n * @return {boolean} Whether the node is contained by a mounted container.\n */\nfunction isValid(node, id) {\n  if (node) {\n    !(internalGetID(node) === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;\n\n    var container = ReactMount.findReactContainerForID(id);\n    if (container && containsNode(container, node)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Causes the cache to forget about one React-specific ID.\n *\n * @param {string} id The ID to forget.\n */\nfunction purgeID(id) {\n  delete nodeCache[id];\n}\n\nvar deepestNodeSoFar = null;\nfunction findDeepestCachedAncestorImpl(ancestorID) {\n  var ancestor = nodeCache[ancestorID];\n  if (ancestor && isValid(ancestor, ancestorID)) {\n    deepestNodeSoFar = ancestor;\n  } else {\n    // This node isn't populated in the cache, so presumably none of its\n    // descendants are. Break out of the loop.\n    return false;\n  }\n}\n\n/**\n * Return the deepest cached node whose ID is a prefix of `targetID`.\n */\nfunction findDeepestCachedAncestor(targetID) {\n  deepestNodeSoFar = null;\n  ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);\n\n  var foundNode = deepestNodeSoFar;\n  deepestNodeSoFar = null;\n  return foundNode;\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {\n  if (ReactDOMFeatureFlags.useCreateElement) {\n    context = assign({}, context);\n    if (container.nodeType === DOC_NODE_TYPE) {\n      context[ownerDocumentContextKey] = container;\n    } else {\n      context[ownerDocumentContextKey] = container.ownerDocument;\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (context === emptyObject) {\n      context = {};\n    }\n    var tag = container.nodeName.toLowerCase();\n    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);\n  }\n  var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);\n  componentInstance._renderedComponent._topLevelWrapper = componentInstance;\n  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* forceHTML */shouldReuseMarkup);\n  transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Unmounts a component and removes it from the DOM.\n *\n * @param {ReactComponent} instance React component instance.\n * @param {DOMElement} container DOM element to unmount from.\n * @final\n * @internal\n * @see {ReactMount.unmountComponentAtNode}\n */\nfunction unmountComponentFromNode(instance, container) {\n  ReactReconciler.unmountComponent(instance);\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    container = container.documentElement;\n  }\n\n  // http://jsperf.com/emptying-a-node\n  while (container.lastChild) {\n    container.removeChild(container.lastChild);\n  }\n}\n\n/**\n * True if the supplied DOM node has a direct React-rendered child that is\n * not a React root element. Useful for warning in `render`,\n * `unmountComponentAtNode`, etc.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM element contains a direct child that was\n * rendered by React but is not a root element.\n * @internal\n */\nfunction hasNonRootReactChild(node) {\n  var reactRootID = getReactRootID(node);\n  return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;\n}\n\n/**\n * Returns the first (deepest) ancestor of a node which is rendered by this copy\n * of React.\n */\nfunction findFirstReactDOMImpl(node) {\n  // This node might be from another React instance, so we make sure not to\n  // examine the node cache here\n  for (; node && node.parentNode !== node; node = node.parentNode) {\n    if (node.nodeType !== 1) {\n      // Not a DOMElement, therefore not a React component\n      continue;\n    }\n    var nodeID = internalGetID(node);\n    if (!nodeID) {\n      continue;\n    }\n    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n\n    // If containersByReactRootID contains the container we find by crawling up\n    // the tree, we know that this instance of React rendered the node.\n    // nb. isValid's strategy (with containsNode) does not work because render\n    // trees may be nested and we don't want a false positive in that case.\n    var current = node;\n    var lastID;\n    do {\n      lastID = internalGetID(current);\n      current = current.parentNode;\n      if (current == null) {\n        // The passed-in node has been detached from the container it was\n        // originally rendered into.\n        return null;\n      }\n    } while (lastID !== reactRootID);\n\n    if (current === containersByReactRootID[reactRootID]) {\n      return node;\n    }\n  }\n  return null;\n}\n\n/**\n * Temporary (?) hack so that we can store all top-level pending updates on\n * composites instead of having to worry about different types of components\n * here.\n */\nvar TopLevelWrapper = function () {};\nTopLevelWrapper.prototype.isReactComponent = {};\nif (process.env.NODE_ENV !== 'production') {\n  TopLevelWrapper.displayName = 'TopLevelWrapper';\n}\nTopLevelWrapper.prototype.render = function () {\n  // this.props is actually a ReactElement\n  return this.props;\n};\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n\n  TopLevelWrapper: TopLevelWrapper,\n\n  /** Exposed for debugging purposes **/\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function (container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function (prevComponent, nextElement, container, callback) {\n    ReactMount.scrollMonitor(container, function () {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);\n    }\n\n    return prevComponent;\n  },\n\n  /**\n   * Register a component into the instance map and starts scroll value\n   * monitoring\n   * @param {ReactComponent} nextComponent component instance to render\n   * @param {DOMElement} container container to render into\n   * @return {string} reactRoot ID prefix\n   */\n  _registerComponent: function (nextComponent, container) {\n    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n\n    var reactRootID = ReactMount.registerContainer(container);\n    instancesByReactRootID[reactRootID] = nextComponent;\n    return reactRootID;\n  },\n\n  /**\n   * Render a new component into the DOM.\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;\n\n    var componentInstance = instantiateReactComponent(nextElement, null);\n    var reactRootID = ReactMount._registerComponent(componentInstance, container);\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);\n    }\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;\n    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n  },\n\n  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :\n    // Check if it quacks like an element\n    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;\n\n    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;\n\n    var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);\n\n    var prevComponent = instancesByReactRootID[getReactRootID(container)];\n\n    if (prevComponent) {\n      var prevWrappedElement = prevComponent._currentElement;\n      var prevElement = prevWrappedElement.props;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n        var updatedCallback = callback && function () {\n          callback.call(publicInst);\n        };\n        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);\n        return publicInst;\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;\n\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (internalGetID(rootElementSibling)) {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;\n            break;\n          }\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function (nextElement, container, callback) {\n    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n  },\n\n  /**\n   * Registers a container node into which React components will be rendered.\n   * This also creates the \"reactRoot\" ID that will be assigned to the element\n   * rendered within.\n   *\n   * @param {DOMElement} container DOM element to register as a container.\n   * @return {string} The \"reactRoot\" ID of elements rendered within.\n   */\n  registerContainer: function (container) {\n    var reactRootID = getReactRootID(container);\n    if (reactRootID) {\n      // If one exists, make sure it is a valid \"reactRoot\" ID.\n      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);\n    }\n    if (!reactRootID) {\n      // No valid \"reactRoot\" ID found, create one.\n      reactRootID = ReactInstanceHandles.createReactRootID();\n    }\n    containersByReactRootID[reactRootID] = container;\n    return reactRootID;\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function (container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;\n\n    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;\n\n    var reactRootID = getReactRootID(container);\n    var component = instancesByReactRootID[reactRootID];\n    if (!component) {\n      // Check if the node being unmounted was rendered by React, but isn't a\n      // root node.\n      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n      // Check if the container itself is a React root node.\n      var containerID = internalGetID(container);\n      var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;\n      }\n\n      return false;\n    }\n    ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);\n    delete instancesByReactRootID[reactRootID];\n    delete containersByReactRootID[reactRootID];\n    if (process.env.NODE_ENV !== 'production') {\n      delete rootElementsByReactRootID[reactRootID];\n    }\n    return true;\n  },\n\n  /**\n   * Finds the container DOM element that contains React component to which the\n   * supplied DOM `id` belongs.\n   *\n   * @param {string} id The ID of an element rendered by a React component.\n   * @return {?DOMElement} DOM element that contains the `id`.\n   */\n  findReactContainerForID: function (id) {\n    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);\n    var container = containersByReactRootID[reactRootID];\n\n    if (process.env.NODE_ENV !== 'production') {\n      var rootElement = rootElementsByReactRootID[reactRootID];\n      if (rootElement && rootElement.parentNode !== container) {\n        process.env.NODE_ENV !== 'production' ? warning(\n        // Call internalGetID here because getID calls isValid which calls\n        // findReactContainerForID (this function).\n        internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;\n        var containerChild = container.firstChild;\n        if (containerChild && reactRootID === internalGetID(containerChild)) {\n          // If the container has a new child with the same ID as the old\n          // root element, then rootElementsByReactRootID[reactRootID] is\n          // just stale and needs to be updated. The case that deserves a\n          // warning is when the container is empty.\n          rootElementsByReactRootID[reactRootID] = containerChild;\n        } else {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;\n        }\n      }\n    }\n\n    return container;\n  },\n\n  /**\n   * Finds an element rendered by React with the supplied ID.\n   *\n   * @param {string} id ID of a DOM node in the React component.\n   * @return {DOMElement} Root DOM node of the React component.\n   */\n  findReactNodeByID: function (id) {\n    var reactRoot = ReactMount.findReactContainerForID(id);\n    return ReactMount.findComponentRoot(reactRoot, id);\n  },\n\n  /**\n   * Traverses up the ancestors of the supplied node to find a node that is a\n   * DOM representation of a React component rendered by this copy of React.\n   *\n   * @param {*} node\n   * @return {?DOMEventTarget}\n   * @internal\n   */\n  getFirstReactDOM: function (node) {\n    return findFirstReactDOMImpl(node);\n  },\n\n  /**\n   * Finds a node with the supplied `targetID` inside of the supplied\n   * `ancestorNode`.  Exploits the ID naming scheme to perform the search\n   * quickly.\n   *\n   * @param {DOMEventTarget} ancestorNode Search from this root.\n   * @pararm {string} targetID ID of the DOM representation of the component.\n   * @return {DOMEventTarget} DOM node with the supplied `targetID`.\n   * @internal\n   */\n  findComponentRoot: function (ancestorNode, targetID) {\n    var firstChildren = findComponentRootReusableArray;\n    var childIndex = 0;\n\n    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This will throw on the next line; give an early warning\n      process.env.NODE_ENV !== 'production' ? warning(deepestAncestor != null, 'React can\\'t find the root component node for data-reactid value ' + '`%s`. If you\\'re seeing this message, it probably means that ' + 'you\\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;\n    }\n\n    firstChildren[0] = deepestAncestor.firstChild;\n    firstChildren.length = 1;\n\n    while (childIndex < firstChildren.length) {\n      var child = firstChildren[childIndex++];\n      var targetChild;\n\n      while (child) {\n        var childID = ReactMount.getID(child);\n        if (childID) {\n          // Even if we find the node we're looking for, we finish looping\n          // through its siblings to ensure they're cached so that we don't have\n          // to revisit this node again. Otherwise, we make n^2 calls to getID\n          // when visiting the many children of a single node in order.\n\n          if (targetID === childID) {\n            targetChild = child;\n          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {\n            // If we find a child whose ID is an ancestor of the given ID,\n            // then we can be sure that we only want to search the subtree\n            // rooted at this child, so we can throw out the rest of the\n            // search state.\n            firstChildren.length = childIndex = 0;\n            firstChildren.push(child.firstChild);\n          }\n        } else {\n          // If this child had no ID, then there's a chance that it was\n          // injected automatically by the browser, as when a `<table>`\n          // element sprouts an extra `<tbody>` child as a side effect of\n          // `.innerHTML` parsing. Optimistically continue down this\n          // branch, but not before examining the other siblings.\n          firstChildren.push(child.firstChild);\n        }\n\n        child = child.nextSibling;\n      }\n\n      if (targetChild) {\n        // Emptying firstChildren/findComponentRootReusableArray is\n        // not necessary for correctness, but it helps the GC reclaim\n        // any nodes that were left at the end of the search.\n        firstChildren.length = 0;\n\n        return targetChild;\n      }\n    }\n\n    firstChildren.length = 0;\n\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;\n  },\n\n  _mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {\n    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\n        var normalizedMarkup = markup;\n        if (process.env.NODE_ENV !== 'production') {\n          // because rootMarkup is retrieved from the DOM, various normalizations\n          // will have occurred which will not be present in `markup`. Here,\n          // insert markup into a <div> or <iframe> depending on the container\n          // type to perform the same normalizations before comparing.\n          var normalizer;\n          if (container.nodeType === ELEMENT_NODE_TYPE) {\n            normalizer = document.createElement('div');\n            normalizer.innerHTML = markup;\n            normalizedMarkup = normalizer.innerHTML;\n          } else {\n            normalizer = document.createElement('iframe');\n            document.body.appendChild(normalizer);\n            normalizer.contentDocument.write(markup);\n            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n            document.body.removeChild(normalizer);\n          }\n        }\n\n        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\\n%s', difference) : invariant(false) : undefined;\n\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : undefined;\n        }\n      }\n    }\n\n    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document but ' + 'you didn\\'t use server rendering. We can\\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;\n\n    if (transaction.useCreateElement) {\n      while (container.lastChild) {\n        container.removeChild(container.lastChild);\n      }\n      container.appendChild(markup);\n    } else {\n      setInnerHTML(container, markup);\n    }\n  },\n\n  ownerDocumentContextKey: ownerDocumentContextKey,\n\n  /**\n   * React ID utilities.\n   */\n\n  getReactRootID: getReactRootID,\n\n  getID: getID,\n\n  setID: setID,\n\n  getNode: getNode,\n\n  getNodeFromInstance: getNodeFromInstance,\n\n  isValid: isValid,\n\n  purgeID: purgeID\n};\n\nReactPerf.measureMethods(ReactMount, 'ReactMount', {\n  _renderNewRootComponent: '_renderNewRootComponent',\n  _mountImageIntoNode: '_mountImageIntoNode'\n});\n\nmodule.exports = ReactMount;\n}).call(this,require('_process'))\n\n},{\"./DOMProperty\":\"react/lib/DOMProperty\",\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactBrowserEventEmitter\":\"react/lib/ReactBrowserEventEmitter\",\"./ReactCurrentOwner\":\"react/lib/ReactCurrentOwner\",\"./ReactDOMFeatureFlags\":\"react/lib/ReactDOMFeatureFlags\",\"./ReactElement\":\"react/lib/ReactElement\",\"./ReactEmptyComponentRegistry\":\"react/lib/ReactEmptyComponentRegistry\",\"./ReactInstanceHandles\":\"react/lib/ReactInstanceHandles\",\"./ReactInstanceMap\":\"react/lib/ReactInstanceMap\",\"./ReactMarkupChecksum\":\"react/lib/ReactMarkupChecksum\",\"./ReactPerf\":\"react/lib/ReactPerf\",\"./ReactReconciler\":\"react/lib/ReactReconciler\",\"./ReactUpdateQueue\":\"react/lib/ReactUpdateQueue\",\"./ReactUpdates\":\"react/lib/ReactUpdates\",\"./instantiateReactComponent\":\"react/lib/instantiateReactComponent\",\"./setInnerHTML\":\"react/lib/setInnerHTML\",\"./shouldUpdateReactComponent\":\"react/lib/shouldUpdateReactComponent\",\"./validateDOMNesting\":\"react/lib/validateDOMNesting\",\"_process\":1,\"fbjs/lib/containsNode\":18,\"fbjs/lib/emptyObject\":22,\"fbjs/lib/invariant\":29,\"fbjs/lib/warning\":41}],\"react/lib/ReactMultiChildUpdateTypes\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChildUpdateTypes\n */\n\n'use strict';\n\nvar keyMirror = require('fbjs/lib/keyMirror');\n\n/**\n * When a component's children are updated, a series of update configuration\n * objects are created in order to batch and serialize the required changes.\n *\n * Enumerates all the possible types of update configurations.\n *\n * @internal\n */\nvar ReactMultiChildUpdateTypes = keyMirror({\n  INSERT_MARKUP: null,\n  MOVE_EXISTING: null,\n  REMOVE_NODE: null,\n  SET_MARKUP: null,\n  TEXT_CONTENT: null\n});\n\nmodule.exports = ReactMultiChildUpdateTypes;\n},{\"fbjs/lib/keyMirror\":33}],\"react/lib/ReactMultiChild\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMultiChild\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\nvar ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactChildReconciler = require('./ReactChildReconciler');\n\nvar flattenChildren = require('./flattenChildren');\n\n/**\n * Updating children of a component may trigger recursive updates. The depth is\n * used to batch recursive updates to render markup more efficiently.\n *\n * @type {number}\n * @private\n */\nvar updateDepth = 0;\n\n/**\n * Queue of update configuration objects.\n *\n * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.\n *\n * @type {array<object>}\n * @private\n */\nvar updateQueue = [];\n\n/**\n * Queue of markup to be rendered.\n *\n * @type {array<string>}\n * @private\n */\nvar markupQueue = [];\n\n/**\n * Enqueues markup to be rendered and inserted at a supplied index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} markup Markup that renders into an element.\n * @param {number} toIndex Destination index.\n * @private\n */\nfunction enqueueInsertMarkup(parentID, markup, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,\n    markupIndex: markupQueue.push(markup) - 1,\n    content: null,\n    fromIndex: null,\n    toIndex: toIndex\n  });\n}\n\n/**\n * Enqueues moving an existing element to another index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {number} fromIndex Source index of the existing element.\n * @param {number} toIndex Destination index of the element.\n * @private\n */\nfunction enqueueMove(parentID, fromIndex, toIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,\n    markupIndex: null,\n    content: null,\n    fromIndex: fromIndex,\n    toIndex: toIndex\n  });\n}\n\n/**\n * Enqueues removing an element at an index.\n *\n * @param {string} parentID ID of the parent component.\n * @param {number} fromIndex Index of the element to remove.\n * @private\n */\nfunction enqueueRemove(parentID, fromIndex) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.REMOVE_NODE,\n    markupIndex: null,\n    content: null,\n    fromIndex: fromIndex,\n    toIndex: null\n  });\n}\n\n/**\n * Enqueues setting the markup of a node.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} markup Markup that renders into an element.\n * @private\n */\nfunction enqueueSetMarkup(parentID, markup) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.SET_MARKUP,\n    markupIndex: null,\n    content: markup,\n    fromIndex: null,\n    toIndex: null\n  });\n}\n\n/**\n * Enqueues setting the text content.\n *\n * @param {string} parentID ID of the parent component.\n * @param {string} textContent Text content to set.\n * @private\n */\nfunction enqueueTextContent(parentID, textContent) {\n  // NOTE: Null values reduce hidden classes.\n  updateQueue.push({\n    parentID: parentID,\n    parentNode: null,\n    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,\n    markupIndex: null,\n    content: textContent,\n    fromIndex: null,\n    toIndex: null\n  });\n}\n\n/**\n * Processes any enqueued updates.\n *\n * @private\n */\nfunction processQueue() {\n  if (updateQueue.length) {\n    ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);\n    clearQueue();\n  }\n}\n\n/**\n * Clears any enqueued updates.\n *\n * @private\n */\nfunction clearQueue() {\n  updateQueue.length = 0;\n  markupQueue.length = 0;\n}\n\n/**\n * ReactMultiChild are capable of reconciling multiple children.\n *\n * @class ReactMultiChild\n * @internal\n */\nvar ReactMultiChild = {\n\n  /**\n   * Provides common functionality for components that must reconcile multiple\n   * children. This is used by `ReactDOMComponent` to mount, update, and\n   * unmount child components.\n   *\n   * @lends {ReactMultiChild.prototype}\n   */\n  Mixin: {\n\n    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n        }\n      }\n      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\n    },\n\n    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, transaction, context) {\n      var nextChildren;\n      if (process.env.NODE_ENV !== 'production') {\n        if (this._currentElement) {\n          try {\n            ReactCurrentOwner.current = this._currentElement._owner;\n            nextChildren = flattenChildren(nextNestedChildrenElements);\n          } finally {\n            ReactCurrentOwner.current = null;\n          }\n          return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);\n        }\n      }\n      nextChildren = flattenChildren(nextNestedChildrenElements);\n      return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);\n    },\n\n    /**\n     * Generates a \"mount image\" for each of the supplied children. In the case\n     * of `ReactDOMComponent`, a mount image is a string of markup.\n     *\n     * @param {?object} nestedChildren Nested child maps.\n     * @return {array} An array of mounted representations.\n     * @internal\n     */\n    mountChildren: function (nestedChildren, transaction, context) {\n      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);\n      this._renderedChildren = children;\n      var mountImages = [];\n      var index = 0;\n      for (var name in children) {\n        if (children.hasOwnProperty(name)) {\n          var child = children[name];\n          // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n          var rootID = this._rootNodeID + name;\n          var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);\n          child._mountIndex = index++;\n          mountImages.push(mountImage);\n        }\n      }\n      return mountImages;\n    },\n\n    /**\n     * Replaces any rendered children with a text content string.\n     *\n     * @param {string} nextContent String of content.\n     * @internal\n     */\n    updateTextContent: function (nextContent) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        var prevChildren = this._renderedChildren;\n        // Remove any rendered children.\n        ReactChildReconciler.unmountChildren(prevChildren);\n        // TODO: The setTextContent operation should be enough\n        for (var name in prevChildren) {\n          if (prevChildren.hasOwnProperty(name)) {\n            this._unmountChild(prevChildren[name]);\n          }\n        }\n        // Set new text content.\n        this.setTextContent(nextContent);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n      }\n    },\n\n    /**\n     * Replaces any rendered children with a markup string.\n     *\n     * @param {string} nextMarkup String of markup.\n     * @internal\n     */\n    updateMarkup: function (nextMarkup) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        var prevChildren = this._renderedChildren;\n        // Remove any rendered children.\n        ReactChildReconciler.unmountChildren(prevChildren);\n        for (var name in prevChildren) {\n          if (prevChildren.hasOwnProperty(name)) {\n            this._unmountChildByName(prevChildren[name], name);\n          }\n        }\n        this.setMarkup(nextMarkup);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n      }\n    },\n\n    /**\n     * Updates the rendered children with new children.\n     *\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     */\n    updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      updateDepth++;\n      var errorThrown = true;\n      try {\n        this._updateChildren(nextNestedChildrenElements, transaction, context);\n        errorThrown = false;\n      } finally {\n        updateDepth--;\n        if (!updateDepth) {\n          if (errorThrown) {\n            clearQueue();\n          } else {\n            processQueue();\n          }\n        }\n      }\n    },\n\n    /**\n     * Improve performance by isolating this hot code path from the try/catch\n     * block in `updateChildren`.\n     *\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\n     * @param {ReactReconcileTransaction} transaction\n     * @final\n     * @protected\n     */\n    _updateChildren: function (nextNestedChildrenElements, transaction, context) {\n      var prevChildren = this._renderedChildren;\n      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);\n      this._renderedChildren = nextChildren;\n      if (!nextChildren && !prevChildren) {\n        return;\n      }\n      var name;\n      // `nextIndex` will increment for each child in `nextChildren`, but\n      // `lastIndex` will be the last index visited in `prevChildren`.\n      var lastIndex = 0;\n      var nextIndex = 0;\n      for (name in nextChildren) {\n        if (!nextChildren.hasOwnProperty(name)) {\n          continue;\n        }\n        var prevChild = prevChildren && prevChildren[name];\n        var nextChild = nextChildren[name];\n        if (prevChild === nextChild) {\n          this.moveChild(prevChild, nextIndex, lastIndex);\n          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n          prevChild._mountIndex = nextIndex;\n        } else {\n          if (prevChild) {\n            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\n            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\n            this._unmountChild(prevChild);\n          }\n          // The child must be instantiated before it's mounted.\n          this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);\n        }\n        nextIndex++;\n      }\n      // Remove children that are no longer present.\n      for (name in prevChildren) {\n        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\n          this._unmountChild(prevChildren[name]);\n        }\n      }\n    },\n\n    /**\n     * Unmounts all rendered children. This should be used to clean up children\n     * when this component is unmounted.\n     *\n     * @internal\n     */\n    unmountChildren: function () {\n      var renderedChildren = this._renderedChildren;\n      ReactChildReconciler.unmountChildren(renderedChildren);\n      this._renderedChildren = null;\n    },\n\n    /**\n     * Moves a child component to the supplied index.\n     *\n     * @param {ReactComponent} child Component to move.\n     * @param {number} toIndex Destination index of the element.\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\n     * @protected\n     */\n    moveChild: function (child, toIndex, lastIndex) {\n      // If the index of `child` is less than `lastIndex`, then it needs to\n      // be moved. Otherwise, we do not need to move it because a child will be\n      // inserted or moved before `child`.\n      if (child._mountIndex < lastIndex) {\n        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);\n      }\n    },\n\n    /**\n     * Creates a child component.\n     *\n     * @param {ReactComponent} child Component to create.\n     * @param {string} mountImage Markup to insert.\n     * @protected\n     */\n    createChild: function (child, mountImage) {\n      enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);\n    },\n\n    /**\n     * Removes a child component.\n     *\n     * @param {ReactComponent} child Child to remove.\n     * @protected\n     */\n    removeChild: function (child) {\n      enqueueRemove(this._rootNodeID, child._mountIndex);\n    },\n\n    /**\n     * Sets this text content string.\n     *\n     * @param {string} textContent Text content to set.\n     * @protected\n     */\n    setTextContent: function (textContent) {\n      enqueueTextContent(this._rootNodeID, textContent);\n    },\n\n    /**\n     * Sets this markup string.\n     *\n     * @param {string} markup Markup to set.\n     * @protected\n     */\n    setMarkup: function (markup) {\n      enqueueSetMarkup(this._rootNodeID, markup);\n    },\n\n    /**\n     * Mounts a child with the supplied name.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to mount.\n     * @param {string} name Name of the child.\n     * @param {number} index Index at which to insert the child.\n     * @param {ReactReconcileTransaction} transaction\n     * @private\n     */\n    _mountChildByNameAtIndex: function (child, name, index, transaction, context) {\n      // Inlined for performance, see `ReactInstanceHandles.createReactID`.\n      var rootID = this._rootNodeID + name;\n      var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);\n      child._mountIndex = index;\n      this.createChild(child, mountImage);\n    },\n\n    /**\n     * Unmounts a rendered child.\n     *\n     * NOTE: This is part of `updateChildren` and is here for readability.\n     *\n     * @param {ReactComponent} child Component to unmount.\n     * @private\n     */\n    _unmountChild: function (child) {\n      this.removeChild(child);\n      child._mountIndex = null;\n    }\n\n  }\n\n};\n\nmodule.exports = ReactMultiChild;\n}).call(this,require('_process'))\n\n},{\"./ReactChildReconciler\":\"react/lib/ReactChildReconciler\",\"./ReactComponentEnvironment\":\"react/lib/ReactComponentEnvironment\",\"./ReactCurrentOwner\":\"react/lib/ReactCurrentOwner\",\"./ReactMultiChildUpdateTypes\":\"react/lib/ReactMultiChildUpdateTypes\",\"./ReactReconciler\":\"react/lib/ReactReconciler\",\"./flattenChildren\":\"react/lib/flattenChildren\",\"_process\":1}],\"react/lib/ReactNativeComponent\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNativeComponent\n */\n\n'use strict';\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\n\nvar autoGenerateWrapperClass = null;\nvar genericComponentClass = null;\n// This registry keeps track of wrapper classes around native tags.\nvar tagToComponentClass = {};\nvar textComponentClass = null;\n\nvar ReactNativeComponentInjection = {\n  // This accepts a class that receives the tag string. This is a catch all\n  // that can render any kind of tag.\n  injectGenericComponentClass: function (componentClass) {\n    genericComponentClass = componentClass;\n  },\n  // This accepts a text component class that takes the text string to be\n  // rendered as props.\n  injectTextComponentClass: function (componentClass) {\n    textComponentClass = componentClass;\n  },\n  // This accepts a keyed object with classes as values. Each key represents a\n  // tag. That particular tag will use this class instead of the generic one.\n  injectComponentClasses: function (componentClasses) {\n    assign(tagToComponentClass, componentClasses);\n  }\n};\n\n/**\n * Get a composite component wrapper class for a specific tag.\n *\n * @param {ReactElement} element The tag for which to get the class.\n * @return {function} The React class constructor function.\n */\nfunction getComponentClassForElement(element) {\n  if (typeof element.type === 'function') {\n    return element.type;\n  }\n  var tag = element.type;\n  var componentClass = tagToComponentClass[tag];\n  if (componentClass == null) {\n    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);\n  }\n  return componentClass;\n}\n\n/**\n * Get a native internal component class for a specific tag.\n *\n * @param {ReactElement} element The element to create.\n * @return {function} The internal class constructor function.\n */\nfunction createInternalComponent(element) {\n  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;\n  return new genericComponentClass(element.type, element.props);\n}\n\n/**\n * @param {ReactText} text\n * @return {ReactComponent}\n */\nfunction createInstanceForText(text) {\n  return new textComponentClass(text);\n}\n\n/**\n * @param {ReactComponent} component\n * @return {boolean}\n */\nfunction isTextComponent(component) {\n  return component instanceof textComponentClass;\n}\n\nvar ReactNativeComponent = {\n  getComponentClassForElement: getComponentClassForElement,\n  createInternalComponent: createInternalComponent,\n  createInstanceForText: createInstanceForText,\n  isTextComponent: isTextComponent,\n  injection: ReactNativeComponentInjection\n};\n\nmodule.exports = ReactNativeComponent;\n}).call(this,require('_process'))\n\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/ReactNoopUpdateQueue\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactNoopUpdateQueue\n */\n\n'use strict';\n\nvar warning = require('fbjs/lib/warning');\n\nfunction warnTDZ(publicInstance, callerName) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;\n  }\n}\n\n/**\n * This is the abstract API for an update queue.\n */\nvar ReactNoopUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback) {},\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    warnTDZ(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    warnTDZ(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    warnTDZ(publicInstance, 'setState');\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialProps Subset of the next props.\n   * @internal\n   */\n  enqueueSetProps: function (publicInstance, partialProps) {\n    warnTDZ(publicInstance, 'setProps');\n  },\n\n  /**\n   * Replaces all of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} props New props.\n   * @internal\n   */\n  enqueueReplaceProps: function (publicInstance, props) {\n    warnTDZ(publicInstance, 'replaceProps');\n  }\n\n};\n\nmodule.exports = ReactNoopUpdateQueue;\n}).call(this,require('_process'))\n\n},{\"_process\":1,\"fbjs/lib/warning\":41}],\"react/lib/ReactOwner\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactOwner\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * ReactOwners are capable of storing references to owned components.\n *\n * All components are capable of //being// referenced by owner components, but\n * only ReactOwner components are capable of //referencing// owned components.\n * The named reference is known as a \"ref\".\n *\n * Refs are available when mounted and updated during reconciliation.\n *\n *   var MyComponent = React.createClass({\n *     render: function() {\n *       return (\n *         <div onClick={this.handleClick}>\n *           <CustomComponent ref=\"custom\" />\n *         </div>\n *       );\n *     },\n *     handleClick: function() {\n *       this.refs.custom.handleClick();\n *     },\n *     componentDidMount: function() {\n *       this.refs.custom.initialize();\n *     }\n *   });\n *\n * Refs should rarely be used. When refs are used, they should only be done to\n * control data that is not handled by React's data flow.\n *\n * @class ReactOwner\n */\nvar ReactOwner = {\n\n  /**\n   * @param {?object} object\n   * @return {boolean} True if `object` is a valid owner.\n   * @final\n   */\n  isValidOwner: function (object) {\n    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');\n  },\n\n  /**\n   * Adds a component by ref to an owner component.\n   *\n   * @param {ReactComponent} component Component to reference.\n   * @param {string} ref Name by which to refer to the component.\n   * @param {ReactOwner} owner Component on which to record the ref.\n   * @final\n   * @internal\n   */\n  addComponentAsRefTo: function (component, ref, owner) {\n    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;\n    owner.attachRef(ref, component);\n  },\n\n  /**\n   * Removes a component by ref from an owner component.\n   *\n   * @param {ReactComponent} component Component to dereference.\n   * @param {string} ref Name of the ref to remove.\n   * @param {ReactOwner} owner Component on which the ref is recorded.\n   * @final\n   * @internal\n   */\n  removeComponentAsRefFrom: function (component, ref, owner) {\n    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;\n    // Check that `component` is still the current ref because we do not want to\n    // detach the ref if another component stole it.\n    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {\n      owner.detachRef(ref);\n    }\n  }\n\n};\n\nmodule.exports = ReactOwner;\n}).call(this,require('_process'))\n\n},{\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/ReactPerf\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPerf\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * ReactPerf is a general AOP system designed to measure performance. This\n * module only has the hooks: see ReactDefaultPerf for the analysis tool.\n */\nvar ReactPerf = {\n  /**\n   * Boolean to enable/disable measurement. Set to false by default to prevent\n   * accidental logging and perf loss.\n   */\n  enableMeasure: false,\n\n  /**\n   * Holds onto the measure function in use. By default, don't measure\n   * anything, but we'll override this if we inject a measure function.\n   */\n  storedMeasure: _noMeasure,\n\n  /**\n   * @param {object} object\n   * @param {string} objectName\n   * @param {object<string>} methodNames\n   */\n  measureMethods: function (object, objectName, methodNames) {\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in methodNames) {\n        if (!methodNames.hasOwnProperty(key)) {\n          continue;\n        }\n        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);\n      }\n    }\n  },\n\n  /**\n   * Use this to wrap methods you want to measure. Zero overhead in production.\n   *\n   * @param {string} objName\n   * @param {string} fnName\n   * @param {function} func\n   * @return {function}\n   */\n  measure: function (objName, fnName, func) {\n    if (process.env.NODE_ENV !== 'production') {\n      var measuredFunc = null;\n      var wrapper = function () {\n        if (ReactPerf.enableMeasure) {\n          if (!measuredFunc) {\n            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);\n          }\n          return measuredFunc.apply(this, arguments);\n        }\n        return func.apply(this, arguments);\n      };\n      wrapper.displayName = objName + '_' + fnName;\n      return wrapper;\n    }\n    return func;\n  },\n\n  injection: {\n    /**\n     * @param {function} measure\n     */\n    injectMeasure: function (measure) {\n      ReactPerf.storedMeasure = measure;\n    }\n  }\n};\n\n/**\n * Simply passes through the measured function, without measuring it.\n *\n * @param {string} objName\n * @param {string} fnName\n * @param {function} func\n * @return {function}\n */\nfunction _noMeasure(objName, fnName, func) {\n  return func;\n}\n\nmodule.exports = ReactPerf;\n}).call(this,require('_process'))\n\n},{\"_process\":1}],\"react/lib/ReactPropTransferer\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTransferer\n */\n\n'use strict';\n\nvar assign = require('./Object.assign');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar joinClasses = require('fbjs/lib/joinClasses');\n\n/**\n * Creates a transfer strategy that will merge prop values using the supplied\n * `mergeStrategy`. If a prop was previously unset, this just sets it.\n *\n * @param {function} mergeStrategy\n * @return {function}\n */\nfunction createTransferStrategy(mergeStrategy) {\n  return function (props, key, value) {\n    if (!props.hasOwnProperty(key)) {\n      props[key] = value;\n    } else {\n      props[key] = mergeStrategy(props[key], value);\n    }\n  };\n}\n\nvar transferStrategyMerge = createTransferStrategy(function (a, b) {\n  // `merge` overrides the first object's (`props[key]` above) keys using the\n  // second object's (`value`) keys. An object's style's existing `propA` would\n  // get overridden. Flip the order here.\n  return assign({}, b, a);\n});\n\n/**\n * Transfer strategies dictate how props are transferred by `transferPropsTo`.\n * NOTE: if you add any more exceptions to this list you should be sure to\n * update `cloneWithProps()` accordingly.\n */\nvar TransferStrategies = {\n  /**\n   * Never transfer `children`.\n   */\n  children: emptyFunction,\n  /**\n   * Transfer the `className` prop by merging them.\n   */\n  className: createTransferStrategy(joinClasses),\n  /**\n   * Transfer the `style` prop (which is an object) by merging them.\n   */\n  style: transferStrategyMerge\n};\n\n/**\n * Mutates the first argument by transferring the properties from the second\n * argument.\n *\n * @param {object} props\n * @param {object} newProps\n * @return {object}\n */\nfunction transferInto(props, newProps) {\n  for (var thisKey in newProps) {\n    if (!newProps.hasOwnProperty(thisKey)) {\n      continue;\n    }\n\n    var transferStrategy = TransferStrategies[thisKey];\n\n    if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {\n      transferStrategy(props, thisKey, newProps[thisKey]);\n    } else if (!props.hasOwnProperty(thisKey)) {\n      props[thisKey] = newProps[thisKey];\n    }\n  }\n  return props;\n}\n\n/**\n * ReactPropTransferer are capable of transferring props to another component\n * using a `transferPropsTo` method.\n *\n * @class ReactPropTransferer\n */\nvar ReactPropTransferer = {\n\n  /**\n   * Merge two props objects using TransferStrategies.\n   *\n   * @param {object} oldProps original props (they take precedence)\n   * @param {object} newProps new props to merge in\n   * @return {object} a new object containing both sets of props merged.\n   */\n  mergeProps: function (oldProps, newProps) {\n    return transferInto(assign({}, oldProps), newProps);\n  }\n\n};\n\nmodule.exports = ReactPropTransferer;\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"fbjs/lib/emptyFunction\":21,\"fbjs/lib/joinClasses\":32}],\"react/lib/ReactPropTypeLocationNames\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocationNames\n */\n\n'use strict';\n\nvar ReactPropTypeLocationNames = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n}\n\nmodule.exports = ReactPropTypeLocationNames;\n}).call(this,require('_process'))\n\n},{\"_process\":1}],\"react/lib/ReactPropTypeLocations\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypeLocations\n */\n\n'use strict';\n\nvar keyMirror = require('fbjs/lib/keyMirror');\n\nvar ReactPropTypeLocations = keyMirror({\n  prop: null,\n  context: null,\n  childContext: null\n});\n\nmodule.exports = ReactPropTypeLocations;\n},{\"fbjs/lib/keyMirror\":33}],\"react/lib/ReactPropTypes\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactPropTypes\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getIteratorFn = require('./getIteratorFn');\n\n/**\n * Collection of methods that allow declaration and validation of props that are\n * supplied to React components. Example usage:\n *\n *   var Props = require('ReactPropTypes');\n *   var MyArticle = React.createClass({\n *     propTypes: {\n *       // An optional string prop named \"description\".\n *       description: Props.string,\n *\n *       // A required enum prop named \"category\".\n *       category: Props.oneOf(['News','Photos']).isRequired,\n *\n *       // A prop named \"dialog\" that requires an instance of Dialog.\n *       dialog: Props.instanceOf(Dialog).isRequired\n *     },\n *     render: function() { ... }\n *   });\n *\n * A more formal specification of how these methods are used:\n *\n *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n *   decl := ReactPropTypes.{type}(.isRequired)?\n *\n * Each and every declaration produces a function with the same signature. This\n * allows the creation of custom validation functions. For example:\n *\n *  var MyLink = React.createClass({\n *    propTypes: {\n *      // An optional string or URI prop named \"href\".\n *      href: function(props, propName, componentName) {\n *        var propValue = props[propName];\n *        if (propValue != null && typeof propValue !== 'string' &&\n *            !(propValue instanceof URI)) {\n *          return new Error(\n *            'Expected a string or an URI for ' + propName + ' in ' +\n *            componentName\n *          );\n *        }\n *      }\n *    },\n *    render: function() {...}\n *  });\n *\n * @internal\n */\n\nvar ANONYMOUS = '<<anonymous>>';\n\nvar ReactPropTypes = {\n  array: createPrimitiveTypeChecker('array'),\n  bool: createPrimitiveTypeChecker('boolean'),\n  func: createPrimitiveTypeChecker('function'),\n  number: createPrimitiveTypeChecker('number'),\n  object: createPrimitiveTypeChecker('object'),\n  string: createPrimitiveTypeChecker('string'),\n\n  any: createAnyTypeChecker(),\n  arrayOf: createArrayOfTypeChecker,\n  element: createElementTypeChecker(),\n  instanceOf: createInstanceTypeChecker,\n  node: createNodeChecker(),\n  objectOf: createObjectOfTypeChecker,\n  oneOf: createEnumTypeChecker,\n  oneOfType: createUnionTypeChecker,\n  shape: createShapeTypeChecker\n};\n\nfunction createChainableTypeChecker(validate) {\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\n    componentName = componentName || ANONYMOUS;\n    propFullName = propFullName || propName;\n    if (props[propName] == null) {\n      var locationName = ReactPropTypeLocationNames[location];\n      if (isRequired) {\n        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));\n      }\n      return null;\n    } else {\n      return validate(props, propName, componentName, location, propFullName);\n    }\n  }\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n\n  return chainedCheckType;\n}\n\nfunction createPrimitiveTypeChecker(expectedType) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== expectedType) {\n      var locationName = ReactPropTypeLocationNames[location];\n      // `propValue` being instance of, say, date/regexp, pass the 'object'\n      // check, but we can offer a more precise error message here rather than\n      // 'of type `object`'.\n      var preciseType = getPreciseType(propValue);\n\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createAnyTypeChecker() {\n  return createChainableTypeChecker(emptyFunction.thatReturns(null));\n}\n\nfunction createArrayOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    if (!Array.isArray(propValue)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var propType = getPropType(propValue);\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n    }\n    for (var i = 0; i < propValue.length; i++) {\n      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');\n      if (error instanceof Error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createElementTypeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!ReactElement.isValidElement(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createInstanceTypeChecker(expectedClass) {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!(props[propName] instanceof expectedClass)) {\n      var locationName = ReactPropTypeLocationNames[location];\n      var expectedClassName = expectedClass.name || ANONYMOUS;\n      var actualClassName = getClassName(props[propName]);\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createEnumTypeChecker(expectedValues) {\n  if (!Array.isArray(expectedValues)) {\n    return createChainableTypeChecker(function () {\n      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');\n    });\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    for (var i = 0; i < expectedValues.length; i++) {\n      if (propValue === expectedValues[i]) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    var valuesString = JSON.stringify(expectedValues);\n    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createObjectOfTypeChecker(typeChecker) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n    }\n    for (var key in propValue) {\n      if (propValue.hasOwnProperty(key)) {\n        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createUnionTypeChecker(arrayOfTypeCheckers) {\n  if (!Array.isArray(arrayOfTypeCheckers)) {\n    return createChainableTypeChecker(function () {\n      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');\n    });\n  }\n\n  function validate(props, propName, componentName, location, propFullName) {\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (checker(props, propName, componentName, location, propFullName) == null) {\n        return null;\n      }\n    }\n\n    var locationName = ReactPropTypeLocationNames[location];\n    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createNodeChecker() {\n  function validate(props, propName, componentName, location, propFullName) {\n    if (!isNode(props[propName])) {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction createShapeTypeChecker(shapeTypes) {\n  function validate(props, propName, componentName, location, propFullName) {\n    var propValue = props[propName];\n    var propType = getPropType(propValue);\n    if (propType !== 'object') {\n      var locationName = ReactPropTypeLocationNames[location];\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n    }\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n      if (!checker) {\n        continue;\n      }\n      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);\n      if (error) {\n        return error;\n      }\n    }\n    return null;\n  }\n  return createChainableTypeChecker(validate);\n}\n\nfunction isNode(propValue) {\n  switch (typeof propValue) {\n    case 'number':\n    case 'string':\n    case 'undefined':\n      return true;\n    case 'boolean':\n      return !propValue;\n    case 'object':\n      if (Array.isArray(propValue)) {\n        return propValue.every(isNode);\n      }\n      if (propValue === null || ReactElement.isValidElement(propValue)) {\n        return true;\n      }\n\n      var iteratorFn = getIteratorFn(propValue);\n      if (iteratorFn) {\n        var iterator = iteratorFn.call(propValue);\n        var step;\n        if (iteratorFn !== propValue.entries) {\n          while (!(step = iterator.next()).done) {\n            if (!isNode(step.value)) {\n              return false;\n            }\n          }\n        } else {\n          // Iterator will provide entry [k,v] tuples rather than values.\n          while (!(step = iterator.next()).done) {\n            var entry = step.value;\n            if (entry) {\n              if (!isNode(entry[1])) {\n                return false;\n              }\n            }\n          }\n        }\n      } else {\n        return false;\n      }\n\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Equivalent of `typeof` but with special handling for array and regexp.\nfunction getPropType(propValue) {\n  var propType = typeof propValue;\n  if (Array.isArray(propValue)) {\n    return 'array';\n  }\n  if (propValue instanceof RegExp) {\n    // Old webkits (at least until Android 4.0) return 'function' rather than\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n    // passes PropTypes.object.\n    return 'object';\n  }\n  return propType;\n}\n\n// This handles more types than `getPropType`. Only used for error messages.\n// See `createPrimitiveTypeChecker`.\nfunction getPreciseType(propValue) {\n  var propType = getPropType(propValue);\n  if (propType === 'object') {\n    if (propValue instanceof Date) {\n      return 'date';\n    } else if (propValue instanceof RegExp) {\n      return 'regexp';\n    }\n  }\n  return propType;\n}\n\n// Returns class name of the object, if any.\nfunction getClassName(propValue) {\n  if (!propValue.constructor || !propValue.constructor.name) {\n    return '<<anonymous>>';\n  }\n  return propValue.constructor.name;\n}\n\nmodule.exports = ReactPropTypes;\n},{\"./ReactElement\":\"react/lib/ReactElement\",\"./ReactPropTypeLocationNames\":\"react/lib/ReactPropTypeLocationNames\",\"./getIteratorFn\":\"react/lib/getIteratorFn\",\"fbjs/lib/emptyFunction\":21}],\"react/lib/ReactReconcileTransaction\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconcileTransaction\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar Transaction = require('./Transaction');\n\nvar assign = require('./Object.assign');\n\n/**\n * Ensures that, when possible, the selection range (currently selected text\n * input) is not disturbed by performing the transaction.\n */\nvar SELECTION_RESTORATION = {\n  /**\n   * @return {Selection} Selection information.\n   */\n  initialize: ReactInputSelection.getSelectionInformation,\n  /**\n   * @param {Selection} sel Selection information returned from `initialize`.\n   */\n  close: ReactInputSelection.restoreSelection\n};\n\n/**\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\n * high level DOM manipulations (like temporarily removing a text input from the\n * DOM).\n */\nvar EVENT_SUPPRESSION = {\n  /**\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\n   * the reconciliation.\n   */\n  initialize: function () {\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\n    ReactBrowserEventEmitter.setEnabled(false);\n    return currentlyEnabled;\n  },\n\n  /**\n   * @param {boolean} previouslyEnabled Enabled status of\n   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\n   *   restores the previous value.\n   */\n  close: function (previouslyEnabled) {\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\n  }\n};\n\n/**\n * Provides a queue for collecting `componentDidMount` and\n * `componentDidUpdate` callbacks during the the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n\n  /**\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\n   */\n  close: function () {\n    this.reactMountReady.notifyAll();\n  }\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\n\n/**\n * Currently:\n * - The order that these are listed in the transaction is critical:\n * - Suppresses events.\n * - Restores selection range.\n *\n * Future:\n * - Restore document/overflow scroll positions that were unintentionally\n *   modified via DOM insertions above the top viewport boundary.\n * - Implement/integrate with customized constraint based layout system and keep\n *   track of which dimensions must be remeasured.\n *\n * @class ReactReconcileTransaction\n */\nfunction ReactReconcileTransaction(forceHTML) {\n  this.reinitializeTransaction();\n  // Only server-side rendering really needs this option (see\n  // `ReactServerRendering`), but server-side uses\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\n  // accessible and defaults to false when `ReactDOMComponent` and\n  // `ReactTextComponent` checks it in `mountComponent`.`\n  this.renderToStaticMarkup = false;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array<object>} List of operation wrap procedures.\n   *   TODO: convert to array<TransactionWrapper>\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n  }\n};\n\nassign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactReconcileTransaction);\n\nmodule.exports = ReactReconcileTransaction;\n},{\"./CallbackQueue\":\"react/lib/CallbackQueue\",\"./Object.assign\":\"react/lib/Object.assign\",\"./PooledClass\":\"react/lib/PooledClass\",\"./ReactBrowserEventEmitter\":\"react/lib/ReactBrowserEventEmitter\",\"./ReactDOMFeatureFlags\":\"react/lib/ReactDOMFeatureFlags\",\"./ReactInputSelection\":\"react/lib/ReactInputSelection\",\"./Transaction\":\"react/lib/Transaction\"}],\"react/lib/ReactReconciler\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactReconciler\n */\n\n'use strict';\n\nvar ReactRef = require('./ReactRef');\n\n/**\n * Helper to call ReactRef.attachRefs with this composite component, split out\n * to avoid allocations in the transaction mount-ready queue.\n */\nfunction attachRefs() {\n  ReactRef.attachRefs(this, this._currentElement);\n}\n\nvar ReactReconciler = {\n\n  /**\n   * Initializes the component, renders markup, and registers event listeners.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {string} rootID DOM ID of the root node.\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\n   * @return {?string} Rendered markup to be inserted into the DOM.\n   * @final\n   * @internal\n   */\n  mountComponent: function (internalInstance, rootID, transaction, context) {\n    var markup = internalInstance.mountComponent(rootID, transaction, context);\n    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n    return markup;\n  },\n\n  /**\n   * Releases any resources allocated by `mountComponent`.\n   *\n   * @final\n   * @internal\n   */\n  unmountComponent: function (internalInstance) {\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\n    internalInstance.unmountComponent();\n  },\n\n  /**\n   * Update a component using a new element.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactElement} nextElement\n   * @param {ReactReconcileTransaction} transaction\n   * @param {object} context\n   * @internal\n   */\n  receiveComponent: function (internalInstance, nextElement, transaction, context) {\n    var prevElement = internalInstance._currentElement;\n\n    if (nextElement === prevElement && context === internalInstance._context) {\n      // Since elements are immutable after the owner is rendered,\n      // we can do a cheap identity compare here to determine if this is a\n      // superfluous reconcile. It's possible for state to be mutable but such\n      // change should trigger an update of the owner which would recreate\n      // the element. We explicitly check for the existence of an owner since\n      // it's possible for an element created outside a composite to be\n      // deeply mutated and reused.\n\n      // TODO: Bailing out early is just a perf optimization right?\n      // TODO: Removing the return statement should affect correctness?\n      return;\n    }\n\n    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\n\n    if (refsChanged) {\n      ReactRef.detachRefs(internalInstance, prevElement);\n    }\n\n    internalInstance.receiveComponent(nextElement, transaction, context);\n\n    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\n    }\n  },\n\n  /**\n   * Flush any dirty changes in a component.\n   *\n   * @param {ReactComponent} internalInstance\n   * @param {ReactReconcileTransaction} transaction\n   * @internal\n   */\n  performUpdateIfNecessary: function (internalInstance, transaction) {\n    internalInstance.performUpdateIfNecessary(transaction);\n  }\n\n};\n\nmodule.exports = ReactReconciler;\n},{\"./ReactRef\":\"react/lib/ReactRef\"}],\"react/lib/ReactRef\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRef\n */\n\n'use strict';\n\nvar ReactOwner = require('./ReactOwner');\n\nvar ReactRef = {};\n\nfunction attachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(component.getPublicInstance());\n  } else {\n    // Legacy ref\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\n  }\n}\n\nfunction detachRef(ref, component, owner) {\n  if (typeof ref === 'function') {\n    ref(null);\n  } else {\n    // Legacy ref\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\n  }\n}\n\nReactRef.attachRefs = function (instance, element) {\n  if (element === null || element === false) {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    attachRef(ref, instance, element._owner);\n  }\n};\n\nReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\n  // If either the owner or a `ref` has changed, make sure the newest owner\n  // has stored a reference to `this`, and the previous owner (if different)\n  // has forgotten the reference to `this`. We use the element instead\n  // of the public this.props because the post processing cannot determine\n  // a ref. The ref conceptually lives on the element.\n\n  // TODO: Should this even be possible? The owner cannot change because\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\n  // if you swap the keys of but not the refs. Reconsider where this check\n  // is made. It probably belongs where the key checking and\n  // instantiateReactComponent is done.\n\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n\n  return(\n    // This has a few false positives w/r/t empty components.\n    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref\n  );\n};\n\nReactRef.detachRefs = function (instance, element) {\n  if (element === null || element === false) {\n    return;\n  }\n  var ref = element.ref;\n  if (ref != null) {\n    detachRef(ref, instance, element._owner);\n  }\n};\n\nmodule.exports = ReactRef;\n},{\"./ReactOwner\":\"react/lib/ReactOwner\"}],\"react/lib/ReactRootIndex\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\nvar ReactRootIndexInjection = {\n  /**\n   * @param {function} _createReactRootIndex\n   */\n  injectCreateReactRootIndex: function (_createReactRootIndex) {\n    ReactRootIndex.createReactRootIndex = _createReactRootIndex;\n  }\n};\n\nvar ReactRootIndex = {\n  createReactRootIndex: null,\n  injection: ReactRootIndexInjection\n};\n\nmodule.exports = ReactRootIndex;\n},{}],\"react/lib/ReactServerBatchingStrategy\":[function(require,module,exports){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerBatchingStrategy\n * @typechecks\n */\n\n'use strict';\n\nvar ReactServerBatchingStrategy = {\n  isBatchingUpdates: false,\n  batchedUpdates: function (callback) {\n    // Don't do anything here. During the server rendering we don't want to\n    // schedule any updates. We will simply ignore them.\n  }\n};\n\nmodule.exports = ReactServerBatchingStrategy;\n},{}],\"react/lib/ReactServerRenderingTransaction\":[function(require,module,exports){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactServerRenderingTransaction\n * @typechecks\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\nvar CallbackQueue = require('./CallbackQueue');\nvar Transaction = require('./Transaction');\n\nvar assign = require('./Object.assign');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\n/**\n * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks\n * during the performing of the transaction.\n */\nvar ON_DOM_READY_QUEUEING = {\n  /**\n   * Initializes the internal `onDOMReady` queue.\n   */\n  initialize: function () {\n    this.reactMountReady.reset();\n  },\n\n  close: emptyFunction\n};\n\n/**\n * Executed within the scope of the `Transaction` instance. Consider these as\n * being member methods, but with an implied ordering while being isolated from\n * each other.\n */\nvar TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];\n\n/**\n * @class ReactServerRenderingTransaction\n * @param {boolean} renderToStaticMarkup\n */\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.reactMountReady = CallbackQueue.getPooled(null);\n  this.useCreateElement = false;\n}\n\nvar Mixin = {\n  /**\n   * @see Transaction\n   * @abstract\n   * @final\n   * @return {array} Empty list of operation wrap procedures.\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\n   */\n  getReactMountReady: function () {\n    return this.reactMountReady;\n  },\n\n  /**\n   * `PooledClass` looks for this, and will invoke this before allowing this\n   * instance to be reused.\n   */\n  destructor: function () {\n    CallbackQueue.release(this.reactMountReady);\n    this.reactMountReady = null;\n  }\n};\n\nassign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\n\nmodule.exports = ReactServerRenderingTransaction;\n},{\"./CallbackQueue\":\"react/lib/CallbackQueue\",\"./Object.assign\":\"react/lib/Object.assign\",\"./PooledClass\":\"react/lib/PooledClass\",\"./Transaction\":\"react/lib/Transaction\",\"fbjs/lib/emptyFunction\":21}],\"react/lib/ReactServerRendering\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule ReactServerRendering\n */\n'use strict';\n\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactServerBatchingStrategy = require('./ReactServerBatchingStrategy');\nvar ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup\n */\nfunction renderToString(element) {\n  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;\n\n  var transaction;\n  try {\n    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);\n\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(false);\n\n    return transaction.perform(function () {\n      var componentInstance = instantiateReactComponent(element, null);\n      var markup = componentInstance.mountComponent(id, transaction, emptyObject);\n      return ReactMarkupChecksum.addChecksumToMarkup(markup);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n    // Revert to the DOM batching strategy since these two renderers\n    // currently share these stateful modules.\n    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n  }\n}\n\n/**\n * @param {ReactElement} element\n * @return {string} the HTML markup, without the extra React ID and checksum\n * (for generating static pages)\n */\nfunction renderToStaticMarkup(element) {\n  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;\n\n  var transaction;\n  try {\n    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);\n\n    var id = ReactInstanceHandles.createReactRootID();\n    transaction = ReactServerRenderingTransaction.getPooled(true);\n\n    return transaction.perform(function () {\n      var componentInstance = instantiateReactComponent(element, null);\n      return componentInstance.mountComponent(id, transaction, emptyObject);\n    }, null);\n  } finally {\n    ReactServerRenderingTransaction.release(transaction);\n    // Revert to the DOM batching strategy since these two renderers\n    // currently share these stateful modules.\n    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);\n  }\n}\n\nmodule.exports = {\n  renderToString: renderToString,\n  renderToStaticMarkup: renderToStaticMarkup\n};\n}).call(this,require('_process'))\n\n},{\"./ReactDefaultBatchingStrategy\":\"react/lib/ReactDefaultBatchingStrategy\",\"./ReactElement\":\"react/lib/ReactElement\",\"./ReactInstanceHandles\":\"react/lib/ReactInstanceHandles\",\"./ReactMarkupChecksum\":\"react/lib/ReactMarkupChecksum\",\"./ReactServerBatchingStrategy\":\"react/lib/ReactServerBatchingStrategy\",\"./ReactServerRenderingTransaction\":\"react/lib/ReactServerRenderingTransaction\",\"./ReactUpdates\":\"react/lib/ReactUpdates\",\"./instantiateReactComponent\":\"react/lib/instantiateReactComponent\",\"_process\":1,\"fbjs/lib/emptyObject\":22,\"fbjs/lib/invariant\":29}],\"react/lib/ReactStateSetters\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactStateSetters\n */\n\n'use strict';\n\nvar ReactStateSetters = {\n  /**\n   * Returns a function that calls the provided function, and uses the result\n   * of that to set the component's state.\n   *\n   * @param {ReactCompositeComponent} component\n   * @param {function} funcReturningState Returned callback uses this to\n   *                                      determine how to update state.\n   * @return {function} callback that when invoked uses funcReturningState to\n   *                    determined the object literal to setState.\n   */\n  createStateSetter: function (component, funcReturningState) {\n    return function (a, b, c, d, e, f) {\n      var partialState = funcReturningState.call(component, a, b, c, d, e, f);\n      if (partialState) {\n        component.setState(partialState);\n      }\n    };\n  },\n\n  /**\n   * Returns a single-argument callback that can be used to update a single\n   * key in the component's state.\n   *\n   * Note: this is memoized function, which makes it inexpensive to call.\n   *\n   * @param {ReactCompositeComponent} component\n   * @param {string} key The key in the state that you should update.\n   * @return {function} callback of 1 argument which calls setState() with\n   *                    the provided keyName and callback argument.\n   */\n  createStateKeySetter: function (component, key) {\n    // Memoize the setters.\n    var cache = component.__keySetters || (component.__keySetters = {});\n    return cache[key] || (cache[key] = createStateKeySetter(component, key));\n  }\n};\n\nfunction createStateKeySetter(component, key) {\n  // Partial state is allocated outside of the function closure so it can be\n  // reused with every call, avoiding memory allocation when this function\n  // is called.\n  var partialState = {};\n  return function stateKeySetter(value) {\n    partialState[key] = value;\n    component.setState(partialState);\n  };\n}\n\nReactStateSetters.Mixin = {\n  /**\n   * Returns a function that calls the provided function, and uses the result\n   * of that to set the component's state.\n   *\n   * For example, these statements are equivalent:\n   *\n   *   this.setState({x: 1});\n   *   this.createStateSetter(function(xValue) {\n   *     return {x: xValue};\n   *   })(1);\n   *\n   * @param {function} funcReturningState Returned callback uses this to\n   *                                      determine how to update state.\n   * @return {function} callback that when invoked uses funcReturningState to\n   *                    determined the object literal to setState.\n   */\n  createStateSetter: function (funcReturningState) {\n    return ReactStateSetters.createStateSetter(this, funcReturningState);\n  },\n\n  /**\n   * Returns a single-argument callback that can be used to update a single\n   * key in the component's state.\n   *\n   * For example, these statements are equivalent:\n   *\n   *   this.setState({x: 1});\n   *   this.createStateKeySetter('x')(1);\n   *\n   * Note: this is memoized function, which makes it inexpensive to call.\n   *\n   * @param {string} key The key in the state that you should update.\n   * @return {function} callback of 1 argument which calls setState() with\n   *                    the provided keyName and callback argument.\n   */\n  createStateKeySetter: function (key) {\n    return ReactStateSetters.createStateKeySetter(this, key);\n  }\n};\n\nmodule.exports = ReactStateSetters;\n},{}],\"react/lib/ReactTestUtils\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactTestUtils\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPropagators = require('./EventPropagators');\nvar React = require('./React');\nvar ReactDOM = require('./ReactDOM');\nvar ReactElement = require('./ReactElement');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactCompositeComponent = require('./ReactCompositeComponent');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactMount = require('./ReactMount');\nvar ReactUpdates = require('./ReactUpdates');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar assign = require('./Object.assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar findDOMNode = require('./findDOMNode');\nvar invariant = require('fbjs/lib/invariant');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction Event(suffix) {}\n\n/**\n * @class ReactTestUtils\n */\n\nfunction findAllInRenderedTreeInternal(inst, test) {\n  if (!inst || !inst.getPublicInstance) {\n    return [];\n  }\n  var publicInst = inst.getPublicInstance();\n  var ret = test(publicInst) ? [publicInst] : [];\n  var currentElement = inst._currentElement;\n  if (ReactTestUtils.isDOMComponent(publicInst)) {\n    var renderedChildren = inst._renderedChildren;\n    var key;\n    for (key in renderedChildren) {\n      if (!renderedChildren.hasOwnProperty(key)) {\n        continue;\n      }\n      ret = ret.concat(findAllInRenderedTreeInternal(renderedChildren[key], test));\n    }\n  } else if (ReactElement.isValidElement(currentElement) && typeof currentElement.type === 'function') {\n    ret = ret.concat(findAllInRenderedTreeInternal(inst._renderedComponent, test));\n  }\n  return ret;\n}\n\n/**\n * Todo: Support the entire DOM.scry query syntax. For now, these simple\n * utilities will suffice for testing purposes.\n * @lends ReactTestUtils\n */\nvar ReactTestUtils = {\n  renderIntoDocument: function (instance) {\n    var div = document.createElement('div');\n    // None of our tests actually require attaching the container to the\n    // DOM, and doing so creates a mess that we rely on test isolation to\n    // clean up, so we're going to stop honoring the name of this method\n    // (and probably rename it eventually) if no problems arise.\n    // document.documentElement.appendChild(div);\n    return ReactDOM.render(instance, div);\n  },\n\n  isElement: function (element) {\n    return ReactElement.isValidElement(element);\n  },\n\n  isElementOfType: function (inst, convenienceConstructor) {\n    return ReactElement.isValidElement(inst) && inst.type === convenienceConstructor;\n  },\n\n  isDOMComponent: function (inst) {\n    return !!(inst && inst.nodeType === 1 && inst.tagName);\n  },\n\n  isDOMComponentElement: function (inst) {\n    return !!(inst && ReactElement.isValidElement(inst) && !!inst.tagName);\n  },\n\n  isCompositeComponent: function (inst) {\n    if (ReactTestUtils.isDOMComponent(inst)) {\n      // Accessing inst.setState warns; just return false as that'll be what\n      // this returns when we have DOM nodes as refs directly\n      return false;\n    }\n    return inst != null && typeof inst.render === 'function' && typeof inst.setState === 'function';\n  },\n\n  isCompositeComponentWithType: function (inst, type) {\n    if (!ReactTestUtils.isCompositeComponent(inst)) {\n      return false;\n    }\n    var internalInstance = ReactInstanceMap.get(inst);\n    var constructor = internalInstance._currentElement.type;\n\n    return constructor === type;\n  },\n\n  isCompositeComponentElement: function (inst) {\n    if (!ReactElement.isValidElement(inst)) {\n      return false;\n    }\n    // We check the prototype of the type that will get mounted, not the\n    // instance itself. This is a future proof way of duck typing.\n    var prototype = inst.type.prototype;\n    return typeof prototype.render === 'function' && typeof prototype.setState === 'function';\n  },\n\n  isCompositeComponentElementWithType: function (inst, type) {\n    var internalInstance = ReactInstanceMap.get(inst);\n    var constructor = internalInstance._currentElement.type;\n\n    return !!(ReactTestUtils.isCompositeComponentElement(inst) && constructor === type);\n  },\n\n  getRenderedChildOfCompositeComponent: function (inst) {\n    if (!ReactTestUtils.isCompositeComponent(inst)) {\n      return null;\n    }\n    var internalInstance = ReactInstanceMap.get(inst);\n    return internalInstance._renderedComponent.getPublicInstance();\n  },\n\n  findAllInRenderedTree: function (inst, test) {\n    if (!inst) {\n      return [];\n    }\n    !ReactTestUtils.isCompositeComponent(inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findAllInRenderedTree(...): instance must be a composite component') : invariant(false) : undefined;\n    return findAllInRenderedTreeInternal(ReactInstanceMap.get(inst), test);\n  },\n\n  /**\n   * Finds all instance of components in the rendered tree that are DOM\n   * components with the class name matching `className`.\n   * @return {array} an array of all the matches.\n   */\n  scryRenderedDOMComponentsWithClass: function (root, classNames) {\n    if (!Array.isArray(classNames)) {\n      classNames = classNames.split(/\\s+/);\n    }\n    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {\n      if (ReactTestUtils.isDOMComponent(inst)) {\n        var className = inst.className;\n        if (typeof className !== 'string') {\n          // SVG, probably.\n          className = inst.getAttribute('class') || '';\n        }\n        var classList = className.split(/\\s+/);\n        return classNames.every(function (name) {\n          return classList.indexOf(name) !== -1;\n        });\n      }\n      return false;\n    });\n  },\n\n  /**\n   * Like scryRenderedDOMComponentsWithClass but expects there to be one result,\n   * and returns that one result, or throws exception if there is any other\n   * number of matches besides one.\n   * @return {!ReactDOMComponent} The one match.\n   */\n  findRenderedDOMComponentWithClass: function (root, className) {\n    var all = ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);\n    if (all.length !== 1) {\n      throw new Error('Did not find exactly one match ' + '(found: ' + all.length + ') for class:' + className);\n    }\n    return all[0];\n  },\n\n  /**\n   * Finds all instance of components in the rendered tree that are DOM\n   * components with the tag name matching `tagName`.\n   * @return {array} an array of all the matches.\n   */\n  scryRenderedDOMComponentsWithTag: function (root, tagName) {\n    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {\n      return ReactTestUtils.isDOMComponent(inst) && inst.tagName.toUpperCase() === tagName.toUpperCase();\n    });\n  },\n\n  /**\n   * Like scryRenderedDOMComponentsWithTag but expects there to be one result,\n   * and returns that one result, or throws exception if there is any other\n   * number of matches besides one.\n   * @return {!ReactDOMComponent} The one match.\n   */\n  findRenderedDOMComponentWithTag: function (root, tagName) {\n    var all = ReactTestUtils.scryRenderedDOMComponentsWithTag(root, tagName);\n    if (all.length !== 1) {\n      throw new Error('Did not find exactly one match for tag:' + tagName);\n    }\n    return all[0];\n  },\n\n  /**\n   * Finds all instances of components with type equal to `componentType`.\n   * @return {array} an array of all the matches.\n   */\n  scryRenderedComponentsWithType: function (root, componentType) {\n    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {\n      return ReactTestUtils.isCompositeComponentWithType(inst, componentType);\n    });\n  },\n\n  /**\n   * Same as `scryRenderedComponentsWithType` but expects there to be one result\n   * and returns that one result, or throws exception if there is any other\n   * number of matches besides one.\n   * @return {!ReactComponent} The one match.\n   */\n  findRenderedComponentWithType: function (root, componentType) {\n    var all = ReactTestUtils.scryRenderedComponentsWithType(root, componentType);\n    if (all.length !== 1) {\n      throw new Error('Did not find exactly one match for componentType:' + componentType + ' (found ' + all.length + ')');\n    }\n    return all[0];\n  },\n\n  /**\n   * Pass a mocked component module to this method to augment it with\n   * useful methods that allow it to be used as a dummy React component.\n   * Instead of rendering as usual, the component will become a simple\n   * <div> containing any provided children.\n   *\n   * @param {object} module the mock function object exported from a\n   *                        module that defines the component to be mocked\n   * @param {?string} mockTagName optional dummy root tag name to return\n   *                              from render method (overrides\n   *                              module.mockTagName if provided)\n   * @return {object} the ReactTestUtils object (for chaining)\n   */\n  mockComponent: function (module, mockTagName) {\n    mockTagName = mockTagName || module.mockTagName || 'div';\n\n    module.prototype.render.mockImplementation(function () {\n      return React.createElement(mockTagName, null, this.props.children);\n    });\n\n    return this;\n  },\n\n  /**\n   * Simulates a top level event being dispatched from a raw event that occurred\n   * on an `Element` node.\n   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`\n   * @param {!Element} node The dom to simulate an event occurring on.\n   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.\n   */\n  simulateNativeEventOnNode: function (topLevelType, node, fakeNativeEvent) {\n    fakeNativeEvent.target = node;\n    ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(topLevelType, fakeNativeEvent);\n  },\n\n  /**\n   * Simulates a top level event being dispatched from a raw event that occurred\n   * on the `ReactDOMComponent` `comp`.\n   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`.\n   * @param {!ReactDOMComponent} comp\n   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.\n   */\n  simulateNativeEventOnDOMComponent: function (topLevelType, comp, fakeNativeEvent) {\n    ReactTestUtils.simulateNativeEventOnNode(topLevelType, findDOMNode(comp), fakeNativeEvent);\n  },\n\n  nativeTouchData: function (x, y) {\n    return {\n      touches: [{ pageX: x, pageY: y }]\n    };\n  },\n\n  createRenderer: function () {\n    return new ReactShallowRenderer();\n  },\n\n  Simulate: null,\n  SimulateNative: {}\n};\n\n/**\n * @class ReactShallowRenderer\n */\nvar ReactShallowRenderer = function () {\n  this._instance = null;\n};\n\nReactShallowRenderer.prototype.getRenderOutput = function () {\n  return this._instance && this._instance._renderedComponent && this._instance._renderedComponent._renderedOutput || null;\n};\n\nvar NoopInternalComponent = function (element) {\n  this._renderedOutput = element;\n  this._currentElement = element;\n};\n\nNoopInternalComponent.prototype = {\n\n  mountComponent: function () {},\n\n  receiveComponent: function (element) {\n    this._renderedOutput = element;\n    this._currentElement = element;\n  },\n\n  unmountComponent: function () {},\n\n  getPublicInstance: function () {\n    return null;\n  }\n};\n\nvar ShallowComponentWrapper = function () {};\nassign(ShallowComponentWrapper.prototype, ReactCompositeComponent.Mixin, {\n  _instantiateReactComponent: function (element) {\n    return new NoopInternalComponent(element);\n  },\n  _replaceNodeWithMarkupByID: function () {},\n  _renderValidatedComponent: ReactCompositeComponent.Mixin._renderValidatedComponentWithoutOwnerOrContext\n});\n\nReactShallowRenderer.prototype.render = function (element, context) {\n  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactShallowRenderer render(): Invalid component element.%s', typeof element === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' : '') : invariant(false) : undefined;\n  !(typeof element.type !== 'string') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactShallowRenderer render(): Shallow rendering works only with custom ' + 'components, not primitives (%s). Instead of calling `.render(el)` and ' + 'inspecting the rendered output, look at `el.props` directly instead.', element.type) : invariant(false) : undefined;\n\n  if (!context) {\n    context = emptyObject;\n  }\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(false);\n  this._render(element, transaction, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n};\n\nReactShallowRenderer.prototype.unmount = function () {\n  if (this._instance) {\n    this._instance.unmountComponent();\n  }\n};\n\nReactShallowRenderer.prototype._render = function (element, transaction, context) {\n  if (this._instance) {\n    this._instance.receiveComponent(element, transaction, context);\n  } else {\n    var rootID = ReactInstanceHandles.createReactRootID();\n    var instance = new ShallowComponentWrapper(element.type);\n    instance.construct(element);\n\n    instance.mountComponent(rootID, transaction, context);\n\n    this._instance = instance;\n  }\n};\n\n/**\n * Exports:\n *\n * - `ReactTestUtils.Simulate.click(Element/ReactDOMComponent)`\n * - `ReactTestUtils.Simulate.mouseMove(Element/ReactDOMComponent)`\n * - `ReactTestUtils.Simulate.change(Element/ReactDOMComponent)`\n * - ... (All keys from event plugin `eventTypes` objects)\n */\nfunction makeSimulator(eventType) {\n  return function (domComponentOrNode, eventData) {\n    var node;\n    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {\n      node = findDOMNode(domComponentOrNode);\n    } else if (domComponentOrNode.tagName) {\n      node = domComponentOrNode;\n    }\n\n    var dispatchConfig = ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType];\n\n    var fakeNativeEvent = new Event();\n    fakeNativeEvent.target = node;\n    // We don't use SyntheticEvent.getPooled in order to not have to worry about\n    // properly destroying any properties assigned from `eventData` upon release\n    var event = new SyntheticEvent(dispatchConfig, ReactMount.getID(node), fakeNativeEvent, node);\n    assign(event, eventData);\n\n    if (dispatchConfig.phasedRegistrationNames) {\n      EventPropagators.accumulateTwoPhaseDispatches(event);\n    } else {\n      EventPropagators.accumulateDirectDispatches(event);\n    }\n\n    ReactUpdates.batchedUpdates(function () {\n      EventPluginHub.enqueueEvents(event);\n      EventPluginHub.processEventQueue(true);\n    });\n  };\n}\n\nfunction buildSimulators() {\n  ReactTestUtils.Simulate = {};\n\n  var eventType;\n  for (eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {\n    /**\n     * @param {!Element|ReactDOMComponent} domComponentOrNode\n     * @param {?object} eventData Fake event data to use in SyntheticEvent.\n     */\n    ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);\n  }\n}\n\n// Rebuild ReactTestUtils.Simulate whenever event plugins are injected\nvar oldInjectEventPluginOrder = EventPluginHub.injection.injectEventPluginOrder;\nEventPluginHub.injection.injectEventPluginOrder = function () {\n  oldInjectEventPluginOrder.apply(this, arguments);\n  buildSimulators();\n};\nvar oldInjectEventPlugins = EventPluginHub.injection.injectEventPluginsByName;\nEventPluginHub.injection.injectEventPluginsByName = function () {\n  oldInjectEventPlugins.apply(this, arguments);\n  buildSimulators();\n};\n\nbuildSimulators();\n\n/**\n * Exports:\n *\n * - `ReactTestUtils.SimulateNative.click(Element/ReactDOMComponent)`\n * - `ReactTestUtils.SimulateNative.mouseMove(Element/ReactDOMComponent)`\n * - `ReactTestUtils.SimulateNative.mouseIn/ReactDOMComponent)`\n * - `ReactTestUtils.SimulateNative.mouseOut(Element/ReactDOMComponent)`\n * - ... (All keys from `EventConstants.topLevelTypes`)\n *\n * Note: Top level event types are a subset of the entire set of handler types\n * (which include a broader set of \"synthetic\" events). For example, onDragDone\n * is a synthetic event. Except when testing an event plugin or React's event\n * handling code specifically, you probably want to use ReactTestUtils.Simulate\n * to dispatch synthetic events.\n */\n\nfunction makeNativeSimulator(eventType) {\n  return function (domComponentOrNode, nativeEventData) {\n    var fakeNativeEvent = new Event(eventType);\n    assign(fakeNativeEvent, nativeEventData);\n    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {\n      ReactTestUtils.simulateNativeEventOnDOMComponent(eventType, domComponentOrNode, fakeNativeEvent);\n    } else if (domComponentOrNode.tagName) {\n      // Will allow on actual dom nodes.\n      ReactTestUtils.simulateNativeEventOnNode(eventType, domComponentOrNode, fakeNativeEvent);\n    }\n  };\n}\n\nObject.keys(topLevelTypes).forEach(function (eventType) {\n  // Event type is stored as 'topClick' - we transform that to 'click'\n  var convenienceName = eventType.indexOf('top') === 0 ? eventType.charAt(3).toLowerCase() + eventType.substr(4) : eventType;\n  /**\n   * @param {!Element|ReactDOMComponent} domComponentOrNode\n   * @param {?Event} nativeEventData Fake native event to use in SyntheticEvent.\n   */\n  ReactTestUtils.SimulateNative[convenienceName] = makeNativeSimulator(eventType);\n});\n\nmodule.exports = ReactTestUtils;\n}).call(this,require('_process'))\n\n},{\"./EventConstants\":\"react/lib/EventConstants\",\"./EventPluginHub\":\"react/lib/EventPluginHub\",\"./EventPropagators\":\"react/lib/EventPropagators\",\"./Object.assign\":\"react/lib/Object.assign\",\"./React\":\"react/lib/React\",\"./ReactBrowserEventEmitter\":\"react/lib/ReactBrowserEventEmitter\",\"./ReactCompositeComponent\":\"react/lib/ReactCompositeComponent\",\"./ReactDOM\":\"react/lib/ReactDOM\",\"./ReactElement\":\"react/lib/ReactElement\",\"./ReactInstanceHandles\":\"react/lib/ReactInstanceHandles\",\"./ReactInstanceMap\":\"react/lib/ReactInstanceMap\",\"./ReactMount\":\"react/lib/ReactMount\",\"./ReactUpdates\":\"react/lib/ReactUpdates\",\"./SyntheticEvent\":\"react/lib/SyntheticEvent\",\"./findDOMNode\":\"react/lib/findDOMNode\",\"_process\":1,\"fbjs/lib/emptyObject\":22,\"fbjs/lib/invariant\":29}],\"react/lib/ReactTransitionChildMapping\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule ReactTransitionChildMapping\n */\n\n'use strict';\n\nvar flattenChildren = require('./flattenChildren');\n\nvar ReactTransitionChildMapping = {\n  /**\n   * Given `this.props.children`, return an object mapping key to child. Just\n   * simple syntactic sugar around flattenChildren().\n   *\n   * @param {*} children `this.props.children`\n   * @return {object} Mapping of key to child\n   */\n  getChildMapping: function (children) {\n    if (!children) {\n      return children;\n    }\n    return flattenChildren(children);\n  },\n\n  /**\n   * When you're adding or removing children some may be added or removed in the\n   * same render pass. We want to show *both* since we want to simultaneously\n   * animate elements in and out. This function takes a previous set of keys\n   * and a new set of keys and merges them with its best guess of the correct\n   * ordering. In the future we may expose some of the utilities in\n   * ReactMultiChild to make this easy, but for now React itself does not\n   * directly have this concept of the union of prevChildren and nextChildren\n   * so we implement it here.\n   *\n   * @param {object} prev prev children as returned from\n   * `ReactTransitionChildMapping.getChildMapping()`.\n   * @param {object} next next children as returned from\n   * `ReactTransitionChildMapping.getChildMapping()`.\n   * @return {object} a key set that contains all keys in `prev` and all keys\n   * in `next` in a reasonable order.\n   */\n  mergeChildMappings: function (prev, next) {\n    prev = prev || {};\n    next = next || {};\n\n    function getValueForKey(key) {\n      if (next.hasOwnProperty(key)) {\n        return next[key];\n      } else {\n        return prev[key];\n      }\n    }\n\n    // For each key of `next`, the list of keys to insert before that key in\n    // the combined list\n    var nextKeysPending = {};\n\n    var pendingKeys = [];\n    for (var prevKey in prev) {\n      if (next.hasOwnProperty(prevKey)) {\n        if (pendingKeys.length) {\n          nextKeysPending[prevKey] = pendingKeys;\n          pendingKeys = [];\n        }\n      } else {\n        pendingKeys.push(prevKey);\n      }\n    }\n\n    var i;\n    var childMapping = {};\n    for (var nextKey in next) {\n      if (nextKeysPending.hasOwnProperty(nextKey)) {\n        for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n          var pendingNextKey = nextKeysPending[nextKey][i];\n          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n        }\n      }\n      childMapping[nextKey] = getValueForKey(nextKey);\n    }\n\n    // Finally, add the keys which didn't appear before any key in `next`\n    for (i = 0; i < pendingKeys.length; i++) {\n      childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n    }\n\n    return childMapping;\n  }\n};\n\nmodule.exports = ReactTransitionChildMapping;\n},{\"./flattenChildren\":\"react/lib/flattenChildren\"}],\"react/lib/ReactTransitionEvents\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactTransitionEvents\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\n/**\n * EVENT_NAME_MAP is used to determine which event fired when a\n * transition/animation ends, based on the style property used to\n * define that event.\n */\nvar EVENT_NAME_MAP = {\n  transitionend: {\n    'transition': 'transitionend',\n    'WebkitTransition': 'webkitTransitionEnd',\n    'MozTransition': 'mozTransitionEnd',\n    'OTransition': 'oTransitionEnd',\n    'msTransition': 'MSTransitionEnd'\n  },\n\n  animationend: {\n    'animation': 'animationend',\n    'WebkitAnimation': 'webkitAnimationEnd',\n    'MozAnimation': 'mozAnimationEnd',\n    'OAnimation': 'oAnimationEnd',\n    'msAnimation': 'MSAnimationEnd'\n  }\n};\n\nvar endEvents = [];\n\nfunction detectEvents() {\n  var testEl = document.createElement('div');\n  var style = testEl.style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are useable, and if not remove them\n  // from the map\n  if (!('AnimationEvent' in window)) {\n    delete EVENT_NAME_MAP.animationend.animation;\n  }\n\n  if (!('TransitionEvent' in window)) {\n    delete EVENT_NAME_MAP.transitionend.transition;\n  }\n\n  for (var baseEventName in EVENT_NAME_MAP) {\n    var baseEvents = EVENT_NAME_MAP[baseEventName];\n    for (var styleName in baseEvents) {\n      if (styleName in style) {\n        endEvents.push(baseEvents[styleName]);\n        break;\n      }\n    }\n  }\n}\n\nif (ExecutionEnvironment.canUseDOM) {\n  detectEvents();\n}\n\n// We use the raw {add|remove}EventListener() call because EventListener\n// does not know how to remove event listeners and we really should\n// clean up. Also, these events are not triggered in older browsers\n// so we should be A-OK here.\n\nfunction addEventListener(node, eventName, eventListener) {\n  node.addEventListener(eventName, eventListener, false);\n}\n\nfunction removeEventListener(node, eventName, eventListener) {\n  node.removeEventListener(eventName, eventListener, false);\n}\n\nvar ReactTransitionEvents = {\n  addEndEventListener: function (node, eventListener) {\n    if (endEvents.length === 0) {\n      // If CSS transitions are not supported, trigger an \"end animation\"\n      // event immediately.\n      window.setTimeout(eventListener, 0);\n      return;\n    }\n    endEvents.forEach(function (endEvent) {\n      addEventListener(node, endEvent, eventListener);\n    });\n  },\n\n  removeEndEventListener: function (node, eventListener) {\n    if (endEvents.length === 0) {\n      return;\n    }\n    endEvents.forEach(function (endEvent) {\n      removeEventListener(node, endEvent, eventListener);\n    });\n  }\n};\n\nmodule.exports = ReactTransitionEvents;\n},{\"fbjs/lib/ExecutionEnvironment\":14}],\"react/lib/ReactTransitionGroup\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactTransitionGroup\n */\n\n'use strict';\n\nvar React = require('./React');\nvar ReactTransitionChildMapping = require('./ReactTransitionChildMapping');\n\nvar assign = require('./Object.assign');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar ReactTransitionGroup = React.createClass({\n  displayName: 'ReactTransitionGroup',\n\n  propTypes: {\n    component: React.PropTypes.any,\n    childFactory: React.PropTypes.func\n  },\n\n  getDefaultProps: function () {\n    return {\n      component: 'span',\n      childFactory: emptyFunction.thatReturnsArgument\n    };\n  },\n\n  getInitialState: function () {\n    return {\n      children: ReactTransitionChildMapping.getChildMapping(this.props.children)\n    };\n  },\n\n  componentWillMount: function () {\n    this.currentlyTransitioningKeys = {};\n    this.keysToEnter = [];\n    this.keysToLeave = [];\n  },\n\n  componentDidMount: function () {\n    var initialChildMapping = this.state.children;\n    for (var key in initialChildMapping) {\n      if (initialChildMapping[key]) {\n        this.performAppear(key);\n      }\n    }\n  },\n\n  componentWillReceiveProps: function (nextProps) {\n    var nextChildMapping = ReactTransitionChildMapping.getChildMapping(nextProps.children);\n    var prevChildMapping = this.state.children;\n\n    this.setState({\n      children: ReactTransitionChildMapping.mergeChildMappings(prevChildMapping, nextChildMapping)\n    });\n\n    var key;\n\n    for (key in nextChildMapping) {\n      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);\n      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {\n        this.keysToEnter.push(key);\n      }\n    }\n\n    for (key in prevChildMapping) {\n      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);\n      if (prevChildMapping[key] && !hasNext && !this.currentlyTransitioningKeys[key]) {\n        this.keysToLeave.push(key);\n      }\n    }\n\n    // If we want to someday check for reordering, we could do it here.\n  },\n\n  componentDidUpdate: function () {\n    var keysToEnter = this.keysToEnter;\n    this.keysToEnter = [];\n    keysToEnter.forEach(this.performEnter);\n\n    var keysToLeave = this.keysToLeave;\n    this.keysToLeave = [];\n    keysToLeave.forEach(this.performLeave);\n  },\n\n  performAppear: function (key) {\n    this.currentlyTransitioningKeys[key] = true;\n\n    var component = this.refs[key];\n\n    if (component.componentWillAppear) {\n      component.componentWillAppear(this._handleDoneAppearing.bind(this, key));\n    } else {\n      this._handleDoneAppearing(key);\n    }\n  },\n\n  _handleDoneAppearing: function (key) {\n    var component = this.refs[key];\n    if (component.componentDidAppear) {\n      component.componentDidAppear();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully appeared. Remove it.\n      this.performLeave(key);\n    }\n  },\n\n  performEnter: function (key) {\n    this.currentlyTransitioningKeys[key] = true;\n\n    var component = this.refs[key];\n\n    if (component.componentWillEnter) {\n      component.componentWillEnter(this._handleDoneEntering.bind(this, key));\n    } else {\n      this._handleDoneEntering(key);\n    }\n  },\n\n  _handleDoneEntering: function (key) {\n    var component = this.refs[key];\n    if (component.componentDidEnter) {\n      component.componentDidEnter();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully entered. Remove it.\n      this.performLeave(key);\n    }\n  },\n\n  performLeave: function (key) {\n    this.currentlyTransitioningKeys[key] = true;\n\n    var component = this.refs[key];\n    if (component.componentWillLeave) {\n      component.componentWillLeave(this._handleDoneLeaving.bind(this, key));\n    } else {\n      // Note that this is somewhat dangerous b/c it calls setState()\n      // again, effectively mutating the component before all the work\n      // is done.\n      this._handleDoneLeaving(key);\n    }\n  },\n\n  _handleDoneLeaving: function (key) {\n    var component = this.refs[key];\n\n    if (component.componentDidLeave) {\n      component.componentDidLeave();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);\n\n    if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\n      // This entered again before it fully left. Add it again.\n      this.performEnter(key);\n    } else {\n      this.setState(function (state) {\n        var newChildren = assign({}, state.children);\n        delete newChildren[key];\n        return { children: newChildren };\n      });\n    }\n  },\n\n  render: function () {\n    // TODO: we could get rid of the need for the wrapper node\n    // by cloning a single child\n    var childrenToRender = [];\n    for (var key in this.state.children) {\n      var child = this.state.children[key];\n      if (child) {\n        // You may need to apply reactive updates to a child as it is leaving.\n        // The normal React way to do it won't work since the child will have\n        // already been removed. In case you need this behavior you can provide\n        // a childFactory function to wrap every child, even the ones that are\n        // leaving.\n        childrenToRender.push(React.cloneElement(this.props.childFactory(child), { ref: key, key: key }));\n      }\n    }\n    return React.createElement(this.props.component, this.props, childrenToRender);\n  }\n});\n\nmodule.exports = ReactTransitionGroup;\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./React\":\"react/lib/React\",\"./ReactTransitionChildMapping\":\"react/lib/ReactTransitionChildMapping\",\"fbjs/lib/emptyFunction\":21}],\"react/lib/ReactUpdateQueue\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdateQueue\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nfunction enqueueUpdate(internalInstance) {\n  ReactUpdates.enqueueUpdate(internalInstance);\n}\n\nfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\n  var internalInstance = ReactInstanceMap.get(publicInstance);\n  if (!internalInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      // Only warn when we have a callerName. Otherwise we should be silent.\n      // We're probably calling from enqueueCallback. We don't want to warn\n      // there because we already warned for the corresponding lifecycle method.\n      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;\n    }\n    return null;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;\n  }\n\n  return internalInstance;\n}\n\n/**\n * ReactUpdateQueue allows for state updates to be scheduled into a later\n * reconciliation step.\n */\nvar ReactUpdateQueue = {\n\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    if (process.env.NODE_ENV !== 'production') {\n      var owner = ReactCurrentOwner.current;\n      if (owner !== null) {\n        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;\n        owner._warnedAboutRefsInRender = true;\n      }\n    }\n    var internalInstance = ReactInstanceMap.get(publicInstance);\n    if (internalInstance) {\n      // During componentWillMount and render this will still be null but after\n      // that will always render to something. At least for now. So we can use\n      // this hack.\n      return !!internalInstance._renderedComponent;\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * Enqueue a callback that will be executed after all the pending updates\n   * have processed.\n   *\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\n   * @param {?function} callback Called after state is updated.\n   * @internal\n   */\n  enqueueCallback: function (publicInstance, callback) {\n    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\\'t callable.') : invariant(false) : undefined;\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\n\n    // Previously we would throw an error if we didn't have an internal\n    // instance. Since we want to make it a no-op instead, we mirror the same\n    // behavior we have in other enqueue* methods.\n    // We also need to ignore callbacks in componentWillMount. See\n    // enqueueUpdates.\n    if (!internalInstance) {\n      return null;\n    }\n\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    // TODO: The callback here is ignored when setState is called from\n    // componentWillMount. Either fix it or disallow doing so completely in\n    // favor of getInitialState. Alternatively, we can disallow\n    // componentWillMount during server-side rendering.\n    enqueueUpdate(internalInstance);\n  },\n\n  enqueueCallbackInternal: function (internalInstance, callback) {\n    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\\'t callable.') : invariant(false) : undefined;\n    if (internalInstance._pendingCallbacks) {\n      internalInstance._pendingCallbacks.push(callback);\n    } else {\n      internalInstance._pendingCallbacks = [callback];\n    }\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingForceUpdate = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    internalInstance._pendingStateQueue = [completeState];\n    internalInstance._pendingReplaceState = true;\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');\n\n    if (!internalInstance) {\n      return;\n    }\n\n    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);\n    queue.push(partialState);\n\n    enqueueUpdate(internalInstance);\n  },\n\n  /**\n   * Sets a subset of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialProps Subset of the next props.\n   * @internal\n   */\n  enqueueSetProps: function (publicInstance, partialProps) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');\n    if (!internalInstance) {\n      return;\n    }\n    ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);\n  },\n\n  enqueueSetPropsInternal: function (internalInstance, partialProps) {\n    var topLevelWrapper = internalInstance._topLevelWrapper;\n    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;\n\n    // Merge with the pending element if it exists, otherwise with existing\n    // element props.\n    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;\n    var element = wrapElement.props;\n    var props = assign({}, element.props, partialProps);\n    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));\n\n    enqueueUpdate(topLevelWrapper);\n  },\n\n  /**\n   * Replaces all of the props.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} props New props.\n   * @internal\n   */\n  enqueueReplaceProps: function (publicInstance, props) {\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');\n    if (!internalInstance) {\n      return;\n    }\n    ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);\n  },\n\n  enqueueReplacePropsInternal: function (internalInstance, props) {\n    var topLevelWrapper = internalInstance._topLevelWrapper;\n    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;\n\n    // Merge with the pending element if it exists, otherwise with existing\n    // element props.\n    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;\n    var element = wrapElement.props;\n    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));\n\n    enqueueUpdate(topLevelWrapper);\n  },\n\n  enqueueElementInternal: function (internalInstance, newElement) {\n    internalInstance._pendingElement = newElement;\n    enqueueUpdate(internalInstance);\n  }\n\n};\n\nmodule.exports = ReactUpdateQueue;\n}).call(this,require('_process'))\n\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactCurrentOwner\":\"react/lib/ReactCurrentOwner\",\"./ReactElement\":\"react/lib/ReactElement\",\"./ReactInstanceMap\":\"react/lib/ReactInstanceMap\",\"./ReactUpdates\":\"react/lib/ReactUpdates\",\"_process\":1,\"fbjs/lib/invariant\":29,\"fbjs/lib/warning\":41}],\"react/lib/ReactUpdates\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactUpdates\n */\n\n'use strict';\n\nvar CallbackQueue = require('./CallbackQueue');\nvar PooledClass = require('./PooledClass');\nvar ReactPerf = require('./ReactPerf');\nvar ReactReconciler = require('./ReactReconciler');\nvar Transaction = require('./Transaction');\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\n\nvar dirtyComponents = [];\nvar asapCallbackQueue = CallbackQueue.getPooled();\nvar asapEnqueued = false;\n\nvar batchingStrategy = null;\n\nfunction ensureInjected() {\n  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;\n}\n\nvar NESTED_UPDATES = {\n  initialize: function () {\n    this.dirtyComponentsLength = dirtyComponents.length;\n  },\n  close: function () {\n    if (this.dirtyComponentsLength !== dirtyComponents.length) {\n      // Additional updates were enqueued by componentDidUpdate handlers or\n      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\n      // these new updates so that if A's componentDidUpdate calls setState on\n      // B, B will update before the callback A's updater provided when calling\n      // setState.\n      dirtyComponents.splice(0, this.dirtyComponentsLength);\n      flushBatchedUpdates();\n    } else {\n      dirtyComponents.length = 0;\n    }\n  }\n};\n\nvar UPDATE_QUEUEING = {\n  initialize: function () {\n    this.callbackQueue.reset();\n  },\n  close: function () {\n    this.callbackQueue.notifyAll();\n  }\n};\n\nvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\n\nfunction ReactUpdatesFlushTransaction() {\n  this.reinitializeTransaction();\n  this.dirtyComponentsLength = null;\n  this.callbackQueue = CallbackQueue.getPooled();\n  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* forceHTML */false);\n}\n\nassign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  destructor: function () {\n    this.dirtyComponentsLength = null;\n    CallbackQueue.release(this.callbackQueue);\n    this.callbackQueue = null;\n    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\n    this.reconcileTransaction = null;\n  },\n\n  perform: function (method, scope, a) {\n    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\n    // with this transaction's wrappers around it.\n    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);\n  }\n});\n\nPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\n\nfunction batchedUpdates(callback, a, b, c, d, e) {\n  ensureInjected();\n  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);\n}\n\n/**\n * Array comparator for ReactComponents by mount ordering.\n *\n * @param {ReactComponent} c1 first component you're comparing\n * @param {ReactComponent} c2 second component you're comparing\n * @return {number} Return value usable by Array.prototype.sort().\n */\nfunction mountOrderComparator(c1, c2) {\n  return c1._mountOrder - c2._mountOrder;\n}\n\nfunction runBatchedUpdates(transaction) {\n  var len = transaction.dirtyComponentsLength;\n  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;\n\n  // Since reconciling a component higher in the owner hierarchy usually (not\n  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n  // them before their children by sorting the array.\n  dirtyComponents.sort(mountOrderComparator);\n\n  for (var i = 0; i < len; i++) {\n    // If a component is unmounted before pending changes apply, it will still\n    // be here, but we assume that it has cleared its _pendingCallbacks and\n    // that performUpdateIfNecessary is a noop.\n    var component = dirtyComponents[i];\n\n    // If performUpdateIfNecessary happens to enqueue any new updates, we\n    // shouldn't execute the callbacks until the next render happens, so\n    // stash the callbacks first\n    var callbacks = component._pendingCallbacks;\n    component._pendingCallbacks = null;\n\n    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);\n\n    if (callbacks) {\n      for (var j = 0; j < callbacks.length; j++) {\n        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());\n      }\n    }\n  }\n}\n\nvar flushBatchedUpdates = function () {\n  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\n  // array and perform any updates enqueued by mount-ready handlers (i.e.,\n  // componentDidUpdate) but we need to check here too in order to catch\n  // updates enqueued by setState callbacks and asap calls.\n  while (dirtyComponents.length || asapEnqueued) {\n    if (dirtyComponents.length) {\n      var transaction = ReactUpdatesFlushTransaction.getPooled();\n      transaction.perform(runBatchedUpdates, null, transaction);\n      ReactUpdatesFlushTransaction.release(transaction);\n    }\n\n    if (asapEnqueued) {\n      asapEnqueued = false;\n      var queue = asapCallbackQueue;\n      asapCallbackQueue = CallbackQueue.getPooled();\n      queue.notifyAll();\n      CallbackQueue.release(queue);\n    }\n  }\n};\nflushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);\n\n/**\n * Mark a component as needing a rerender, adding an optional callback to a\n * list of functions which will be executed once the rerender occurs.\n */\nfunction enqueueUpdate(component) {\n  ensureInjected();\n\n  // Various parts of our code (such as ReactCompositeComponent's\n  // _renderValidatedComponent) assume that calls to render aren't nested;\n  // verify that that's the case. (This is called by each top-level update\n  // function, like setProps, setState, forceUpdate, etc.; creation and\n  // destruction of top-level components is guarded in ReactMount.)\n\n  if (!batchingStrategy.isBatchingUpdates) {\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\n    return;\n  }\n\n  dirtyComponents.push(component);\n}\n\n/**\n * Enqueue a callback to be run at the end of the current batching cycle. Throws\n * if no updates are currently being performed.\n */\nfunction asap(callback, context) {\n  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;\n  asapCallbackQueue.enqueue(callback, context);\n  asapEnqueued = true;\n}\n\nvar ReactUpdatesInjection = {\n  injectReconcileTransaction: function (ReconcileTransaction) {\n    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;\n    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\n  },\n\n  injectBatchingStrategy: function (_batchingStrategy) {\n    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;\n    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;\n    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;\n    batchingStrategy = _batchingStrategy;\n  }\n};\n\nvar ReactUpdates = {\n  /**\n   * React references `ReactReconcileTransaction` using this property in order\n   * to allow dependency injection.\n   *\n   * @internal\n   */\n  ReactReconcileTransaction: null,\n\n  batchedUpdates: batchedUpdates,\n  enqueueUpdate: enqueueUpdate,\n  flushBatchedUpdates: flushBatchedUpdates,\n  injection: ReactUpdatesInjection,\n  asap: asap\n};\n\nmodule.exports = ReactUpdates;\n}).call(this,require('_process'))\n\n},{\"./CallbackQueue\":\"react/lib/CallbackQueue\",\"./Object.assign\":\"react/lib/Object.assign\",\"./PooledClass\":\"react/lib/PooledClass\",\"./ReactPerf\":\"react/lib/ReactPerf\",\"./ReactReconciler\":\"react/lib/ReactReconciler\",\"./Transaction\":\"react/lib/Transaction\",\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/ReactVersion\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactVersion\n */\n\n'use strict';\n\nmodule.exports = '0.14.3';\n},{}],\"react/lib/ReactWithAddons\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactWithAddons\n */\n\n/**\n * This module exists purely in the open source project, and is meant as a way\n * to create a separate standalone build of React. This build has \"addons\", or\n * functionality we've built and think might be useful but doesn't have a good\n * place to live inside React core.\n */\n\n'use strict';\n\nvar LinkedStateMixin = require('./LinkedStateMixin');\nvar React = require('./React');\nvar ReactComponentWithPureRenderMixin = require('./ReactComponentWithPureRenderMixin');\nvar ReactCSSTransitionGroup = require('./ReactCSSTransitionGroup');\nvar ReactFragment = require('./ReactFragment');\nvar ReactTransitionGroup = require('./ReactTransitionGroup');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar cloneWithProps = require('./cloneWithProps');\nvar shallowCompare = require('./shallowCompare');\nvar update = require('./update');\nvar warning = require('fbjs/lib/warning');\n\nvar warnedAboutBatchedUpdates = false;\n\nReact.addons = {\n  CSSTransitionGroup: ReactCSSTransitionGroup,\n  LinkedStateMixin: LinkedStateMixin,\n  PureRenderMixin: ReactComponentWithPureRenderMixin,\n  TransitionGroup: ReactTransitionGroup,\n\n  batchedUpdates: function () {\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(warnedAboutBatchedUpdates, 'React.addons.batchedUpdates is deprecated. Use ' + 'ReactDOM.unstable_batchedUpdates instead.') : undefined;\n      warnedAboutBatchedUpdates = true;\n    }\n    return ReactUpdates.batchedUpdates.apply(this, arguments);\n  },\n  cloneWithProps: cloneWithProps,\n  createFragment: ReactFragment.create,\n  shallowCompare: shallowCompare,\n  update: update\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  React.addons.Perf = require('./ReactDefaultPerf');\n  React.addons.TestUtils = require('./ReactTestUtils');\n}\n\nmodule.exports = React;\n}).call(this,require('_process'))\n\n},{\"./LinkedStateMixin\":\"react/lib/LinkedStateMixin\",\"./React\":\"react/lib/React\",\"./ReactCSSTransitionGroup\":\"react/lib/ReactCSSTransitionGroup\",\"./ReactComponentWithPureRenderMixin\":\"react/lib/ReactComponentWithPureRenderMixin\",\"./ReactDefaultPerf\":\"react/lib/ReactDefaultPerf\",\"./ReactFragment\":\"react/lib/ReactFragment\",\"./ReactTestUtils\":\"react/lib/ReactTestUtils\",\"./ReactTransitionGroup\":\"react/lib/ReactTransitionGroup\",\"./ReactUpdates\":\"react/lib/ReactUpdates\",\"./cloneWithProps\":\"react/lib/cloneWithProps\",\"./shallowCompare\":\"react/lib/shallowCompare\",\"./update\":\"react/lib/update\",\"_process\":1,\"fbjs/lib/warning\":41}],\"react/lib/React\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule React\n */\n\n'use strict';\n\nvar ReactDOM = require('./ReactDOM');\nvar ReactDOMServer = require('./ReactDOMServer');\nvar ReactIsomorphic = require('./ReactIsomorphic');\n\nvar assign = require('./Object.assign');\nvar deprecated = require('./deprecated');\n\n// `version` will be added here by ReactIsomorphic.\nvar React = {};\n\nassign(React, ReactIsomorphic);\n\nassign(React, {\n  // ReactDOM\n  findDOMNode: deprecated('findDOMNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.findDOMNode),\n  render: deprecated('render', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.render),\n  unmountComponentAtNode: deprecated('unmountComponentAtNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.unmountComponentAtNode),\n\n  // ReactDOMServer\n  renderToString: deprecated('renderToString', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToString),\n  renderToStaticMarkup: deprecated('renderToStaticMarkup', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToStaticMarkup)\n});\n\nReact.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;\nReact.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;\n\nmodule.exports = React;\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactDOM\":\"react/lib/ReactDOM\",\"./ReactDOMServer\":\"react/lib/ReactDOMServer\",\"./ReactIsomorphic\":\"react/lib/ReactIsomorphic\",\"./deprecated\":\"react/lib/deprecated\"}],\"react/lib/ResponderEventPlugin\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ResponderEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar EventPropagators = require('./EventPropagators');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ResponderSyntheticEvent = require('./ResponderSyntheticEvent');\nvar ResponderTouchHistoryStore = require('./ResponderTouchHistoryStore');\n\nvar accumulate = require('./accumulate');\nvar invariant = require('fbjs/lib/invariant');\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar isStartish = EventPluginUtils.isStartish;\nvar isMoveish = EventPluginUtils.isMoveish;\nvar isEndish = EventPluginUtils.isEndish;\nvar executeDirectDispatch = EventPluginUtils.executeDirectDispatch;\nvar hasDispatches = EventPluginUtils.hasDispatches;\nvar executeDispatchesInOrderStopAtTrue = EventPluginUtils.executeDispatchesInOrderStopAtTrue;\n\n/**\n * ID of element that should respond to touch/move types of interactions, as\n * indicated explicitly by relevant callbacks.\n */\nvar responderID = null;\n\n/**\n * Count of current touches. A textInput should become responder iff the\n * the selection changes while there is a touch on the screen.\n */\nvar trackedTouchCount = 0;\n\n/**\n * Last reported number of active touches.\n */\nvar previousActiveTouches = 0;\n\nvar changeResponder = function (nextResponderID) {\n  var oldResponderID = responderID;\n  responderID = nextResponderID;\n  if (ResponderEventPlugin.GlobalResponderHandler !== null) {\n    ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderID, nextResponderID);\n  }\n};\n\nvar eventTypes = {\n  /**\n   * On a `touchStart`/`mouseDown`, is it desired that this element become the\n   * responder?\n   */\n  startShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onStartShouldSetResponder: null }),\n      captured: keyOf({ onStartShouldSetResponderCapture: null })\n    }\n  },\n\n  /**\n   * On a `scroll`, is it desired that this element become the responder? This\n   * is usually not needed, but should be used to retroactively infer that a\n   * `touchStart` had occurred during momentum scroll. During a momentum scroll,\n   * a touch start will be immediately followed by a scroll event if the view is\n   * currently scrolling.\n   *\n   * TODO: This shouldn't bubble.\n   */\n  scrollShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onScrollShouldSetResponder: null }),\n      captured: keyOf({ onScrollShouldSetResponderCapture: null })\n    }\n  },\n\n  /**\n   * On text selection change, should this element become the responder? This\n   * is needed for text inputs or other views with native selection, so the\n   * JS view can claim the responder.\n   *\n   * TODO: This shouldn't bubble.\n   */\n  selectionChangeShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSelectionChangeShouldSetResponder: null }),\n      captured: keyOf({ onSelectionChangeShouldSetResponderCapture: null })\n    }\n  },\n\n  /**\n   * On a `touchMove`/`mouseMove`, is it desired that this element become the\n   * responder?\n   */\n  moveShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMoveShouldSetResponder: null }),\n      captured: keyOf({ onMoveShouldSetResponderCapture: null })\n    }\n  },\n\n  /**\n   * Direct responder events dispatched directly to responder. Do not bubble.\n   */\n  responderStart: { registrationName: keyOf({ onResponderStart: null }) },\n  responderMove: { registrationName: keyOf({ onResponderMove: null }) },\n  responderEnd: { registrationName: keyOf({ onResponderEnd: null }) },\n  responderRelease: { registrationName: keyOf({ onResponderRelease: null }) },\n  responderTerminationRequest: {\n    registrationName: keyOf({ onResponderTerminationRequest: null })\n  },\n  responderGrant: { registrationName: keyOf({ onResponderGrant: null }) },\n  responderReject: { registrationName: keyOf({ onResponderReject: null }) },\n  responderTerminate: { registrationName: keyOf({ onResponderTerminate: null }) }\n};\n\n/**\n *\n * Responder System:\n * ----------------\n *\n * - A global, solitary \"interaction lock\" on a view.\n * - If a node becomes the responder, it should convey visual feedback\n *   immediately to indicate so, either by highlighting or moving accordingly.\n * - To be the responder means, that touches are exclusively important to that\n *   responder view, and no other view.\n * - While touches are still occuring, the responder lock can be transfered to\n *   a new view, but only to increasingly \"higher\" views (meaning ancestors of\n *   the current responder).\n *\n * Responder being granted:\n * ------------------------\n *\n * - Touch starts, moves, and scrolls can cause an ID to become the responder.\n * - We capture/bubble `startShouldSetResponder`/`moveShouldSetResponder` to\n *   the \"appropriate place\".\n * - If nothing is currently the responder, the \"appropriate place\" is the\n *   initiating event's `targetID`.\n * - If something *is* already the responder, the \"appropriate place\" is the\n *   first common ancestor of the event target and the current `responderID`.\n * - Some negotiation happens: See the timing diagram below.\n * - Scrolled views automatically become responder. The reasoning is that a\n *   platform scroll view that isn't built on top of the responder system has\n *   began scrolling, and the active responder must now be notified that the\n *   interaction is no longer locked to it - the system has taken over.\n *\n * - Responder being released:\n *   As soon as no more touches that *started* inside of descendents of the\n *   *current* responderID, an `onResponderRelease` event is dispatched to the\n *   current responder, and the responder lock is released.\n *\n * TODO:\n * - on \"end\", a callback hook for `onResponderEndShouldRemainResponder` that\n *   determines if the responder lock should remain.\n * - If a view shouldn't \"remain\" the responder, any active touches should by\n *   default be considered \"dead\" and do not influence future negotiations or\n *   bubble paths. It should be as if those touches do not exist.\n * -- For multitouch: Usually a translate-z will choose to \"remain\" responder\n *  after one out of many touches ended. For translate-y, usually the view\n *  doesn't wish to \"remain\" responder after one of many touches end.\n * - Consider building this on top of a `stopPropagation` model similar to\n *   `W3C` events.\n * - Ensure that `onResponderTerminate` is called on touch cancels, whether or\n *   not `onResponderTerminationRequest` returns `true` or `false`.\n *\n */\n\n/*                                             Negotiation Performed\n                                             +-----------------------+\n                                            /                         \\\nProcess low level events to    +     Current Responder      +   wantsResponderID\ndetermine who to perform negot-|   (if any exists at all)   |\niation/transition              | Otherwise just pass through|\n-------------------------------+----------------------------+------------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchStart|           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onStartShouldSetResponder|----->|onResponderStart (cur)  |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderReject\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderStart|\n                               |                            | +----------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchMove |           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onMoveShouldSetResponder |----->|onResponderMove (cur)   |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderRejec|\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderMove |\n                               |                            | +----------------+\n                               |                            |\n                               |                            |\n      Some active touch started|                            |\n      inside current responder | +------------------------+ |\n      +------------------------->|      onResponderEnd    | |\n      |                        | +------------------------+ |\n  +---+---------+              |                            |\n  | onTouchEnd  |              |                            |\n  +---+---------+              |                            |\n      |                        | +------------------------+ |\n      +------------------------->|     onResponderEnd     | |\n      No active touches started| +-----------+------------+ |\n      inside current responder |             |              |\n                               |             v              |\n                               | +------------------------+ |\n                               | |    onResponderRelease  | |\n                               | +------------------------+ |\n                               |                            |\n                               +                            + */\n\n/**\n * A note about event ordering in the `EventPluginHub`.\n *\n * Suppose plugins are injected in the following order:\n *\n * `[R, S, C]`\n *\n * To help illustrate the example, assume `S` is `SimpleEventPlugin` (for\n * `onClick` etc) and `R` is `ResponderEventPlugin`.\n *\n * \"Deferred-Dispatched Events\":\n *\n * - The current event plugin system will traverse the list of injected plugins,\n *   in order, and extract events by collecting the plugin's return value of\n *   `extractEvents()`.\n * - These events that are returned from `extractEvents` are \"deferred\n *   dispatched events\".\n * - When returned from `extractEvents`, deferred-dispatched events contain an\n *   \"accumulation\" of deferred dispatches.\n * - These deferred dispatches are accumulated/collected before they are\n *   returned, but processed at a later time by the `EventPluginHub` (hence the\n *   name deferred).\n *\n * In the process of returning their deferred-dispatched events, event plugins\n * themselves can dispatch events on-demand without returning them from\n * `extractEvents`. Plugins might want to do this, so that they can use event\n * dispatching as a tool that helps them decide which events should be extracted\n * in the first place.\n *\n * \"On-Demand-Dispatched Events\":\n *\n * - On-demand-dispatched events are not returned from `extractEvents`.\n * - On-demand-dispatched events are dispatched during the process of returning\n *   the deferred-dispatched events.\n * - They should not have side effects.\n * - They should be avoided, and/or eventually be replaced with another\n *   abstraction that allows event plugins to perform multiple \"rounds\" of event\n *   extraction.\n *\n * Therefore, the sequence of event dispatches becomes:\n *\n * - `R`s on-demand events (if any)   (dispatched by `R` on-demand)\n * - `S`s on-demand events (if any)   (dispatched by `S` on-demand)\n * - `C`s on-demand events (if any)   (dispatched by `C` on-demand)\n * - `R`s extracted events (if any)   (dispatched by `EventPluginHub`)\n * - `S`s extracted events (if any)   (dispatched by `EventPluginHub`)\n * - `C`s extracted events (if any)   (dispatched by `EventPluginHub`)\n *\n * In the case of `ResponderEventPlugin`: If the `startShouldSetResponder`\n * on-demand dispatch returns `true` (and some other details are satisfied) the\n * `onResponderGrant` deferred dispatched event is returned from\n * `extractEvents`. The sequence of dispatch executions in this case\n * will appear as follows:\n *\n * - `startShouldSetResponder` (`ResponderEventPlugin` dispatches on-demand)\n * - `touchStartCapture`       (`EventPluginHub` dispatches as usual)\n * - `touchStart`              (`EventPluginHub` dispatches as usual)\n * - `responderGrant/Reject`   (`EventPluginHub` dispatches as usual)\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @param {string} topLevelTargetID ID of deepest React rendered element.\n * @param {object} nativeEvent Native browser event.\n * @return {*} An accumulation of synthetic events.\n */\nfunction setResponderAndExtractTransfer(topLevelType, topLevelTargetID, nativeEvent, nativeEventTarget) {\n  var shouldSetEventType = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : topLevelType === EventConstants.topLevelTypes.topSelectionChange ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;\n\n  // TODO: stop one short of the the current responder.\n  var bubbleShouldSetFrom = !responderID ? topLevelTargetID : ReactInstanceHandles.getFirstCommonAncestorID(responderID, topLevelTargetID);\n\n  // When capturing/bubbling the \"shouldSet\" event, we want to skip the target\n  // (deepest ID) if it happens to be the current responder. The reasoning:\n  // It's strange to get an `onMoveShouldSetResponder` when you're *already*\n  // the responder.\n  var skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderID;\n  var shouldSetEvent = ResponderSyntheticEvent.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);\n  shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n  if (skipOverBubbleShouldSetFrom) {\n    EventPropagators.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);\n  } else {\n    EventPropagators.accumulateTwoPhaseDispatches(shouldSetEvent);\n  }\n  var wantsResponderID = executeDispatchesInOrderStopAtTrue(shouldSetEvent);\n  if (!shouldSetEvent.isPersistent()) {\n    shouldSetEvent.constructor.release(shouldSetEvent);\n  }\n\n  if (!wantsResponderID || wantsResponderID === responderID) {\n    return null;\n  }\n  var extracted;\n  var grantEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, wantsResponderID, nativeEvent, nativeEventTarget);\n  grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n\n  EventPropagators.accumulateDirectDispatches(grantEvent);\n  if (responderID) {\n\n    var terminationRequestEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderID, nativeEvent, nativeEventTarget);\n    terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n    EventPropagators.accumulateDirectDispatches(terminationRequestEvent);\n    var shouldSwitch = !hasDispatches(terminationRequestEvent) || executeDirectDispatch(terminationRequestEvent);\n    if (!terminationRequestEvent.isPersistent()) {\n      terminationRequestEvent.constructor.release(terminationRequestEvent);\n    }\n\n    if (shouldSwitch) {\n      var terminateType = eventTypes.responderTerminate;\n      var terminateEvent = ResponderSyntheticEvent.getPooled(terminateType, responderID, nativeEvent, nativeEventTarget);\n      terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      EventPropagators.accumulateDirectDispatches(terminateEvent);\n      extracted = accumulate(extracted, [grantEvent, terminateEvent]);\n      changeResponder(wantsResponderID);\n    } else {\n      var rejectEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, wantsResponderID, nativeEvent, nativeEventTarget);\n      rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      EventPropagators.accumulateDirectDispatches(rejectEvent);\n      extracted = accumulate(extracted, rejectEvent);\n    }\n  } else {\n    extracted = accumulate(extracted, grantEvent);\n    changeResponder(wantsResponderID);\n  }\n  return extracted;\n}\n\n/**\n * A transfer is a negotiation between a currently set responder and the next\n * element to claim responder status. Any start event could trigger a transfer\n * of responderID. Any move event could trigger a transfer.\n *\n * @param {string} topLevelType Record from `EventConstants`.\n * @return {boolean} True if a transfer of responder could possibly occur.\n */\nfunction canTriggerTransfer(topLevelType, topLevelTargetID) {\n  return topLevelTargetID && (topLevelType === EventConstants.topLevelTypes.topScroll || trackedTouchCount > 0 && topLevelType === EventConstants.topLevelTypes.topSelectionChange || isStartish(topLevelType) || isMoveish(topLevelType));\n}\n\n/**\n * Returns whether or not this touch end event makes it such that there are no\n * longer any touches that started inside of the current `responderID`.\n *\n * @param {NativeEvent} nativeEvent Native touch end event.\n * @return {boolean} Whether or not this touch end event ends the responder.\n */\nfunction noResponderTouches(nativeEvent) {\n  var touches = nativeEvent.touches;\n  if (!touches || touches.length === 0) {\n    return true;\n  }\n  for (var i = 0; i < touches.length; i++) {\n    var activeTouch = touches[i];\n    var target = activeTouch.target;\n    if (target !== null && target !== undefined && target !== 0) {\n      // Is the original touch location inside of the current responder?\n      var isAncestor = ReactInstanceHandles.isAncestorIDOf(responderID, EventPluginUtils.getID(target));\n      if (isAncestor) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nvar ResponderEventPlugin = {\n\n  getResponderID: function () {\n    return responderID;\n  },\n\n  eventTypes: eventTypes,\n\n  /**\n   * We must be resilient to `topLevelTargetID` being `undefined` on\n   * `touchMove`, or `touchEnd`. On certain platforms, this means that a native\n   * scroll has assumed control and the original touch targets are destroyed.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    if (isStartish(topLevelType)) {\n      trackedTouchCount += 1;\n    } else if (isEndish(topLevelType)) {\n      trackedTouchCount -= 1;\n      !(trackedTouchCount >= 0) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Ended a touch event which was not counted in trackedTouchCount.') : invariant(false) : undefined;\n    }\n\n    ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent, nativeEventTarget);\n\n    var extracted = canTriggerTransfer(topLevelType, topLevelTargetID) ? setResponderAndExtractTransfer(topLevelType, topLevelTargetID, nativeEvent, nativeEventTarget) : null;\n    // Responder may or may not have transfered on a new touch start/move.\n    // Regardless, whoever is the responder after any potential transfer, we\n    // direct all touch start/move/ends to them in the form of\n    // `onResponderMove/Start/End`. These will be called for *every* additional\n    // finger that move/start/end, dispatched directly to whoever is the\n    // current responder at that moment, until the responder is \"released\".\n    //\n    // These multiple individual change touch events are are always bookended\n    // by `onResponderGrant`, and one of\n    // (`onResponderRelease/onResponderTerminate`).\n    var isResponderTouchStart = responderID && isStartish(topLevelType);\n    var isResponderTouchMove = responderID && isMoveish(topLevelType);\n    var isResponderTouchEnd = responderID && isEndish(topLevelType);\n    var incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;\n\n    if (incrementalTouch) {\n      var gesture = ResponderSyntheticEvent.getPooled(incrementalTouch, responderID, nativeEvent, nativeEventTarget);\n      gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      EventPropagators.accumulateDirectDispatches(gesture);\n      extracted = accumulate(extracted, gesture);\n    }\n\n    var isResponderTerminate = responderID && topLevelType === EventConstants.topLevelTypes.topTouchCancel;\n    var isResponderRelease = responderID && !isResponderTerminate && isEndish(topLevelType) && noResponderTouches(nativeEvent);\n    var finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;\n    if (finalTouch) {\n      var finalEvent = ResponderSyntheticEvent.getPooled(finalTouch, responderID, nativeEvent, nativeEventTarget);\n      finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      EventPropagators.accumulateDirectDispatches(finalEvent);\n      extracted = accumulate(extracted, finalEvent);\n      changeResponder(null);\n    }\n\n    var numberActiveTouches = ResponderTouchHistoryStore.touchHistory.numberActiveTouches;\n    if (ResponderEventPlugin.GlobalInteractionHandler && numberActiveTouches !== previousActiveTouches) {\n      ResponderEventPlugin.GlobalInteractionHandler.onChange(numberActiveTouches);\n    }\n    previousActiveTouches = numberActiveTouches;\n\n    return extracted;\n  },\n\n  GlobalResponderHandler: null,\n  GlobalInteractionHandler: null,\n\n  injection: {\n    /**\n     * @param {{onChange: (ReactID, ReactID) => void} GlobalResponderHandler\n     * Object that handles any change in responder. Use this to inject\n     * integration with an existing touch handling system etc.\n     */\n    injectGlobalResponderHandler: function (GlobalResponderHandler) {\n      ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;\n    },\n\n    /**\n     * @param {{onChange: (numberActiveTouches) => void} GlobalInteractionHandler\n     * Object that handles any change in the number of active touches.\n     */\n    injectGlobalInteractionHandler: function (GlobalInteractionHandler) {\n      ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;\n    }\n  }\n};\n\nmodule.exports = ResponderEventPlugin;\n}).call(this,require('_process'))\n\n},{\"./EventConstants\":\"react/lib/EventConstants\",\"./EventPluginUtils\":\"react/lib/EventPluginUtils\",\"./EventPropagators\":\"react/lib/EventPropagators\",\"./ReactInstanceHandles\":\"react/lib/ReactInstanceHandles\",\"./ResponderSyntheticEvent\":\"react/lib/ResponderSyntheticEvent\",\"./ResponderTouchHistoryStore\":\"react/lib/ResponderTouchHistoryStore\",\"./accumulate\":\"react/lib/accumulate\",\"_process\":1,\"fbjs/lib/invariant\":29,\"fbjs/lib/keyOf\":34}],\"react/lib/ResponderSyntheticEvent\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ResponderSyntheticEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * `touchHistory` isn't actually on the native event, but putting it in the\n * interface will ensure that it is cleaned up when pooled/destroyed. The\n * `ResponderEventPlugin` will populate it appropriately.\n */\nvar ResponderEventInterface = {\n  touchHistory: function (nativeEvent) {\n    return null; // Actually doesn't even look at the native event.\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native event.\n * @extends {SyntheticEvent}\n */\nfunction ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);\n\nmodule.exports = ResponderSyntheticEvent;\n},{\"./SyntheticEvent\":\"react/lib/SyntheticEvent\"}],\"react/lib/ResponderTouchHistoryStore\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ResponderTouchHistoryStore\n */\n\n'use strict';\n\nvar EventPluginUtils = require('./EventPluginUtils');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar isMoveish = EventPluginUtils.isMoveish;\nvar isStartish = EventPluginUtils.isStartish;\nvar isEndish = EventPluginUtils.isEndish;\n\nvar MAX_TOUCH_BANK = 20;\n\n/**\n * Touch position/time tracking information by touchID. Typically, we'll only\n * see IDs with a range of 1-20 (they are recycled when touches end and then\n * start again). This data is commonly needed by many different interaction\n * logic modules so precomputing it is very helpful to do once.\n * Each touch object in `touchBank` is of the following form:\n * { touchActive: boolean,\n *   startTimeStamp: number,\n *   startPageX: number,\n *   startPageY: number,\n *   currentPageX: number,\n *   currentPageY: number,\n *   currentTimeStamp: number\n * }\n */\nvar touchHistory = {\n  touchBank: [],\n  numberActiveTouches: 0,\n  // If there is only one active touch, we remember its location. This prevents\n  // us having to loop through all of the touches all the time in the most\n  // common case.\n  indexOfSingleActiveTouch: -1,\n  mostRecentTimeStamp: 0\n};\n\nvar timestampForTouch = function (touch) {\n  // The legacy internal implementation provides \"timeStamp\", which has been\n  // renamed to \"timestamp\". Let both work for now while we iron it out\n  // TODO (evv): rename timeStamp to timestamp in internal code\n  return touch.timeStamp || touch.timestamp;\n};\n\n/**\n * TODO: Instead of making gestures recompute filtered velocity, we could\n * include a built in velocity computation that can be reused globally.\n * @param {Touch} touch Native touch object.\n */\nvar initializeTouchData = function (touch) {\n  return {\n    touchActive: true,\n    startTimeStamp: timestampForTouch(touch),\n    startPageX: touch.pageX,\n    startPageY: touch.pageY,\n    currentPageX: touch.pageX,\n    currentPageY: touch.pageY,\n    currentTimeStamp: timestampForTouch(touch),\n    previousPageX: touch.pageX,\n    previousPageY: touch.pageY,\n    previousTimeStamp: timestampForTouch(touch)\n  };\n};\n\nvar reinitializeTouchTrack = function (touchTrack, touch) {\n  touchTrack.touchActive = true;\n  touchTrack.startTimeStamp = timestampForTouch(touch);\n  touchTrack.startPageX = touch.pageX;\n  touchTrack.startPageY = touch.pageY;\n  touchTrack.currentPageX = touch.pageX;\n  touchTrack.currentPageY = touch.pageY;\n  touchTrack.currentTimeStamp = timestampForTouch(touch);\n  touchTrack.previousPageX = touch.pageX;\n  touchTrack.previousPageY = touch.pageY;\n  touchTrack.previousTimeStamp = timestampForTouch(touch);\n};\n\nvar validateTouch = function (touch) {\n  var identifier = touch.identifier;\n  !(identifier != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Touch object is missing identifier') : invariant(false) : undefined;\n  if (identifier > MAX_TOUCH_BANK) {\n    console.warn('Touch identifier ' + identifier + ' is greater than maximum ' + 'supported ' + MAX_TOUCH_BANK + ' which causes performance issues ' + 'backfilling array locations for all of the indices.');\n  }\n};\n\nvar recordStartTouchData = function (touch) {\n  var touchBank = touchHistory.touchBank;\n  var identifier = touch.identifier;\n  var touchTrack = touchBank[identifier];\n  if (process.env.NODE_ENV !== 'production') {\n    validateTouch(touch);\n  }\n  if (touchTrack) {\n    reinitializeTouchTrack(touchTrack, touch);\n  } else {\n    touchBank[touch.identifier] = initializeTouchData(touch);\n  }\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n};\n\nvar recordMoveTouchData = function (touch) {\n  var touchBank = touchHistory.touchBank;\n  var touchTrack = touchBank[touch.identifier];\n  if (process.env.NODE_ENV !== 'production') {\n    validateTouch(touch);\n    !touchTrack ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Touch data should have been recorded on start') : invariant(false) : undefined;\n  }\n  touchTrack.touchActive = true;\n  touchTrack.previousPageX = touchTrack.currentPageX;\n  touchTrack.previousPageY = touchTrack.currentPageY;\n  touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;\n  touchTrack.currentPageX = touch.pageX;\n  touchTrack.currentPageY = touch.pageY;\n  touchTrack.currentTimeStamp = timestampForTouch(touch);\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n};\n\nvar recordEndTouchData = function (touch) {\n  var touchBank = touchHistory.touchBank;\n  var touchTrack = touchBank[touch.identifier];\n  if (process.env.NODE_ENV !== 'production') {\n    validateTouch(touch);\n    !touchTrack ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Touch data should have been recorded on start') : invariant(false) : undefined;\n  }\n  touchTrack.previousPageX = touchTrack.currentPageX;\n  touchTrack.previousPageY = touchTrack.currentPageY;\n  touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;\n  touchTrack.currentPageX = touch.pageX;\n  touchTrack.currentPageY = touch.pageY;\n  touchTrack.currentTimeStamp = timestampForTouch(touch);\n  touchTrack.touchActive = false;\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n};\n\nvar ResponderTouchHistoryStore = {\n  recordTouchTrack: function (topLevelType, nativeEvent) {\n    var touchBank = touchHistory.touchBank;\n    if (isMoveish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordMoveTouchData);\n    } else if (isStartish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordStartTouchData);\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n      if (touchHistory.numberActiveTouches === 1) {\n        touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;\n      }\n    } else if (isEndish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordEndTouchData);\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n      if (touchHistory.numberActiveTouches === 1) {\n        for (var i = 0; i < touchBank.length; i++) {\n          var touchTrackToCheck = touchBank[i];\n          if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\n            touchHistory.indexOfSingleActiveTouch = i;\n            break;\n          }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          var activeTouchData = touchBank[touchHistory.indexOfSingleActiveTouch];\n          var foundActive = activeTouchData != null && !!activeTouchData.touchActive;\n          !foundActive ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot find single active touch') : invariant(false) : undefined;\n        }\n      }\n    }\n  },\n\n  touchHistory: touchHistory\n};\n\nmodule.exports = ResponderTouchHistoryStore;\n}).call(this,require('_process'))\n\n},{\"./EventPluginUtils\":\"react/lib/EventPluginUtils\",\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/SVGDOMPropertyConfig\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SVGDOMPropertyConfig\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\n\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\n\nvar NS = {\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace'\n};\n\nvar SVGDOMPropertyConfig = {\n  Properties: {\n    clipPath: MUST_USE_ATTRIBUTE,\n    cx: MUST_USE_ATTRIBUTE,\n    cy: MUST_USE_ATTRIBUTE,\n    d: MUST_USE_ATTRIBUTE,\n    dx: MUST_USE_ATTRIBUTE,\n    dy: MUST_USE_ATTRIBUTE,\n    fill: MUST_USE_ATTRIBUTE,\n    fillOpacity: MUST_USE_ATTRIBUTE,\n    fontFamily: MUST_USE_ATTRIBUTE,\n    fontSize: MUST_USE_ATTRIBUTE,\n    fx: MUST_USE_ATTRIBUTE,\n    fy: MUST_USE_ATTRIBUTE,\n    gradientTransform: MUST_USE_ATTRIBUTE,\n    gradientUnits: MUST_USE_ATTRIBUTE,\n    markerEnd: MUST_USE_ATTRIBUTE,\n    markerMid: MUST_USE_ATTRIBUTE,\n    markerStart: MUST_USE_ATTRIBUTE,\n    offset: MUST_USE_ATTRIBUTE,\n    opacity: MUST_USE_ATTRIBUTE,\n    patternContentUnits: MUST_USE_ATTRIBUTE,\n    patternUnits: MUST_USE_ATTRIBUTE,\n    points: MUST_USE_ATTRIBUTE,\n    preserveAspectRatio: MUST_USE_ATTRIBUTE,\n    r: MUST_USE_ATTRIBUTE,\n    rx: MUST_USE_ATTRIBUTE,\n    ry: MUST_USE_ATTRIBUTE,\n    spreadMethod: MUST_USE_ATTRIBUTE,\n    stopColor: MUST_USE_ATTRIBUTE,\n    stopOpacity: MUST_USE_ATTRIBUTE,\n    stroke: MUST_USE_ATTRIBUTE,\n    strokeDasharray: MUST_USE_ATTRIBUTE,\n    strokeLinecap: MUST_USE_ATTRIBUTE,\n    strokeOpacity: MUST_USE_ATTRIBUTE,\n    strokeWidth: MUST_USE_ATTRIBUTE,\n    textAnchor: MUST_USE_ATTRIBUTE,\n    transform: MUST_USE_ATTRIBUTE,\n    version: MUST_USE_ATTRIBUTE,\n    viewBox: MUST_USE_ATTRIBUTE,\n    x1: MUST_USE_ATTRIBUTE,\n    x2: MUST_USE_ATTRIBUTE,\n    x: MUST_USE_ATTRIBUTE,\n    xlinkActuate: MUST_USE_ATTRIBUTE,\n    xlinkArcrole: MUST_USE_ATTRIBUTE,\n    xlinkHref: MUST_USE_ATTRIBUTE,\n    xlinkRole: MUST_USE_ATTRIBUTE,\n    xlinkShow: MUST_USE_ATTRIBUTE,\n    xlinkTitle: MUST_USE_ATTRIBUTE,\n    xlinkType: MUST_USE_ATTRIBUTE,\n    xmlBase: MUST_USE_ATTRIBUTE,\n    xmlLang: MUST_USE_ATTRIBUTE,\n    xmlSpace: MUST_USE_ATTRIBUTE,\n    y1: MUST_USE_ATTRIBUTE,\n    y2: MUST_USE_ATTRIBUTE,\n    y: MUST_USE_ATTRIBUTE\n  },\n  DOMAttributeNamespaces: {\n    xlinkActuate: NS.xlink,\n    xlinkArcrole: NS.xlink,\n    xlinkHref: NS.xlink,\n    xlinkRole: NS.xlink,\n    xlinkShow: NS.xlink,\n    xlinkTitle: NS.xlink,\n    xlinkType: NS.xlink,\n    xmlBase: NS.xml,\n    xmlLang: NS.xml,\n    xmlSpace: NS.xml\n  },\n  DOMAttributeNames: {\n    clipPath: 'clip-path',\n    fillOpacity: 'fill-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    gradientTransform: 'gradientTransform',\n    gradientUnits: 'gradientUnits',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    patternContentUnits: 'patternContentUnits',\n    patternUnits: 'patternUnits',\n    preserveAspectRatio: 'preserveAspectRatio',\n    spreadMethod: 'spreadMethod',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strokeDasharray: 'stroke-dasharray',\n    strokeLinecap: 'stroke-linecap',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    textAnchor: 'text-anchor',\n    viewBox: 'viewBox',\n    xlinkActuate: 'xlink:actuate',\n    xlinkArcrole: 'xlink:arcrole',\n    xlinkHref: 'xlink:href',\n    xlinkRole: 'xlink:role',\n    xlinkShow: 'xlink:show',\n    xlinkTitle: 'xlink:title',\n    xlinkType: 'xlink:type',\n    xmlBase: 'xml:base',\n    xmlLang: 'xml:lang',\n    xmlSpace: 'xml:space'\n  }\n};\n\nmodule.exports = SVGDOMPropertyConfig;\n},{\"./DOMProperty\":\"react/lib/DOMProperty\"}],\"react/lib/SelectEventPlugin\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SelectEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPropagators = require('./EventPropagators');\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar ReactInputSelection = require('./ReactInputSelection');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getActiveElement = require('fbjs/lib/getActiveElement');\nvar isTextInputElement = require('./isTextInputElement');\nvar keyOf = require('fbjs/lib/keyOf');\nvar shallowEqual = require('fbjs/lib/shallowEqual');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\n\nvar eventTypes = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSelect: null }),\n      captured: keyOf({ onSelectCapture: null })\n    },\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]\n  }\n};\n\nvar activeElement = null;\nvar activeElementID = null;\nvar lastSelection = null;\nvar mouseDown = false;\n\n// Track whether a listener exists for this plugin. If none exist, we do\n// not extract events.\nvar hasListener = false;\nvar ON_SELECT_KEY = keyOf({ onSelect: null });\n\n/**\n * Get an object which is a unique representation of the current selection.\n *\n * The return value will not be consistent across nodes or browsers, but\n * two identical selections on the same node will return identical objects.\n *\n * @param {DOMElement} node\n * @return {object}\n */\nfunction getSelection(node) {\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\n    return {\n      start: node.selectionStart,\n      end: node.selectionEnd\n    };\n  } else if (window.getSelection) {\n    var selection = window.getSelection();\n    return {\n      anchorNode: selection.anchorNode,\n      anchorOffset: selection.anchorOffset,\n      focusNode: selection.focusNode,\n      focusOffset: selection.focusOffset\n    };\n  } else if (document.selection) {\n    var range = document.selection.createRange();\n    return {\n      parentElement: range.parentElement(),\n      text: range.text,\n      top: range.boundingTop,\n      left: range.boundingLeft\n    };\n  }\n}\n\n/**\n * Poll selection to see whether it's changed.\n *\n * @param {object} nativeEvent\n * @return {?SyntheticEvent}\n */\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\n  // Ensure we have the right element, and that the user is not dragging a\n  // selection (this matches native `select` event behavior). In HTML5, select\n  // fires only on input and textarea thus if there's no focused element we\n  // won't dispatch.\n  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\n    return null;\n  }\n\n  // Only fire when selection has actually changed.\n  var currentSelection = getSelection(activeElement);\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\n    lastSelection = currentSelection;\n\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);\n\n    syntheticEvent.type = 'select';\n    syntheticEvent.target = activeElement;\n\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\n\n    return syntheticEvent;\n  }\n\n  return null;\n}\n\n/**\n * This plugin creates an `onSelect` event that normalizes select events\n * across form elements.\n *\n * Supported elements are:\n * - input (see `isTextInputElement`)\n * - textarea\n * - contentEditable\n *\n * This differs from native browser implementations in the following ways:\n * - Fires on contentEditable fields as well as inputs.\n * - Fires for collapsed selection.\n * - Fires after user input.\n */\nvar SelectEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    if (!hasListener) {\n      return null;\n    }\n\n    switch (topLevelType) {\n      // Track the input node that has focus.\n      case topLevelTypes.topFocus:\n        if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {\n          activeElement = topLevelTarget;\n          activeElementID = topLevelTargetID;\n          lastSelection = null;\n        }\n        break;\n      case topLevelTypes.topBlur:\n        activeElement = null;\n        activeElementID = null;\n        lastSelection = null;\n        break;\n\n      // Don't fire the event while the user is dragging. This matches the\n      // semantics of the native select event.\n      case topLevelTypes.topMouseDown:\n        mouseDown = true;\n        break;\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topMouseUp:\n        mouseDown = false;\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n\n      // Chrome and IE fire non-standard event when selection is changed (and\n      // sometimes when it hasn't). IE's event fires out of order with respect\n      // to key and input events on deletion, so we discard it.\n      //\n      // Firefox doesn't support selectionchange, so check selection status\n      // after each key entry. The selection changes after keydown and before\n      // keyup, but we check on keydown as well in the case of holding down a\n      // key, when multiple keydown events are fired but only one keyup is.\n      // This is also our approach for IE handling, for the reason above.\n      case topLevelTypes.topSelectionChange:\n        if (skipSelectionChangeEvent) {\n          break;\n        }\n      // falls through\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\n    }\n\n    return null;\n  },\n\n  didPutListener: function (id, registrationName, listener) {\n    if (registrationName === ON_SELECT_KEY) {\n      hasListener = true;\n    }\n  }\n};\n\nmodule.exports = SelectEventPlugin;\n},{\"./EventConstants\":\"react/lib/EventConstants\",\"./EventPropagators\":\"react/lib/EventPropagators\",\"./ReactInputSelection\":\"react/lib/ReactInputSelection\",\"./SyntheticEvent\":\"react/lib/SyntheticEvent\",\"./isTextInputElement\":\"react/lib/isTextInputElement\",\"fbjs/lib/ExecutionEnvironment\":14,\"fbjs/lib/getActiveElement\":24,\"fbjs/lib/keyOf\":34,\"fbjs/lib/shallowEqual\":39}],\"react/lib/ServerReactRootIndex\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ServerReactRootIndex\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Size of the reactRoot ID space. We generate random numbers for React root\n * IDs and if there's a collision the events and DOM update system will\n * get confused. In the future we need a way to generate GUIDs but for\n * now this will work on a smaller scale.\n */\nvar GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);\n\nvar ServerReactRootIndex = {\n  createReactRootIndex: function () {\n    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);\n  }\n};\n\nmodule.exports = ServerReactRootIndex;\n},{}],\"react/lib/SimpleEventPlugin\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SimpleEventPlugin\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventListener = require('fbjs/lib/EventListener');\nvar EventPropagators = require('./EventPropagators');\nvar ReactMount = require('./ReactMount');\nvar SyntheticClipboardEvent = require('./SyntheticClipboardEvent');\nvar SyntheticEvent = require('./SyntheticEvent');\nvar SyntheticFocusEvent = require('./SyntheticFocusEvent');\nvar SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\nvar SyntheticDragEvent = require('./SyntheticDragEvent');\nvar SyntheticTouchEvent = require('./SyntheticTouchEvent');\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar SyntheticWheelEvent = require('./SyntheticWheelEvent');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getEventCharCode = require('./getEventCharCode');\nvar invariant = require('fbjs/lib/invariant');\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar eventTypes = {\n  abort: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onAbort: true }),\n      captured: keyOf({ onAbortCapture: true })\n    }\n  },\n  blur: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onBlur: true }),\n      captured: keyOf({ onBlurCapture: true })\n    }\n  },\n  canPlay: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCanPlay: true }),\n      captured: keyOf({ onCanPlayCapture: true })\n    }\n  },\n  canPlayThrough: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCanPlayThrough: true }),\n      captured: keyOf({ onCanPlayThroughCapture: true })\n    }\n  },\n  click: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onClick: true }),\n      captured: keyOf({ onClickCapture: true })\n    }\n  },\n  contextMenu: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onContextMenu: true }),\n      captured: keyOf({ onContextMenuCapture: true })\n    }\n  },\n  copy: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCopy: true }),\n      captured: keyOf({ onCopyCapture: true })\n    }\n  },\n  cut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onCut: true }),\n      captured: keyOf({ onCutCapture: true })\n    }\n  },\n  doubleClick: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDoubleClick: true }),\n      captured: keyOf({ onDoubleClickCapture: true })\n    }\n  },\n  drag: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDrag: true }),\n      captured: keyOf({ onDragCapture: true })\n    }\n  },\n  dragEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragEnd: true }),\n      captured: keyOf({ onDragEndCapture: true })\n    }\n  },\n  dragEnter: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragEnter: true }),\n      captured: keyOf({ onDragEnterCapture: true })\n    }\n  },\n  dragExit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragExit: true }),\n      captured: keyOf({ onDragExitCapture: true })\n    }\n  },\n  dragLeave: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragLeave: true }),\n      captured: keyOf({ onDragLeaveCapture: true })\n    }\n  },\n  dragOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragOver: true }),\n      captured: keyOf({ onDragOverCapture: true })\n    }\n  },\n  dragStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDragStart: true }),\n      captured: keyOf({ onDragStartCapture: true })\n    }\n  },\n  drop: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDrop: true }),\n      captured: keyOf({ onDropCapture: true })\n    }\n  },\n  durationChange: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onDurationChange: true }),\n      captured: keyOf({ onDurationChangeCapture: true })\n    }\n  },\n  emptied: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onEmptied: true }),\n      captured: keyOf({ onEmptiedCapture: true })\n    }\n  },\n  encrypted: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onEncrypted: true }),\n      captured: keyOf({ onEncryptedCapture: true })\n    }\n  },\n  ended: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onEnded: true }),\n      captured: keyOf({ onEndedCapture: true })\n    }\n  },\n  error: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onError: true }),\n      captured: keyOf({ onErrorCapture: true })\n    }\n  },\n  focus: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onFocus: true }),\n      captured: keyOf({ onFocusCapture: true })\n    }\n  },\n  input: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onInput: true }),\n      captured: keyOf({ onInputCapture: true })\n    }\n  },\n  keyDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onKeyDown: true }),\n      captured: keyOf({ onKeyDownCapture: true })\n    }\n  },\n  keyPress: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onKeyPress: true }),\n      captured: keyOf({ onKeyPressCapture: true })\n    }\n  },\n  keyUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onKeyUp: true }),\n      captured: keyOf({ onKeyUpCapture: true })\n    }\n  },\n  load: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoad: true }),\n      captured: keyOf({ onLoadCapture: true })\n    }\n  },\n  loadedData: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoadedData: true }),\n      captured: keyOf({ onLoadedDataCapture: true })\n    }\n  },\n  loadedMetadata: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoadedMetadata: true }),\n      captured: keyOf({ onLoadedMetadataCapture: true })\n    }\n  },\n  loadStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onLoadStart: true }),\n      captured: keyOf({ onLoadStartCapture: true })\n    }\n  },\n  // Note: We do not allow listening to mouseOver events. Instead, use the\n  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.\n  mouseDown: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseDown: true }),\n      captured: keyOf({ onMouseDownCapture: true })\n    }\n  },\n  mouseMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseMove: true }),\n      captured: keyOf({ onMouseMoveCapture: true })\n    }\n  },\n  mouseOut: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseOut: true }),\n      captured: keyOf({ onMouseOutCapture: true })\n    }\n  },\n  mouseOver: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseOver: true }),\n      captured: keyOf({ onMouseOverCapture: true })\n    }\n  },\n  mouseUp: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onMouseUp: true }),\n      captured: keyOf({ onMouseUpCapture: true })\n    }\n  },\n  paste: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPaste: true }),\n      captured: keyOf({ onPasteCapture: true })\n    }\n  },\n  pause: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPause: true }),\n      captured: keyOf({ onPauseCapture: true })\n    }\n  },\n  play: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPlay: true }),\n      captured: keyOf({ onPlayCapture: true })\n    }\n  },\n  playing: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onPlaying: true }),\n      captured: keyOf({ onPlayingCapture: true })\n    }\n  },\n  progress: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onProgress: true }),\n      captured: keyOf({ onProgressCapture: true })\n    }\n  },\n  rateChange: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onRateChange: true }),\n      captured: keyOf({ onRateChangeCapture: true })\n    }\n  },\n  reset: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onReset: true }),\n      captured: keyOf({ onResetCapture: true })\n    }\n  },\n  scroll: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onScroll: true }),\n      captured: keyOf({ onScrollCapture: true })\n    }\n  },\n  seeked: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSeeked: true }),\n      captured: keyOf({ onSeekedCapture: true })\n    }\n  },\n  seeking: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSeeking: true }),\n      captured: keyOf({ onSeekingCapture: true })\n    }\n  },\n  stalled: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onStalled: true }),\n      captured: keyOf({ onStalledCapture: true })\n    }\n  },\n  submit: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSubmit: true }),\n      captured: keyOf({ onSubmitCapture: true })\n    }\n  },\n  suspend: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onSuspend: true }),\n      captured: keyOf({ onSuspendCapture: true })\n    }\n  },\n  timeUpdate: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTimeUpdate: true }),\n      captured: keyOf({ onTimeUpdateCapture: true })\n    }\n  },\n  touchCancel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchCancel: true }),\n      captured: keyOf({ onTouchCancelCapture: true })\n    }\n  },\n  touchEnd: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchEnd: true }),\n      captured: keyOf({ onTouchEndCapture: true })\n    }\n  },\n  touchMove: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchMove: true }),\n      captured: keyOf({ onTouchMoveCapture: true })\n    }\n  },\n  touchStart: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchStart: true }),\n      captured: keyOf({ onTouchStartCapture: true })\n    }\n  },\n  volumeChange: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onVolumeChange: true }),\n      captured: keyOf({ onVolumeChangeCapture: true })\n    }\n  },\n  waiting: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onWaiting: true }),\n      captured: keyOf({ onWaitingCapture: true })\n    }\n  },\n  wheel: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onWheel: true }),\n      captured: keyOf({ onWheelCapture: true })\n    }\n  }\n};\n\nvar topLevelEventsToDispatchConfig = {\n  topAbort: eventTypes.abort,\n  topBlur: eventTypes.blur,\n  topCanPlay: eventTypes.canPlay,\n  topCanPlayThrough: eventTypes.canPlayThrough,\n  topClick: eventTypes.click,\n  topContextMenu: eventTypes.contextMenu,\n  topCopy: eventTypes.copy,\n  topCut: eventTypes.cut,\n  topDoubleClick: eventTypes.doubleClick,\n  topDrag: eventTypes.drag,\n  topDragEnd: eventTypes.dragEnd,\n  topDragEnter: eventTypes.dragEnter,\n  topDragExit: eventTypes.dragExit,\n  topDragLeave: eventTypes.dragLeave,\n  topDragOver: eventTypes.dragOver,\n  topDragStart: eventTypes.dragStart,\n  topDrop: eventTypes.drop,\n  topDurationChange: eventTypes.durationChange,\n  topEmptied: eventTypes.emptied,\n  topEncrypted: eventTypes.encrypted,\n  topEnded: eventTypes.ended,\n  topError: eventTypes.error,\n  topFocus: eventTypes.focus,\n  topInput: eventTypes.input,\n  topKeyDown: eventTypes.keyDown,\n  topKeyPress: eventTypes.keyPress,\n  topKeyUp: eventTypes.keyUp,\n  topLoad: eventTypes.load,\n  topLoadedData: eventTypes.loadedData,\n  topLoadedMetadata: eventTypes.loadedMetadata,\n  topLoadStart: eventTypes.loadStart,\n  topMouseDown: eventTypes.mouseDown,\n  topMouseMove: eventTypes.mouseMove,\n  topMouseOut: eventTypes.mouseOut,\n  topMouseOver: eventTypes.mouseOver,\n  topMouseUp: eventTypes.mouseUp,\n  topPaste: eventTypes.paste,\n  topPause: eventTypes.pause,\n  topPlay: eventTypes.play,\n  topPlaying: eventTypes.playing,\n  topProgress: eventTypes.progress,\n  topRateChange: eventTypes.rateChange,\n  topReset: eventTypes.reset,\n  topScroll: eventTypes.scroll,\n  topSeeked: eventTypes.seeked,\n  topSeeking: eventTypes.seeking,\n  topStalled: eventTypes.stalled,\n  topSubmit: eventTypes.submit,\n  topSuspend: eventTypes.suspend,\n  topTimeUpdate: eventTypes.timeUpdate,\n  topTouchCancel: eventTypes.touchCancel,\n  topTouchEnd: eventTypes.touchEnd,\n  topTouchMove: eventTypes.touchMove,\n  topTouchStart: eventTypes.touchStart,\n  topVolumeChange: eventTypes.volumeChange,\n  topWaiting: eventTypes.waiting,\n  topWheel: eventTypes.wheel\n};\n\nfor (var type in topLevelEventsToDispatchConfig) {\n  topLevelEventsToDispatchConfig[type].dependencies = [type];\n}\n\nvar ON_CLICK_KEY = keyOf({ onClick: null });\nvar onClickListeners = {};\n\nvar SimpleEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor;\n    switch (topLevelType) {\n      case topLevelTypes.topAbort:\n      case topLevelTypes.topCanPlay:\n      case topLevelTypes.topCanPlayThrough:\n      case topLevelTypes.topDurationChange:\n      case topLevelTypes.topEmptied:\n      case topLevelTypes.topEncrypted:\n      case topLevelTypes.topEnded:\n      case topLevelTypes.topError:\n      case topLevelTypes.topInput:\n      case topLevelTypes.topLoad:\n      case topLevelTypes.topLoadedData:\n      case topLevelTypes.topLoadedMetadata:\n      case topLevelTypes.topLoadStart:\n      case topLevelTypes.topPause:\n      case topLevelTypes.topPlay:\n      case topLevelTypes.topPlaying:\n      case topLevelTypes.topProgress:\n      case topLevelTypes.topRateChange:\n      case topLevelTypes.topReset:\n      case topLevelTypes.topSeeked:\n      case topLevelTypes.topSeeking:\n      case topLevelTypes.topStalled:\n      case topLevelTypes.topSubmit:\n      case topLevelTypes.topSuspend:\n      case topLevelTypes.topTimeUpdate:\n      case topLevelTypes.topVolumeChange:\n      case topLevelTypes.topWaiting:\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n      case topLevelTypes.topKeyPress:\n        // FireFox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n      /* falls through */\n      case topLevelTypes.topKeyDown:\n      case topLevelTypes.topKeyUp:\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case topLevelTypes.topBlur:\n      case topLevelTypes.topFocus:\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case topLevelTypes.topClick:\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n      /* falls through */\n      case topLevelTypes.topContextMenu:\n      case topLevelTypes.topDoubleClick:\n      case topLevelTypes.topMouseDown:\n      case topLevelTypes.topMouseMove:\n      case topLevelTypes.topMouseOut:\n      case topLevelTypes.topMouseOver:\n      case topLevelTypes.topMouseUp:\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case topLevelTypes.topDrag:\n      case topLevelTypes.topDragEnd:\n      case topLevelTypes.topDragEnter:\n      case topLevelTypes.topDragExit:\n      case topLevelTypes.topDragLeave:\n      case topLevelTypes.topDragOver:\n      case topLevelTypes.topDragStart:\n      case topLevelTypes.topDrop:\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case topLevelTypes.topTouchCancel:\n      case topLevelTypes.topTouchEnd:\n      case topLevelTypes.topTouchMove:\n      case topLevelTypes.topTouchStart:\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case topLevelTypes.topScroll:\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case topLevelTypes.topWheel:\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case topLevelTypes.topCopy:\n      case topLevelTypes.topCut:\n      case topLevelTypes.topPaste:\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;\n    var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  },\n\n  didPutListener: function (id, registrationName, listener) {\n    // Mobile Safari does not fire properly bubble click events on\n    // non-interactive elements, which means delegated click listeners do not\n    // fire. The workaround for this bug involves attaching an empty click\n    // listener on the target node.\n    if (registrationName === ON_CLICK_KEY) {\n      var node = ReactMount.getNode(id);\n      if (!onClickListeners[id]) {\n        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);\n      }\n    }\n  },\n\n  willDeleteListener: function (id, registrationName) {\n    if (registrationName === ON_CLICK_KEY) {\n      onClickListeners[id].remove();\n      delete onClickListeners[id];\n    }\n  }\n\n};\n\nmodule.exports = SimpleEventPlugin;\n}).call(this,require('_process'))\n\n},{\"./EventConstants\":\"react/lib/EventConstants\",\"./EventPropagators\":\"react/lib/EventPropagators\",\"./ReactMount\":\"react/lib/ReactMount\",\"./SyntheticClipboardEvent\":\"react/lib/SyntheticClipboardEvent\",\"./SyntheticDragEvent\":\"react/lib/SyntheticDragEvent\",\"./SyntheticEvent\":\"react/lib/SyntheticEvent\",\"./SyntheticFocusEvent\":\"react/lib/SyntheticFocusEvent\",\"./SyntheticKeyboardEvent\":\"react/lib/SyntheticKeyboardEvent\",\"./SyntheticMouseEvent\":\"react/lib/SyntheticMouseEvent\",\"./SyntheticTouchEvent\":\"react/lib/SyntheticTouchEvent\",\"./SyntheticUIEvent\":\"react/lib/SyntheticUIEvent\",\"./SyntheticWheelEvent\":\"react/lib/SyntheticWheelEvent\",\"./getEventCharCode\":\"react/lib/getEventCharCode\",\"_process\":1,\"fbjs/lib/EventListener\":13,\"fbjs/lib/emptyFunction\":21,\"fbjs/lib/invariant\":29,\"fbjs/lib/keyOf\":34}],\"react/lib/SyntheticClipboardEvent\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticClipboardEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/clipboard-apis/\n */\nvar ClipboardEventInterface = {\n  clipboardData: function (event) {\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\n\nmodule.exports = SyntheticClipboardEvent;\n},{\"./SyntheticEvent\":\"react/lib/SyntheticEvent\"}],\"react/lib/SyntheticCompositionEvent\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticCompositionEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\n */\nvar CompositionEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);\n\nmodule.exports = SyntheticCompositionEvent;\n},{\"./SyntheticEvent\":\"react/lib/SyntheticEvent\"}],\"react/lib/SyntheticDragEvent\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticDragEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface DragEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar DragEventInterface = {\n  dataTransfer: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\n\nmodule.exports = SyntheticDragEvent;\n},{\"./SyntheticMouseEvent\":\"react/lib/SyntheticMouseEvent\"}],\"react/lib/SyntheticEvent\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\n\nvar assign = require('./Object.assign');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar EventInterface = {\n  type: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: emptyFunction.thatReturnsNull,\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function (event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n */\nfunction SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  this.dispatchConfig = dispatchConfig;\n  this.dispatchMarker = dispatchMarker;\n  this.nativeEvent = nativeEvent;\n  this.target = nativeEventTarget;\n  this.currentTarget = nativeEventTarget;\n\n  var Interface = this.constructor.Interface;\n  for (var propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    var normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      this[propName] = nativeEvent[propName];\n    }\n  }\n\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\n  }\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\n}\n\nassign(SyntheticEvent.prototype, {\n\n  preventDefault: function () {\n    this.defaultPrevented = true;\n    var event = this.nativeEvent;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;\n    }\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\n  },\n\n  stopPropagation: function () {\n    var event = this.nativeEvent;\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\\'re ' + 'seeing this, you\\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;\n    }\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else {\n      event.cancelBubble = true;\n    }\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function () {\n    this.isPersistent = emptyFunction.thatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: emptyFunction.thatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function () {\n    var Interface = this.constructor.Interface;\n    for (var propName in Interface) {\n      this[propName] = null;\n    }\n    this.dispatchConfig = null;\n    this.dispatchMarker = null;\n    this.nativeEvent = null;\n  }\n\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n *\n * @param {function} Class\n * @param {?object} Interface\n */\nSyntheticEvent.augmentClass = function (Class, Interface) {\n  var Super = this;\n\n  var prototype = Object_create(Super.prototype);\n  assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = assign({}, Super.Interface, Interface);\n  Class.augmentClass = Super.augmentClass;\n\n  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\n};\n\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\n\nmodule.exports = SyntheticEvent;\n}).call(this,require('_process'))\n\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./PooledClass\":\"react/lib/PooledClass\",\"_process\":1,\"fbjs/lib/emptyFunction\":21,\"fbjs/lib/warning\":41}],\"react/lib/SyntheticFocusEvent\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticFocusEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\n/**\n * @interface FocusEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar FocusEventInterface = {\n  relatedTarget: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\n\nmodule.exports = SyntheticFocusEvent;\n},{\"./SyntheticUIEvent\":\"react/lib/SyntheticUIEvent\"}],\"react/lib/SyntheticInputEvent\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticInputEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\n *      /#events-inputevents\n */\nvar InputEventInterface = {\n  data: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);\n\nmodule.exports = SyntheticInputEvent;\n},{\"./SyntheticEvent\":\"react/lib/SyntheticEvent\"}],\"react/lib/SyntheticKeyboardEvent\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticKeyboardEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventCharCode = require('./getEventCharCode');\nvar getEventKey = require('./getEventKey');\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface KeyboardEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar KeyboardEventInterface = {\n  key: getEventKey,\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: getEventModifierState,\n  // Legacy Interface\n  charCode: function (event) {\n    // `charCode` is the result of a KeyPress event and represents the value of\n    // the actual printable character.\n\n    // KeyPress is deprecated, but its replacement is not yet final and not\n    // implemented in any major browser. Only KeyPress has charCode.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    return 0;\n  },\n  keyCode: function (event) {\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\n    // physical keyboard key.\n\n    // The actual meaning of the value depends on the users' keyboard layout\n    // which cannot be detected. Assuming that it is a US keyboard layout\n    // provides a surprisingly accurate mapping for US and European users.\n    // Due to this, it is left to the user to implement at this time.\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  },\n  which: function (event) {\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\n    // type of the event.\n    if (event.type === 'keypress') {\n      return getEventCharCode(event);\n    }\n    if (event.type === 'keydown' || event.type === 'keyup') {\n      return event.keyCode;\n    }\n    return 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\n\nmodule.exports = SyntheticKeyboardEvent;\n},{\"./SyntheticUIEvent\":\"react/lib/SyntheticUIEvent\",\"./getEventCharCode\":\"react/lib/getEventCharCode\",\"./getEventKey\":\"react/lib/getEventKey\",\"./getEventModifierState\":\"react/lib/getEventModifierState\"}],\"react/lib/SyntheticMouseEvent\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticMouseEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface MouseEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar MouseEventInterface = {\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: getEventModifierState,\n  button: function (event) {\n    // Webkit, Firefox, IE9+\n    // which:  1 2 3\n    // button: 0 1 2 (standard)\n    var button = event.button;\n    if ('which' in event) {\n      return button;\n    }\n    // IE<9\n    // which:  undefined\n    // button: 0 0 0\n    // button: 1 4 2 (onmouseup)\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\n  },\n  buttons: null,\n  relatedTarget: function (event) {\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\n  },\n  // \"Proprietary\" Interface.\n  pageX: function (event) {\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\n  },\n  pageY: function (event) {\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\n\nmodule.exports = SyntheticMouseEvent;\n},{\"./SyntheticUIEvent\":\"react/lib/SyntheticUIEvent\",\"./ViewportMetrics\":\"react/lib/ViewportMetrics\",\"./getEventModifierState\":\"react/lib/getEventModifierState\"}],\"react/lib/SyntheticTouchEvent\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticTouchEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar getEventModifierState = require('./getEventModifierState');\n\n/**\n * @interface TouchEvent\n * @see http://www.w3.org/TR/touch-events/\n */\nvar TouchEventInterface = {\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: getEventModifierState\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticUIEvent}\n */\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\n\nmodule.exports = SyntheticTouchEvent;\n},{\"./SyntheticUIEvent\":\"react/lib/SyntheticUIEvent\",\"./getEventModifierState\":\"react/lib/getEventModifierState\"}],\"react/lib/SyntheticUIEvent\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticUIEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\n\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar UIEventInterface = {\n  view: function (event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n    if (target != null && target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument;\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function (event) {\n    return event.detail || 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\nmodule.exports = SyntheticUIEvent;\n},{\"./SyntheticEvent\":\"react/lib/SyntheticEvent\",\"./getEventTarget\":\"react/lib/getEventTarget\"}],\"react/lib/SyntheticWheelEvent\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SyntheticWheelEvent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\n/**\n * @interface WheelEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar WheelEventInterface = {\n  deltaX: function (event) {\n    return 'deltaX' in event ? event.deltaX :\n    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\n  },\n  deltaY: function (event) {\n    return 'deltaY' in event ? event.deltaY :\n    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\n    'wheelDeltaY' in event ? -event.wheelDeltaY :\n    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\n    'wheelDelta' in event ? -event.wheelDelta : 0;\n  },\n  deltaZ: null,\n\n  // Browsers without \"deltaMode\" is reporting in raw wheel delta where one\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\n  deltaMode: null\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticMouseEvent}\n */\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\n\nmodule.exports = SyntheticWheelEvent;\n},{\"./SyntheticMouseEvent\":\"react/lib/SyntheticMouseEvent\"}],\"react/lib/TapEventPlugin\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule TapEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginUtils = require('./EventPluginUtils');\nvar EventPropagators = require('./EventPropagators');\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar TouchEventUtils = require('fbjs/lib/TouchEventUtils');\nvar ViewportMetrics = require('./ViewportMetrics');\n\nvar keyOf = require('fbjs/lib/keyOf');\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nvar isStartish = EventPluginUtils.isStartish;\nvar isEndish = EventPluginUtils.isEndish;\n\n/**\n * Number of pixels that are tolerated in between a `touchStart` and `touchEnd`\n * in order to still be considered a 'tap' event.\n */\nvar tapMoveThreshold = 10;\nvar startCoords = { x: null, y: null };\n\nvar Axis = {\n  x: { page: 'pageX', client: 'clientX', envScroll: 'currentPageScrollLeft' },\n  y: { page: 'pageY', client: 'clientY', envScroll: 'currentPageScrollTop' }\n};\n\nfunction getAxisCoordOfEvent(axis, nativeEvent) {\n  var singleTouch = TouchEventUtils.extractSingleTouch(nativeEvent);\n  if (singleTouch) {\n    return singleTouch[axis.page];\n  }\n  return axis.page in nativeEvent ? nativeEvent[axis.page] : nativeEvent[axis.client] + ViewportMetrics[axis.envScroll];\n}\n\nfunction getDistance(coords, nativeEvent) {\n  var pageX = getAxisCoordOfEvent(Axis.x, nativeEvent);\n  var pageY = getAxisCoordOfEvent(Axis.y, nativeEvent);\n  return Math.pow(Math.pow(pageX - coords.x, 2) + Math.pow(pageY - coords.y, 2), 0.5);\n}\n\nvar touchEvents = [topLevelTypes.topTouchStart, topLevelTypes.topTouchCancel, topLevelTypes.topTouchEnd, topLevelTypes.topTouchMove];\n\nvar dependencies = [topLevelTypes.topMouseDown, topLevelTypes.topMouseMove, topLevelTypes.topMouseUp].concat(touchEvents);\n\nvar eventTypes = {\n  touchTap: {\n    phasedRegistrationNames: {\n      bubbled: keyOf({ onTouchTap: null }),\n      captured: keyOf({ onTouchTapCapture: null })\n    },\n    dependencies: dependencies\n  }\n};\n\nvar usedTouch = false;\nvar usedTouchTime = 0;\nvar TOUCH_DELAY = 1000;\n\nvar TapEventPlugin = {\n\n  tapMoveThreshold: tapMoveThreshold,\n\n  eventTypes: eventTypes,\n\n  /**\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    if (!isStartish(topLevelType) && !isEndish(topLevelType)) {\n      return null;\n    }\n    // on ios, there is a delay after touch event and synthetic\n    // mouse events, so that user can perform double tap\n    // solution: ignore mouse events following touchevent within small timeframe\n    if (touchEvents.indexOf(topLevelType) !== -1) {\n      usedTouch = true;\n      usedTouchTime = Date.now();\n    } else {\n      if (usedTouch && Date.now() - usedTouchTime < TOUCH_DELAY) {\n        return null;\n      }\n    }\n    var event = null;\n    var distance = getDistance(startCoords, nativeEvent);\n    if (isEndish(topLevelType) && distance < tapMoveThreshold) {\n      event = SyntheticUIEvent.getPooled(eventTypes.touchTap, topLevelTargetID, nativeEvent, nativeEventTarget);\n    }\n    if (isStartish(topLevelType)) {\n      startCoords.x = getAxisCoordOfEvent(Axis.x, nativeEvent);\n      startCoords.y = getAxisCoordOfEvent(Axis.y, nativeEvent);\n    } else if (isEndish(topLevelType)) {\n      startCoords.x = 0;\n      startCoords.y = 0;\n    }\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  }\n\n};\n\nmodule.exports = TapEventPlugin;\n},{\"./EventConstants\":\"react/lib/EventConstants\",\"./EventPluginUtils\":\"react/lib/EventPluginUtils\",\"./EventPropagators\":\"react/lib/EventPropagators\",\"./SyntheticUIEvent\":\"react/lib/SyntheticUIEvent\",\"./ViewportMetrics\":\"react/lib/ViewportMetrics\",\"fbjs/lib/TouchEventUtils\":15,\"fbjs/lib/keyOf\":34}],\"react/lib/Transaction\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule Transaction\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * `Transaction` creates a black box that is able to wrap any method such that\n * certain invariants are maintained before and after the method is invoked\n * (Even if an exception is thrown while invoking the wrapped method). Whoever\n * instantiates a transaction can provide enforcers of the invariants at\n * creation time. The `Transaction` class itself will supply one additional\n * automatic invariant for you - the invariant that any transaction instance\n * should not be run while it is already being run. You would typically create a\n * single instance of a `Transaction` for reuse multiple times, that potentially\n * is used to wrap several different methods. Wrappers are extremely simple -\n * they only require implementing two methods.\n *\n * <pre>\n *                       wrappers (injected at creation time)\n *                                      +        +\n *                                      |        |\n *                    +-----------------|--------|--------------+\n *                    |                 v        |              |\n *                    |      +---------------+   |              |\n *                    |   +--|    wrapper1   |---|----+         |\n *                    |   |  +---------------+   v    |         |\n *                    |   |          +-------------+  |         |\n *                    |   |     +----|   wrapper2  |--------+   |\n *                    |   |     |    +-------------+  |     |   |\n *                    |   |     |                     |     |   |\n *                    |   v     v                     v     v   | wrapper\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\n * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | |   | |   |   |         |   |   | |   | |\n *                    | +---+ +---+   +---------+   +---+ +---+ |\n *                    |  initialize                    close    |\n *                    +-----------------------------------------+\n * </pre>\n *\n * Use cases:\n * - Preserving the input selection ranges before/after reconciliation.\n *   Restoring selection even in the event of an unexpected error.\n * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\n *   while guaranteeing that afterwards, the event system is reactivated.\n * - Flushing a queue of collected DOM mutations to the main UI thread after a\n *   reconciliation takes place in a worker thread.\n * - Invoking any collected `componentDidUpdate` callbacks after rendering new\n *   content.\n * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\n *   to preserve the `scrollTop` (an automatic scroll aware DOM).\n * - (Future use case): Layout calculations before and after DOM updates.\n *\n * Transactional plugin API:\n * - A module that has an `initialize` method that returns any precomputation.\n * - and a `close` method that accepts the precomputation. `close` is invoked\n *   when the wrapped process is completed, or has failed.\n *\n * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\n * that implement `initialize` and `close`.\n * @return {Transaction} Single transaction for reuse in thread.\n *\n * @class Transaction\n */\nvar Mixin = {\n  /**\n   * Sets up this instance so that it is prepared for collecting metrics. Does\n   * so such that this setup method may be used on an instance that is already\n   * initialized, in a way that does not consume additional memory upon reuse.\n   * That can be useful if you decide to make your subclass of this mixin a\n   * \"PooledClass\".\n   */\n  reinitializeTransaction: function () {\n    this.transactionWrappers = this.getTransactionWrappers();\n    if (this.wrapperInitData) {\n      this.wrapperInitData.length = 0;\n    } else {\n      this.wrapperInitData = [];\n    }\n    this._isInTransaction = false;\n  },\n\n  _isInTransaction: false,\n\n  /**\n   * @abstract\n   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\n   */\n  getTransactionWrappers: null,\n\n  isInTransaction: function () {\n    return !!this._isInTransaction;\n  },\n\n  /**\n   * Executes the function within a safety window. Use this for the top level\n   * methods that result in large amounts of computation/mutations that would\n   * need to be safety checked. The optional arguments helps prevent the need\n   * to bind in many cases.\n   *\n   * @param {function} method Member of scope to call.\n   * @param {Object} scope Scope to invoke from.\n   * @param {Object?=} a Argument to pass to the method.\n   * @param {Object?=} b Argument to pass to the method.\n   * @param {Object?=} c Argument to pass to the method.\n   * @param {Object?=} d Argument to pass to the method.\n   * @param {Object?=} e Argument to pass to the method.\n   * @param {Object?=} f Argument to pass to the method.\n   *\n   * @return {*} Return value from `method`.\n   */\n  perform: function (method, scope, a, b, c, d, e, f) {\n    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;\n    var errorThrown;\n    var ret;\n    try {\n      this._isInTransaction = true;\n      // Catching errors makes debugging more difficult, so we start with\n      // errorThrown set to true before setting it to false after calling\n      // close -- if it's still set to true in the finally block, it means\n      // one of these calls threw.\n      errorThrown = true;\n      this.initializeAll(0);\n      ret = method.call(scope, a, b, c, d, e, f);\n      errorThrown = false;\n    } finally {\n      try {\n        if (errorThrown) {\n          // If `method` throws, prefer to show that stack trace over any thrown\n          // by invoking `closeAll`.\n          try {\n            this.closeAll(0);\n          } catch (err) {}\n        } else {\n          // Since `method` didn't throw, we don't want to silence the exception\n          // here.\n          this.closeAll(0);\n        }\n      } finally {\n        this._isInTransaction = false;\n      }\n    }\n    return ret;\n  },\n\n  initializeAll: function (startIndex) {\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      try {\n        // Catching errors makes debugging more difficult, so we start with the\n        // OBSERVED_ERROR state before overwriting it with the real return value\n        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\n        // block, it means wrapper.initialize threw.\n        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;\n        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;\n      } finally {\n        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {\n          // The initializer for wrapper i threw an error; initialize the\n          // remaining wrappers but silence any exceptions from them to ensure\n          // that the first error is the one to bubble up.\n          try {\n            this.initializeAll(i + 1);\n          } catch (err) {}\n        }\n      }\n    }\n  },\n\n  /**\n   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\n   * them the respective return values of `this.transactionWrappers.init[i]`\n   * (`close`rs that correspond to initializers that failed will not be\n   * invoked).\n   */\n  closeAll: function (startIndex) {\n    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;\n    var transactionWrappers = this.transactionWrappers;\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\n      var wrapper = transactionWrappers[i];\n      var initData = this.wrapperInitData[i];\n      var errorThrown;\n      try {\n        // Catching errors makes debugging more difficult, so we start with\n        // errorThrown set to true before setting it to false after calling\n        // close -- if it's still set to true in the finally block, it means\n        // wrapper.close threw.\n        errorThrown = true;\n        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {\n          wrapper.close.call(this, initData);\n        }\n        errorThrown = false;\n      } finally {\n        if (errorThrown) {\n          // The closer for wrapper i threw an error; close the remaining\n          // wrappers but silence any exceptions from them to ensure that the\n          // first error is the one to bubble up.\n          try {\n            this.closeAll(i + 1);\n          } catch (e) {}\n        }\n      }\n    }\n    this.wrapperInitData.length = 0;\n  }\n};\n\nvar Transaction = {\n\n  Mixin: Mixin,\n\n  /**\n   * Token to look for to determine if an error occurred.\n   */\n  OBSERVED_ERROR: {}\n\n};\n\nmodule.exports = Transaction;\n}).call(this,require('_process'))\n\n},{\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/ViewportMetrics\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ViewportMetrics\n */\n\n'use strict';\n\nvar ViewportMetrics = {\n\n  currentScrollLeft: 0,\n\n  currentScrollTop: 0,\n\n  refreshScrollValues: function (scrollPosition) {\n    ViewportMetrics.currentScrollLeft = scrollPosition.x;\n    ViewportMetrics.currentScrollTop = scrollPosition.y;\n  }\n\n};\n\nmodule.exports = ViewportMetrics;\n},{}],\"react/lib/accumulateInto\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule accumulateInto\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n *\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto(current, next) {\n  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  var currentIsArray = Array.isArray(current);\n  var nextIsArray = Array.isArray(next);\n\n  if (currentIsArray && nextIsArray) {\n    current.push.apply(current, next);\n    return current;\n  }\n\n  if (currentIsArray) {\n    current.push(next);\n    return current;\n  }\n\n  if (nextIsArray) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nmodule.exports = accumulateInto;\n}).call(this,require('_process'))\n\n},{\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/accumulate\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule accumulate\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Accumulates items that must not be null or undefined.\n *\n * This is used to conserve memory by avoiding array allocations.\n *\n * @return {*|array<*>} An accumulation of items.\n */\nfunction accumulate(current, next) {\n  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulate(...): Accumulated items must be not be null or undefined.') : invariant(false) : undefined;\n  if (current == null) {\n    return next;\n  } else {\n    // Both are not empty. Warning: Never call x.concat(y) when you are not\n    // certain that x is an Array (x could be a string with concat method).\n    var currentIsArray = Array.isArray(current);\n    var nextIsArray = Array.isArray(next);\n    if (currentIsArray) {\n      return current.concat(next);\n    } else {\n      if (nextIsArray) {\n        return [current].concat(next);\n      } else {\n        return [current, next];\n      }\n    }\n  }\n}\n\nmodule.exports = accumulate;\n}).call(this,require('_process'))\n\n},{\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/adler32\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule adler32\n */\n\n'use strict';\n\nvar MOD = 65521;\n\n// adler32 is not cryptographically strong, and is only used to sanity check that\n// markup generated on the server matches the markup generated on the client.\n// This implementation (a modified version of the SheetJS version) has been optimized\n// for our use case, at the expense of conforming to the adler32 specification\n// for non-ascii inputs.\nfunction adler32(data) {\n  var a = 1;\n  var b = 0;\n  var i = 0;\n  var l = data.length;\n  var m = l & ~0x3;\n  while (i < m) {\n    for (; i < Math.min(i + 4096, m); i += 4) {\n      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\n    }\n    a %= MOD;\n    b %= MOD;\n  }\n  for (; i < l; i++) {\n    b += a += data.charCodeAt(i);\n  }\n  a %= MOD;\n  b %= MOD;\n  return a | b << 16;\n}\n\nmodule.exports = adler32;\n},{}],\"react/lib/cloneWithProps\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @typechecks static-only\n * @providesModule cloneWithProps\n */\n\n'use strict';\n\nvar ReactElement = require('./ReactElement');\nvar ReactPropTransferer = require('./ReactPropTransferer');\n\nvar keyOf = require('fbjs/lib/keyOf');\nvar warning = require('fbjs/lib/warning');\n\nvar CHILDREN_PROP = keyOf({ children: null });\n\nvar didDeprecatedWarn = false;\n\n/**\n * Sometimes you want to change the props of a child passed to you. Usually\n * this is to add a CSS class.\n *\n * @param {ReactElement} child child element you'd like to clone\n * @param {object} props props you'd like to modify. className and style will be\n * merged automatically.\n * @return {ReactElement} a clone of child with props merged in.\n * @deprecated\n */\nfunction cloneWithProps(child, props) {\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(didDeprecatedWarn, 'cloneWithProps(...) is deprecated. ' + 'Please use React.cloneElement instead.') : undefined;\n    didDeprecatedWarn = true;\n    process.env.NODE_ENV !== 'production' ? warning(!child.ref, 'You are calling cloneWithProps() on a child with a ref. This is ' + 'dangerous because you\\'re creating a new child which will not be ' + 'added as a ref to its parent.') : undefined;\n  }\n\n  var newProps = ReactPropTransferer.mergeProps(props, child.props);\n\n  // Use `child.props.children` if it is provided.\n  if (!newProps.hasOwnProperty(CHILDREN_PROP) && child.props.hasOwnProperty(CHILDREN_PROP)) {\n    newProps.children = child.props.children;\n  }\n\n  // The current API doesn't retain _owner, which is why this\n  // doesn't use ReactElement.cloneAndReplaceProps.\n  return ReactElement.createElement(child.type, newProps);\n}\n\nmodule.exports = cloneWithProps;\n}).call(this,require('_process'))\n\n},{\"./ReactElement\":\"react/lib/ReactElement\",\"./ReactPropTransferer\":\"react/lib/ReactPropTransferer\",\"_process\":1,\"fbjs/lib/keyOf\":34,\"fbjs/lib/warning\":41}],\"react/lib/createHierarchyRenderer\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createHierarchyRenderer\n */\n\n'use strict';\n\nvar React = require('./React');\n\n/**\n * Creates a render method that makes it easier to create, render, and inspect a\n * hierarchy of mock React component classes.\n *\n * A component class is created for each of the supplied render methods. Each\n * render method is invoked with the classes created using the render methods\n * that come after it in the supplied list of render methods.\n *\n *   var renderHierarchy = createHierarchyRenderer(\n *     function ComponentA(ComponentB, ComponentC) {...},\n *     function ComponentB(ComponentC) {...},\n *     function ComponentC() {...}\n *   );\n *\n * When the hierarchy is invoked, a two-dimensional array is returned. Each\n * array corresponds to a supplied render method and contains the instances\n * returned by that render method in the order it was invoked.\n *\n *   var instances = renderHierarchy(\n *     function(ComponentA[, ComponentB, ComponentC]) {\n *       ReactDOM.render(<ComponentA />, ...);\n *     })\n *   );\n *   instances[0][0]; // First return value of first render method.\n *   instances[1][0]; // First return value of second render method.\n *   instances[1][1]; // Second return value of second render method.\n *\n * Refs should be used to reference components that are not the return value of\n * render methods.\n *\n *   expect(instances[0][0].refs.X).toBe(...);\n *\n * NOTE: The component classes created for each render method are re-used for\n * each invocation of the hierarchy renderer. If new classes are needed, you\n * should re-execute `createHierarchyRenderer` with the same arguments.\n *\n * @param {array<function>} ...renderMethods\n * @return {function}\n */\nfunction createHierarchyRenderer() {\n  for (var _len = arguments.length, renderMethods = Array(_len), _key = 0; _key < _len; _key++) {\n    renderMethods[_key] = arguments[_key];\n  }\n\n  var instances;\n  var Components = renderMethods.reduceRight(function (ComponentsAccumulator, renderMethod, depth) {\n    var Component = React.createClass({\n      displayName: renderMethod.name,\n      render: function () {\n        instances[depth].push(this);\n        return renderMethod.apply(this, ComponentsAccumulator);\n      }\n    });\n    return [Component].concat(ComponentsAccumulator);\n  }, []);\n  /**\n   * @param {function} renderComponent\n   * @return {array<array<*>>}\n   */\n  function renderHierarchy(renderComponent) {\n    instances = renderMethods.map(function () {\n      return [];\n    });\n    renderComponent.apply(null, Components);\n    return instances;\n  }\n  return renderHierarchy;\n}\n\nmodule.exports = createHierarchyRenderer;\n},{\"./React\":\"react/lib/React\"}],\"react/lib/dangerousStyleValue\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule dangerousStyleValue\n * @typechecks static-only\n */\n\n'use strict';\n\nvar CSSProperty = require('./CSSProperty');\n\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\n\n/**\n * Convert a value into the proper css writable value. The style name `name`\n * should be logical (no hyphens), as specified\n * in `CSSProperty.isUnitlessNumber`.\n *\n * @param {string} name CSS property name such as `topMargin`.\n * @param {*} value CSS property value such as `10px`.\n * @return {string} Normalized style value with dimensions applied.\n */\nfunction dangerousStyleValue(name, value) {\n  // Note that we've removed escapeTextForBrowser() calls here since the\n  // whole string will be escaped when the attribute is injected into\n  // the markup. If you provide unsafe user data here they can inject\n  // arbitrary CSS which may be problematic (I couldn't repro this):\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\n  // This is not an XSS hole but instead a potential CSS injection issue\n  // which has lead to a greater discussion about how we're going to\n  // trust URLs moving forward. See #2115901\n\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\n  if (isEmpty) {\n    return '';\n  }\n\n  var isNonNumeric = isNaN(value);\n  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\n    return '' + value; // cast to string\n  }\n\n  if (typeof value === 'string') {\n    value = value.trim();\n  }\n  return value + 'px';\n}\n\nmodule.exports = dangerousStyleValue;\n},{\"./CSSProperty\":\"react/lib/CSSProperty\"}],\"react/lib/deprecated\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule deprecated\n */\n\n'use strict';\n\nvar assign = require('./Object.assign');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * This will log a single deprecation notice per function and forward the call\n * on to the new API.\n *\n * @param {string} fnName The name of the function\n * @param {string} newModule The module that fn will exist in\n * @param {string} newPackage The module that fn will exist in\n * @param {*} ctx The context this forwarded call should run in\n * @param {function} fn The function to forward on to\n * @return {function} The function that will warn once and then call fn\n */\nfunction deprecated(fnName, newModule, newPackage, ctx, fn) {\n  var warned = false;\n  if (process.env.NODE_ENV !== 'production') {\n    var newFn = function () {\n      process.env.NODE_ENV !== 'production' ? warning(warned,\n      // Require examples in this string must be split to prevent React's\n      // build tools from mistaking them for real requires.\n      // Otherwise the build tools will attempt to build a '%s' module.\n      'React.%s is deprecated. Please use %s.%s from require' + '(\\'%s\\') ' + 'instead.', fnName, newModule, fnName, newPackage) : undefined;\n      warned = true;\n      return fn.apply(ctx, arguments);\n    };\n    // We need to make sure all properties of the original fn are copied over.\n    // In particular, this is needed to support PropTypes\n    return assign(newFn, fn);\n  }\n\n  return fn;\n}\n\nmodule.exports = deprecated;\n}).call(this,require('_process'))\n\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"_process\":1,\"fbjs/lib/warning\":41}],\"react/lib/escapeTextContentForBrowser\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule escapeTextContentForBrowser\n */\n\n'use strict';\n\nvar ESCAPE_LOOKUP = {\n  '&': '&amp;',\n  '>': '&gt;',\n  '<': '&lt;',\n  '\"': '&quot;',\n  '\\'': '&#x27;'\n};\n\nvar ESCAPE_REGEX = /[&><\"']/g;\n\nfunction escaper(match) {\n  return ESCAPE_LOOKUP[match];\n}\n\n/**\n * Escapes text to prevent scripting attacks.\n *\n * @param {*} text Text value to escape.\n * @return {string} An escaped string.\n */\nfunction escapeTextContentForBrowser(text) {\n  return ('' + text).replace(ESCAPE_REGEX, escaper);\n}\n\nmodule.exports = escapeTextContentForBrowser;\n},{}],\"react/lib/findDOMNode\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule findDOMNode\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactMount = require('./ReactMount');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {?DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (process.env.NODE_ENV !== 'production') {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (componentOrElement.nodeType === 1) {\n    return componentOrElement;\n  }\n  if (ReactInstanceMap.has(componentOrElement)) {\n    return ReactMount.getNodeFromInstance(componentOrElement);\n  }\n  !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;\n  !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;\n}\n\nmodule.exports = findDOMNode;\n}).call(this,require('_process'))\n\n},{\"./ReactCurrentOwner\":\"react/lib/ReactCurrentOwner\",\"./ReactInstanceMap\":\"react/lib/ReactInstanceMap\",\"./ReactMount\":\"react/lib/ReactMount\",\"_process\":1,\"fbjs/lib/invariant\":29,\"fbjs/lib/warning\":41}],\"react/lib/flattenChildren\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule flattenChildren\n */\n\n'use strict';\n\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name) {\n  // We found a component instance.\n  var result = traverseContext;\n  var keyUnique = result[name] === undefined;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;\n  }\n  if (keyUnique && child != null) {\n    result[name] = child;\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n  traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  return result;\n}\n\nmodule.exports = flattenChildren;\n}).call(this,require('_process'))\n\n},{\"./traverseAllChildren\":\"react/lib/traverseAllChildren\",\"_process\":1,\"fbjs/lib/warning\":41}],\"react/lib/forEachAccumulated\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule forEachAccumulated\n */\n\n'use strict';\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n */\nvar forEachAccumulated = function (arr, cb, scope) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n};\n\nmodule.exports = forEachAccumulated;\n},{}],\"react/lib/getEventCharCode\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventCharCode\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nmodule.exports = getEventCharCode;\n},{}],\"react/lib/getEventKey\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventKey\n * @typechecks static-only\n */\n\n'use strict';\n\nvar getEventCharCode = require('./getEventCharCode');\n\n/**\n * Normalization of deprecated HTML5 `key` values\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar normalizeKey = {\n  'Esc': 'Escape',\n  'Spacebar': ' ',\n  'Left': 'ArrowLeft',\n  'Up': 'ArrowUp',\n  'Right': 'ArrowRight',\n  'Down': 'ArrowDown',\n  'Del': 'Delete',\n  'Win': 'OS',\n  'Menu': 'ContextMenu',\n  'Apps': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'MozPrintableKey': 'Unidentified'\n};\n\n/**\n * Translation from legacy `keyCode` to HTML5 `key`\n * Only special keys supported, all others depend on keyboard layout or browser\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\n */\nvar translateToKey = {\n  8: 'Backspace',\n  9: 'Tab',\n  12: 'Clear',\n  13: 'Enter',\n  16: 'Shift',\n  17: 'Control',\n  18: 'Alt',\n  19: 'Pause',\n  20: 'CapsLock',\n  27: 'Escape',\n  32: ' ',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\n  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\n  144: 'NumLock',\n  145: 'ScrollLock',\n  224: 'Meta'\n};\n\n/**\n * @param {object} nativeEvent Native browser event.\n * @return {string} Normalized `key` property.\n */\nfunction getEventKey(nativeEvent) {\n  if (nativeEvent.key) {\n    // Normalize inconsistent values reported by browsers due to\n    // implementations of a working draft specification.\n\n    // FireFox implements `key` but returns `MozPrintableKey` for all\n    // printable characters (normalized to `Unidentified`), ignore it.\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\n    if (key !== 'Unidentified') {\n      return key;\n    }\n  }\n\n  // Browser does not implement `key`, polyfill as much of it as we can.\n  if (nativeEvent.type === 'keypress') {\n    var charCode = getEventCharCode(nativeEvent);\n\n    // The enter-key is technically both printable and non-printable and can\n    // thus be captured by `keypress`, no other non-printable key should.\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\n  }\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\n    // While user keyboard layout determines the actual meaning of each\n    // `keyCode` value, almost all function keys have a universal value.\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\n  }\n  return '';\n}\n\nmodule.exports = getEventKey;\n},{\"./getEventCharCode\":\"react/lib/getEventCharCode\"}],\"react/lib/getEventModifierState\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventModifierState\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Translation from modifier key to the associated property in the event.\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\n */\n\nvar modifierKeyToProp = {\n  'Alt': 'altKey',\n  'Control': 'ctrlKey',\n  'Meta': 'metaKey',\n  'Shift': 'shiftKey'\n};\n\n// IE8 does not implement getModifierState so we simply map it to the only\n// modifier keys exposed by the event itself, does not support Lock-keys.\n// Currently, all major browsers except Chrome seems to support Lock-keys.\nfunction modifierStateGetter(keyArg) {\n  var syntheticEvent = this;\n  var nativeEvent = syntheticEvent.nativeEvent;\n  if (nativeEvent.getModifierState) {\n    return nativeEvent.getModifierState(keyArg);\n  }\n  var keyProp = modifierKeyToProp[keyArg];\n  return keyProp ? !!nativeEvent[keyProp] : false;\n}\n\nfunction getEventModifierState(nativeEvent) {\n  return modifierStateGetter;\n}\n\nmodule.exports = getEventModifierState;\n},{}],\"react/lib/getEventTarget\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventTarget\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Gets the target node from a native browser event by accounting for\n * inconsistencies in browser DOM APIs.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {DOMEventTarget} Target node.\n */\nfunction getEventTarget(nativeEvent) {\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\n  // @see http://www.quirksmode.org/js/events_properties.html\n  return target.nodeType === 3 ? target.parentNode : target;\n}\n\nmodule.exports = getEventTarget;\n},{}],\"react/lib/getIteratorFn\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getIteratorFn\n * @typechecks static-only\n */\n\n'use strict';\n\n/* global Symbol */\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n/**\n * Returns the iterator method function contained on the iterable object.\n *\n * Be sure to invoke the function with the iterable as context:\n *\n *     var iteratorFn = getIteratorFn(myIterable);\n *     if (iteratorFn) {\n *       var iterator = iteratorFn.call(myIterable);\n *       ...\n *     }\n *\n * @param {?object} maybeIterable\n * @return {?function}\n */\nfunction getIteratorFn(maybeIterable) {\n  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n  if (typeof iteratorFn === 'function') {\n    return iteratorFn;\n  }\n}\n\nmodule.exports = getIteratorFn;\n},{}],\"react/lib/getNodeForCharacterOffset\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getNodeForCharacterOffset\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;\n},{}],\"react/lib/getTestDocument\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getTestDocument\n */\n\n'use strict';\n\nfunction getTestDocument(markup) {\n  document.open();\n  document.write(markup || '<!doctype html><html><meta charset=utf-8><title>test doc</title>');\n  document.close();\n  return document;\n}\n\nmodule.exports = getTestDocument;\n},{}],\"react/lib/getTextContentAccessor\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getTextContentAccessor\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar contentKey = null;\n\n/**\n * Gets the key used to access text content on a DOM node.\n *\n * @return {?string} Key used to access text content.\n * @internal\n */\nfunction getTextContentAccessor() {\n  if (!contentKey && ExecutionEnvironment.canUseDOM) {\n    // Prefer textContent to innerText because many browsers support both but\n    // SVG <text> elements don't support innerText even when <div> does.\n    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';\n  }\n  return contentKey;\n}\n\nmodule.exports = getTextContentAccessor;\n},{\"fbjs/lib/ExecutionEnvironment\":14}],\"react/lib/instantiateReactComponent\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule instantiateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactCompositeComponent = require('./ReactCompositeComponent');\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\nvar ReactNativeComponent = require('./ReactNativeComponent');\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n// To avoid a cyclic dependency, we create the final class in this module\nvar ReactCompositeComponentWrapper = function () {};\nassign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {\n  _instantiateReactComponent: instantiateReactComponent\n});\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Check if the type reference is a known internal type. I.e. not a user\n * provided composite type.\n *\n * @param {function} type\n * @return {boolean} Returns true if this is a valid internal type.\n */\nfunction isInternalComponentType(type) {\n  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\n}\n\n/**\n * Given a ReactNode, create an instance that will actually be mounted.\n *\n * @param {ReactNode} node\n * @return {object} A new instance of the element's constructor.\n * @protected\n */\nfunction instantiateReactComponent(node) {\n  var instance;\n\n  if (node === null || node === false) {\n    instance = new ReactEmptyComponent(instantiateReactComponent);\n  } else if (typeof node === 'object') {\n    var element = node;\n    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;\n\n    // Special case string values\n    if (typeof element.type === 'string') {\n      instance = ReactNativeComponent.createInternalComponent(element);\n    } else if (isInternalComponentType(element.type)) {\n      // This is temporarily available for custom components that are not string\n      // representations. I.e. ART. Once those are updated to use the string\n      // representation, we can drop this code path.\n      instance = new element.type(element);\n    } else {\n      instance = new ReactCompositeComponentWrapper();\n    }\n  } else if (typeof node === 'string' || typeof node === 'number') {\n    instance = ReactNativeComponent.createInstanceForText(node);\n  } else {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : undefined;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;\n  }\n\n  // Sets up the instance. This can probably just move into the constructor now.\n  instance.construct(node);\n\n  // These two fields are used by the DOM and ART diffing algorithms\n  // respectively. Instead of using expandos on components, we should be\n  // storing the state needed by the diffing algorithms elsewhere.\n  instance._mountIndex = 0;\n  instance._mountImage = null;\n\n  if (process.env.NODE_ENV !== 'production') {\n    instance._isOwnerNecessary = false;\n    instance._warnedAboutRefsInRender = false;\n  }\n\n  // Internal instances should fully constructed at this point, so they should\n  // not get any new fields added to them at this point.\n  if (process.env.NODE_ENV !== 'production') {\n    if (Object.preventExtensions) {\n      Object.preventExtensions(instance);\n    }\n  }\n\n  return instance;\n}\n\nmodule.exports = instantiateReactComponent;\n}).call(this,require('_process'))\n\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactCompositeComponent\":\"react/lib/ReactCompositeComponent\",\"./ReactEmptyComponent\":\"react/lib/ReactEmptyComponent\",\"./ReactNativeComponent\":\"react/lib/ReactNativeComponent\",\"_process\":1,\"fbjs/lib/invariant\":29,\"fbjs/lib/warning\":41}],\"react/lib/isEventSupported\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isEventSupported\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature = document.implementation && document.implementation.hasFeature &&\n  // always returns true in newer browsers as per the standard.\n  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n  document.implementation.hasFeature('', '') !== true;\n}\n\n/**\n * Checks if an event is supported in the current execution environment.\n *\n * NOTE: This will not work correctly for non-generic events such as `change`,\n * `reset`, `load`, `error`, and `select`.\n *\n * Borrows from Modernizr.\n *\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\n * @param {?boolean} capture Check if the capture phase is supported.\n * @return {boolean} True if the event is supported.\n * @internal\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n    return false;\n  }\n\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = (eventName in document);\n\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\n\nmodule.exports = isEventSupported;\n},{\"fbjs/lib/ExecutionEnvironment\":14}],\"react/lib/isTextInputElement\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule isTextInputElement\n */\n\n'use strict';\n\n/**\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n */\nvar supportedInputTypes = {\n  'color': true,\n  'date': true,\n  'datetime': true,\n  'datetime-local': true,\n  'email': true,\n  'month': true,\n  'number': true,\n  'password': true,\n  'range': true,\n  'search': true,\n  'tel': true,\n  'text': true,\n  'time': true,\n  'url': true,\n  'week': true\n};\n\nfunction isTextInputElement(elem) {\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\n  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');\n}\n\nmodule.exports = isTextInputElement;\n},{}],\"react/lib/onlyChild\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule onlyChild\n */\n'use strict';\n\nvar ReactElement = require('./ReactElement');\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection. The current implementation of this\n * function assumes that a single child gets passed without a wrapper, but the\n * purpose of this helper function is to abstract away the particular structure\n * of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactComponent} The first and only `ReactComponent` contained in the\n * structure.\n */\nfunction onlyChild(children) {\n  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;\n  return children;\n}\n\nmodule.exports = onlyChild;\n}).call(this,require('_process'))\n\n},{\"./ReactElement\":\"react/lib/ReactElement\",\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/quoteAttributeValueForBrowser\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule quoteAttributeValueForBrowser\n */\n\n'use strict';\n\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\n\n/**\n * Escapes attribute value to prevent scripting attacks.\n *\n * @param {*} value Value to escape.\n * @return {string} An escaped string.\n */\nfunction quoteAttributeValueForBrowser(value) {\n  return '\"' + escapeTextContentForBrowser(value) + '\"';\n}\n\nmodule.exports = quoteAttributeValueForBrowser;\n},{\"./escapeTextContentForBrowser\":\"react/lib/escapeTextContentForBrowser\"}],\"react/lib/reactComponentExpect\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule reactComponentExpect\n * @nolint\n */\n\n'use strict';\n\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactTestUtils = require('./ReactTestUtils');\n\nvar assign = require('./Object.assign');\nvar invariant = require('fbjs/lib/invariant');\n\nfunction reactComponentExpect(instance) {\n  if (instance instanceof reactComponentExpectInternal) {\n    return instance;\n  }\n\n  if (!(this instanceof reactComponentExpect)) {\n    return new reactComponentExpect(instance);\n  }\n\n  expect(instance).not.toBeNull();\n  expect(instance).not.toBeUndefined();\n\n  !ReactTestUtils.isCompositeComponent(instance) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'reactComponentExpect(...): instance must be a composite component') : invariant(false) : undefined;\n  var internalInstance = ReactInstanceMap.get(instance);\n\n  expect(typeof internalInstance).toBe('object');\n  expect(typeof internalInstance.constructor).toBe('function');\n  expect(ReactTestUtils.isElement(internalInstance)).toBe(false);\n\n  return new reactComponentExpectInternal(internalInstance);\n}\n\nfunction reactComponentExpectInternal(internalInstance) {\n  this._instance = internalInstance;\n}\n\nassign(reactComponentExpectInternal.prototype, {\n  // Getters -------------------------------------------------------------------\n\n  /**\n   * @instance: Retrieves the backing instance.\n   */\n  instance: function () {\n    return this._instance.getPublicInstance();\n  },\n\n  /**\n   * There are two types of components in the world.\n   * - A component created via React.createClass() - Has a single child\n   *   subComponent - the return value from the .render() function. This\n   *   function @subComponent expects that this._instance is component created\n   *   with React.createClass().\n   * - A primitive DOM component - which has many renderedChildren, each of\n   *   which may have a name that is unique with respect to its siblings. This\n   *   method will fail if this._instance is a primitive component.\n   *\n   * TL;DR: An instance may have a subComponent (this._renderedComponent) or\n   * renderedChildren, but never both. Neither will actually show up until you\n   * render the component (simply instantiating is not enough).\n   */\n  expectRenderedChild: function () {\n    this.toBeCompositeComponent();\n    var child = this._instance._renderedComponent;\n    // TODO: Hide ReactEmptyComponent instances here?\n    return new reactComponentExpectInternal(child);\n  },\n\n  /**\n   * The nth child of a DOMish component instance that is not falsy.\n   */\n  expectRenderedChildAt: function (childIndex) {\n    // Currently only dom components have arrays of children, but that will\n    // change soon.\n    this.toBeDOMComponent();\n    var renderedChildren = this._instance._renderedChildren || {};\n    for (var name in renderedChildren) {\n      if (!renderedChildren.hasOwnProperty(name)) {\n        continue;\n      }\n      if (renderedChildren[name]) {\n        if (renderedChildren[name]._mountIndex === childIndex) {\n          return new reactComponentExpectInternal(renderedChildren[name]);\n        }\n      }\n    }\n    throw new Error('Child:' + childIndex + ' is not found');\n  },\n\n  toBeDOMComponentWithChildCount: function (count) {\n    this.toBeDOMComponent();\n    var renderedChildren = this._instance._renderedChildren;\n    expect(renderedChildren).toBeTruthy();\n    expect(Object.keys(renderedChildren).length).toBe(count);\n    return this;\n  },\n\n  toBeDOMComponentWithNoChildren: function () {\n    this.toBeDOMComponent();\n    expect(this._instance._renderedChildren).toBeFalsy();\n    return this;\n  },\n\n  // Matchers ------------------------------------------------------------------\n\n  toBeComponentOfType: function (constructor) {\n    expect(this._instance._currentElement.type === constructor).toBe(true);\n    return this;\n  },\n\n  /**\n   * A component that is created with React.createClass. Just duck typing\n   * here.\n   */\n  toBeCompositeComponent: function () {\n    expect(typeof this.instance() === 'object' && typeof this.instance().render === 'function').toBe(true);\n    return this;\n  },\n\n  toBeCompositeComponentWithType: function (constructor) {\n    this.toBeCompositeComponent();\n    expect(this._instance._currentElement.type === constructor).toBe(true);\n    return this;\n  },\n\n  toBeTextComponentWithValue: function (val) {\n    var elementType = typeof this._instance._currentElement;\n    expect(elementType === 'string' || elementType === 'number').toBe(true);\n    expect(this._instance._stringText).toBe(val);\n    return this;\n  },\n\n  toBeEmptyComponent: function () {\n    var element = this._instance._currentElement;\n    return element === null || element === false;\n  },\n\n  toBePresent: function () {\n    expect(this.instance()).toBeTruthy();\n    return this;\n  },\n\n  /**\n   * A terminal type of component representing some virtual dom node. Just duck\n   * typing here.\n   */\n  toBeDOMComponent: function () {\n    expect(ReactTestUtils.isDOMComponent(this.instance())).toBe(true);\n    return this;\n  },\n\n  /**\n   * @deprecated\n   * @see toBeComponentOfType\n   */\n  toBeDOMComponentWithTag: function (tag) {\n    this.toBeDOMComponent();\n    expect(this.instance().tagName).toBe(tag.toUpperCase());\n    return this;\n  },\n\n  /**\n   * Check that internal state values are equal to a state of expected values.\n   */\n  scalarStateEqual: function (stateNameToExpectedValue) {\n    expect(this.instance()).toBeTruthy();\n    for (var stateName in stateNameToExpectedValue) {\n      if (!stateNameToExpectedValue.hasOwnProperty(stateName)) {\n        continue;\n      }\n      expect(this.instance().state[stateName]).toEqual(stateNameToExpectedValue[stateName]);\n    }\n    return this;\n  },\n\n  /**\n   * Check a set of props are equal to a set of expected values - only works\n   * with scalars.\n   */\n  scalarPropsEqual: function (propNameToExpectedValue) {\n    expect(this.instance()).toBeTruthy();\n    for (var propName in propNameToExpectedValue) {\n      if (!propNameToExpectedValue.hasOwnProperty(propName)) {\n        continue;\n      }\n      expect(this.instance().props[propName]).toEqual(propNameToExpectedValue[propName]);\n    }\n    return this;\n  },\n\n  /**\n   * Check a set of props are equal to a set of expected values - only works\n   * with scalars.\n   */\n  scalarContextEqual: function (contextNameToExpectedValue) {\n    expect(this.instance()).toBeTruthy();\n    for (var contextName in contextNameToExpectedValue) {\n      if (!contextNameToExpectedValue.hasOwnProperty(contextName)) {\n        continue;\n      }\n      expect(this.instance().context[contextName]).toEqual(contextNameToExpectedValue[contextName]);\n    }\n    return this;\n  }\n});\n\nmodule.exports = reactComponentExpect;\n}).call(this,require('_process'))\n\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"./ReactInstanceMap\":\"react/lib/ReactInstanceMap\",\"./ReactTestUtils\":\"react/lib/ReactTestUtils\",\"_process\":1,\"fbjs/lib/invariant\":29}],\"react/lib/renderSubtreeIntoContainer\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n* @providesModule renderSubtreeIntoContainer\n*/\n\n'use strict';\n\nvar ReactMount = require('./ReactMount');\n\nmodule.exports = ReactMount.renderSubtreeIntoContainer;\n},{\"./ReactMount\":\"react/lib/ReactMount\"}],\"react/lib/setInnerHTML\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setInnerHTML\n */\n\n/* globals MSApp */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar WHITESPACE_TEST = /^[ \\r\\n\\t\\f]/;\nvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\r\\n\\t\\f\\/>]/;\n\n/**\n * Set the innerHTML property of a node, ensuring that whitespace is preserved\n * even in IE8.\n *\n * @param {DOMElement} node\n * @param {string} html\n * @internal\n */\nvar setInnerHTML = function (node, html) {\n  node.innerHTML = html;\n};\n\n// Win8 apps: Allow all html to be inserted\nif (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\n  setInnerHTML = function (node, html) {\n    MSApp.execUnsafeLocalFunction(function () {\n      node.innerHTML = html;\n    });\n  };\n}\n\nif (ExecutionEnvironment.canUseDOM) {\n  // IE8: When updating a just created node with innerHTML only leading\n  // whitespace is removed. When updating an existing node with innerHTML\n  // whitespace in root TextNodes is also collapsed.\n  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\n\n  // Feature detection; only IE8 is known to behave improperly like this.\n  var testElement = document.createElement('div');\n  testElement.innerHTML = ' ';\n  if (testElement.innerHTML === '') {\n    setInnerHTML = function (node, html) {\n      // Magic theory: IE8 supposedly differentiates between added and updated\n      // nodes when processing innerHTML, innerHTML on updated nodes suffers\n      // from worse whitespace behavior. Re-adding a node like this triggers\n      // the initial and more favorable whitespace behavior.\n      // TODO: What to do on a detached node?\n      if (node.parentNode) {\n        node.parentNode.replaceChild(node, node);\n      }\n\n      // We also implement a workaround for non-visible tags disappearing into\n      // thin air on IE8, this only happens if there is no visible text\n      // in-front of the non-visible tags. Piggyback on the whitespace fix\n      // and simply check if any non-visible tags appear in the source.\n      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {\n        // Recover leading whitespace by temporarily prepending any character.\n        // \\uFEFF has the potential advantage of being zero-width/invisible.\n        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode\n        // in hopes that this is preserved even if \"\\uFEFF\" is transformed to\n        // the actual Unicode character (by Babel, for example).\n        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216\n        node.innerHTML = String.fromCharCode(0xFEFF) + html;\n\n        // deleteData leaves an empty `TextNode` which offsets the index of all\n        // children. Definitely want to avoid this.\n        var textNode = node.firstChild;\n        if (textNode.data.length === 1) {\n          node.removeChild(textNode);\n        } else {\n          textNode.deleteData(0, 1);\n        }\n      } else {\n        node.innerHTML = html;\n      }\n    };\n  }\n}\n\nmodule.exports = setInnerHTML;\n},{\"fbjs/lib/ExecutionEnvironment\":14}],\"react/lib/setTextContent\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setTextContent\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\nvar setInnerHTML = require('./setInnerHTML');\n\n/**\n * Set the textContent property of a node, ensuring that whitespace is preserved\n * even in IE8. innerText is a poor substitute for textContent and, among many\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\n * as it should.\n *\n * @param {DOMElement} node\n * @param {string} text\n * @internal\n */\nvar setTextContent = function (node, text) {\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function (node, text) {\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;\n},{\"./escapeTextContentForBrowser\":\"react/lib/escapeTextContentForBrowser\",\"./setInnerHTML\":\"react/lib/setInnerHTML\",\"fbjs/lib/ExecutionEnvironment\":14}],\"react/lib/shallowCompare\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n* @providesModule shallowCompare\n*/\n\n'use strict';\n\nvar shallowEqual = require('fbjs/lib/shallowEqual');\n\n/**\n * Does a shallow comparison for props and state.\n * See ReactComponentWithPureRenderMixin\n */\nfunction shallowCompare(instance, nextProps, nextState) {\n  return !shallowEqual(instance.props, nextProps) || !shallowEqual(instance.state, nextState);\n}\n\nmodule.exports = shallowCompare;\n},{\"fbjs/lib/shallowEqual\":39}],\"react/lib/shouldUpdateReactComponent\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n  if (prevEmpty || nextEmpty) {\n    return prevEmpty === nextEmpty;\n  }\n\n  var prevType = typeof prevElement;\n  var nextType = typeof nextElement;\n  if (prevType === 'string' || prevType === 'number') {\n    return nextType === 'string' || nextType === 'number';\n  } else {\n    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n  }\n  return false;\n}\n\nmodule.exports = shouldUpdateReactComponent;\n},{}],\"react/lib/sliceChildren\":[function(require,module,exports){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule sliceChildren\n */\n\n'use strict';\n\nvar ReactChildren = require('./ReactChildren');\n\n/**\n * Slice children that are typically specified as `props.children`. This version\n * of slice children ignores empty child components.\n *\n * @param {*} children The children set to filter.\n * @param {number} start The first zero-based index to include in the subset.\n * @param {?number} end The non-inclusive last index of the subset.\n * @return {object} mirrored array with mapped children\n */\nfunction sliceChildren(children, start, end) {\n  if (children == null) {\n    return children;\n  }\n\n  var array = ReactChildren.toArray(children);\n  return array.slice(start, end);\n}\n\nmodule.exports = sliceChildren;\n},{\"./ReactChildren\":\"react/lib/ReactChildren\"}],\"react/lib/traverseAllChildren\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\nvar SUBSEPARATOR = ':';\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar userProvidedKeyEscaperLookup = {\n  '=': '=0',\n  '.': '=1',\n  ':': '=2'\n};\n\nvar userProvidedKeyEscapeRegex = /[=.:]/g;\n\nvar didWarnAboutMaps = false;\n\nfunction userProvidedKeyEscaper(match) {\n  return userProvidedKeyEscaperLookup[match];\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  if (component && component.key != null) {\n    // Explicit key\n    return wrapUserProvidedKey(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * Escape a component key so that it is safe to use in a reactid.\n *\n * @param {*} text Component key to be escaped.\n * @return {string} An escaped string.\n */\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);\n}\n\n/**\n * Wrap a `key` value explicitly provided by the user to distinguish it from\n * implicitly-generated keys generated by a component's index in its parent.\n *\n * @param {string} key Value of a user-provided `key` attribute\n * @return {string}\n */\nfunction wrapUserProvidedKey(key) {\n  return '$' + escapeUserProvidedKey(key);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;\n}).call(this,require('_process'))\n\n},{\"./ReactCurrentOwner\":\"react/lib/ReactCurrentOwner\",\"./ReactElement\":\"react/lib/ReactElement\",\"./ReactInstanceHandles\":\"react/lib/ReactInstanceHandles\",\"./getIteratorFn\":\"react/lib/getIteratorFn\",\"_process\":1,\"fbjs/lib/invariant\":29,\"fbjs/lib/warning\":41}],\"react/lib/update\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule update\n */\n\n/* global hasOwnProperty:true */\n\n'use strict';\n\nvar assign = require('./Object.assign');\nvar keyOf = require('fbjs/lib/keyOf');\nvar invariant = require('fbjs/lib/invariant');\nvar hasOwnProperty = ({}).hasOwnProperty;\n\nfunction shallowCopy(x) {\n  if (Array.isArray(x)) {\n    return x.concat();\n  } else if (x && typeof x === 'object') {\n    return assign(new x.constructor(), x);\n  } else {\n    return x;\n  }\n}\n\nvar COMMAND_PUSH = keyOf({ $push: null });\nvar COMMAND_UNSHIFT = keyOf({ $unshift: null });\nvar COMMAND_SPLICE = keyOf({ $splice: null });\nvar COMMAND_SET = keyOf({ $set: null });\nvar COMMAND_MERGE = keyOf({ $merge: null });\nvar COMMAND_APPLY = keyOf({ $apply: null });\n\nvar ALL_COMMANDS_LIST = [COMMAND_PUSH, COMMAND_UNSHIFT, COMMAND_SPLICE, COMMAND_SET, COMMAND_MERGE, COMMAND_APPLY];\n\nvar ALL_COMMANDS_SET = {};\n\nALL_COMMANDS_LIST.forEach(function (command) {\n  ALL_COMMANDS_SET[command] = true;\n});\n\nfunction invariantArrayCase(value, spec, command) {\n  !Array.isArray(value) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): expected target of %s to be an array; got %s.', command, value) : invariant(false) : undefined;\n  var specValue = spec[command];\n  !Array.isArray(specValue) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): expected spec of %s to be an array; got %s. ' + 'Did you forget to wrap your parameter in an array?', command, specValue) : invariant(false) : undefined;\n}\n\nfunction update(value, spec) {\n  !(typeof spec === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): You provided a key path to update() that did not contain one ' + 'of %s. Did you forget to include {%s: ...}?', ALL_COMMANDS_LIST.join(', '), COMMAND_SET) : invariant(false) : undefined;\n\n  if (hasOwnProperty.call(spec, COMMAND_SET)) {\n    !(Object.keys(spec).length === 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot have more than one key in an object with %s', COMMAND_SET) : invariant(false) : undefined;\n\n    return spec[COMMAND_SET];\n  }\n\n  var nextValue = shallowCopy(value);\n\n  if (hasOwnProperty.call(spec, COMMAND_MERGE)) {\n    var mergeObj = spec[COMMAND_MERGE];\n    !(mergeObj && typeof mergeObj === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): %s expects a spec of type \\'object\\'; got %s', COMMAND_MERGE, mergeObj) : invariant(false) : undefined;\n    !(nextValue && typeof nextValue === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): %s expects a target of type \\'object\\'; got %s', COMMAND_MERGE, nextValue) : invariant(false) : undefined;\n    assign(nextValue, spec[COMMAND_MERGE]);\n  }\n\n  if (hasOwnProperty.call(spec, COMMAND_PUSH)) {\n    invariantArrayCase(value, spec, COMMAND_PUSH);\n    spec[COMMAND_PUSH].forEach(function (item) {\n      nextValue.push(item);\n    });\n  }\n\n  if (hasOwnProperty.call(spec, COMMAND_UNSHIFT)) {\n    invariantArrayCase(value, spec, COMMAND_UNSHIFT);\n    spec[COMMAND_UNSHIFT].forEach(function (item) {\n      nextValue.unshift(item);\n    });\n  }\n\n  if (hasOwnProperty.call(spec, COMMAND_SPLICE)) {\n    !Array.isArray(value) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s target to be an array; got %s', COMMAND_SPLICE, value) : invariant(false) : undefined;\n    !Array.isArray(spec[COMMAND_SPLICE]) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): expected spec of %s to be an array of arrays; got %s. ' + 'Did you forget to wrap your parameters in an array?', COMMAND_SPLICE, spec[COMMAND_SPLICE]) : invariant(false) : undefined;\n    spec[COMMAND_SPLICE].forEach(function (args) {\n      !Array.isArray(args) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): expected spec of %s to be an array of arrays; got %s. ' + 'Did you forget to wrap your parameters in an array?', COMMAND_SPLICE, spec[COMMAND_SPLICE]) : invariant(false) : undefined;\n      nextValue.splice.apply(nextValue, args);\n    });\n  }\n\n  if (hasOwnProperty.call(spec, COMMAND_APPLY)) {\n    !(typeof spec[COMMAND_APPLY] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): expected spec of %s to be a function; got %s.', COMMAND_APPLY, spec[COMMAND_APPLY]) : invariant(false) : undefined;\n    nextValue = spec[COMMAND_APPLY](nextValue);\n  }\n\n  for (var k in spec) {\n    if (!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])) {\n      nextValue[k] = update(value[k], spec[k]);\n    }\n  }\n\n  return nextValue;\n}\n\nmodule.exports = update;\n}).call(this,require('_process'))\n\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"_process\":1,\"fbjs/lib/invariant\":29,\"fbjs/lib/keyOf\":34}],\"react/lib/validateDOMNesting\":[function(require,module,exports){\n(function (process){\n/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule validateDOMNesting\n */\n\n'use strict';\n\nvar assign = require('./Object.assign');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar warning = require('fbjs/lib/warning');\n\nvar validateDOMNesting = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  // This validation code was written based on the HTML5 parsing spec:\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  //\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\n  // not clear what practical benefit doing so provides); instead, we warn only\n  // for cases where the parser will give a parse tree differing from what React\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\n  // because it still parses correctly; we do warn for other cases like nested\n  // <p> tags where the beginning of the second element implicitly closes the\n  // first, causing a confusing mess.\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\n  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\n  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\n  // TODO: Distinguish by namespace here -- for <title>, including it here\n  // errs on the side of fewer warnings\n  'foreignObject', 'desc', 'title'];\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\n  var buttonScopeTags = inScopeTags.concat(['button']);\n\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\n  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\n\n  var emptyAncestorInfo = {\n    parentTag: null,\n\n    formTag: null,\n    aTagInScope: null,\n    buttonTagInScope: null,\n    nobrTagInScope: null,\n    pTagInButtonScope: null,\n\n    listItemTagAutoclosing: null,\n    dlItemTagAutoclosing: null\n  };\n\n  var updatedAncestorInfo = function (oldInfo, tag, instance) {\n    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);\n    var info = { tag: tag, instance: instance };\n\n    if (inScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.aTagInScope = null;\n      ancestorInfo.buttonTagInScope = null;\n      ancestorInfo.nobrTagInScope = null;\n    }\n    if (buttonScopeTags.indexOf(tag) !== -1) {\n      ancestorInfo.pTagInButtonScope = null;\n    }\n\n    // See rules for 'li', 'dd', 'dt' start tags in\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\n      ancestorInfo.listItemTagAutoclosing = null;\n      ancestorInfo.dlItemTagAutoclosing = null;\n    }\n\n    ancestorInfo.parentTag = info;\n\n    if (tag === 'form') {\n      ancestorInfo.formTag = info;\n    }\n    if (tag === 'a') {\n      ancestorInfo.aTagInScope = info;\n    }\n    if (tag === 'button') {\n      ancestorInfo.buttonTagInScope = info;\n    }\n    if (tag === 'nobr') {\n      ancestorInfo.nobrTagInScope = info;\n    }\n    if (tag === 'p') {\n      ancestorInfo.pTagInButtonScope = info;\n    }\n    if (tag === 'li') {\n      ancestorInfo.listItemTagAutoclosing = info;\n    }\n    if (tag === 'dd' || tag === 'dt') {\n      ancestorInfo.dlItemTagAutoclosing = info;\n    }\n\n    return ancestorInfo;\n  };\n\n  /**\n   * Returns whether\n   */\n  var isTagValidWithParent = function (tag, parentTag) {\n    // First, let's check if we're in an unusual parsing mode...\n    switch (parentTag) {\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\n      case 'select':\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\n      case 'optgroup':\n        return tag === 'option' || tag === '#text';\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\n      // but\n      case 'option':\n        return tag === '#text';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\n      // No special behavior since these rules fall back to \"in body\" mode for\n      // all except special table nodes which cause bad parsing behavior anyway.\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\n      case 'tr':\n        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\n      case 'tbody':\n      case 'thead':\n      case 'tfoot':\n        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\n      case 'colgroup':\n        return tag === 'col' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\n      case 'table':\n        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\n      case 'head':\n        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\n\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\n      case 'html':\n        return tag === 'head' || tag === 'body';\n    }\n\n    // Probably in the \"in body\" parsing mode, so we outlaw only tag combos\n    // where the parsing rules cause implicit opens or closes to be added.\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n    switch (tag) {\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\n\n      case 'rp':\n      case 'rt':\n        return impliedEndTags.indexOf(parentTag) === -1;\n\n      case 'caption':\n      case 'col':\n      case 'colgroup':\n      case 'frame':\n      case 'head':\n      case 'tbody':\n      case 'td':\n      case 'tfoot':\n      case 'th':\n      case 'thead':\n      case 'tr':\n        // These tags are only valid with a few parents that have special child\n        // parsing rules -- if we're down here, then none of those matched and\n        // so we allow it only if we don't know what the parent is, as all other\n        // cases are invalid.\n        return parentTag == null;\n    }\n\n    return true;\n  };\n\n  /**\n   * Returns whether\n   */\n  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\n    switch (tag) {\n      case 'address':\n      case 'article':\n      case 'aside':\n      case 'blockquote':\n      case 'center':\n      case 'details':\n      case 'dialog':\n      case 'dir':\n      case 'div':\n      case 'dl':\n      case 'fieldset':\n      case 'figcaption':\n      case 'figure':\n      case 'footer':\n      case 'header':\n      case 'hgroup':\n      case 'main':\n      case 'menu':\n      case 'nav':\n      case 'ol':\n      case 'p':\n      case 'section':\n      case 'summary':\n      case 'ul':\n\n      case 'pre':\n      case 'listing':\n\n      case 'table':\n\n      case 'hr':\n\n      case 'xmp':\n\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'h5':\n      case 'h6':\n        return ancestorInfo.pTagInButtonScope;\n\n      case 'form':\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\n\n      case 'li':\n        return ancestorInfo.listItemTagAutoclosing;\n\n      case 'dd':\n      case 'dt':\n        return ancestorInfo.dlItemTagAutoclosing;\n\n      case 'button':\n        return ancestorInfo.buttonTagInScope;\n\n      case 'a':\n        // Spec says something about storing a list of markers, but it sounds\n        // equivalent to this check.\n        return ancestorInfo.aTagInScope;\n\n      case 'nobr':\n        return ancestorInfo.nobrTagInScope;\n    }\n\n    return null;\n  };\n\n  /**\n   * Given a ReactCompositeComponent instance, return a list of its recursive\n   * owners, starting at the root and ending with the instance itself.\n   */\n  var findOwnerStack = function (instance) {\n    if (!instance) {\n      return [];\n    }\n\n    var stack = [];\n    /*eslint-disable space-after-keywords */\n    do {\n      /*eslint-enable space-after-keywords */\n      stack.push(instance);\n    } while (instance = instance._currentElement._owner);\n    stack.reverse();\n    return stack;\n  };\n\n  var didWarn = {};\n\n  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.parentTag;\n    var parentTag = parentInfo && parentInfo.tag;\n\n    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\n    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\n    var problematic = invalidParent || invalidAncestor;\n\n    if (problematic) {\n      var ancestorTag = problematic.tag;\n      var ancestorInstance = problematic.instance;\n\n      var childOwner = childInstance && childInstance._currentElement._owner;\n      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;\n\n      var childOwners = findOwnerStack(childOwner);\n      var ancestorOwners = findOwnerStack(ancestorOwner);\n\n      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);\n      var i;\n\n      var deepestCommon = -1;\n      for (i = 0; i < minStackLen; i++) {\n        if (childOwners[i] === ancestorOwners[i]) {\n          deepestCommon = i;\n        } else {\n          break;\n        }\n      }\n\n      var UNKNOWN = '(unknown)';\n      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {\n        return inst.getName() || UNKNOWN;\n      });\n      var ownerInfo = [].concat(\n      // If the parent and child instances have a common owner ancestor, start\n      // with that -- otherwise we just start with the parent's owners.\n      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,\n      // If we're warning about an invalid (non-parent) ancestry, add '...'\n      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');\n\n      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;\n      if (didWarn[warnKey]) {\n        return;\n      }\n      didWarn[warnKey] = true;\n\n      if (invalidParent) {\n        var info = '';\n        if (ancestorTag === 'table' && childTag === 'tr') {\n          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\n        }\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;\n      } else {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;\n      }\n    }\n  };\n\n  validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);\n\n  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;\n\n  // For testing\n  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\n    var parentInfo = ancestorInfo.parentTag;\n    var parentTag = parentInfo && parentInfo.tag;\n    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);\n  };\n}\n\nmodule.exports = validateDOMNesting;\n}).call(this,require('_process'))\n\n},{\"./Object.assign\":\"react/lib/Object.assign\",\"_process\":1,\"fbjs/lib/emptyFunction\":21,\"fbjs/lib/warning\":41}],\"react/lib/webcomponents\":[function(require,module,exports){\n/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n * @providesModule WebComponents\n */\n// @version 0.5.1\nwindow.WebComponents = window.WebComponents || {};\n\n(function(scope) {\n  var flags = scope.flags || {};\n  var file = \"webcomponents.js\";\n  var script = document.querySelector('script[src*=\"' + file + '\"]');\n  var flags = {};\n  if (!flags.noOpts) {\n    location.search.slice(1).split(\"&\").forEach(function(o) {\n      o = o.split(\"=\");\n      o[0] && (flags[o[0]] = o[1] || true);\n    });\n    if (script) {\n      for (var i = 0, a; a = script.attributes[i]; i++) {\n        if (a.name !== \"src\") {\n          flags[a.name] = a.value || true;\n        }\n      }\n    }\n    if (flags.log) {\n      var parts = flags.log.split(\",\");\n      flags.log = {};\n      parts.forEach(function(f) {\n        flags.log[f] = true;\n      });\n    } else {\n      flags.log = {};\n    }\n  }\n  flags.shadow = flags.shadow || flags.shadowdom || flags.polyfill;\n  if (flags.shadow === \"native\") {\n    flags.shadow = false;\n  } else {\n    flags.shadow = flags.shadow || !HTMLElement.prototype.createShadowRoot;\n  }\n  if (flags.register) {\n    window.CustomElements = window.CustomElements || {\n      flags: {}\n    };\n    window.CustomElements.flags.register = flags.register;\n  }\n  scope.flags = flags;\n})(WebComponents);\n\nif (WebComponents.flags.shadow) {\n  if (typeof WeakMap === \"undefined\") {\n    (function() {\n      var defineProperty = Object.defineProperty;\n      var counter = Date.now() % 1e9;\n      var WeakMap = function() {\n        this.name = \"__st\" + (Math.random() * 1e9 >>> 0) + (counter++ + \"__\");\n      };\n      WeakMap.prototype = {\n        set: function(key, value) {\n          var entry = key[this.name];\n          if (entry && entry[0] === key) entry[1] = value; else defineProperty(key, this.name, {\n            value: [ key, value ],\n            writable: true\n          });\n          return this;\n        },\n        get: function(key) {\n          var entry;\n          return (entry = key[this.name]) && entry[0] === key ? entry[1] : undefined;\n        },\n        \"delete\": function(key) {\n          var entry = key[this.name];\n          if (!entry || entry[0] !== key) return false;\n          entry[0] = entry[1] = undefined;\n          return true;\n        },\n        has: function(key) {\n          var entry = key[this.name];\n          if (!entry) return false;\n          return entry[0] === key;\n        }\n      };\n      window.WeakMap = WeakMap;\n    })();\n  }\n  window.ShadowDOMPolyfill = {};\n  (function(scope) {\n    \"use strict\";\n    var constructorTable = new WeakMap();\n    var nativePrototypeTable = new WeakMap();\n    var wrappers = Object_create(null);\n    function detectEval() {\n      if (typeof chrome !== \"undefined\" && chrome.app && chrome.app.runtime) {\n        return false;\n      }\n      if (navigator.getDeviceStorage) {\n        return false;\n      }\n      try {\n        var f = new Function(\"return true;\");\n        return f();\n      } catch (ex) {\n        return false;\n      }\n    }\n    var hasEval = detectEval();\n    function assert(b) {\n      if (!b) throw new Error(\"Assertion failed\");\n    }\n    var defineProperty = Object.defineProperty;\n    var getOwnPropertyNames = Object.getOwnPropertyNames;\n    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n    function mixin(to, from) {\n      var names = getOwnPropertyNames(from);\n      for (var i = 0; i < names.length; i++) {\n        var name = names[i];\n        defineProperty(to, name, getOwnPropertyDescriptor(from, name));\n      }\n      return to;\n    }\n    function mixinStatics(to, from) {\n      var names = getOwnPropertyNames(from);\n      for (var i = 0; i < names.length; i++) {\n        var name = names[i];\n        switch (name) {\n         case \"arguments\":\n         case \"caller\":\n         case \"length\":\n         case \"name\":\n         case \"prototype\":\n         case \"toString\":\n          continue;\n        }\n        defineProperty(to, name, getOwnPropertyDescriptor(from, name));\n      }\n      return to;\n    }\n    function oneOf(object, propertyNames) {\n      for (var i = 0; i < propertyNames.length; i++) {\n        if (propertyNames[i] in object) return propertyNames[i];\n      }\n    }\n    var nonEnumerableDataDescriptor = {\n      value: undefined,\n      configurable: true,\n      enumerable: false,\n      writable: true\n    };\n    function defineNonEnumerableDataProperty(object, name, value) {\n      nonEnumerableDataDescriptor.value = value;\n      defineProperty(object, name, nonEnumerableDataDescriptor);\n    }\n    getOwnPropertyNames(window);\n    function getWrapperConstructor(node) {\n      var nativePrototype = node.__proto__ || Object.getPrototypeOf(node);\n      var wrapperConstructor = constructorTable.get(nativePrototype);\n      if (wrapperConstructor) return wrapperConstructor;\n      var parentWrapperConstructor = getWrapperConstructor(nativePrototype);\n      var GeneratedWrapper = createWrapperConstructor(parentWrapperConstructor);\n      registerInternal(nativePrototype, GeneratedWrapper, node);\n      return GeneratedWrapper;\n    }\n    function addForwardingProperties(nativePrototype, wrapperPrototype) {\n      installProperty(nativePrototype, wrapperPrototype, true);\n    }\n    function registerInstanceProperties(wrapperPrototype, instanceObject) {\n      installProperty(instanceObject, wrapperPrototype, false);\n    }\n    var isFirefox = /Firefox/.test(navigator.userAgent);\n    var dummyDescriptor = {\n      get: function() {},\n      set: function(v) {},\n      configurable: true,\n      enumerable: true\n    };\n    function isEventHandlerName(name) {\n      return /^on[a-z]+$/.test(name);\n    }\n    function isIdentifierName(name) {\n      return /^\\w[a-zA-Z_0-9]*$/.test(name);\n    }\n    function getGetter(name) {\n      return hasEval && isIdentifierName(name) ? new Function(\"return this.__impl4cf1e782hg__.\" + name) : function() {\n        return this.__impl4cf1e782hg__[name];\n      };\n    }\n    function getSetter(name) {\n      return hasEval && isIdentifierName(name) ? new Function(\"v\", \"this.__impl4cf1e782hg__.\" + name + \" = v\") : function(v) {\n        this.__impl4cf1e782hg__[name] = v;\n      };\n    }\n    function getMethod(name) {\n      return hasEval && isIdentifierName(name) ? new Function(\"return this.__impl4cf1e782hg__.\" + name + \".apply(this.__impl4cf1e782hg__, arguments)\") : function() {\n        return this.__impl4cf1e782hg__[name].apply(this.__impl4cf1e782hg__, arguments);\n      };\n    }\n    function getDescriptor(source, name) {\n      try {\n        return Object.getOwnPropertyDescriptor(source, name);\n      } catch (ex) {\n        return dummyDescriptor;\n      }\n    }\n    var isBrokenSafari = function() {\n      var descr = Object.getOwnPropertyDescriptor(Node.prototype, \"nodeType\");\n      return descr && !descr.get && !descr.set;\n    }();\n    function installProperty(source, target, allowMethod, opt_blacklist) {\n      var names = getOwnPropertyNames(source);\n      for (var i = 0; i < names.length; i++) {\n        var name = names[i];\n        if (name === \"polymerBlackList_\") continue;\n        if (name in target) continue;\n        if (source.polymerBlackList_ && source.polymerBlackList_[name]) continue;\n        if (isFirefox) {\n          source.__lookupGetter__(name);\n        }\n        var descriptor = getDescriptor(source, name);\n        var getter, setter;\n        if (allowMethod && typeof descriptor.value === \"function\") {\n          target[name] = getMethod(name);\n          continue;\n        }\n        var isEvent = isEventHandlerName(name);\n        if (isEvent) getter = scope.getEventHandlerGetter(name); else getter = getGetter(name);\n        if (descriptor.writable || descriptor.set || isBrokenSafari) {\n          if (isEvent) setter = scope.getEventHandlerSetter(name); else setter = getSetter(name);\n        }\n        defineProperty(target, name, {\n          get: getter,\n          set: setter,\n          configurable: descriptor.configurable,\n          enumerable: descriptor.enumerable\n        });\n      }\n    }\n    function register(nativeConstructor, wrapperConstructor, opt_instance) {\n      var nativePrototype = nativeConstructor.prototype;\n      registerInternal(nativePrototype, wrapperConstructor, opt_instance);\n      mixinStatics(wrapperConstructor, nativeConstructor);\n    }\n    function registerInternal(nativePrototype, wrapperConstructor, opt_instance) {\n      var wrapperPrototype = wrapperConstructor.prototype;\n      assert(constructorTable.get(nativePrototype) === undefined);\n      constructorTable.set(nativePrototype, wrapperConstructor);\n      nativePrototypeTable.set(wrapperPrototype, nativePrototype);\n      addForwardingProperties(nativePrototype, wrapperPrototype);\n      if (opt_instance) registerInstanceProperties(wrapperPrototype, opt_instance);\n      defineNonEnumerableDataProperty(wrapperPrototype, \"constructor\", wrapperConstructor);\n      wrapperConstructor.prototype = wrapperPrototype;\n    }\n    function isWrapperFor(wrapperConstructor, nativeConstructor) {\n      return constructorTable.get(nativeConstructor.prototype) === wrapperConstructor;\n    }\n    function registerObject(object) {\n      var nativePrototype = Object.getPrototypeOf(object);\n      var superWrapperConstructor = getWrapperConstructor(nativePrototype);\n      var GeneratedWrapper = createWrapperConstructor(superWrapperConstructor);\n      registerInternal(nativePrototype, GeneratedWrapper, object);\n      return GeneratedWrapper;\n    }\n    function createWrapperConstructor(superWrapperConstructor) {\n      function GeneratedWrapper(node) {\n        superWrapperConstructor.call(this, node);\n      }\n      var p = Object_create(superWrapperConstructor.prototype);\n      p.constructor = GeneratedWrapper;\n      GeneratedWrapper.prototype = p;\n      return GeneratedWrapper;\n    }\n    function isWrapper(object) {\n      return object && object.__impl4cf1e782hg__;\n    }\n    function isNative(object) {\n      return !isWrapper(object);\n    }\n    function wrap(impl) {\n      if (impl === null) return null;\n      assert(isNative(impl));\n      return impl.__wrapper8e3dd93a60__ || (impl.__wrapper8e3dd93a60__ = new (getWrapperConstructor(impl))(impl));\n    }\n    function unwrap(wrapper) {\n      if (wrapper === null) return null;\n      assert(isWrapper(wrapper));\n      return wrapper.__impl4cf1e782hg__;\n    }\n    function unsafeUnwrap(wrapper) {\n      return wrapper.__impl4cf1e782hg__;\n    }\n    function setWrapper(impl, wrapper) {\n      wrapper.__impl4cf1e782hg__ = impl;\n      impl.__wrapper8e3dd93a60__ = wrapper;\n    }\n    function unwrapIfNeeded(object) {\n      return object && isWrapper(object) ? unwrap(object) : object;\n    }\n    function wrapIfNeeded(object) {\n      return object && !isWrapper(object) ? wrap(object) : object;\n    }\n    function rewrap(node, wrapper) {\n      if (wrapper === null) return;\n      assert(isNative(node));\n      assert(wrapper === undefined || isWrapper(wrapper));\n      node.__wrapper8e3dd93a60__ = wrapper;\n    }\n    var getterDescriptor = {\n      get: undefined,\n      configurable: true,\n      enumerable: true\n    };\n    function defineGetter(constructor, name, getter) {\n      getterDescriptor.get = getter;\n      defineProperty(constructor.prototype, name, getterDescriptor);\n    }\n    function defineWrapGetter(constructor, name) {\n      defineGetter(constructor, name, function() {\n        return wrap(this.__impl4cf1e782hg__[name]);\n      });\n    }\n    function forwardMethodsToWrapper(constructors, names) {\n      constructors.forEach(function(constructor) {\n        names.forEach(function(name) {\n          constructor.prototype[name] = function() {\n            var w = wrapIfNeeded(this);\n            return w[name].apply(w, arguments);\n          };\n        });\n      });\n    }\n    scope.assert = assert;\n    scope.constructorTable = constructorTable;\n    scope.defineGetter = defineGetter;\n    scope.defineWrapGetter = defineWrapGetter;\n    scope.forwardMethodsToWrapper = forwardMethodsToWrapper;\n    scope.isWrapper = isWrapper;\n    scope.isWrapperFor = isWrapperFor;\n    scope.mixin = mixin;\n    scope.nativePrototypeTable = nativePrototypeTable;\n    scope.oneOf = oneOf;\n    scope.registerObject = registerObject;\n    scope.registerWrapper = register;\n    scope.rewrap = rewrap;\n    scope.setWrapper = setWrapper;\n    scope.unsafeUnwrap = unsafeUnwrap;\n    scope.unwrap = unwrap;\n    scope.unwrapIfNeeded = unwrapIfNeeded;\n    scope.wrap = wrap;\n    scope.wrapIfNeeded = wrapIfNeeded;\n    scope.wrappers = wrappers;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    function newSplice(index, removed, addedCount) {\n      return {\n        index: index,\n        removed: removed,\n        addedCount: addedCount\n      };\n    }\n    var EDIT_LEAVE = 0;\n    var EDIT_UPDATE = 1;\n    var EDIT_ADD = 2;\n    var EDIT_DELETE = 3;\n    function ArraySplice() {}\n    ArraySplice.prototype = {\n      calcEditDistances: function(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n        var rowCount = oldEnd - oldStart + 1;\n        var columnCount = currentEnd - currentStart + 1;\n        var distances = new Array(rowCount);\n        for (var i = 0; i < rowCount; i++) {\n          distances[i] = new Array(columnCount);\n          distances[i][0] = i;\n        }\n        for (var j = 0; j < columnCount; j++) distances[0][j] = j;\n        for (var i = 1; i < rowCount; i++) {\n          for (var j = 1; j < columnCount; j++) {\n            if (this.equals(current[currentStart + j - 1], old[oldStart + i - 1])) distances[i][j] = distances[i - 1][j - 1]; else {\n              var north = distances[i - 1][j] + 1;\n              var west = distances[i][j - 1] + 1;\n              distances[i][j] = north < west ? north : west;\n            }\n          }\n        }\n        return distances;\n      },\n      spliceOperationsFromEditDistances: function(distances) {\n        var i = distances.length - 1;\n        var j = distances[0].length - 1;\n        var current = distances[i][j];\n        var edits = [];\n        while (i > 0 || j > 0) {\n          if (i == 0) {\n            edits.push(EDIT_ADD);\n            j--;\n            continue;\n          }\n          if (j == 0) {\n            edits.push(EDIT_DELETE);\n            i--;\n            continue;\n          }\n          var northWest = distances[i - 1][j - 1];\n          var west = distances[i - 1][j];\n          var north = distances[i][j - 1];\n          var min;\n          if (west < north) min = west < northWest ? west : northWest; else min = north < northWest ? north : northWest;\n          if (min == northWest) {\n            if (northWest == current) {\n              edits.push(EDIT_LEAVE);\n            } else {\n              edits.push(EDIT_UPDATE);\n              current = northWest;\n            }\n            i--;\n            j--;\n          } else if (min == west) {\n            edits.push(EDIT_DELETE);\n            i--;\n            current = west;\n          } else {\n            edits.push(EDIT_ADD);\n            j--;\n            current = north;\n          }\n        }\n        edits.reverse();\n        return edits;\n      },\n      calcSplices: function(current, currentStart, currentEnd, old, oldStart, oldEnd) {\n        var prefixCount = 0;\n        var suffixCount = 0;\n        var minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n        if (currentStart == 0 && oldStart == 0) prefixCount = this.sharedPrefix(current, old, minLength);\n        if (currentEnd == current.length && oldEnd == old.length) suffixCount = this.sharedSuffix(current, old, minLength - prefixCount);\n        currentStart += prefixCount;\n        oldStart += prefixCount;\n        currentEnd -= suffixCount;\n        oldEnd -= suffixCount;\n        if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0) return [];\n        if (currentStart == currentEnd) {\n          var splice = newSplice(currentStart, [], 0);\n          while (oldStart < oldEnd) splice.removed.push(old[oldStart++]);\n          return [ splice ];\n        } else if (oldStart == oldEnd) return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n        var ops = this.spliceOperationsFromEditDistances(this.calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));\n        var splice = undefined;\n        var splices = [];\n        var index = currentStart;\n        var oldIndex = oldStart;\n        for (var i = 0; i < ops.length; i++) {\n          switch (ops[i]) {\n           case EDIT_LEAVE:\n            if (splice) {\n              splices.push(splice);\n              splice = undefined;\n            }\n            index++;\n            oldIndex++;\n            break;\n\n           case EDIT_UPDATE:\n            if (!splice) splice = newSplice(index, [], 0);\n            splice.addedCount++;\n            index++;\n            splice.removed.push(old[oldIndex]);\n            oldIndex++;\n            break;\n\n           case EDIT_ADD:\n            if (!splice) splice = newSplice(index, [], 0);\n            splice.addedCount++;\n            index++;\n            break;\n\n           case EDIT_DELETE:\n            if (!splice) splice = newSplice(index, [], 0);\n            splice.removed.push(old[oldIndex]);\n            oldIndex++;\n            break;\n          }\n        }\n        if (splice) {\n          splices.push(splice);\n        }\n        return splices;\n      },\n      sharedPrefix: function(current, old, searchLength) {\n        for (var i = 0; i < searchLength; i++) if (!this.equals(current[i], old[i])) return i;\n        return searchLength;\n      },\n      sharedSuffix: function(current, old, searchLength) {\n        var index1 = current.length;\n        var index2 = old.length;\n        var count = 0;\n        while (count < searchLength && this.equals(current[--index1], old[--index2])) count++;\n        return count;\n      },\n      calculateSplices: function(current, previous) {\n        return this.calcSplices(current, 0, current.length, previous, 0, previous.length);\n      },\n      equals: function(currentValue, previousValue) {\n        return currentValue === previousValue;\n      }\n    };\n    scope.ArraySplice = ArraySplice;\n  })(window.ShadowDOMPolyfill);\n  (function(context) {\n    \"use strict\";\n    var OriginalMutationObserver = window.MutationObserver;\n    var callbacks = [];\n    var pending = false;\n    var timerFunc;\n    function handle() {\n      pending = false;\n      var copies = callbacks.slice(0);\n      callbacks = [];\n      for (var i = 0; i < copies.length; i++) {\n        (0, copies[i])();\n      }\n    }\n    if (OriginalMutationObserver) {\n      var counter = 1;\n      var observer = new OriginalMutationObserver(handle);\n      var textNode = document.createTextNode(counter);\n      observer.observe(textNode, {\n        characterData: true\n      });\n      timerFunc = function() {\n        counter = (counter + 1) % 2;\n        textNode.data = counter;\n      };\n    } else {\n      timerFunc = window.setTimeout;\n    }\n    function setEndOfMicrotask(func) {\n      callbacks.push(func);\n      if (pending) return;\n      pending = true;\n      timerFunc(handle, 0);\n    }\n    context.setEndOfMicrotask = setEndOfMicrotask;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var setEndOfMicrotask = scope.setEndOfMicrotask;\n    var wrapIfNeeded = scope.wrapIfNeeded;\n    var wrappers = scope.wrappers;\n    var registrationsTable = new WeakMap();\n    var globalMutationObservers = [];\n    var isScheduled = false;\n    function scheduleCallback(observer) {\n      if (observer.scheduled_) return;\n      observer.scheduled_ = true;\n      globalMutationObservers.push(observer);\n      if (isScheduled) return;\n      setEndOfMicrotask(notifyObservers);\n      isScheduled = true;\n    }\n    function notifyObservers() {\n      isScheduled = false;\n      while (globalMutationObservers.length) {\n        var notifyList = globalMutationObservers;\n        globalMutationObservers = [];\n        notifyList.sort(function(x, y) {\n          return x.uid_ - y.uid_;\n        });\n        for (var i = 0; i < notifyList.length; i++) {\n          var mo = notifyList[i];\n          mo.scheduled_ = false;\n          var queue = mo.takeRecords();\n          removeTransientObserversFor(mo);\n          if (queue.length) {\n            mo.callback_(queue, mo);\n          }\n        }\n      }\n    }\n    function MutationRecord(type, target) {\n      this.type = type;\n      this.target = target;\n      this.addedNodes = new wrappers.NodeList();\n      this.removedNodes = new wrappers.NodeList();\n      this.previousSibling = null;\n      this.nextSibling = null;\n      this.attributeName = null;\n      this.attributeNamespace = null;\n      this.oldValue = null;\n    }\n    function registerTransientObservers(ancestor, node) {\n      for (;ancestor; ancestor = ancestor.parentNode) {\n        var registrations = registrationsTable.get(ancestor);\n        if (!registrations) continue;\n        for (var i = 0; i < registrations.length; i++) {\n          var registration = registrations[i];\n          if (registration.options.subtree) registration.addTransientObserver(node);\n        }\n      }\n    }\n    function removeTransientObserversFor(observer) {\n      for (var i = 0; i < observer.nodes_.length; i++) {\n        var node = observer.nodes_[i];\n        var registrations = registrationsTable.get(node);\n        if (!registrations) return;\n        for (var j = 0; j < registrations.length; j++) {\n          var registration = registrations[j];\n          if (registration.observer === observer) registration.removeTransientObservers();\n        }\n      }\n    }\n    function enqueueMutation(target, type, data) {\n      var interestedObservers = Object_create(null);\n      var associatedStrings = Object_create(null);\n      for (var node = target; node; node = node.parentNode) {\n        var registrations = registrationsTable.get(node);\n        if (!registrations) continue;\n        for (var j = 0; j < registrations.length; j++) {\n          var registration = registrations[j];\n          var options = registration.options;\n          if (node !== target && !options.subtree) continue;\n          if (type === \"attributes\" && !options.attributes) continue;\n          if (type === \"attributes\" && options.attributeFilter && (data.namespace !== null || options.attributeFilter.indexOf(data.name) === -1)) {\n            continue;\n          }\n          if (type === \"characterData\" && !options.characterData) continue;\n          if (type === \"childList\" && !options.childList) continue;\n          var observer = registration.observer;\n          interestedObservers[observer.uid_] = observer;\n          if (type === \"attributes\" && options.attributeOldValue || type === \"characterData\" && options.characterDataOldValue) {\n            associatedStrings[observer.uid_] = data.oldValue;\n          }\n        }\n      }\n      for (var uid in interestedObservers) {\n        var observer = interestedObservers[uid];\n        var record = new MutationRecord(type, target);\n        if (\"name\" in data && \"namespace\" in data) {\n          record.attributeName = data.name;\n          record.attributeNamespace = data.namespace;\n        }\n        if (data.addedNodes) record.addedNodes = data.addedNodes;\n        if (data.removedNodes) record.removedNodes = data.removedNodes;\n        if (data.previousSibling) record.previousSibling = data.previousSibling;\n        if (data.nextSibling) record.nextSibling = data.nextSibling;\n        if (associatedStrings[uid] !== undefined) record.oldValue = associatedStrings[uid];\n        scheduleCallback(observer);\n        observer.records_.push(record);\n      }\n    }\n    var slice = Array.prototype.slice;\n    function MutationObserverOptions(options) {\n      this.childList = !!options.childList;\n      this.subtree = !!options.subtree;\n      if (!(\"attributes\" in options) && (\"attributeOldValue\" in options || \"attributeFilter\" in options)) {\n        this.attributes = true;\n      } else {\n        this.attributes = !!options.attributes;\n      }\n      if (\"characterDataOldValue\" in options && !(\"characterData\" in options)) this.characterData = true; else this.characterData = !!options.characterData;\n      if (!this.attributes && (options.attributeOldValue || \"attributeFilter\" in options) || !this.characterData && options.characterDataOldValue) {\n        throw new TypeError();\n      }\n      this.characterData = !!options.characterData;\n      this.attributeOldValue = !!options.attributeOldValue;\n      this.characterDataOldValue = !!options.characterDataOldValue;\n      if (\"attributeFilter\" in options) {\n        if (options.attributeFilter == null || typeof options.attributeFilter !== \"object\") {\n          throw new TypeError();\n        }\n        this.attributeFilter = slice.call(options.attributeFilter);\n      } else {\n        this.attributeFilter = null;\n      }\n    }\n    var uidCounter = 0;\n    function MutationObserver(callback) {\n      this.callback_ = callback;\n      this.nodes_ = [];\n      this.records_ = [];\n      this.uid_ = ++uidCounter;\n      this.scheduled_ = false;\n    }\n    MutationObserver.prototype = {\n      constructor: MutationObserver,\n      observe: function(target, options) {\n        target = wrapIfNeeded(target);\n        var newOptions = new MutationObserverOptions(options);\n        var registration;\n        var registrations = registrationsTable.get(target);\n        if (!registrations) registrationsTable.set(target, registrations = []);\n        for (var i = 0; i < registrations.length; i++) {\n          if (registrations[i].observer === this) {\n            registration = registrations[i];\n            registration.removeTransientObservers();\n            registration.options = newOptions;\n          }\n        }\n        if (!registration) {\n          registration = new Registration(this, target, newOptions);\n          registrations.push(registration);\n          this.nodes_.push(target);\n        }\n      },\n      disconnect: function() {\n        this.nodes_.forEach(function(node) {\n          var registrations = registrationsTable.get(node);\n          for (var i = 0; i < registrations.length; i++) {\n            var registration = registrations[i];\n            if (registration.observer === this) {\n              registrations.splice(i, 1);\n              break;\n            }\n          }\n        }, this);\n        this.records_ = [];\n      },\n      takeRecords: function() {\n        var copyOfRecords = this.records_;\n        this.records_ = [];\n        return copyOfRecords;\n      }\n    };\n    function Registration(observer, target, options) {\n      this.observer = observer;\n      this.target = target;\n      this.options = options;\n      this.transientObservedNodes = [];\n    }\n    Registration.prototype = {\n      addTransientObserver: function(node) {\n        if (node === this.target) return;\n        scheduleCallback(this.observer);\n        this.transientObservedNodes.push(node);\n        var registrations = registrationsTable.get(node);\n        if (!registrations) registrationsTable.set(node, registrations = []);\n        registrations.push(this);\n      },\n      removeTransientObservers: function() {\n        var transientObservedNodes = this.transientObservedNodes;\n        this.transientObservedNodes = [];\n        for (var i = 0; i < transientObservedNodes.length; i++) {\n          var node = transientObservedNodes[i];\n          var registrations = registrationsTable.get(node);\n          for (var j = 0; j < registrations.length; j++) {\n            if (registrations[j] === this) {\n              registrations.splice(j, 1);\n              break;\n            }\n          }\n        }\n      }\n    };\n    scope.enqueueMutation = enqueueMutation;\n    scope.registerTransientObservers = registerTransientObservers;\n    scope.wrappers.MutationObserver = MutationObserver;\n    scope.wrappers.MutationRecord = MutationRecord;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    function TreeScope(root, parent) {\n      this.root = root;\n      this.parent = parent;\n    }\n    TreeScope.prototype = {\n      get renderer() {\n        if (this.root instanceof scope.wrappers.ShadowRoot) {\n          return scope.getRendererForHost(this.root.host);\n        }\n        return null;\n      },\n      contains: function(treeScope) {\n        for (;treeScope; treeScope = treeScope.parent) {\n          if (treeScope === this) return true;\n        }\n        return false;\n      }\n    };\n    function setTreeScope(node, treeScope) {\n      if (node.treeScope_ !== treeScope) {\n        node.treeScope_ = treeScope;\n        for (var sr = node.shadowRoot; sr; sr = sr.olderShadowRoot) {\n          sr.treeScope_.parent = treeScope;\n        }\n        for (var child = node.firstChild; child; child = child.nextSibling) {\n          setTreeScope(child, treeScope);\n        }\n      }\n    }\n    function getTreeScope(node) {\n      if (node instanceof scope.wrappers.Window) {\n        debugger;\n      }\n      if (node.treeScope_) return node.treeScope_;\n      var parent = node.parentNode;\n      var treeScope;\n      if (parent) treeScope = getTreeScope(parent); else treeScope = new TreeScope(node, null);\n      return node.treeScope_ = treeScope;\n    }\n    scope.TreeScope = TreeScope;\n    scope.getTreeScope = getTreeScope;\n    scope.setTreeScope = setTreeScope;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var forwardMethodsToWrapper = scope.forwardMethodsToWrapper;\n    var getTreeScope = scope.getTreeScope;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var setWrapper = scope.setWrapper;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var unwrap = scope.unwrap;\n    var wrap = scope.wrap;\n    var wrappers = scope.wrappers;\n    var wrappedFuns = new WeakMap();\n    var listenersTable = new WeakMap();\n    var handledEventsTable = new WeakMap();\n    var currentlyDispatchingEvents = new WeakMap();\n    var targetTable = new WeakMap();\n    var currentTargetTable = new WeakMap();\n    var relatedTargetTable = new WeakMap();\n    var eventPhaseTable = new WeakMap();\n    var stopPropagationTable = new WeakMap();\n    var stopImmediatePropagationTable = new WeakMap();\n    var eventHandlersTable = new WeakMap();\n    var eventPathTable = new WeakMap();\n    function isShadowRoot(node) {\n      return node instanceof wrappers.ShadowRoot;\n    }\n    function rootOfNode(node) {\n      return getTreeScope(node).root;\n    }\n    function getEventPath(node, event) {\n      var path = [];\n      var current = node;\n      path.push(current);\n      while (current) {\n        var destinationInsertionPoints = getDestinationInsertionPoints(current);\n        if (destinationInsertionPoints && destinationInsertionPoints.length > 0) {\n          for (var i = 0; i < destinationInsertionPoints.length; i++) {\n            var insertionPoint = destinationInsertionPoints[i];\n            if (isShadowInsertionPoint(insertionPoint)) {\n              var shadowRoot = rootOfNode(insertionPoint);\n              var olderShadowRoot = shadowRoot.olderShadowRoot;\n              if (olderShadowRoot) path.push(olderShadowRoot);\n            }\n            path.push(insertionPoint);\n          }\n          current = destinationInsertionPoints[destinationInsertionPoints.length - 1];\n        } else {\n          if (isShadowRoot(current)) {\n            if (inSameTree(node, current) && eventMustBeStopped(event)) {\n              break;\n            }\n            current = current.host;\n            path.push(current);\n          } else {\n            current = current.parentNode;\n            if (current) path.push(current);\n          }\n        }\n      }\n      return path;\n    }\n    function eventMustBeStopped(event) {\n      if (!event) return false;\n      switch (event.type) {\n       case \"abort\":\n       case \"error\":\n       case \"select\":\n       case \"change\":\n       case \"load\":\n       case \"reset\":\n       case \"resize\":\n       case \"scroll\":\n       case \"selectstart\":\n        return true;\n      }\n      return false;\n    }\n    function isShadowInsertionPoint(node) {\n      return node instanceof HTMLShadowElement;\n    }\n    function getDestinationInsertionPoints(node) {\n      return scope.getDestinationInsertionPoints(node);\n    }\n    function eventRetargetting(path, currentTarget) {\n      if (path.length === 0) return currentTarget;\n      if (currentTarget instanceof wrappers.Window) currentTarget = currentTarget.document;\n      var currentTargetTree = getTreeScope(currentTarget);\n      var originalTarget = path[0];\n      var originalTargetTree = getTreeScope(originalTarget);\n      var relativeTargetTree = lowestCommonInclusiveAncestor(currentTargetTree, originalTargetTree);\n      for (var i = 0; i < path.length; i++) {\n        var node = path[i];\n        if (getTreeScope(node) === relativeTargetTree) return node;\n      }\n      return path[path.length - 1];\n    }\n    function getTreeScopeAncestors(treeScope) {\n      var ancestors = [];\n      for (;treeScope; treeScope = treeScope.parent) {\n        ancestors.push(treeScope);\n      }\n      return ancestors;\n    }\n    function lowestCommonInclusiveAncestor(tsA, tsB) {\n      var ancestorsA = getTreeScopeAncestors(tsA);\n      var ancestorsB = getTreeScopeAncestors(tsB);\n      var result = null;\n      while (ancestorsA.length > 0 && ancestorsB.length > 0) {\n        var a = ancestorsA.pop();\n        var b = ancestorsB.pop();\n        if (a === b) result = a; else break;\n      }\n      return result;\n    }\n    function getTreeScopeRoot(ts) {\n      if (!ts.parent) return ts;\n      return getTreeScopeRoot(ts.parent);\n    }\n    function relatedTargetResolution(event, currentTarget, relatedTarget) {\n      if (currentTarget instanceof wrappers.Window) currentTarget = currentTarget.document;\n      var currentTargetTree = getTreeScope(currentTarget);\n      var relatedTargetTree = getTreeScope(relatedTarget);\n      var relatedTargetEventPath = getEventPath(relatedTarget, event);\n      var lowestCommonAncestorTree;\n      var lowestCommonAncestorTree = lowestCommonInclusiveAncestor(currentTargetTree, relatedTargetTree);\n      if (!lowestCommonAncestorTree) lowestCommonAncestorTree = relatedTargetTree.root;\n      for (var commonAncestorTree = lowestCommonAncestorTree; commonAncestorTree; commonAncestorTree = commonAncestorTree.parent) {\n        var adjustedRelatedTarget;\n        for (var i = 0; i < relatedTargetEventPath.length; i++) {\n          var node = relatedTargetEventPath[i];\n          if (getTreeScope(node) === commonAncestorTree) return node;\n        }\n      }\n      return null;\n    }\n    function inSameTree(a, b) {\n      return getTreeScope(a) === getTreeScope(b);\n    }\n    var NONE = 0;\n    var CAPTURING_PHASE = 1;\n    var AT_TARGET = 2;\n    var BUBBLING_PHASE = 3;\n    var pendingError;\n    function dispatchOriginalEvent(originalEvent) {\n      if (handledEventsTable.get(originalEvent)) return;\n      handledEventsTable.set(originalEvent, true);\n      dispatchEvent(wrap(originalEvent), wrap(originalEvent.target));\n      if (pendingError) {\n        var err = pendingError;\n        pendingError = null;\n        throw err;\n      }\n    }\n    function isLoadLikeEvent(event) {\n      switch (event.type) {\n       case \"load\":\n       case \"beforeunload\":\n       case \"unload\":\n        return true;\n      }\n      return false;\n    }\n    function dispatchEvent(event, originalWrapperTarget) {\n      if (currentlyDispatchingEvents.get(event)) throw new Error(\"InvalidStateError\");\n      currentlyDispatchingEvents.set(event, true);\n      scope.renderAllPending();\n      var eventPath;\n      var overrideTarget;\n      var win;\n      if (isLoadLikeEvent(event) && !event.bubbles) {\n        var doc = originalWrapperTarget;\n        if (doc instanceof wrappers.Document && (win = doc.defaultView)) {\n          overrideTarget = doc;\n          eventPath = [];\n        }\n      }\n      if (!eventPath) {\n        if (originalWrapperTarget instanceof wrappers.Window) {\n          win = originalWrapperTarget;\n          eventPath = [];\n        } else {\n          eventPath = getEventPath(originalWrapperTarget, event);\n          if (!isLoadLikeEvent(event)) {\n            var doc = eventPath[eventPath.length - 1];\n            if (doc instanceof wrappers.Document) win = doc.defaultView;\n          }\n        }\n      }\n      eventPathTable.set(event, eventPath);\n      if (dispatchCapturing(event, eventPath, win, overrideTarget)) {\n        if (dispatchAtTarget(event, eventPath, win, overrideTarget)) {\n          dispatchBubbling(event, eventPath, win, overrideTarget);\n        }\n      }\n      eventPhaseTable.set(event, NONE);\n      currentTargetTable.delete(event, null);\n      currentlyDispatchingEvents.delete(event);\n      return event.defaultPrevented;\n    }\n    function dispatchCapturing(event, eventPath, win, overrideTarget) {\n      var phase = CAPTURING_PHASE;\n      if (win) {\n        if (!invoke(win, event, phase, eventPath, overrideTarget)) return false;\n      }\n      for (var i = eventPath.length - 1; i > 0; i--) {\n        if (!invoke(eventPath[i], event, phase, eventPath, overrideTarget)) return false;\n      }\n      return true;\n    }\n    function dispatchAtTarget(event, eventPath, win, overrideTarget) {\n      var phase = AT_TARGET;\n      var currentTarget = eventPath[0] || win;\n      return invoke(currentTarget, event, phase, eventPath, overrideTarget);\n    }\n    function dispatchBubbling(event, eventPath, win, overrideTarget) {\n      var phase = BUBBLING_PHASE;\n      for (var i = 1; i < eventPath.length; i++) {\n        if (!invoke(eventPath[i], event, phase, eventPath, overrideTarget)) return;\n      }\n      if (win && eventPath.length > 0) {\n        invoke(win, event, phase, eventPath, overrideTarget);\n      }\n    }\n    function invoke(currentTarget, event, phase, eventPath, overrideTarget) {\n      var listeners = listenersTable.get(currentTarget);\n      if (!listeners) return true;\n      var target = overrideTarget || eventRetargetting(eventPath, currentTarget);\n      if (target === currentTarget) {\n        if (phase === CAPTURING_PHASE) return true;\n        if (phase === BUBBLING_PHASE) phase = AT_TARGET;\n      } else if (phase === BUBBLING_PHASE && !event.bubbles) {\n        return true;\n      }\n      if (\"relatedTarget\" in event) {\n        var originalEvent = unwrap(event);\n        var unwrappedRelatedTarget = originalEvent.relatedTarget;\n        if (unwrappedRelatedTarget) {\n          if (unwrappedRelatedTarget instanceof Object && unwrappedRelatedTarget.addEventListener) {\n            var relatedTarget = wrap(unwrappedRelatedTarget);\n            var adjusted = relatedTargetResolution(event, currentTarget, relatedTarget);\n            if (adjusted === target) return true;\n          } else {\n            adjusted = null;\n          }\n          relatedTargetTable.set(event, adjusted);\n        }\n      }\n      eventPhaseTable.set(event, phase);\n      var type = event.type;\n      var anyRemoved = false;\n      targetTable.set(event, target);\n      currentTargetTable.set(event, currentTarget);\n      listeners.depth++;\n      for (var i = 0, len = listeners.length; i < len; i++) {\n        var listener = listeners[i];\n        if (listener.removed) {\n          anyRemoved = true;\n          continue;\n        }\n        if (listener.type !== type || !listener.capture && phase === CAPTURING_PHASE || listener.capture && phase === BUBBLING_PHASE) {\n          continue;\n        }\n        try {\n          if (typeof listener.handler === \"function\") listener.handler.call(currentTarget, event); else listener.handler.handleEvent(event);\n          if (stopImmediatePropagationTable.get(event)) return false;\n        } catch (ex) {\n          if (!pendingError) pendingError = ex;\n        }\n      }\n      listeners.depth--;\n      if (anyRemoved && listeners.depth === 0) {\n        var copy = listeners.slice();\n        listeners.length = 0;\n        for (var i = 0; i < copy.length; i++) {\n          if (!copy[i].removed) listeners.push(copy[i]);\n        }\n      }\n      return !stopPropagationTable.get(event);\n    }\n    function Listener(type, handler, capture) {\n      this.type = type;\n      this.handler = handler;\n      this.capture = Boolean(capture);\n    }\n    Listener.prototype = {\n      equals: function(that) {\n        return this.handler === that.handler && this.type === that.type && this.capture === that.capture;\n      },\n      get removed() {\n        return this.handler === null;\n      },\n      remove: function() {\n        this.handler = null;\n      }\n    };\n    var OriginalEvent = window.Event;\n    OriginalEvent.prototype.polymerBlackList_ = {\n      returnValue: true,\n      keyLocation: true\n    };\n    function Event(type, options) {\n      if (type instanceof OriginalEvent) {\n        var impl = type;\n        if (!OriginalBeforeUnloadEvent && impl.type === \"beforeunload\" && !(this instanceof BeforeUnloadEvent)) {\n          return new BeforeUnloadEvent(impl);\n        }\n        setWrapper(impl, this);\n      } else {\n        return wrap(constructEvent(OriginalEvent, \"Event\", type, options));\n      }\n    }\n    Event.prototype = {\n      get target() {\n        return targetTable.get(this);\n      },\n      get currentTarget() {\n        return currentTargetTable.get(this);\n      },\n      get eventPhase() {\n        return eventPhaseTable.get(this);\n      },\n      get path() {\n        var eventPath = eventPathTable.get(this);\n        if (!eventPath) return [];\n        return eventPath.slice();\n      },\n      stopPropagation: function() {\n        stopPropagationTable.set(this, true);\n      },\n      stopImmediatePropagation: function() {\n        stopPropagationTable.set(this, true);\n        stopImmediatePropagationTable.set(this, true);\n      }\n    };\n    registerWrapper(OriginalEvent, Event, document.createEvent(\"Event\"));\n    function unwrapOptions(options) {\n      if (!options || !options.relatedTarget) return options;\n      return Object_create(options, {\n        relatedTarget: {\n          value: unwrap(options.relatedTarget)\n        }\n      });\n    }\n    function registerGenericEvent(name, SuperEvent, prototype) {\n      var OriginalEvent = window[name];\n      var GenericEvent = function(type, options) {\n        if (type instanceof OriginalEvent) setWrapper(type, this); else return wrap(constructEvent(OriginalEvent, name, type, options));\n      };\n      GenericEvent.prototype = Object_create(SuperEvent.prototype);\n      if (prototype) mixin(GenericEvent.prototype, prototype);\n      if (OriginalEvent) {\n        try {\n          registerWrapper(OriginalEvent, GenericEvent, new OriginalEvent(\"temp\"));\n        } catch (ex) {\n          registerWrapper(OriginalEvent, GenericEvent, document.createEvent(name));\n        }\n      }\n      return GenericEvent;\n    }\n    var UIEvent = registerGenericEvent(\"UIEvent\", Event);\n    var CustomEvent = registerGenericEvent(\"CustomEvent\", Event);\n    var relatedTargetProto = {\n      get relatedTarget() {\n        var relatedTarget = relatedTargetTable.get(this);\n        if (relatedTarget !== undefined) return relatedTarget;\n        return wrap(unwrap(this).relatedTarget);\n      }\n    };\n    function getInitFunction(name, relatedTargetIndex) {\n      return function() {\n        arguments[relatedTargetIndex] = unwrap(arguments[relatedTargetIndex]);\n        var impl = unwrap(this);\n        impl[name].apply(impl, arguments);\n      };\n    }\n    var mouseEventProto = mixin({\n      initMouseEvent: getInitFunction(\"initMouseEvent\", 14)\n    }, relatedTargetProto);\n    var focusEventProto = mixin({\n      initFocusEvent: getInitFunction(\"initFocusEvent\", 5)\n    }, relatedTargetProto);\n    var MouseEvent = registerGenericEvent(\"MouseEvent\", UIEvent, mouseEventProto);\n    var FocusEvent = registerGenericEvent(\"FocusEvent\", UIEvent, focusEventProto);\n    var defaultInitDicts = Object_create(null);\n    var supportsEventConstructors = function() {\n      try {\n        new window.FocusEvent(\"focus\");\n      } catch (ex) {\n        return false;\n      }\n      return true;\n    }();\n    function constructEvent(OriginalEvent, name, type, options) {\n      if (supportsEventConstructors) return new OriginalEvent(type, unwrapOptions(options));\n      var event = unwrap(document.createEvent(name));\n      var defaultDict = defaultInitDicts[name];\n      var args = [ type ];\n      Object.keys(defaultDict).forEach(function(key) {\n        var v = options != null && key in options ? options[key] : defaultDict[key];\n        if (key === \"relatedTarget\") v = unwrap(v);\n        args.push(v);\n      });\n      event[\"init\" + name].apply(event, args);\n      return event;\n    }\n    if (!supportsEventConstructors) {\n      var configureEventConstructor = function(name, initDict, superName) {\n        if (superName) {\n          var superDict = defaultInitDicts[superName];\n          initDict = mixin(mixin({}, superDict), initDict);\n        }\n        defaultInitDicts[name] = initDict;\n      };\n      configureEventConstructor(\"Event\", {\n        bubbles: false,\n        cancelable: false\n      });\n      configureEventConstructor(\"CustomEvent\", {\n        detail: null\n      }, \"Event\");\n      configureEventConstructor(\"UIEvent\", {\n        view: null,\n        detail: 0\n      }, \"Event\");\n      configureEventConstructor(\"MouseEvent\", {\n        screenX: 0,\n        screenY: 0,\n        clientX: 0,\n        clientY: 0,\n        ctrlKey: false,\n        altKey: false,\n        shiftKey: false,\n        metaKey: false,\n        button: 0,\n        relatedTarget: null\n      }, \"UIEvent\");\n      configureEventConstructor(\"FocusEvent\", {\n        relatedTarget: null\n      }, \"UIEvent\");\n    }\n    var OriginalBeforeUnloadEvent = window.BeforeUnloadEvent;\n    function BeforeUnloadEvent(impl) {\n      Event.call(this, impl);\n    }\n    BeforeUnloadEvent.prototype = Object_create(Event.prototype);\n    mixin(BeforeUnloadEvent.prototype, {\n      get returnValue() {\n        return unsafeUnwrap(this).returnValue;\n      },\n      set returnValue(v) {\n        unsafeUnwrap(this).returnValue = v;\n      }\n    });\n    if (OriginalBeforeUnloadEvent) registerWrapper(OriginalBeforeUnloadEvent, BeforeUnloadEvent);\n    function isValidListener(fun) {\n      if (typeof fun === \"function\") return true;\n      return fun && fun.handleEvent;\n    }\n    function isMutationEvent(type) {\n      switch (type) {\n       case \"DOMAttrModified\":\n       case \"DOMAttributeNameChanged\":\n       case \"DOMCharacterDataModified\":\n       case \"DOMElementNameChanged\":\n       case \"DOMNodeInserted\":\n       case \"DOMNodeInsertedIntoDocument\":\n       case \"DOMNodeRemoved\":\n       case \"DOMNodeRemovedFromDocument\":\n       case \"DOMSubtreeModified\":\n        return true;\n      }\n      return false;\n    }\n    var OriginalEventTarget = window.EventTarget;\n    function EventTarget(impl) {\n      setWrapper(impl, this);\n    }\n    var methodNames = [ \"addEventListener\", \"removeEventListener\", \"dispatchEvent\" ];\n    [ Node, Window ].forEach(function(constructor) {\n      var p = constructor.prototype;\n      methodNames.forEach(function(name) {\n        Object.defineProperty(p, name + \"_\", {\n          value: p[name]\n        });\n      });\n    });\n    function getTargetToListenAt(wrapper) {\n      if (wrapper instanceof wrappers.ShadowRoot) wrapper = wrapper.host;\n      return unwrap(wrapper);\n    }\n    EventTarget.prototype = {\n      addEventListener: function(type, fun, capture) {\n        if (!isValidListener(fun) || isMutationEvent(type)) return;\n        var listener = new Listener(type, fun, capture);\n        var listeners = listenersTable.get(this);\n        if (!listeners) {\n          listeners = [];\n          listeners.depth = 0;\n          listenersTable.set(this, listeners);\n        } else {\n          for (var i = 0; i < listeners.length; i++) {\n            if (listener.equals(listeners[i])) return;\n          }\n        }\n        listeners.push(listener);\n        var target = getTargetToListenAt(this);\n        target.addEventListener_(type, dispatchOriginalEvent, true);\n      },\n      removeEventListener: function(type, fun, capture) {\n        capture = Boolean(capture);\n        var listeners = listenersTable.get(this);\n        if (!listeners) return;\n        var count = 0, found = false;\n        for (var i = 0; i < listeners.length; i++) {\n          if (listeners[i].type === type && listeners[i].capture === capture) {\n            count++;\n            if (listeners[i].handler === fun) {\n              found = true;\n              listeners[i].remove();\n            }\n          }\n        }\n        if (found && count === 1) {\n          var target = getTargetToListenAt(this);\n          target.removeEventListener_(type, dispatchOriginalEvent, true);\n        }\n      },\n      dispatchEvent: function(event) {\n        var nativeEvent = unwrap(event);\n        var eventType = nativeEvent.type;\n        handledEventsTable.set(nativeEvent, false);\n        scope.renderAllPending();\n        var tempListener;\n        if (!hasListenerInAncestors(this, eventType)) {\n          tempListener = function() {};\n          this.addEventListener(eventType, tempListener, true);\n        }\n        try {\n          return unwrap(this).dispatchEvent_(nativeEvent);\n        } finally {\n          if (tempListener) this.removeEventListener(eventType, tempListener, true);\n        }\n      }\n    };\n    function hasListener(node, type) {\n      var listeners = listenersTable.get(node);\n      if (listeners) {\n        for (var i = 0; i < listeners.length; i++) {\n          if (!listeners[i].removed && listeners[i].type === type) return true;\n        }\n      }\n      return false;\n    }\n    function hasListenerInAncestors(target, type) {\n      for (var node = unwrap(target); node; node = node.parentNode) {\n        if (hasListener(wrap(node), type)) return true;\n      }\n      return false;\n    }\n    if (OriginalEventTarget) registerWrapper(OriginalEventTarget, EventTarget);\n    function wrapEventTargetMethods(constructors) {\n      forwardMethodsToWrapper(constructors, methodNames);\n    }\n    var originalElementFromPoint = document.elementFromPoint;\n    function elementFromPoint(self, document, x, y) {\n      scope.renderAllPending();\n      var element = wrap(originalElementFromPoint.call(unsafeUnwrap(document), x, y));\n      if (!element) return null;\n      var path = getEventPath(element, null);\n      var idx = path.lastIndexOf(self);\n      if (idx == -1) return null; else path = path.slice(0, idx);\n      return eventRetargetting(path, self);\n    }\n    function getEventHandlerGetter(name) {\n      return function() {\n        var inlineEventHandlers = eventHandlersTable.get(this);\n        return inlineEventHandlers && inlineEventHandlers[name] && inlineEventHandlers[name].value || null;\n      };\n    }\n    function getEventHandlerSetter(name) {\n      var eventType = name.slice(2);\n      return function(value) {\n        var inlineEventHandlers = eventHandlersTable.get(this);\n        if (!inlineEventHandlers) {\n          inlineEventHandlers = Object_create(null);\n          eventHandlersTable.set(this, inlineEventHandlers);\n        }\n        var old = inlineEventHandlers[name];\n        if (old) this.removeEventListener(eventType, old.wrapped, false);\n        if (typeof value === \"function\") {\n          var wrapped = function(e) {\n            var rv = value.call(this, e);\n            if (rv === false) e.preventDefault(); else if (name === \"onbeforeunload\" && typeof rv === \"string\") e.returnValue = rv;\n          };\n          this.addEventListener(eventType, wrapped, false);\n          inlineEventHandlers[name] = {\n            value: value,\n            wrapped: wrapped\n          };\n        }\n      };\n    }\n    scope.elementFromPoint = elementFromPoint;\n    scope.getEventHandlerGetter = getEventHandlerGetter;\n    scope.getEventHandlerSetter = getEventHandlerSetter;\n    scope.wrapEventTargetMethods = wrapEventTargetMethods;\n    scope.wrappers.BeforeUnloadEvent = BeforeUnloadEvent;\n    scope.wrappers.CustomEvent = CustomEvent;\n    scope.wrappers.Event = Event;\n    scope.wrappers.EventTarget = EventTarget;\n    scope.wrappers.FocusEvent = FocusEvent;\n    scope.wrappers.MouseEvent = MouseEvent;\n    scope.wrappers.UIEvent = UIEvent;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var UIEvent = scope.wrappers.UIEvent;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var setWrapper = scope.setWrapper;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var wrap = scope.wrap;\n    var OriginalTouchEvent = window.TouchEvent;\n    if (!OriginalTouchEvent) return;\n    var nativeEvent;\n    try {\n      nativeEvent = document.createEvent(\"TouchEvent\");\n    } catch (ex) {\n      return;\n    }\n    var nonEnumDescriptor = {\n      enumerable: false\n    };\n    function nonEnum(obj, prop) {\n      Object.defineProperty(obj, prop, nonEnumDescriptor);\n    }\n    function Touch(impl) {\n      setWrapper(impl, this);\n    }\n    Touch.prototype = {\n      get target() {\n        return wrap(unsafeUnwrap(this).target);\n      }\n    };\n    var descr = {\n      configurable: true,\n      enumerable: true,\n      get: null\n    };\n    [ \"clientX\", \"clientY\", \"screenX\", \"screenY\", \"pageX\", \"pageY\", \"identifier\", \"webkitRadiusX\", \"webkitRadiusY\", \"webkitRotationAngle\", \"webkitForce\" ].forEach(function(name) {\n      descr.get = function() {\n        return unsafeUnwrap(this)[name];\n      };\n      Object.defineProperty(Touch.prototype, name, descr);\n    });\n    function TouchList() {\n      this.length = 0;\n      nonEnum(this, \"length\");\n    }\n    TouchList.prototype = {\n      item: function(index) {\n        return this[index];\n      }\n    };\n    function wrapTouchList(nativeTouchList) {\n      var list = new TouchList();\n      for (var i = 0; i < nativeTouchList.length; i++) {\n        list[i] = new Touch(nativeTouchList[i]);\n      }\n      list.length = i;\n      return list;\n    }\n    function TouchEvent(impl) {\n      UIEvent.call(this, impl);\n    }\n    TouchEvent.prototype = Object_create(UIEvent.prototype);\n    mixin(TouchEvent.prototype, {\n      get touches() {\n        return wrapTouchList(unsafeUnwrap(this).touches);\n      },\n      get targetTouches() {\n        return wrapTouchList(unsafeUnwrap(this).targetTouches);\n      },\n      get changedTouches() {\n        return wrapTouchList(unsafeUnwrap(this).changedTouches);\n      },\n      initTouchEvent: function() {\n        throw new Error(\"Not implemented\");\n      }\n    });\n    registerWrapper(OriginalTouchEvent, TouchEvent, nativeEvent);\n    scope.wrappers.Touch = Touch;\n    scope.wrappers.TouchEvent = TouchEvent;\n    scope.wrappers.TouchList = TouchList;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var wrap = scope.wrap;\n    var nonEnumDescriptor = {\n      enumerable: false\n    };\n    function nonEnum(obj, prop) {\n      Object.defineProperty(obj, prop, nonEnumDescriptor);\n    }\n    function NodeList() {\n      this.length = 0;\n      nonEnum(this, \"length\");\n    }\n    NodeList.prototype = {\n      item: function(index) {\n        return this[index];\n      }\n    };\n    nonEnum(NodeList.prototype, \"item\");\n    function wrapNodeList(list) {\n      if (list == null) return list;\n      var wrapperList = new NodeList();\n      for (var i = 0, length = list.length; i < length; i++) {\n        wrapperList[i] = wrap(list[i]);\n      }\n      wrapperList.length = length;\n      return wrapperList;\n    }\n    function addWrapNodeListMethod(wrapperConstructor, name) {\n      wrapperConstructor.prototype[name] = function() {\n        return wrapNodeList(unsafeUnwrap(this)[name].apply(unsafeUnwrap(this), arguments));\n      };\n    }\n    scope.wrappers.NodeList = NodeList;\n    scope.addWrapNodeListMethod = addWrapNodeListMethod;\n    scope.wrapNodeList = wrapNodeList;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    scope.wrapHTMLCollection = scope.wrapNodeList;\n    scope.wrappers.HTMLCollection = scope.wrappers.NodeList;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var EventTarget = scope.wrappers.EventTarget;\n    var NodeList = scope.wrappers.NodeList;\n    var TreeScope = scope.TreeScope;\n    var assert = scope.assert;\n    var defineWrapGetter = scope.defineWrapGetter;\n    var enqueueMutation = scope.enqueueMutation;\n    var getTreeScope = scope.getTreeScope;\n    var isWrapper = scope.isWrapper;\n    var mixin = scope.mixin;\n    var registerTransientObservers = scope.registerTransientObservers;\n    var registerWrapper = scope.registerWrapper;\n    var setTreeScope = scope.setTreeScope;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var unwrap = scope.unwrap;\n    var unwrapIfNeeded = scope.unwrapIfNeeded;\n    var wrap = scope.wrap;\n    var wrapIfNeeded = scope.wrapIfNeeded;\n    var wrappers = scope.wrappers;\n    function assertIsNodeWrapper(node) {\n      assert(node instanceof Node);\n    }\n    function createOneElementNodeList(node) {\n      var nodes = new NodeList();\n      nodes[0] = node;\n      nodes.length = 1;\n      return nodes;\n    }\n    var surpressMutations = false;\n    function enqueueRemovalForInsertedNodes(node, parent, nodes) {\n      enqueueMutation(parent, \"childList\", {\n        removedNodes: nodes,\n        previousSibling: node.previousSibling,\n        nextSibling: node.nextSibling\n      });\n    }\n    function enqueueRemovalForInsertedDocumentFragment(df, nodes) {\n      enqueueMutation(df, \"childList\", {\n        removedNodes: nodes\n      });\n    }\n    function collectNodes(node, parentNode, previousNode, nextNode) {\n      if (node instanceof DocumentFragment) {\n        var nodes = collectNodesForDocumentFragment(node);\n        surpressMutations = true;\n        for (var i = nodes.length - 1; i >= 0; i--) {\n          node.removeChild(nodes[i]);\n          nodes[i].parentNode_ = parentNode;\n        }\n        surpressMutations = false;\n        for (var i = 0; i < nodes.length; i++) {\n          nodes[i].previousSibling_ = nodes[i - 1] || previousNode;\n          nodes[i].nextSibling_ = nodes[i + 1] || nextNode;\n        }\n        if (previousNode) previousNode.nextSibling_ = nodes[0];\n        if (nextNode) nextNode.previousSibling_ = nodes[nodes.length - 1];\n        return nodes;\n      }\n      var nodes = createOneElementNodeList(node);\n      var oldParent = node.parentNode;\n      if (oldParent) {\n        oldParent.removeChild(node);\n      }\n      node.parentNode_ = parentNode;\n      node.previousSibling_ = previousNode;\n      node.nextSibling_ = nextNode;\n      if (previousNode) previousNode.nextSibling_ = node;\n      if (nextNode) nextNode.previousSibling_ = node;\n      return nodes;\n    }\n    function collectNodesNative(node) {\n      if (node instanceof DocumentFragment) return collectNodesForDocumentFragment(node);\n      var nodes = createOneElementNodeList(node);\n      var oldParent = node.parentNode;\n      if (oldParent) enqueueRemovalForInsertedNodes(node, oldParent, nodes);\n      return nodes;\n    }\n    function collectNodesForDocumentFragment(node) {\n      var nodes = new NodeList();\n      var i = 0;\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        nodes[i++] = child;\n      }\n      nodes.length = i;\n      enqueueRemovalForInsertedDocumentFragment(node, nodes);\n      return nodes;\n    }\n    function snapshotNodeList(nodeList) {\n      return nodeList;\n    }\n    function nodeWasAdded(node, treeScope) {\n      setTreeScope(node, treeScope);\n      node.nodeIsInserted_();\n    }\n    function nodesWereAdded(nodes, parent) {\n      var treeScope = getTreeScope(parent);\n      for (var i = 0; i < nodes.length; i++) {\n        nodeWasAdded(nodes[i], treeScope);\n      }\n    }\n    function nodeWasRemoved(node) {\n      setTreeScope(node, new TreeScope(node, null));\n    }\n    function nodesWereRemoved(nodes) {\n      for (var i = 0; i < nodes.length; i++) {\n        nodeWasRemoved(nodes[i]);\n      }\n    }\n    function ensureSameOwnerDocument(parent, child) {\n      var ownerDoc = parent.nodeType === Node.DOCUMENT_NODE ? parent : parent.ownerDocument;\n      if (ownerDoc !== child.ownerDocument) ownerDoc.adoptNode(child);\n    }\n    function adoptNodesIfNeeded(owner, nodes) {\n      if (!nodes.length) return;\n      var ownerDoc = owner.ownerDocument;\n      if (ownerDoc === nodes[0].ownerDocument) return;\n      for (var i = 0; i < nodes.length; i++) {\n        scope.adoptNodeNoRemove(nodes[i], ownerDoc);\n      }\n    }\n    function unwrapNodesForInsertion(owner, nodes) {\n      adoptNodesIfNeeded(owner, nodes);\n      var length = nodes.length;\n      if (length === 1) return unwrap(nodes[0]);\n      var df = unwrap(owner.ownerDocument.createDocumentFragment());\n      for (var i = 0; i < length; i++) {\n        df.appendChild(unwrap(nodes[i]));\n      }\n      return df;\n    }\n    function clearChildNodes(wrapper) {\n      if (wrapper.firstChild_ !== undefined) {\n        var child = wrapper.firstChild_;\n        while (child) {\n          var tmp = child;\n          child = child.nextSibling_;\n          tmp.parentNode_ = tmp.previousSibling_ = tmp.nextSibling_ = undefined;\n        }\n      }\n      wrapper.firstChild_ = wrapper.lastChild_ = undefined;\n    }\n    function removeAllChildNodes(wrapper) {\n      if (wrapper.invalidateShadowRenderer()) {\n        var childWrapper = wrapper.firstChild;\n        while (childWrapper) {\n          assert(childWrapper.parentNode === wrapper);\n          var nextSibling = childWrapper.nextSibling;\n          var childNode = unwrap(childWrapper);\n          var parentNode = childNode.parentNode;\n          if (parentNode) originalRemoveChild.call(parentNode, childNode);\n          childWrapper.previousSibling_ = childWrapper.nextSibling_ = childWrapper.parentNode_ = null;\n          childWrapper = nextSibling;\n        }\n        wrapper.firstChild_ = wrapper.lastChild_ = null;\n      } else {\n        var node = unwrap(wrapper);\n        var child = node.firstChild;\n        var nextSibling;\n        while (child) {\n          nextSibling = child.nextSibling;\n          originalRemoveChild.call(node, child);\n          child = nextSibling;\n        }\n      }\n    }\n    function invalidateParent(node) {\n      var p = node.parentNode;\n      return p && p.invalidateShadowRenderer();\n    }\n    function cleanupNodes(nodes) {\n      for (var i = 0, n; i < nodes.length; i++) {\n        n = nodes[i];\n        n.parentNode.removeChild(n);\n      }\n    }\n    var originalImportNode = document.importNode;\n    var originalCloneNode = window.Node.prototype.cloneNode;\n    function cloneNode(node, deep, opt_doc) {\n      var clone;\n      if (opt_doc) clone = wrap(originalImportNode.call(opt_doc, unsafeUnwrap(node), false)); else clone = wrap(originalCloneNode.call(unsafeUnwrap(node), false));\n      if (deep) {\n        for (var child = node.firstChild; child; child = child.nextSibling) {\n          clone.appendChild(cloneNode(child, true, opt_doc));\n        }\n        if (node instanceof wrappers.HTMLTemplateElement) {\n          var cloneContent = clone.content;\n          for (var child = node.content.firstChild; child; child = child.nextSibling) {\n            cloneContent.appendChild(cloneNode(child, true, opt_doc));\n          }\n        }\n      }\n      return clone;\n    }\n    function contains(self, child) {\n      if (!child || getTreeScope(self) !== getTreeScope(child)) return false;\n      for (var node = child; node; node = node.parentNode) {\n        if (node === self) return true;\n      }\n      return false;\n    }\n    var OriginalNode = window.Node;\n    function Node(original) {\n      assert(original instanceof OriginalNode);\n      EventTarget.call(this, original);\n      this.parentNode_ = undefined;\n      this.firstChild_ = undefined;\n      this.lastChild_ = undefined;\n      this.nextSibling_ = undefined;\n      this.previousSibling_ = undefined;\n      this.treeScope_ = undefined;\n    }\n    var OriginalDocumentFragment = window.DocumentFragment;\n    var originalAppendChild = OriginalNode.prototype.appendChild;\n    var originalCompareDocumentPosition = OriginalNode.prototype.compareDocumentPosition;\n    var originalInsertBefore = OriginalNode.prototype.insertBefore;\n    var originalRemoveChild = OriginalNode.prototype.removeChild;\n    var originalReplaceChild = OriginalNode.prototype.replaceChild;\n    var isIe = /Trident/.test(navigator.userAgent);\n    var removeChildOriginalHelper = isIe ? function(parent, child) {\n      try {\n        originalRemoveChild.call(parent, child);\n      } catch (ex) {\n        if (!(parent instanceof OriginalDocumentFragment)) throw ex;\n      }\n    } : function(parent, child) {\n      originalRemoveChild.call(parent, child);\n    };\n    Node.prototype = Object_create(EventTarget.prototype);\n    mixin(Node.prototype, {\n      appendChild: function(childWrapper) {\n        return this.insertBefore(childWrapper, null);\n      },\n      insertBefore: function(childWrapper, refWrapper) {\n        assertIsNodeWrapper(childWrapper);\n        var refNode;\n        if (refWrapper) {\n          if (isWrapper(refWrapper)) {\n            refNode = unwrap(refWrapper);\n          } else {\n            refNode = refWrapper;\n            refWrapper = wrap(refNode);\n          }\n        } else {\n          refWrapper = null;\n          refNode = null;\n        }\n        refWrapper && assert(refWrapper.parentNode === this);\n        var nodes;\n        var previousNode = refWrapper ? refWrapper.previousSibling : this.lastChild;\n        var useNative = !this.invalidateShadowRenderer() && !invalidateParent(childWrapper);\n        if (useNative) nodes = collectNodesNative(childWrapper); else nodes = collectNodes(childWrapper, this, previousNode, refWrapper);\n        if (useNative) {\n          ensureSameOwnerDocument(this, childWrapper);\n          clearChildNodes(this);\n          originalInsertBefore.call(unsafeUnwrap(this), unwrap(childWrapper), refNode);\n        } else {\n          if (!previousNode) this.firstChild_ = nodes[0];\n          if (!refWrapper) {\n            this.lastChild_ = nodes[nodes.length - 1];\n            if (this.firstChild_ === undefined) this.firstChild_ = this.firstChild;\n          }\n          var parentNode = refNode ? refNode.parentNode : unsafeUnwrap(this);\n          if (parentNode) {\n            originalInsertBefore.call(parentNode, unwrapNodesForInsertion(this, nodes), refNode);\n          } else {\n            adoptNodesIfNeeded(this, nodes);\n          }\n        }\n        enqueueMutation(this, \"childList\", {\n          addedNodes: nodes,\n          nextSibling: refWrapper,\n          previousSibling: previousNode\n        });\n        nodesWereAdded(nodes, this);\n        return childWrapper;\n      },\n      removeChild: function(childWrapper) {\n        assertIsNodeWrapper(childWrapper);\n        if (childWrapper.parentNode !== this) {\n          var found = false;\n          var childNodes = this.childNodes;\n          for (var ieChild = this.firstChild; ieChild; ieChild = ieChild.nextSibling) {\n            if (ieChild === childWrapper) {\n              found = true;\n              break;\n            }\n          }\n          if (!found) {\n            throw new Error(\"NotFoundError\");\n          }\n        }\n        var childNode = unwrap(childWrapper);\n        var childWrapperNextSibling = childWrapper.nextSibling;\n        var childWrapperPreviousSibling = childWrapper.previousSibling;\n        if (this.invalidateShadowRenderer()) {\n          var thisFirstChild = this.firstChild;\n          var thisLastChild = this.lastChild;\n          var parentNode = childNode.parentNode;\n          if (parentNode) removeChildOriginalHelper(parentNode, childNode);\n          if (thisFirstChild === childWrapper) this.firstChild_ = childWrapperNextSibling;\n          if (thisLastChild === childWrapper) this.lastChild_ = childWrapperPreviousSibling;\n          if (childWrapperPreviousSibling) childWrapperPreviousSibling.nextSibling_ = childWrapperNextSibling;\n          if (childWrapperNextSibling) {\n            childWrapperNextSibling.previousSibling_ = childWrapperPreviousSibling;\n          }\n          childWrapper.previousSibling_ = childWrapper.nextSibling_ = childWrapper.parentNode_ = undefined;\n        } else {\n          clearChildNodes(this);\n          removeChildOriginalHelper(unsafeUnwrap(this), childNode);\n        }\n        if (!surpressMutations) {\n          enqueueMutation(this, \"childList\", {\n            removedNodes: createOneElementNodeList(childWrapper),\n            nextSibling: childWrapperNextSibling,\n            previousSibling: childWrapperPreviousSibling\n          });\n        }\n        registerTransientObservers(this, childWrapper);\n        return childWrapper;\n      },\n      replaceChild: function(newChildWrapper, oldChildWrapper) {\n        assertIsNodeWrapper(newChildWrapper);\n        var oldChildNode;\n        if (isWrapper(oldChildWrapper)) {\n          oldChildNode = unwrap(oldChildWrapper);\n        } else {\n          oldChildNode = oldChildWrapper;\n          oldChildWrapper = wrap(oldChildNode);\n        }\n        if (oldChildWrapper.parentNode !== this) {\n          throw new Error(\"NotFoundError\");\n        }\n        var nextNode = oldChildWrapper.nextSibling;\n        var previousNode = oldChildWrapper.previousSibling;\n        var nodes;\n        var useNative = !this.invalidateShadowRenderer() && !invalidateParent(newChildWrapper);\n        if (useNative) {\n          nodes = collectNodesNative(newChildWrapper);\n        } else {\n          if (nextNode === newChildWrapper) nextNode = newChildWrapper.nextSibling;\n          nodes = collectNodes(newChildWrapper, this, previousNode, nextNode);\n        }\n        if (!useNative) {\n          if (this.firstChild === oldChildWrapper) this.firstChild_ = nodes[0];\n          if (this.lastChild === oldChildWrapper) this.lastChild_ = nodes[nodes.length - 1];\n          oldChildWrapper.previousSibling_ = oldChildWrapper.nextSibling_ = oldChildWrapper.parentNode_ = undefined;\n          if (oldChildNode.parentNode) {\n            originalReplaceChild.call(oldChildNode.parentNode, unwrapNodesForInsertion(this, nodes), oldChildNode);\n          }\n        } else {\n          ensureSameOwnerDocument(this, newChildWrapper);\n          clearChildNodes(this);\n          originalReplaceChild.call(unsafeUnwrap(this), unwrap(newChildWrapper), oldChildNode);\n        }\n        enqueueMutation(this, \"childList\", {\n          addedNodes: nodes,\n          removedNodes: createOneElementNodeList(oldChildWrapper),\n          nextSibling: nextNode,\n          previousSibling: previousNode\n        });\n        nodeWasRemoved(oldChildWrapper);\n        nodesWereAdded(nodes, this);\n        return oldChildWrapper;\n      },\n      nodeIsInserted_: function() {\n        for (var child = this.firstChild; child; child = child.nextSibling) {\n          child.nodeIsInserted_();\n        }\n      },\n      hasChildNodes: function() {\n        return this.firstChild !== null;\n      },\n      get parentNode() {\n        return this.parentNode_ !== undefined ? this.parentNode_ : wrap(unsafeUnwrap(this).parentNode);\n      },\n      get firstChild() {\n        return this.firstChild_ !== undefined ? this.firstChild_ : wrap(unsafeUnwrap(this).firstChild);\n      },\n      get lastChild() {\n        return this.lastChild_ !== undefined ? this.lastChild_ : wrap(unsafeUnwrap(this).lastChild);\n      },\n      get nextSibling() {\n        return this.nextSibling_ !== undefined ? this.nextSibling_ : wrap(unsafeUnwrap(this).nextSibling);\n      },\n      get previousSibling() {\n        return this.previousSibling_ !== undefined ? this.previousSibling_ : wrap(unsafeUnwrap(this).previousSibling);\n      },\n      get parentElement() {\n        var p = this.parentNode;\n        while (p && p.nodeType !== Node.ELEMENT_NODE) {\n          p = p.parentNode;\n        }\n        return p;\n      },\n      get textContent() {\n        var s = \"\";\n        for (var child = this.firstChild; child; child = child.nextSibling) {\n          if (child.nodeType != Node.COMMENT_NODE) {\n            s += child.textContent;\n          }\n        }\n        return s;\n      },\n      set textContent(textContent) {\n        if (textContent == null) textContent = \"\";\n        var removedNodes = snapshotNodeList(this.childNodes);\n        if (this.invalidateShadowRenderer()) {\n          removeAllChildNodes(this);\n          if (textContent !== \"\") {\n            var textNode = unsafeUnwrap(this).ownerDocument.createTextNode(textContent);\n            this.appendChild(textNode);\n          }\n        } else {\n          clearChildNodes(this);\n          unsafeUnwrap(this).textContent = textContent;\n        }\n        var addedNodes = snapshotNodeList(this.childNodes);\n        enqueueMutation(this, \"childList\", {\n          addedNodes: addedNodes,\n          removedNodes: removedNodes\n        });\n        nodesWereRemoved(removedNodes);\n        nodesWereAdded(addedNodes, this);\n      },\n      get childNodes() {\n        var wrapperList = new NodeList();\n        var i = 0;\n        for (var child = this.firstChild; child; child = child.nextSibling) {\n          wrapperList[i++] = child;\n        }\n        wrapperList.length = i;\n        return wrapperList;\n      },\n      cloneNode: function(deep) {\n        return cloneNode(this, deep);\n      },\n      contains: function(child) {\n        return contains(this, wrapIfNeeded(child));\n      },\n      compareDocumentPosition: function(otherNode) {\n        return originalCompareDocumentPosition.call(unsafeUnwrap(this), unwrapIfNeeded(otherNode));\n      },\n      normalize: function() {\n        var nodes = snapshotNodeList(this.childNodes);\n        var remNodes = [];\n        var s = \"\";\n        var modNode;\n        for (var i = 0, n; i < nodes.length; i++) {\n          n = nodes[i];\n          if (n.nodeType === Node.TEXT_NODE) {\n            if (!modNode && !n.data.length) this.removeNode(n); else if (!modNode) modNode = n; else {\n              s += n.data;\n              remNodes.push(n);\n            }\n          } else {\n            if (modNode && remNodes.length) {\n              modNode.data += s;\n              cleanupNodes(remNodes);\n            }\n            remNodes = [];\n            s = \"\";\n            modNode = null;\n            if (n.childNodes.length) n.normalize();\n          }\n        }\n        if (modNode && remNodes.length) {\n          modNode.data += s;\n          cleanupNodes(remNodes);\n        }\n      }\n    });\n    defineWrapGetter(Node, \"ownerDocument\");\n    registerWrapper(OriginalNode, Node, document.createDocumentFragment());\n    delete Node.prototype.querySelector;\n    delete Node.prototype.querySelectorAll;\n    Node.prototype = mixin(Object_create(EventTarget.prototype), Node.prototype);\n    scope.cloneNode = cloneNode;\n    scope.nodeWasAdded = nodeWasAdded;\n    scope.nodeWasRemoved = nodeWasRemoved;\n    scope.nodesWereAdded = nodesWereAdded;\n    scope.nodesWereRemoved = nodesWereRemoved;\n    scope.originalInsertBefore = originalInsertBefore;\n    scope.originalRemoveChild = originalRemoveChild;\n    scope.snapshotNodeList = snapshotNodeList;\n    scope.wrappers.Node = Node;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLCollection = scope.wrappers.HTMLCollection;\n    var NodeList = scope.wrappers.NodeList;\n    var getTreeScope = scope.getTreeScope;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var wrap = scope.wrap;\n    var originalDocumentQuerySelector = document.querySelector;\n    var originalElementQuerySelector = document.documentElement.querySelector;\n    var originalDocumentQuerySelectorAll = document.querySelectorAll;\n    var originalElementQuerySelectorAll = document.documentElement.querySelectorAll;\n    var originalDocumentGetElementsByTagName = document.getElementsByTagName;\n    var originalElementGetElementsByTagName = document.documentElement.getElementsByTagName;\n    var originalDocumentGetElementsByTagNameNS = document.getElementsByTagNameNS;\n    var originalElementGetElementsByTagNameNS = document.documentElement.getElementsByTagNameNS;\n    var OriginalElement = window.Element;\n    var OriginalDocument = window.HTMLDocument || window.Document;\n    function filterNodeList(list, index, result, deep) {\n      var wrappedItem = null;\n      var root = null;\n      for (var i = 0, length = list.length; i < length; i++) {\n        wrappedItem = wrap(list[i]);\n        if (!deep && (root = getTreeScope(wrappedItem).root)) {\n          if (root instanceof scope.wrappers.ShadowRoot) {\n            continue;\n          }\n        }\n        result[index++] = wrappedItem;\n      }\n      return index;\n    }\n    function shimSelector(selector) {\n      return String(selector).replace(/\\/deep\\//g, \" \");\n    }\n    function findOne(node, selector) {\n      var m, el = node.firstElementChild;\n      while (el) {\n        if (el.matches(selector)) return el;\n        m = findOne(el, selector);\n        if (m) return m;\n        el = el.nextElementSibling;\n      }\n      return null;\n    }\n    function matchesSelector(el, selector) {\n      return el.matches(selector);\n    }\n    var XHTML_NS = \"http://www.w3.org/1999/xhtml\";\n    function matchesTagName(el, localName, localNameLowerCase) {\n      var ln = el.localName;\n      return ln === localName || ln === localNameLowerCase && el.namespaceURI === XHTML_NS;\n    }\n    function matchesEveryThing() {\n      return true;\n    }\n    function matchesLocalNameOnly(el, ns, localName) {\n      return el.localName === localName;\n    }\n    function matchesNameSpace(el, ns) {\n      return el.namespaceURI === ns;\n    }\n    function matchesLocalNameNS(el, ns, localName) {\n      return el.namespaceURI === ns && el.localName === localName;\n    }\n    function findElements(node, index, result, p, arg0, arg1) {\n      var el = node.firstElementChild;\n      while (el) {\n        if (p(el, arg0, arg1)) result[index++] = el;\n        index = findElements(el, index, result, p, arg0, arg1);\n        el = el.nextElementSibling;\n      }\n      return index;\n    }\n    function querySelectorAllFiltered(p, index, result, selector, deep) {\n      var target = unsafeUnwrap(this);\n      var list;\n      var root = getTreeScope(this).root;\n      if (root instanceof scope.wrappers.ShadowRoot) {\n        return findElements(this, index, result, p, selector, null);\n      } else if (target instanceof OriginalElement) {\n        list = originalElementQuerySelectorAll.call(target, selector);\n      } else if (target instanceof OriginalDocument) {\n        list = originalDocumentQuerySelectorAll.call(target, selector);\n      } else {\n        return findElements(this, index, result, p, selector, null);\n      }\n      return filterNodeList(list, index, result, deep);\n    }\n    var SelectorsInterface = {\n      querySelector: function(selector) {\n        var shimmed = shimSelector(selector);\n        var deep = shimmed !== selector;\n        selector = shimmed;\n        var target = unsafeUnwrap(this);\n        var wrappedItem;\n        var root = getTreeScope(this).root;\n        if (root instanceof scope.wrappers.ShadowRoot) {\n          return findOne(this, selector);\n        } else if (target instanceof OriginalElement) {\n          wrappedItem = wrap(originalElementQuerySelector.call(target, selector));\n        } else if (target instanceof OriginalDocument) {\n          wrappedItem = wrap(originalDocumentQuerySelector.call(target, selector));\n        } else {\n          return findOne(this, selector);\n        }\n        if (!wrappedItem) {\n          return wrappedItem;\n        } else if (!deep && (root = getTreeScope(wrappedItem).root)) {\n          if (root instanceof scope.wrappers.ShadowRoot) {\n            return findOne(this, selector);\n          }\n        }\n        return wrappedItem;\n      },\n      querySelectorAll: function(selector) {\n        var shimmed = shimSelector(selector);\n        var deep = shimmed !== selector;\n        selector = shimmed;\n        var result = new NodeList();\n        result.length = querySelectorAllFiltered.call(this, matchesSelector, 0, result, selector, deep);\n        return result;\n      }\n    };\n    function getElementsByTagNameFiltered(p, index, result, localName, lowercase) {\n      var target = unsafeUnwrap(this);\n      var list;\n      var root = getTreeScope(this).root;\n      if (root instanceof scope.wrappers.ShadowRoot) {\n        return findElements(this, index, result, p, localName, lowercase);\n      } else if (target instanceof OriginalElement) {\n        list = originalElementGetElementsByTagName.call(target, localName, lowercase);\n      } else if (target instanceof OriginalDocument) {\n        list = originalDocumentGetElementsByTagName.call(target, localName, lowercase);\n      } else {\n        return findElements(this, index, result, p, localName, lowercase);\n      }\n      return filterNodeList(list, index, result, false);\n    }\n    function getElementsByTagNameNSFiltered(p, index, result, ns, localName) {\n      var target = unsafeUnwrap(this);\n      var list;\n      var root = getTreeScope(this).root;\n      if (root instanceof scope.wrappers.ShadowRoot) {\n        return findElements(this, index, result, p, ns, localName);\n      } else if (target instanceof OriginalElement) {\n        list = originalElementGetElementsByTagNameNS.call(target, ns, localName);\n      } else if (target instanceof OriginalDocument) {\n        list = originalDocumentGetElementsByTagNameNS.call(target, ns, localName);\n      } else {\n        return findElements(this, index, result, p, ns, localName);\n      }\n      return filterNodeList(list, index, result, false);\n    }\n    var GetElementsByInterface = {\n      getElementsByTagName: function(localName) {\n        var result = new HTMLCollection();\n        var match = localName === \"*\" ? matchesEveryThing : matchesTagName;\n        result.length = getElementsByTagNameFiltered.call(this, match, 0, result, localName, localName.toLowerCase());\n        return result;\n      },\n      getElementsByClassName: function(className) {\n        return this.querySelectorAll(\".\" + className);\n      },\n      getElementsByTagNameNS: function(ns, localName) {\n        var result = new HTMLCollection();\n        var match = null;\n        if (ns === \"*\") {\n          match = localName === \"*\" ? matchesEveryThing : matchesLocalNameOnly;\n        } else {\n          match = localName === \"*\" ? matchesNameSpace : matchesLocalNameNS;\n        }\n        result.length = getElementsByTagNameNSFiltered.call(this, match, 0, result, ns || null, localName);\n        return result;\n      }\n    };\n    scope.GetElementsByInterface = GetElementsByInterface;\n    scope.SelectorsInterface = SelectorsInterface;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var NodeList = scope.wrappers.NodeList;\n    function forwardElement(node) {\n      while (node && node.nodeType !== Node.ELEMENT_NODE) {\n        node = node.nextSibling;\n      }\n      return node;\n    }\n    function backwardsElement(node) {\n      while (node && node.nodeType !== Node.ELEMENT_NODE) {\n        node = node.previousSibling;\n      }\n      return node;\n    }\n    var ParentNodeInterface = {\n      get firstElementChild() {\n        return forwardElement(this.firstChild);\n      },\n      get lastElementChild() {\n        return backwardsElement(this.lastChild);\n      },\n      get childElementCount() {\n        var count = 0;\n        for (var child = this.firstElementChild; child; child = child.nextElementSibling) {\n          count++;\n        }\n        return count;\n      },\n      get children() {\n        var wrapperList = new NodeList();\n        var i = 0;\n        for (var child = this.firstElementChild; child; child = child.nextElementSibling) {\n          wrapperList[i++] = child;\n        }\n        wrapperList.length = i;\n        return wrapperList;\n      },\n      remove: function() {\n        var p = this.parentNode;\n        if (p) p.removeChild(this);\n      }\n    };\n    var ChildNodeInterface = {\n      get nextElementSibling() {\n        return forwardElement(this.nextSibling);\n      },\n      get previousElementSibling() {\n        return backwardsElement(this.previousSibling);\n      }\n    };\n    scope.ChildNodeInterface = ChildNodeInterface;\n    scope.ParentNodeInterface = ParentNodeInterface;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var ChildNodeInterface = scope.ChildNodeInterface;\n    var Node = scope.wrappers.Node;\n    var enqueueMutation = scope.enqueueMutation;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var OriginalCharacterData = window.CharacterData;\n    function CharacterData(node) {\n      Node.call(this, node);\n    }\n    CharacterData.prototype = Object_create(Node.prototype);\n    mixin(CharacterData.prototype, {\n      get textContent() {\n        return this.data;\n      },\n      set textContent(value) {\n        this.data = value;\n      },\n      get data() {\n        return unsafeUnwrap(this).data;\n      },\n      set data(value) {\n        var oldValue = unsafeUnwrap(this).data;\n        enqueueMutation(this, \"characterData\", {\n          oldValue: oldValue\n        });\n        unsafeUnwrap(this).data = value;\n      }\n    });\n    mixin(CharacterData.prototype, ChildNodeInterface);\n    registerWrapper(OriginalCharacterData, CharacterData, document.createTextNode(\"\"));\n    scope.wrappers.CharacterData = CharacterData;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var CharacterData = scope.wrappers.CharacterData;\n    var enqueueMutation = scope.enqueueMutation;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    function toUInt32(x) {\n      return x >>> 0;\n    }\n    var OriginalText = window.Text;\n    function Text(node) {\n      CharacterData.call(this, node);\n    }\n    Text.prototype = Object_create(CharacterData.prototype);\n    mixin(Text.prototype, {\n      splitText: function(offset) {\n        offset = toUInt32(offset);\n        var s = this.data;\n        if (offset > s.length) throw new Error(\"IndexSizeError\");\n        var head = s.slice(0, offset);\n        var tail = s.slice(offset);\n        this.data = head;\n        var newTextNode = this.ownerDocument.createTextNode(tail);\n        if (this.parentNode) this.parentNode.insertBefore(newTextNode, this.nextSibling);\n        return newTextNode;\n      }\n    });\n    registerWrapper(OriginalText, Text, document.createTextNode(\"\"));\n    scope.wrappers.Text = Text;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var setWrapper = scope.setWrapper;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    function invalidateClass(el) {\n      scope.invalidateRendererBasedOnAttribute(el, \"class\");\n    }\n    function DOMTokenList(impl, ownerElement) {\n      setWrapper(impl, this);\n      this.ownerElement_ = ownerElement;\n    }\n    DOMTokenList.prototype = {\n      constructor: DOMTokenList,\n      get length() {\n        return unsafeUnwrap(this).length;\n      },\n      item: function(index) {\n        return unsafeUnwrap(this).item(index);\n      },\n      contains: function(token) {\n        return unsafeUnwrap(this).contains(token);\n      },\n      add: function() {\n        unsafeUnwrap(this).add.apply(unsafeUnwrap(this), arguments);\n        invalidateClass(this.ownerElement_);\n      },\n      remove: function() {\n        unsafeUnwrap(this).remove.apply(unsafeUnwrap(this), arguments);\n        invalidateClass(this.ownerElement_);\n      },\n      toggle: function(token) {\n        var rv = unsafeUnwrap(this).toggle.apply(unsafeUnwrap(this), arguments);\n        invalidateClass(this.ownerElement_);\n        return rv;\n      },\n      toString: function() {\n        return unsafeUnwrap(this).toString();\n      }\n    };\n    scope.wrappers.DOMTokenList = DOMTokenList;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var ChildNodeInterface = scope.ChildNodeInterface;\n    var GetElementsByInterface = scope.GetElementsByInterface;\n    var Node = scope.wrappers.Node;\n    var DOMTokenList = scope.wrappers.DOMTokenList;\n    var ParentNodeInterface = scope.ParentNodeInterface;\n    var SelectorsInterface = scope.SelectorsInterface;\n    var addWrapNodeListMethod = scope.addWrapNodeListMethod;\n    var enqueueMutation = scope.enqueueMutation;\n    var mixin = scope.mixin;\n    var oneOf = scope.oneOf;\n    var registerWrapper = scope.registerWrapper;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var wrappers = scope.wrappers;\n    var OriginalElement = window.Element;\n    var matchesNames = [ \"matches\", \"mozMatchesSelector\", \"msMatchesSelector\", \"webkitMatchesSelector\" ].filter(function(name) {\n      return OriginalElement.prototype[name];\n    });\n    var matchesName = matchesNames[0];\n    var originalMatches = OriginalElement.prototype[matchesName];\n    function invalidateRendererBasedOnAttribute(element, name) {\n      var p = element.parentNode;\n      if (!p || !p.shadowRoot) return;\n      var renderer = scope.getRendererForHost(p);\n      if (renderer.dependsOnAttribute(name)) renderer.invalidate();\n    }\n    function enqueAttributeChange(element, name, oldValue) {\n      enqueueMutation(element, \"attributes\", {\n        name: name,\n        namespace: null,\n        oldValue: oldValue\n      });\n    }\n    var classListTable = new WeakMap();\n    function Element(node) {\n      Node.call(this, node);\n    }\n    Element.prototype = Object_create(Node.prototype);\n    mixin(Element.prototype, {\n      createShadowRoot: function() {\n        var newShadowRoot = new wrappers.ShadowRoot(this);\n        unsafeUnwrap(this).polymerShadowRoot_ = newShadowRoot;\n        var renderer = scope.getRendererForHost(this);\n        renderer.invalidate();\n        return newShadowRoot;\n      },\n      get shadowRoot() {\n        return unsafeUnwrap(this).polymerShadowRoot_ || null;\n      },\n      setAttribute: function(name, value) {\n        var oldValue = unsafeUnwrap(this).getAttribute(name);\n        unsafeUnwrap(this).setAttribute(name, value);\n        enqueAttributeChange(this, name, oldValue);\n        invalidateRendererBasedOnAttribute(this, name);\n      },\n      removeAttribute: function(name) {\n        var oldValue = unsafeUnwrap(this).getAttribute(name);\n        unsafeUnwrap(this).removeAttribute(name);\n        enqueAttributeChange(this, name, oldValue);\n        invalidateRendererBasedOnAttribute(this, name);\n      },\n      matches: function(selector) {\n        return originalMatches.call(unsafeUnwrap(this), selector);\n      },\n      get classList() {\n        var list = classListTable.get(this);\n        if (!list) {\n          classListTable.set(this, list = new DOMTokenList(unsafeUnwrap(this).classList, this));\n        }\n        return list;\n      },\n      get className() {\n        return unsafeUnwrap(this).className;\n      },\n      set className(v) {\n        this.setAttribute(\"class\", v);\n      },\n      get id() {\n        return unsafeUnwrap(this).id;\n      },\n      set id(v) {\n        this.setAttribute(\"id\", v);\n      }\n    });\n    matchesNames.forEach(function(name) {\n      if (name !== \"matches\") {\n        Element.prototype[name] = function(selector) {\n          return this.matches(selector);\n        };\n      }\n    });\n    if (OriginalElement.prototype.webkitCreateShadowRoot) {\n      Element.prototype.webkitCreateShadowRoot = Element.prototype.createShadowRoot;\n    }\n    mixin(Element.prototype, ChildNodeInterface);\n    mixin(Element.prototype, GetElementsByInterface);\n    mixin(Element.prototype, ParentNodeInterface);\n    mixin(Element.prototype, SelectorsInterface);\n    registerWrapper(OriginalElement, Element, document.createElementNS(null, \"x\"));\n    scope.invalidateRendererBasedOnAttribute = invalidateRendererBasedOnAttribute;\n    scope.matchesNames = matchesNames;\n    scope.wrappers.Element = Element;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var Element = scope.wrappers.Element;\n    var defineGetter = scope.defineGetter;\n    var enqueueMutation = scope.enqueueMutation;\n    var mixin = scope.mixin;\n    var nodesWereAdded = scope.nodesWereAdded;\n    var nodesWereRemoved = scope.nodesWereRemoved;\n    var registerWrapper = scope.registerWrapper;\n    var snapshotNodeList = scope.snapshotNodeList;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var unwrap = scope.unwrap;\n    var wrap = scope.wrap;\n    var wrappers = scope.wrappers;\n    var escapeAttrRegExp = /[&\\u00A0\"]/g;\n    var escapeDataRegExp = /[&\\u00A0<>]/g;\n    function escapeReplace(c) {\n      switch (c) {\n       case \"&\":\n        return \"&amp;\";\n\n       case \"<\":\n        return \"&lt;\";\n\n       case \">\":\n        return \"&gt;\";\n\n       case '\"':\n        return \"&quot;\";\n\n       case \" \":\n        return \"&nbsp;\";\n      }\n    }\n    function escapeAttr(s) {\n      return s.replace(escapeAttrRegExp, escapeReplace);\n    }\n    function escapeData(s) {\n      return s.replace(escapeDataRegExp, escapeReplace);\n    }\n    function makeSet(arr) {\n      var set = {};\n      for (var i = 0; i < arr.length; i++) {\n        set[arr[i]] = true;\n      }\n      return set;\n    }\n    var voidElements = makeSet([ \"area\", \"base\", \"br\", \"col\", \"command\", \"embed\", \"hr\", \"img\", \"input\", \"keygen\", \"link\", \"meta\", \"param\", \"source\", \"track\", \"wbr\" ]);\n    var plaintextParents = makeSet([ \"style\", \"script\", \"xmp\", \"iframe\", \"noembed\", \"noframes\", \"plaintext\", \"noscript\" ]);\n    function getOuterHTML(node, parentNode) {\n      switch (node.nodeType) {\n       case Node.ELEMENT_NODE:\n        var tagName = node.tagName.toLowerCase();\n        var s = \"<\" + tagName;\n        var attrs = node.attributes;\n        for (var i = 0, attr; attr = attrs[i]; i++) {\n          s += \" \" + attr.name + '=\"' + escapeAttr(attr.value) + '\"';\n        }\n        s += \">\";\n        if (voidElements[tagName]) return s;\n        return s + getInnerHTML(node) + \"</\" + tagName + \">\";\n\n       case Node.TEXT_NODE:\n        var data = node.data;\n        if (parentNode && plaintextParents[parentNode.localName]) return data;\n        return escapeData(data);\n\n       case Node.COMMENT_NODE:\n        return \"<!--\" + node.data + \"-->\";\n\n       default:\n        console.error(node);\n        throw new Error(\"not implemented\");\n      }\n    }\n    function getInnerHTML(node) {\n      if (node instanceof wrappers.HTMLTemplateElement) node = node.content;\n      var s = \"\";\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        s += getOuterHTML(child, node);\n      }\n      return s;\n    }\n    function setInnerHTML(node, value, opt_tagName) {\n      var tagName = opt_tagName || \"div\";\n      node.textContent = \"\";\n      var tempElement = unwrap(node.ownerDocument.createElement(tagName));\n      tempElement.innerHTML = value;\n      var firstChild;\n      while (firstChild = tempElement.firstChild) {\n        node.appendChild(wrap(firstChild));\n      }\n    }\n    var oldIe = /MSIE/.test(navigator.userAgent);\n    var OriginalHTMLElement = window.HTMLElement;\n    var OriginalHTMLTemplateElement = window.HTMLTemplateElement;\n    function HTMLElement(node) {\n      Element.call(this, node);\n    }\n    HTMLElement.prototype = Object_create(Element.prototype);\n    mixin(HTMLElement.prototype, {\n      get innerHTML() {\n        return getInnerHTML(this);\n      },\n      set innerHTML(value) {\n        if (oldIe && plaintextParents[this.localName]) {\n          this.textContent = value;\n          return;\n        }\n        var removedNodes = snapshotNodeList(this.childNodes);\n        if (this.invalidateShadowRenderer()) {\n          if (this instanceof wrappers.HTMLTemplateElement) setInnerHTML(this.content, value); else setInnerHTML(this, value, this.tagName);\n        } else if (!OriginalHTMLTemplateElement && this instanceof wrappers.HTMLTemplateElement) {\n          setInnerHTML(this.content, value);\n        } else {\n          unsafeUnwrap(this).innerHTML = value;\n        }\n        var addedNodes = snapshotNodeList(this.childNodes);\n        enqueueMutation(this, \"childList\", {\n          addedNodes: addedNodes,\n          removedNodes: removedNodes\n        });\n        nodesWereRemoved(removedNodes);\n        nodesWereAdded(addedNodes, this);\n      },\n      get outerHTML() {\n        return getOuterHTML(this, this.parentNode);\n      },\n      set outerHTML(value) {\n        var p = this.parentNode;\n        if (p) {\n          p.invalidateShadowRenderer();\n          var df = frag(p, value);\n          p.replaceChild(df, this);\n        }\n      },\n      insertAdjacentHTML: function(position, text) {\n        var contextElement, refNode;\n        switch (String(position).toLowerCase()) {\n         case \"beforebegin\":\n          contextElement = this.parentNode;\n          refNode = this;\n          break;\n\n         case \"afterend\":\n          contextElement = this.parentNode;\n          refNode = this.nextSibling;\n          break;\n\n         case \"afterbegin\":\n          contextElement = this;\n          refNode = this.firstChild;\n          break;\n\n         case \"beforeend\":\n          contextElement = this;\n          refNode = null;\n          break;\n\n         default:\n          return;\n        }\n        var df = frag(contextElement, text);\n        contextElement.insertBefore(df, refNode);\n      },\n      get hidden() {\n        return this.hasAttribute(\"hidden\");\n      },\n      set hidden(v) {\n        if (v) {\n          this.setAttribute(\"hidden\", \"\");\n        } else {\n          this.removeAttribute(\"hidden\");\n        }\n      }\n    });\n    function frag(contextElement, html) {\n      var p = unwrap(contextElement.cloneNode(false));\n      p.innerHTML = html;\n      var df = unwrap(document.createDocumentFragment());\n      var c;\n      while (c = p.firstChild) {\n        df.appendChild(c);\n      }\n      return wrap(df);\n    }\n    function getter(name) {\n      return function() {\n        scope.renderAllPending();\n        return unsafeUnwrap(this)[name];\n      };\n    }\n    function getterRequiresRendering(name) {\n      defineGetter(HTMLElement, name, getter(name));\n    }\n    [ \"clientHeight\", \"clientLeft\", \"clientTop\", \"clientWidth\", \"offsetHeight\", \"offsetLeft\", \"offsetTop\", \"offsetWidth\", \"scrollHeight\", \"scrollWidth\" ].forEach(getterRequiresRendering);\n    function getterAndSetterRequiresRendering(name) {\n      Object.defineProperty(HTMLElement.prototype, name, {\n        get: getter(name),\n        set: function(v) {\n          scope.renderAllPending();\n          unsafeUnwrap(this)[name] = v;\n        },\n        configurable: true,\n        enumerable: true\n      });\n    }\n    [ \"scrollLeft\", \"scrollTop\" ].forEach(getterAndSetterRequiresRendering);\n    function methodRequiresRendering(name) {\n      Object.defineProperty(HTMLElement.prototype, name, {\n        value: function() {\n          scope.renderAllPending();\n          return unsafeUnwrap(this)[name].apply(unsafeUnwrap(this), arguments);\n        },\n        configurable: true,\n        enumerable: true\n      });\n    }\n    [ \"getBoundingClientRect\", \"getClientRects\", \"scrollIntoView\" ].forEach(methodRequiresRendering);\n    registerWrapper(OriginalHTMLElement, HTMLElement, document.createElement(\"b\"));\n    scope.wrappers.HTMLElement = HTMLElement;\n    scope.getInnerHTML = getInnerHTML;\n    scope.setInnerHTML = setInnerHTML;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLElement = scope.wrappers.HTMLElement;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var wrap = scope.wrap;\n    var OriginalHTMLCanvasElement = window.HTMLCanvasElement;\n    function HTMLCanvasElement(node) {\n      HTMLElement.call(this, node);\n    }\n    HTMLCanvasElement.prototype = Object_create(HTMLElement.prototype);\n    mixin(HTMLCanvasElement.prototype, {\n      getContext: function() {\n        var context = unsafeUnwrap(this).getContext.apply(unsafeUnwrap(this), arguments);\n        return context && wrap(context);\n      }\n    });\n    registerWrapper(OriginalHTMLCanvasElement, HTMLCanvasElement, document.createElement(\"canvas\"));\n    scope.wrappers.HTMLCanvasElement = HTMLCanvasElement;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLElement = scope.wrappers.HTMLElement;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var OriginalHTMLContentElement = window.HTMLContentElement;\n    function HTMLContentElement(node) {\n      HTMLElement.call(this, node);\n    }\n    HTMLContentElement.prototype = Object_create(HTMLElement.prototype);\n    mixin(HTMLContentElement.prototype, {\n      constructor: HTMLContentElement,\n      get select() {\n        return this.getAttribute(\"select\");\n      },\n      set select(value) {\n        this.setAttribute(\"select\", value);\n      },\n      setAttribute: function(n, v) {\n        HTMLElement.prototype.setAttribute.call(this, n, v);\n        if (String(n).toLowerCase() === \"select\") this.invalidateShadowRenderer(true);\n      }\n    });\n    if (OriginalHTMLContentElement) registerWrapper(OriginalHTMLContentElement, HTMLContentElement);\n    scope.wrappers.HTMLContentElement = HTMLContentElement;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLElement = scope.wrappers.HTMLElement;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var wrapHTMLCollection = scope.wrapHTMLCollection;\n    var unwrap = scope.unwrap;\n    var OriginalHTMLFormElement = window.HTMLFormElement;\n    function HTMLFormElement(node) {\n      HTMLElement.call(this, node);\n    }\n    HTMLFormElement.prototype = Object_create(HTMLElement.prototype);\n    mixin(HTMLFormElement.prototype, {\n      get elements() {\n        return wrapHTMLCollection(unwrap(this).elements);\n      }\n    });\n    registerWrapper(OriginalHTMLFormElement, HTMLFormElement, document.createElement(\"form\"));\n    scope.wrappers.HTMLFormElement = HTMLFormElement;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLElement = scope.wrappers.HTMLElement;\n    var registerWrapper = scope.registerWrapper;\n    var unwrap = scope.unwrap;\n    var rewrap = scope.rewrap;\n    var OriginalHTMLImageElement = window.HTMLImageElement;\n    function HTMLImageElement(node) {\n      HTMLElement.call(this, node);\n    }\n    HTMLImageElement.prototype = Object_create(HTMLElement.prototype);\n    registerWrapper(OriginalHTMLImageElement, HTMLImageElement, document.createElement(\"img\"));\n    function Image(width, height) {\n      if (!(this instanceof Image)) {\n        throw new TypeError(\"DOM object constructor cannot be called as a function.\");\n      }\n      var node = unwrap(document.createElement(\"img\"));\n      HTMLElement.call(this, node);\n      rewrap(node, this);\n      if (width !== undefined) node.width = width;\n      if (height !== undefined) node.height = height;\n    }\n    Image.prototype = HTMLImageElement.prototype;\n    scope.wrappers.HTMLImageElement = HTMLImageElement;\n    scope.wrappers.Image = Image;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLElement = scope.wrappers.HTMLElement;\n    var mixin = scope.mixin;\n    var NodeList = scope.wrappers.NodeList;\n    var registerWrapper = scope.registerWrapper;\n    var OriginalHTMLShadowElement = window.HTMLShadowElement;\n    function HTMLShadowElement(node) {\n      HTMLElement.call(this, node);\n    }\n    HTMLShadowElement.prototype = Object_create(HTMLElement.prototype);\n    HTMLShadowElement.prototype.constructor = HTMLShadowElement;\n    if (OriginalHTMLShadowElement) registerWrapper(OriginalHTMLShadowElement, HTMLShadowElement);\n    scope.wrappers.HTMLShadowElement = HTMLShadowElement;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLElement = scope.wrappers.HTMLElement;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var unwrap = scope.unwrap;\n    var wrap = scope.wrap;\n    var contentTable = new WeakMap();\n    var templateContentsOwnerTable = new WeakMap();\n    function getTemplateContentsOwner(doc) {\n      if (!doc.defaultView) return doc;\n      var d = templateContentsOwnerTable.get(doc);\n      if (!d) {\n        d = doc.implementation.createHTMLDocument(\"\");\n        while (d.lastChild) {\n          d.removeChild(d.lastChild);\n        }\n        templateContentsOwnerTable.set(doc, d);\n      }\n      return d;\n    }\n    function extractContent(templateElement) {\n      var doc = getTemplateContentsOwner(templateElement.ownerDocument);\n      var df = unwrap(doc.createDocumentFragment());\n      var child;\n      while (child = templateElement.firstChild) {\n        df.appendChild(child);\n      }\n      return df;\n    }\n    var OriginalHTMLTemplateElement = window.HTMLTemplateElement;\n    function HTMLTemplateElement(node) {\n      HTMLElement.call(this, node);\n      if (!OriginalHTMLTemplateElement) {\n        var content = extractContent(node);\n        contentTable.set(this, wrap(content));\n      }\n    }\n    HTMLTemplateElement.prototype = Object_create(HTMLElement.prototype);\n    mixin(HTMLTemplateElement.prototype, {\n      constructor: HTMLTemplateElement,\n      get content() {\n        if (OriginalHTMLTemplateElement) return wrap(unsafeUnwrap(this).content);\n        return contentTable.get(this);\n      }\n    });\n    if (OriginalHTMLTemplateElement) registerWrapper(OriginalHTMLTemplateElement, HTMLTemplateElement);\n    scope.wrappers.HTMLTemplateElement = HTMLTemplateElement;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLElement = scope.wrappers.HTMLElement;\n    var registerWrapper = scope.registerWrapper;\n    var OriginalHTMLMediaElement = window.HTMLMediaElement;\n    if (!OriginalHTMLMediaElement) return;\n    function HTMLMediaElement(node) {\n      HTMLElement.call(this, node);\n    }\n    HTMLMediaElement.prototype = Object_create(HTMLElement.prototype);\n    registerWrapper(OriginalHTMLMediaElement, HTMLMediaElement, document.createElement(\"audio\"));\n    scope.wrappers.HTMLMediaElement = HTMLMediaElement;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLMediaElement = scope.wrappers.HTMLMediaElement;\n    var registerWrapper = scope.registerWrapper;\n    var unwrap = scope.unwrap;\n    var rewrap = scope.rewrap;\n    var OriginalHTMLAudioElement = window.HTMLAudioElement;\n    if (!OriginalHTMLAudioElement) return;\n    function HTMLAudioElement(node) {\n      HTMLMediaElement.call(this, node);\n    }\n    HTMLAudioElement.prototype = Object_create(HTMLMediaElement.prototype);\n    registerWrapper(OriginalHTMLAudioElement, HTMLAudioElement, document.createElement(\"audio\"));\n    function Audio(src) {\n      if (!(this instanceof Audio)) {\n        throw new TypeError(\"DOM object constructor cannot be called as a function.\");\n      }\n      var node = unwrap(document.createElement(\"audio\"));\n      HTMLMediaElement.call(this, node);\n      rewrap(node, this);\n      node.setAttribute(\"preload\", \"auto\");\n      if (src !== undefined) node.setAttribute(\"src\", src);\n    }\n    Audio.prototype = HTMLAudioElement.prototype;\n    scope.wrappers.HTMLAudioElement = HTMLAudioElement;\n    scope.wrappers.Audio = Audio;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLElement = scope.wrappers.HTMLElement;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var rewrap = scope.rewrap;\n    var unwrap = scope.unwrap;\n    var wrap = scope.wrap;\n    var OriginalHTMLOptionElement = window.HTMLOptionElement;\n    function trimText(s) {\n      return s.replace(/\\s+/g, \" \").trim();\n    }\n    function HTMLOptionElement(node) {\n      HTMLElement.call(this, node);\n    }\n    HTMLOptionElement.prototype = Object_create(HTMLElement.prototype);\n    mixin(HTMLOptionElement.prototype, {\n      get text() {\n        return trimText(this.textContent);\n      },\n      set text(value) {\n        this.textContent = trimText(String(value));\n      },\n      get form() {\n        return wrap(unwrap(this).form);\n      }\n    });\n    registerWrapper(OriginalHTMLOptionElement, HTMLOptionElement, document.createElement(\"option\"));\n    function Option(text, value, defaultSelected, selected) {\n      if (!(this instanceof Option)) {\n        throw new TypeError(\"DOM object constructor cannot be called as a function.\");\n      }\n      var node = unwrap(document.createElement(\"option\"));\n      HTMLElement.call(this, node);\n      rewrap(node, this);\n      if (text !== undefined) node.text = text;\n      if (value !== undefined) node.setAttribute(\"value\", value);\n      if (defaultSelected === true) node.setAttribute(\"selected\", \"\");\n      node.selected = selected === true;\n    }\n    Option.prototype = HTMLOptionElement.prototype;\n    scope.wrappers.HTMLOptionElement = HTMLOptionElement;\n    scope.wrappers.Option = Option;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLElement = scope.wrappers.HTMLElement;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var unwrap = scope.unwrap;\n    var wrap = scope.wrap;\n    var OriginalHTMLSelectElement = window.HTMLSelectElement;\n    function HTMLSelectElement(node) {\n      HTMLElement.call(this, node);\n    }\n    HTMLSelectElement.prototype = Object_create(HTMLElement.prototype);\n    mixin(HTMLSelectElement.prototype, {\n      add: function(element, before) {\n        if (typeof before === \"object\") before = unwrap(before);\n        unwrap(this).add(unwrap(element), before);\n      },\n      remove: function(indexOrNode) {\n        if (indexOrNode === undefined) {\n          HTMLElement.prototype.remove.call(this);\n          return;\n        }\n        if (typeof indexOrNode === \"object\") indexOrNode = unwrap(indexOrNode);\n        unwrap(this).remove(indexOrNode);\n      },\n      get form() {\n        return wrap(unwrap(this).form);\n      }\n    });\n    registerWrapper(OriginalHTMLSelectElement, HTMLSelectElement, document.createElement(\"select\"));\n    scope.wrappers.HTMLSelectElement = HTMLSelectElement;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLElement = scope.wrappers.HTMLElement;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var unwrap = scope.unwrap;\n    var wrap = scope.wrap;\n    var wrapHTMLCollection = scope.wrapHTMLCollection;\n    var OriginalHTMLTableElement = window.HTMLTableElement;\n    function HTMLTableElement(node) {\n      HTMLElement.call(this, node);\n    }\n    HTMLTableElement.prototype = Object_create(HTMLElement.prototype);\n    mixin(HTMLTableElement.prototype, {\n      get caption() {\n        return wrap(unwrap(this).caption);\n      },\n      createCaption: function() {\n        return wrap(unwrap(this).createCaption());\n      },\n      get tHead() {\n        return wrap(unwrap(this).tHead);\n      },\n      createTHead: function() {\n        return wrap(unwrap(this).createTHead());\n      },\n      createTFoot: function() {\n        return wrap(unwrap(this).createTFoot());\n      },\n      get tFoot() {\n        return wrap(unwrap(this).tFoot);\n      },\n      get tBodies() {\n        return wrapHTMLCollection(unwrap(this).tBodies);\n      },\n      createTBody: function() {\n        return wrap(unwrap(this).createTBody());\n      },\n      get rows() {\n        return wrapHTMLCollection(unwrap(this).rows);\n      },\n      insertRow: function(index) {\n        return wrap(unwrap(this).insertRow(index));\n      }\n    });\n    registerWrapper(OriginalHTMLTableElement, HTMLTableElement, document.createElement(\"table\"));\n    scope.wrappers.HTMLTableElement = HTMLTableElement;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLElement = scope.wrappers.HTMLElement;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var wrapHTMLCollection = scope.wrapHTMLCollection;\n    var unwrap = scope.unwrap;\n    var wrap = scope.wrap;\n    var OriginalHTMLTableSectionElement = window.HTMLTableSectionElement;\n    function HTMLTableSectionElement(node) {\n      HTMLElement.call(this, node);\n    }\n    HTMLTableSectionElement.prototype = Object_create(HTMLElement.prototype);\n    mixin(HTMLTableSectionElement.prototype, {\n      constructor: HTMLTableSectionElement,\n      get rows() {\n        return wrapHTMLCollection(unwrap(this).rows);\n      },\n      insertRow: function(index) {\n        return wrap(unwrap(this).insertRow(index));\n      }\n    });\n    registerWrapper(OriginalHTMLTableSectionElement, HTMLTableSectionElement, document.createElement(\"thead\"));\n    scope.wrappers.HTMLTableSectionElement = HTMLTableSectionElement;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLElement = scope.wrappers.HTMLElement;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var wrapHTMLCollection = scope.wrapHTMLCollection;\n    var unwrap = scope.unwrap;\n    var wrap = scope.wrap;\n    var OriginalHTMLTableRowElement = window.HTMLTableRowElement;\n    function HTMLTableRowElement(node) {\n      HTMLElement.call(this, node);\n    }\n    HTMLTableRowElement.prototype = Object_create(HTMLElement.prototype);\n    mixin(HTMLTableRowElement.prototype, {\n      get cells() {\n        return wrapHTMLCollection(unwrap(this).cells);\n      },\n      insertCell: function(index) {\n        return wrap(unwrap(this).insertCell(index));\n      }\n    });\n    registerWrapper(OriginalHTMLTableRowElement, HTMLTableRowElement, document.createElement(\"tr\"));\n    scope.wrappers.HTMLTableRowElement = HTMLTableRowElement;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLContentElement = scope.wrappers.HTMLContentElement;\n    var HTMLElement = scope.wrappers.HTMLElement;\n    var HTMLShadowElement = scope.wrappers.HTMLShadowElement;\n    var HTMLTemplateElement = scope.wrappers.HTMLTemplateElement;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var OriginalHTMLUnknownElement = window.HTMLUnknownElement;\n    function HTMLUnknownElement(node) {\n      switch (node.localName) {\n       case \"content\":\n        return new HTMLContentElement(node);\n\n       case \"shadow\":\n        return new HTMLShadowElement(node);\n\n       case \"template\":\n        return new HTMLTemplateElement(node);\n      }\n      HTMLElement.call(this, node);\n    }\n    HTMLUnknownElement.prototype = Object_create(HTMLElement.prototype);\n    registerWrapper(OriginalHTMLUnknownElement, HTMLUnknownElement);\n    scope.wrappers.HTMLUnknownElement = HTMLUnknownElement;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var Element = scope.wrappers.Element;\n    var HTMLElement = scope.wrappers.HTMLElement;\n    var registerObject = scope.registerObject;\n    var SVG_NS = \"http://www.w3.org/2000/svg\";\n    var svgTitleElement = document.createElementNS(SVG_NS, \"title\");\n    var SVGTitleElement = registerObject(svgTitleElement);\n    var SVGElement = Object.getPrototypeOf(SVGTitleElement.prototype).constructor;\n    if (!(\"classList\" in svgTitleElement)) {\n      var descr = Object.getOwnPropertyDescriptor(Element.prototype, \"classList\");\n      Object.defineProperty(HTMLElement.prototype, \"classList\", descr);\n      delete Element.prototype.classList;\n    }\n    scope.wrappers.SVGElement = SVGElement;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var unwrap = scope.unwrap;\n    var wrap = scope.wrap;\n    var OriginalSVGUseElement = window.SVGUseElement;\n    var SVG_NS = \"http://www.w3.org/2000/svg\";\n    var gWrapper = wrap(document.createElementNS(SVG_NS, \"g\"));\n    var useElement = document.createElementNS(SVG_NS, \"use\");\n    var SVGGElement = gWrapper.constructor;\n    var parentInterfacePrototype = Object.getPrototypeOf(SVGGElement.prototype);\n    var parentInterface = parentInterfacePrototype.constructor;\n    function SVGUseElement(impl) {\n      parentInterface.call(this, impl);\n    }\n    SVGUseElement.prototype = Object_create(parentInterfacePrototype);\n    if (\"instanceRoot\" in useElement) {\n      mixin(SVGUseElement.prototype, {\n        get instanceRoot() {\n          return wrap(unwrap(this).instanceRoot);\n        },\n        get animatedInstanceRoot() {\n          return wrap(unwrap(this).animatedInstanceRoot);\n        }\n      });\n    }\n    registerWrapper(OriginalSVGUseElement, SVGUseElement, useElement);\n    scope.wrappers.SVGUseElement = SVGUseElement;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var EventTarget = scope.wrappers.EventTarget;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var wrap = scope.wrap;\n    var OriginalSVGElementInstance = window.SVGElementInstance;\n    if (!OriginalSVGElementInstance) return;\n    function SVGElementInstance(impl) {\n      EventTarget.call(this, impl);\n    }\n    SVGElementInstance.prototype = Object_create(EventTarget.prototype);\n    mixin(SVGElementInstance.prototype, {\n      get correspondingElement() {\n        return wrap(unsafeUnwrap(this).correspondingElement);\n      },\n      get correspondingUseElement() {\n        return wrap(unsafeUnwrap(this).correspondingUseElement);\n      },\n      get parentNode() {\n        return wrap(unsafeUnwrap(this).parentNode);\n      },\n      get childNodes() {\n        throw new Error(\"Not implemented\");\n      },\n      get firstChild() {\n        return wrap(unsafeUnwrap(this).firstChild);\n      },\n      get lastChild() {\n        return wrap(unsafeUnwrap(this).lastChild);\n      },\n      get previousSibling() {\n        return wrap(unsafeUnwrap(this).previousSibling);\n      },\n      get nextSibling() {\n        return wrap(unsafeUnwrap(this).nextSibling);\n      }\n    });\n    registerWrapper(OriginalSVGElementInstance, SVGElementInstance);\n    scope.wrappers.SVGElementInstance = SVGElementInstance;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var setWrapper = scope.setWrapper;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var unwrap = scope.unwrap;\n    var unwrapIfNeeded = scope.unwrapIfNeeded;\n    var wrap = scope.wrap;\n    var OriginalCanvasRenderingContext2D = window.CanvasRenderingContext2D;\n    function CanvasRenderingContext2D(impl) {\n      setWrapper(impl, this);\n    }\n    mixin(CanvasRenderingContext2D.prototype, {\n      get canvas() {\n        return wrap(unsafeUnwrap(this).canvas);\n      },\n      drawImage: function() {\n        arguments[0] = unwrapIfNeeded(arguments[0]);\n        unsafeUnwrap(this).drawImage.apply(unsafeUnwrap(this), arguments);\n      },\n      createPattern: function() {\n        arguments[0] = unwrap(arguments[0]);\n        return unsafeUnwrap(this).createPattern.apply(unsafeUnwrap(this), arguments);\n      }\n    });\n    registerWrapper(OriginalCanvasRenderingContext2D, CanvasRenderingContext2D, document.createElement(\"canvas\").getContext(\"2d\"));\n    scope.wrappers.CanvasRenderingContext2D = CanvasRenderingContext2D;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var setWrapper = scope.setWrapper;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var unwrapIfNeeded = scope.unwrapIfNeeded;\n    var wrap = scope.wrap;\n    var OriginalWebGLRenderingContext = window.WebGLRenderingContext;\n    if (!OriginalWebGLRenderingContext) return;\n    function WebGLRenderingContext(impl) {\n      setWrapper(impl, this);\n    }\n    mixin(WebGLRenderingContext.prototype, {\n      get canvas() {\n        return wrap(unsafeUnwrap(this).canvas);\n      },\n      texImage2D: function() {\n        arguments[5] = unwrapIfNeeded(arguments[5]);\n        unsafeUnwrap(this).texImage2D.apply(unsafeUnwrap(this), arguments);\n      },\n      texSubImage2D: function() {\n        arguments[6] = unwrapIfNeeded(arguments[6]);\n        unsafeUnwrap(this).texSubImage2D.apply(unsafeUnwrap(this), arguments);\n      }\n    });\n    var instanceProperties = /WebKit/.test(navigator.userAgent) ? {\n      drawingBufferHeight: null,\n      drawingBufferWidth: null\n    } : {};\n    registerWrapper(OriginalWebGLRenderingContext, WebGLRenderingContext, instanceProperties);\n    scope.wrappers.WebGLRenderingContext = WebGLRenderingContext;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var registerWrapper = scope.registerWrapper;\n    var setWrapper = scope.setWrapper;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var unwrap = scope.unwrap;\n    var unwrapIfNeeded = scope.unwrapIfNeeded;\n    var wrap = scope.wrap;\n    var OriginalRange = window.Range;\n    function Range(impl) {\n      setWrapper(impl, this);\n    }\n    Range.prototype = {\n      get startContainer() {\n        return wrap(unsafeUnwrap(this).startContainer);\n      },\n      get endContainer() {\n        return wrap(unsafeUnwrap(this).endContainer);\n      },\n      get commonAncestorContainer() {\n        return wrap(unsafeUnwrap(this).commonAncestorContainer);\n      },\n      setStart: function(refNode, offset) {\n        unsafeUnwrap(this).setStart(unwrapIfNeeded(refNode), offset);\n      },\n      setEnd: function(refNode, offset) {\n        unsafeUnwrap(this).setEnd(unwrapIfNeeded(refNode), offset);\n      },\n      setStartBefore: function(refNode) {\n        unsafeUnwrap(this).setStartBefore(unwrapIfNeeded(refNode));\n      },\n      setStartAfter: function(refNode) {\n        unsafeUnwrap(this).setStartAfter(unwrapIfNeeded(refNode));\n      },\n      setEndBefore: function(refNode) {\n        unsafeUnwrap(this).setEndBefore(unwrapIfNeeded(refNode));\n      },\n      setEndAfter: function(refNode) {\n        unsafeUnwrap(this).setEndAfter(unwrapIfNeeded(refNode));\n      },\n      selectNode: function(refNode) {\n        unsafeUnwrap(this).selectNode(unwrapIfNeeded(refNode));\n      },\n      selectNodeContents: function(refNode) {\n        unsafeUnwrap(this).selectNodeContents(unwrapIfNeeded(refNode));\n      },\n      compareBoundaryPoints: function(how, sourceRange) {\n        return unsafeUnwrap(this).compareBoundaryPoints(how, unwrap(sourceRange));\n      },\n      extractContents: function() {\n        return wrap(unsafeUnwrap(this).extractContents());\n      },\n      cloneContents: function() {\n        return wrap(unsafeUnwrap(this).cloneContents());\n      },\n      insertNode: function(node) {\n        unsafeUnwrap(this).insertNode(unwrapIfNeeded(node));\n      },\n      surroundContents: function(newParent) {\n        unsafeUnwrap(this).surroundContents(unwrapIfNeeded(newParent));\n      },\n      cloneRange: function() {\n        return wrap(unsafeUnwrap(this).cloneRange());\n      },\n      isPointInRange: function(node, offset) {\n        return unsafeUnwrap(this).isPointInRange(unwrapIfNeeded(node), offset);\n      },\n      comparePoint: function(node, offset) {\n        return unsafeUnwrap(this).comparePoint(unwrapIfNeeded(node), offset);\n      },\n      intersectsNode: function(node) {\n        return unsafeUnwrap(this).intersectsNode(unwrapIfNeeded(node));\n      },\n      toString: function() {\n        return unsafeUnwrap(this).toString();\n      }\n    };\n    if (OriginalRange.prototype.createContextualFragment) {\n      Range.prototype.createContextualFragment = function(html) {\n        return wrap(unsafeUnwrap(this).createContextualFragment(html));\n      };\n    }\n    registerWrapper(window.Range, Range, document.createRange());\n    scope.wrappers.Range = Range;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var GetElementsByInterface = scope.GetElementsByInterface;\n    var ParentNodeInterface = scope.ParentNodeInterface;\n    var SelectorsInterface = scope.SelectorsInterface;\n    var mixin = scope.mixin;\n    var registerObject = scope.registerObject;\n    var DocumentFragment = registerObject(document.createDocumentFragment());\n    mixin(DocumentFragment.prototype, ParentNodeInterface);\n    mixin(DocumentFragment.prototype, SelectorsInterface);\n    mixin(DocumentFragment.prototype, GetElementsByInterface);\n    var Comment = registerObject(document.createComment(\"\"));\n    scope.wrappers.Comment = Comment;\n    scope.wrappers.DocumentFragment = DocumentFragment;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var DocumentFragment = scope.wrappers.DocumentFragment;\n    var TreeScope = scope.TreeScope;\n    var elementFromPoint = scope.elementFromPoint;\n    var getInnerHTML = scope.getInnerHTML;\n    var getTreeScope = scope.getTreeScope;\n    var mixin = scope.mixin;\n    var rewrap = scope.rewrap;\n    var setInnerHTML = scope.setInnerHTML;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var unwrap = scope.unwrap;\n    var shadowHostTable = new WeakMap();\n    var nextOlderShadowTreeTable = new WeakMap();\n    var spaceCharRe = /[ \\t\\n\\r\\f]/;\n    function ShadowRoot(hostWrapper) {\n      var node = unwrap(unsafeUnwrap(hostWrapper).ownerDocument.createDocumentFragment());\n      DocumentFragment.call(this, node);\n      rewrap(node, this);\n      var oldShadowRoot = hostWrapper.shadowRoot;\n      nextOlderShadowTreeTable.set(this, oldShadowRoot);\n      this.treeScope_ = new TreeScope(this, getTreeScope(oldShadowRoot || hostWrapper));\n      shadowHostTable.set(this, hostWrapper);\n    }\n    ShadowRoot.prototype = Object_create(DocumentFragment.prototype);\n    mixin(ShadowRoot.prototype, {\n      constructor: ShadowRoot,\n      get innerHTML() {\n        return getInnerHTML(this);\n      },\n      set innerHTML(value) {\n        setInnerHTML(this, value);\n        this.invalidateShadowRenderer();\n      },\n      get olderShadowRoot() {\n        return nextOlderShadowTreeTable.get(this) || null;\n      },\n      get host() {\n        return shadowHostTable.get(this) || null;\n      },\n      invalidateShadowRenderer: function() {\n        return shadowHostTable.get(this).invalidateShadowRenderer();\n      },\n      elementFromPoint: function(x, y) {\n        return elementFromPoint(this, this.ownerDocument, x, y);\n      },\n      getElementById: function(id) {\n        if (spaceCharRe.test(id)) return null;\n        return this.querySelector('[id=\"' + id + '\"]');\n      }\n    });\n    scope.wrappers.ShadowRoot = ShadowRoot;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var Element = scope.wrappers.Element;\n    var HTMLContentElement = scope.wrappers.HTMLContentElement;\n    var HTMLShadowElement = scope.wrappers.HTMLShadowElement;\n    var Node = scope.wrappers.Node;\n    var ShadowRoot = scope.wrappers.ShadowRoot;\n    var assert = scope.assert;\n    var getTreeScope = scope.getTreeScope;\n    var mixin = scope.mixin;\n    var oneOf = scope.oneOf;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var unwrap = scope.unwrap;\n    var wrap = scope.wrap;\n    var ArraySplice = scope.ArraySplice;\n    function updateWrapperUpAndSideways(wrapper) {\n      wrapper.previousSibling_ = wrapper.previousSibling;\n      wrapper.nextSibling_ = wrapper.nextSibling;\n      wrapper.parentNode_ = wrapper.parentNode;\n    }\n    function updateWrapperDown(wrapper) {\n      wrapper.firstChild_ = wrapper.firstChild;\n      wrapper.lastChild_ = wrapper.lastChild;\n    }\n    function updateAllChildNodes(parentNodeWrapper) {\n      assert(parentNodeWrapper instanceof Node);\n      for (var childWrapper = parentNodeWrapper.firstChild; childWrapper; childWrapper = childWrapper.nextSibling) {\n        updateWrapperUpAndSideways(childWrapper);\n      }\n      updateWrapperDown(parentNodeWrapper);\n    }\n    function insertBefore(parentNodeWrapper, newChildWrapper, refChildWrapper) {\n      var parentNode = unwrap(parentNodeWrapper);\n      var newChild = unwrap(newChildWrapper);\n      var refChild = refChildWrapper ? unwrap(refChildWrapper) : null;\n      remove(newChildWrapper);\n      updateWrapperUpAndSideways(newChildWrapper);\n      if (!refChildWrapper) {\n        parentNodeWrapper.lastChild_ = parentNodeWrapper.lastChild;\n        if (parentNodeWrapper.lastChild === parentNodeWrapper.firstChild) parentNodeWrapper.firstChild_ = parentNodeWrapper.firstChild;\n        var lastChildWrapper = wrap(parentNode.lastChild);\n        if (lastChildWrapper) lastChildWrapper.nextSibling_ = lastChildWrapper.nextSibling;\n      } else {\n        if (parentNodeWrapper.firstChild === refChildWrapper) parentNodeWrapper.firstChild_ = refChildWrapper;\n        refChildWrapper.previousSibling_ = refChildWrapper.previousSibling;\n      }\n      scope.originalInsertBefore.call(parentNode, newChild, refChild);\n    }\n    function remove(nodeWrapper) {\n      var node = unwrap(nodeWrapper);\n      var parentNode = node.parentNode;\n      if (!parentNode) return;\n      var parentNodeWrapper = wrap(parentNode);\n      updateWrapperUpAndSideways(nodeWrapper);\n      if (nodeWrapper.previousSibling) nodeWrapper.previousSibling.nextSibling_ = nodeWrapper;\n      if (nodeWrapper.nextSibling) nodeWrapper.nextSibling.previousSibling_ = nodeWrapper;\n      if (parentNodeWrapper.lastChild === nodeWrapper) parentNodeWrapper.lastChild_ = nodeWrapper;\n      if (parentNodeWrapper.firstChild === nodeWrapper) parentNodeWrapper.firstChild_ = nodeWrapper;\n      scope.originalRemoveChild.call(parentNode, node);\n    }\n    var distributedNodesTable = new WeakMap();\n    var destinationInsertionPointsTable = new WeakMap();\n    var rendererForHostTable = new WeakMap();\n    function resetDistributedNodes(insertionPoint) {\n      distributedNodesTable.set(insertionPoint, []);\n    }\n    function getDistributedNodes(insertionPoint) {\n      var rv = distributedNodesTable.get(insertionPoint);\n      if (!rv) distributedNodesTable.set(insertionPoint, rv = []);\n      return rv;\n    }\n    function getChildNodesSnapshot(node) {\n      var result = [], i = 0;\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        result[i++] = child;\n      }\n      return result;\n    }\n    var request = oneOf(window, [ \"requestAnimationFrame\", \"mozRequestAnimationFrame\", \"webkitRequestAnimationFrame\", \"setTimeout\" ]);\n    var pendingDirtyRenderers = [];\n    var renderTimer;\n    function renderAllPending() {\n      for (var i = 0; i < pendingDirtyRenderers.length; i++) {\n        var renderer = pendingDirtyRenderers[i];\n        var parentRenderer = renderer.parentRenderer;\n        if (parentRenderer && parentRenderer.dirty) continue;\n        renderer.render();\n      }\n      pendingDirtyRenderers = [];\n    }\n    function handleRequestAnimationFrame() {\n      renderTimer = null;\n      renderAllPending();\n    }\n    function getRendererForHost(host) {\n      var renderer = rendererForHostTable.get(host);\n      if (!renderer) {\n        renderer = new ShadowRenderer(host);\n        rendererForHostTable.set(host, renderer);\n      }\n      return renderer;\n    }\n    function getShadowRootAncestor(node) {\n      var root = getTreeScope(node).root;\n      if (root instanceof ShadowRoot) return root;\n      return null;\n    }\n    function getRendererForShadowRoot(shadowRoot) {\n      return getRendererForHost(shadowRoot.host);\n    }\n    var spliceDiff = new ArraySplice();\n    spliceDiff.equals = function(renderNode, rawNode) {\n      return unwrap(renderNode.node) === rawNode;\n    };\n    function RenderNode(node) {\n      this.skip = false;\n      this.node = node;\n      this.childNodes = [];\n    }\n    RenderNode.prototype = {\n      append: function(node) {\n        var rv = new RenderNode(node);\n        this.childNodes.push(rv);\n        return rv;\n      },\n      sync: function(opt_added) {\n        if (this.skip) return;\n        var nodeWrapper = this.node;\n        var newChildren = this.childNodes;\n        var oldChildren = getChildNodesSnapshot(unwrap(nodeWrapper));\n        var added = opt_added || new WeakMap();\n        var splices = spliceDiff.calculateSplices(newChildren, oldChildren);\n        var newIndex = 0, oldIndex = 0;\n        var lastIndex = 0;\n        for (var i = 0; i < splices.length; i++) {\n          var splice = splices[i];\n          for (;lastIndex < splice.index; lastIndex++) {\n            oldIndex++;\n            newChildren[newIndex++].sync(added);\n          }\n          var removedCount = splice.removed.length;\n          for (var j = 0; j < removedCount; j++) {\n            var wrapper = wrap(oldChildren[oldIndex++]);\n            if (!added.get(wrapper)) remove(wrapper);\n          }\n          var addedCount = splice.addedCount;\n          var refNode = oldChildren[oldIndex] && wrap(oldChildren[oldIndex]);\n          for (var j = 0; j < addedCount; j++) {\n            var newChildRenderNode = newChildren[newIndex++];\n            var newChildWrapper = newChildRenderNode.node;\n            insertBefore(nodeWrapper, newChildWrapper, refNode);\n            added.set(newChildWrapper, true);\n            newChildRenderNode.sync(added);\n          }\n          lastIndex += addedCount;\n        }\n        for (var i = lastIndex; i < newChildren.length; i++) {\n          newChildren[i].sync(added);\n        }\n      }\n    };\n    function ShadowRenderer(host) {\n      this.host = host;\n      this.dirty = false;\n      this.invalidateAttributes();\n      this.associateNode(host);\n    }\n    ShadowRenderer.prototype = {\n      render: function(opt_renderNode) {\n        if (!this.dirty) return;\n        this.invalidateAttributes();\n        var host = this.host;\n        this.distribution(host);\n        var renderNode = opt_renderNode || new RenderNode(host);\n        this.buildRenderTree(renderNode, host);\n        var topMostRenderer = !opt_renderNode;\n        if (topMostRenderer) renderNode.sync();\n        this.dirty = false;\n      },\n      get parentRenderer() {\n        return getTreeScope(this.host).renderer;\n      },\n      invalidate: function() {\n        if (!this.dirty) {\n          this.dirty = true;\n          var parentRenderer = this.parentRenderer;\n          if (parentRenderer) parentRenderer.invalidate();\n          pendingDirtyRenderers.push(this);\n          if (renderTimer) return;\n          renderTimer = window[request](handleRequestAnimationFrame, 0);\n        }\n      },\n      distribution: function(root) {\n        this.resetAllSubtrees(root);\n        this.distributionResolution(root);\n      },\n      resetAll: function(node) {\n        if (isInsertionPoint(node)) resetDistributedNodes(node); else resetDestinationInsertionPoints(node);\n        this.resetAllSubtrees(node);\n      },\n      resetAllSubtrees: function(node) {\n        for (var child = node.firstChild; child; child = child.nextSibling) {\n          this.resetAll(child);\n        }\n        if (node.shadowRoot) this.resetAll(node.shadowRoot);\n        if (node.olderShadowRoot) this.resetAll(node.olderShadowRoot);\n      },\n      distributionResolution: function(node) {\n        if (isShadowHost(node)) {\n          var shadowHost = node;\n          var pool = poolPopulation(shadowHost);\n          var shadowTrees = getShadowTrees(shadowHost);\n          for (var i = 0; i < shadowTrees.length; i++) {\n            this.poolDistribution(shadowTrees[i], pool);\n          }\n          for (var i = shadowTrees.length - 1; i >= 0; i--) {\n            var shadowTree = shadowTrees[i];\n            var shadow = getShadowInsertionPoint(shadowTree);\n            if (shadow) {\n              var olderShadowRoot = shadowTree.olderShadowRoot;\n              if (olderShadowRoot) {\n                pool = poolPopulation(olderShadowRoot);\n              }\n              for (var j = 0; j < pool.length; j++) {\n                destributeNodeInto(pool[j], shadow);\n              }\n            }\n            this.distributionResolution(shadowTree);\n          }\n        }\n        for (var child = node.firstChild; child; child = child.nextSibling) {\n          this.distributionResolution(child);\n        }\n      },\n      poolDistribution: function(node, pool) {\n        if (node instanceof HTMLShadowElement) return;\n        if (node instanceof HTMLContentElement) {\n          var content = node;\n          this.updateDependentAttributes(content.getAttribute(\"select\"));\n          var anyDistributed = false;\n          for (var i = 0; i < pool.length; i++) {\n            var node = pool[i];\n            if (!node) continue;\n            if (matches(node, content)) {\n              destributeNodeInto(node, content);\n              pool[i] = undefined;\n              anyDistributed = true;\n            }\n          }\n          if (!anyDistributed) {\n            for (var child = content.firstChild; child; child = child.nextSibling) {\n              destributeNodeInto(child, content);\n            }\n          }\n          return;\n        }\n        for (var child = node.firstChild; child; child = child.nextSibling) {\n          this.poolDistribution(child, pool);\n        }\n      },\n      buildRenderTree: function(renderNode, node) {\n        var children = this.compose(node);\n        for (var i = 0; i < children.length; i++) {\n          var child = children[i];\n          var childRenderNode = renderNode.append(child);\n          this.buildRenderTree(childRenderNode, child);\n        }\n        if (isShadowHost(node)) {\n          var renderer = getRendererForHost(node);\n          renderer.dirty = false;\n        }\n      },\n      compose: function(node) {\n        var children = [];\n        var p = node.shadowRoot || node;\n        for (var child = p.firstChild; child; child = child.nextSibling) {\n          if (isInsertionPoint(child)) {\n            this.associateNode(p);\n            var distributedNodes = getDistributedNodes(child);\n            for (var j = 0; j < distributedNodes.length; j++) {\n              var distributedNode = distributedNodes[j];\n              if (isFinalDestination(child, distributedNode)) children.push(distributedNode);\n            }\n          } else {\n            children.push(child);\n          }\n        }\n        return children;\n      },\n      invalidateAttributes: function() {\n        this.attributes = Object_create(null);\n      },\n      updateDependentAttributes: function(selector) {\n        if (!selector) return;\n        var attributes = this.attributes;\n        if (/\\.\\w+/.test(selector)) attributes[\"class\"] = true;\n        if (/#\\w+/.test(selector)) attributes[\"id\"] = true;\n        selector.replace(/\\[\\s*([^\\s=\\|~\\]]+)/g, function(_, name) {\n          attributes[name] = true;\n        });\n      },\n      dependsOnAttribute: function(name) {\n        return this.attributes[name];\n      },\n      associateNode: function(node) {\n        unsafeUnwrap(node).polymerShadowRenderer_ = this;\n      }\n    };\n    function poolPopulation(node) {\n      var pool = [];\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        if (isInsertionPoint(child)) {\n          pool.push.apply(pool, getDistributedNodes(child));\n        } else {\n          pool.push(child);\n        }\n      }\n      return pool;\n    }\n    function getShadowInsertionPoint(node) {\n      if (node instanceof HTMLShadowElement) return node;\n      if (node instanceof HTMLContentElement) return null;\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        var res = getShadowInsertionPoint(child);\n        if (res) return res;\n      }\n      return null;\n    }\n    function destributeNodeInto(child, insertionPoint) {\n      getDistributedNodes(insertionPoint).push(child);\n      var points = destinationInsertionPointsTable.get(child);\n      if (!points) destinationInsertionPointsTable.set(child, [ insertionPoint ]); else points.push(insertionPoint);\n    }\n    function getDestinationInsertionPoints(node) {\n      return destinationInsertionPointsTable.get(node);\n    }\n    function resetDestinationInsertionPoints(node) {\n      destinationInsertionPointsTable.set(node, undefined);\n    }\n    var selectorStartCharRe = /^(:not\\()?[*.#[a-zA-Z_|]/;\n    function matches(node, contentElement) {\n      var select = contentElement.getAttribute(\"select\");\n      if (!select) return true;\n      select = select.trim();\n      if (!select) return true;\n      if (!(node instanceof Element)) return false;\n      if (!selectorStartCharRe.test(select)) return false;\n      try {\n        return node.matches(select);\n      } catch (ex) {\n        return false;\n      }\n    }\n    function isFinalDestination(insertionPoint, node) {\n      var points = getDestinationInsertionPoints(node);\n      return points && points[points.length - 1] === insertionPoint;\n    }\n    function isInsertionPoint(node) {\n      return node instanceof HTMLContentElement || node instanceof HTMLShadowElement;\n    }\n    function isShadowHost(shadowHost) {\n      return shadowHost.shadowRoot;\n    }\n    function getShadowTrees(host) {\n      var trees = [];\n      for (var tree = host.shadowRoot; tree; tree = tree.olderShadowRoot) {\n        trees.push(tree);\n      }\n      return trees;\n    }\n    function render(host) {\n      new ShadowRenderer(host).render();\n    }\n    Node.prototype.invalidateShadowRenderer = function(force) {\n      var renderer = unsafeUnwrap(this).polymerShadowRenderer_;\n      if (renderer) {\n        renderer.invalidate();\n        return true;\n      }\n      return false;\n    };\n    HTMLContentElement.prototype.getDistributedNodes = HTMLShadowElement.prototype.getDistributedNodes = function() {\n      renderAllPending();\n      return getDistributedNodes(this);\n    };\n    Element.prototype.getDestinationInsertionPoints = function() {\n      renderAllPending();\n      return getDestinationInsertionPoints(this) || [];\n    };\n    HTMLContentElement.prototype.nodeIsInserted_ = HTMLShadowElement.prototype.nodeIsInserted_ = function() {\n      this.invalidateShadowRenderer();\n      var shadowRoot = getShadowRootAncestor(this);\n      var renderer;\n      if (shadowRoot) renderer = getRendererForShadowRoot(shadowRoot);\n      unsafeUnwrap(this).polymerShadowRenderer_ = renderer;\n      if (renderer) renderer.invalidate();\n    };\n    scope.getRendererForHost = getRendererForHost;\n    scope.getShadowTrees = getShadowTrees;\n    scope.renderAllPending = renderAllPending;\n    scope.getDestinationInsertionPoints = getDestinationInsertionPoints;\n    scope.visual = {\n      insertBefore: insertBefore,\n      remove: remove\n    };\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var HTMLElement = scope.wrappers.HTMLElement;\n    var assert = scope.assert;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var unwrap = scope.unwrap;\n    var wrap = scope.wrap;\n    var elementsWithFormProperty = [ \"HTMLButtonElement\", \"HTMLFieldSetElement\", \"HTMLInputElement\", \"HTMLKeygenElement\", \"HTMLLabelElement\", \"HTMLLegendElement\", \"HTMLObjectElement\", \"HTMLOutputElement\", \"HTMLTextAreaElement\" ];\n    function createWrapperConstructor(name) {\n      if (!window[name]) return;\n      assert(!scope.wrappers[name]);\n      var GeneratedWrapper = function(node) {\n        HTMLElement.call(this, node);\n      };\n      GeneratedWrapper.prototype = Object_create(HTMLElement.prototype);\n      mixin(GeneratedWrapper.prototype, {\n        get form() {\n          return wrap(unwrap(this).form);\n        }\n      });\n      registerWrapper(window[name], GeneratedWrapper, document.createElement(name.slice(4, -7)));\n      scope.wrappers[name] = GeneratedWrapper;\n    }\n    elementsWithFormProperty.forEach(createWrapperConstructor);\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var registerWrapper = scope.registerWrapper;\n    var setWrapper = scope.setWrapper;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var unwrap = scope.unwrap;\n    var unwrapIfNeeded = scope.unwrapIfNeeded;\n    var wrap = scope.wrap;\n    var OriginalSelection = window.Selection;\n    function Selection(impl) {\n      setWrapper(impl, this);\n    }\n    Selection.prototype = {\n      get anchorNode() {\n        return wrap(unsafeUnwrap(this).anchorNode);\n      },\n      get focusNode() {\n        return wrap(unsafeUnwrap(this).focusNode);\n      },\n      addRange: function(range) {\n        unsafeUnwrap(this).addRange(unwrap(range));\n      },\n      collapse: function(node, index) {\n        unsafeUnwrap(this).collapse(unwrapIfNeeded(node), index);\n      },\n      containsNode: function(node, allowPartial) {\n        return unsafeUnwrap(this).containsNode(unwrapIfNeeded(node), allowPartial);\n      },\n      extend: function(node, offset) {\n        unsafeUnwrap(this).extend(unwrapIfNeeded(node), offset);\n      },\n      getRangeAt: function(index) {\n        return wrap(unsafeUnwrap(this).getRangeAt(index));\n      },\n      removeRange: function(range) {\n        unsafeUnwrap(this).removeRange(unwrap(range));\n      },\n      selectAllChildren: function(node) {\n        unsafeUnwrap(this).selectAllChildren(unwrapIfNeeded(node));\n      },\n      toString: function() {\n        return unsafeUnwrap(this).toString();\n      }\n    };\n    registerWrapper(window.Selection, Selection, window.getSelection());\n    scope.wrappers.Selection = Selection;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var GetElementsByInterface = scope.GetElementsByInterface;\n    var Node = scope.wrappers.Node;\n    var ParentNodeInterface = scope.ParentNodeInterface;\n    var Selection = scope.wrappers.Selection;\n    var SelectorsInterface = scope.SelectorsInterface;\n    var ShadowRoot = scope.wrappers.ShadowRoot;\n    var TreeScope = scope.TreeScope;\n    var cloneNode = scope.cloneNode;\n    var defineWrapGetter = scope.defineWrapGetter;\n    var elementFromPoint = scope.elementFromPoint;\n    var forwardMethodsToWrapper = scope.forwardMethodsToWrapper;\n    var matchesNames = scope.matchesNames;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var renderAllPending = scope.renderAllPending;\n    var rewrap = scope.rewrap;\n    var setWrapper = scope.setWrapper;\n    var unsafeUnwrap = scope.unsafeUnwrap;\n    var unwrap = scope.unwrap;\n    var wrap = scope.wrap;\n    var wrapEventTargetMethods = scope.wrapEventTargetMethods;\n    var wrapNodeList = scope.wrapNodeList;\n    var implementationTable = new WeakMap();\n    function Document(node) {\n      Node.call(this, node);\n      this.treeScope_ = new TreeScope(this, null);\n    }\n    Document.prototype = Object_create(Node.prototype);\n    defineWrapGetter(Document, \"documentElement\");\n    defineWrapGetter(Document, \"body\");\n    defineWrapGetter(Document, \"head\");\n    function wrapMethod(name) {\n      var original = document[name];\n      Document.prototype[name] = function() {\n        return wrap(original.apply(unsafeUnwrap(this), arguments));\n      };\n    }\n    [ \"createComment\", \"createDocumentFragment\", \"createElement\", \"createElementNS\", \"createEvent\", \"createEventNS\", \"createRange\", \"createTextNode\", \"getElementById\" ].forEach(wrapMethod);\n    var originalAdoptNode = document.adoptNode;\n    function adoptNodeNoRemove(node, doc) {\n      originalAdoptNode.call(unsafeUnwrap(doc), unwrap(node));\n      adoptSubtree(node, doc);\n    }\n    function adoptSubtree(node, doc) {\n      if (node.shadowRoot) doc.adoptNode(node.shadowRoot);\n      if (node instanceof ShadowRoot) adoptOlderShadowRoots(node, doc);\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        adoptSubtree(child, doc);\n      }\n    }\n    function adoptOlderShadowRoots(shadowRoot, doc) {\n      var oldShadowRoot = shadowRoot.olderShadowRoot;\n      if (oldShadowRoot) doc.adoptNode(oldShadowRoot);\n    }\n    var originalGetSelection = document.getSelection;\n    mixin(Document.prototype, {\n      adoptNode: function(node) {\n        if (node.parentNode) node.parentNode.removeChild(node);\n        adoptNodeNoRemove(node, this);\n        return node;\n      },\n      elementFromPoint: function(x, y) {\n        return elementFromPoint(this, this, x, y);\n      },\n      importNode: function(node, deep) {\n        return cloneNode(node, deep, unsafeUnwrap(this));\n      },\n      getSelection: function() {\n        renderAllPending();\n        return new Selection(originalGetSelection.call(unwrap(this)));\n      },\n      getElementsByName: function(name) {\n        return SelectorsInterface.querySelectorAll.call(this, \"[name=\" + JSON.stringify(String(name)) + \"]\");\n      }\n    });\n    if (document.registerElement) {\n      var originalRegisterElement = document.registerElement;\n      Document.prototype.registerElement = function(tagName, object) {\n        var prototype, extendsOption;\n        if (object !== undefined) {\n          prototype = object.prototype;\n          extendsOption = object.extends;\n        }\n        if (!prototype) prototype = Object_create(HTMLElement.prototype);\n        if (scope.nativePrototypeTable.get(prototype)) {\n          throw new Error(\"NotSupportedError\");\n        }\n        var proto = Object.getPrototypeOf(prototype);\n        var nativePrototype;\n        var prototypes = [];\n        while (proto) {\n          nativePrototype = scope.nativePrototypeTable.get(proto);\n          if (nativePrototype) break;\n          prototypes.push(proto);\n          proto = Object.getPrototypeOf(proto);\n        }\n        if (!nativePrototype) {\n          throw new Error(\"NotSupportedError\");\n        }\n        var newPrototype = Object_create(nativePrototype);\n        for (var i = prototypes.length - 1; i >= 0; i--) {\n          newPrototype = Object_create(newPrototype);\n        }\n        [ \"createdCallback\", \"attachedCallback\", \"detachedCallback\", \"attributeChangedCallback\" ].forEach(function(name) {\n          var f = prototype[name];\n          if (!f) return;\n          newPrototype[name] = function() {\n            if (!(wrap(this) instanceof CustomElementConstructor)) {\n              rewrap(this);\n            }\n            f.apply(wrap(this), arguments);\n          };\n        });\n        var p = {\n          prototype: newPrototype\n        };\n        if (extendsOption) p.extends = extendsOption;\n        function CustomElementConstructor(node) {\n          if (!node) {\n            if (extendsOption) {\n              return document.createElement(extendsOption, tagName);\n            } else {\n              return document.createElement(tagName);\n            }\n          }\n          setWrapper(node, this);\n        }\n        CustomElementConstructor.prototype = prototype;\n        CustomElementConstructor.prototype.constructor = CustomElementConstructor;\n        scope.constructorTable.set(newPrototype, CustomElementConstructor);\n        scope.nativePrototypeTable.set(prototype, newPrototype);\n        var nativeConstructor = originalRegisterElement.call(unwrap(this), tagName, p);\n        return CustomElementConstructor;\n      };\n      forwardMethodsToWrapper([ window.HTMLDocument || window.Document ], [ \"registerElement\" ]);\n    }\n    forwardMethodsToWrapper([ window.HTMLBodyElement, window.HTMLDocument || window.Document, window.HTMLHeadElement, window.HTMLHtmlElement ], [ \"appendChild\", \"compareDocumentPosition\", \"contains\", \"getElementsByClassName\", \"getElementsByTagName\", \"getElementsByTagNameNS\", \"insertBefore\", \"querySelector\", \"querySelectorAll\", \"removeChild\", \"replaceChild\" ].concat(matchesNames));\n    forwardMethodsToWrapper([ window.HTMLDocument || window.Document ], [ \"adoptNode\", \"importNode\", \"contains\", \"createComment\", \"createDocumentFragment\", \"createElement\", \"createElementNS\", \"createEvent\", \"createEventNS\", \"createRange\", \"createTextNode\", \"elementFromPoint\", \"getElementById\", \"getElementsByName\", \"getSelection\" ]);\n    mixin(Document.prototype, GetElementsByInterface);\n    mixin(Document.prototype, ParentNodeInterface);\n    mixin(Document.prototype, SelectorsInterface);\n    mixin(Document.prototype, {\n      get implementation() {\n        var implementation = implementationTable.get(this);\n        if (implementation) return implementation;\n        implementation = new DOMImplementation(unwrap(this).implementation);\n        implementationTable.set(this, implementation);\n        return implementation;\n      },\n      get defaultView() {\n        return wrap(unwrap(this).defaultView);\n      }\n    });\n    registerWrapper(window.Document, Document, document.implementation.createHTMLDocument(\"\"));\n    if (window.HTMLDocument) registerWrapper(window.HTMLDocument, Document);\n    wrapEventTargetMethods([ window.HTMLBodyElement, window.HTMLDocument || window.Document, window.HTMLHeadElement ]);\n    function DOMImplementation(impl) {\n      setWrapper(impl, this);\n    }\n    function wrapImplMethod(constructor, name) {\n      var original = document.implementation[name];\n      constructor.prototype[name] = function() {\n        return wrap(original.apply(unsafeUnwrap(this), arguments));\n      };\n    }\n    function forwardImplMethod(constructor, name) {\n      var original = document.implementation[name];\n      constructor.prototype[name] = function() {\n        return original.apply(unsafeUnwrap(this), arguments);\n      };\n    }\n    wrapImplMethod(DOMImplementation, \"createDocumentType\");\n    wrapImplMethod(DOMImplementation, \"createDocument\");\n    wrapImplMethod(DOMImplementation, \"createHTMLDocument\");\n    forwardImplMethod(DOMImplementation, \"hasFeature\");\n    registerWrapper(window.DOMImplementation, DOMImplementation);\n    forwardMethodsToWrapper([ window.DOMImplementation ], [ \"createDocumentType\", \"createDocument\", \"createHTMLDocument\", \"hasFeature\" ]);\n    scope.adoptNodeNoRemove = adoptNodeNoRemove;\n    scope.wrappers.DOMImplementation = DOMImplementation;\n    scope.wrappers.Document = Document;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var EventTarget = scope.wrappers.EventTarget;\n    var Selection = scope.wrappers.Selection;\n    var mixin = scope.mixin;\n    var registerWrapper = scope.registerWrapper;\n    var renderAllPending = scope.renderAllPending;\n    var unwrap = scope.unwrap;\n    var unwrapIfNeeded = scope.unwrapIfNeeded;\n    var wrap = scope.wrap;\n    var OriginalWindow = window.Window;\n    var originalGetComputedStyle = window.getComputedStyle;\n    var originalGetDefaultComputedStyle = window.getDefaultComputedStyle;\n    var originalGetSelection = window.getSelection;\n    function Window(impl) {\n      EventTarget.call(this, impl);\n    }\n    Window.prototype = Object_create(EventTarget.prototype);\n    OriginalWindow.prototype.getComputedStyle = function(el, pseudo) {\n      return wrap(this || window).getComputedStyle(unwrapIfNeeded(el), pseudo);\n    };\n    if (originalGetDefaultComputedStyle) {\n      OriginalWindow.prototype.getDefaultComputedStyle = function(el, pseudo) {\n        return wrap(this || window).getDefaultComputedStyle(unwrapIfNeeded(el), pseudo);\n      };\n    }\n    OriginalWindow.prototype.getSelection = function() {\n      return wrap(this || window).getSelection();\n    };\n    delete window.getComputedStyle;\n    delete window.getDefaultComputedStyle;\n    delete window.getSelection;\n    [ \"addEventListener\", \"removeEventListener\", \"dispatchEvent\" ].forEach(function(name) {\n      OriginalWindow.prototype[name] = function() {\n        var w = wrap(this || window);\n        return w[name].apply(w, arguments);\n      };\n      delete window[name];\n    });\n    mixin(Window.prototype, {\n      getComputedStyle: function(el, pseudo) {\n        renderAllPending();\n        return originalGetComputedStyle.call(unwrap(this), unwrapIfNeeded(el), pseudo);\n      },\n      getSelection: function() {\n        renderAllPending();\n        return new Selection(originalGetSelection.call(unwrap(this)));\n      },\n      get document() {\n        return wrap(unwrap(this).document);\n      }\n    });\n    if (originalGetDefaultComputedStyle) {\n      Window.prototype.getDefaultComputedStyle = function(el, pseudo) {\n        renderAllPending();\n        return originalGetDefaultComputedStyle.call(unwrap(this), unwrapIfNeeded(el), pseudo);\n      };\n    }\n    registerWrapper(OriginalWindow, Window, window);\n    scope.wrappers.Window = Window;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var unwrap = scope.unwrap;\n    var OriginalDataTransfer = window.DataTransfer || window.Clipboard;\n    var OriginalDataTransferSetDragImage = OriginalDataTransfer.prototype.setDragImage;\n    if (OriginalDataTransferSetDragImage) {\n      OriginalDataTransfer.prototype.setDragImage = function(image, x, y) {\n        OriginalDataTransferSetDragImage.call(this, unwrap(image), x, y);\n      };\n    }\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var registerWrapper = scope.registerWrapper;\n    var setWrapper = scope.setWrapper;\n    var unwrap = scope.unwrap;\n    var OriginalFormData = window.FormData;\n    if (!OriginalFormData) return;\n    function FormData(formElement) {\n      var impl;\n      if (formElement instanceof OriginalFormData) {\n        impl = formElement;\n      } else {\n        impl = new OriginalFormData(formElement && unwrap(formElement));\n      }\n      setWrapper(impl, this);\n    }\n    registerWrapper(OriginalFormData, FormData, new OriginalFormData());\n    scope.wrappers.FormData = FormData;\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var unwrapIfNeeded = scope.unwrapIfNeeded;\n    var originalSend = XMLHttpRequest.prototype.send;\n    XMLHttpRequest.prototype.send = function(obj) {\n      return originalSend.call(this, unwrapIfNeeded(obj));\n    };\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    \"use strict\";\n    var isWrapperFor = scope.isWrapperFor;\n    var elements = {\n      a: \"HTMLAnchorElement\",\n      area: \"HTMLAreaElement\",\n      audio: \"HTMLAudioElement\",\n      base: \"HTMLBaseElement\",\n      body: \"HTMLBodyElement\",\n      br: \"HTMLBRElement\",\n      button: \"HTMLButtonElement\",\n      canvas: \"HTMLCanvasElement\",\n      caption: \"HTMLTableCaptionElement\",\n      col: \"HTMLTableColElement\",\n      content: \"HTMLContentElement\",\n      data: \"HTMLDataElement\",\n      datalist: \"HTMLDataListElement\",\n      del: \"HTMLModElement\",\n      dir: \"HTMLDirectoryElement\",\n      div: \"HTMLDivElement\",\n      dl: \"HTMLDListElement\",\n      embed: \"HTMLEmbedElement\",\n      fieldset: \"HTMLFieldSetElement\",\n      font: \"HTMLFontElement\",\n      form: \"HTMLFormElement\",\n      frame: \"HTMLFrameElement\",\n      frameset: \"HTMLFrameSetElement\",\n      h1: \"HTMLHeadingElement\",\n      head: \"HTMLHeadElement\",\n      hr: \"HTMLHRElement\",\n      html: \"HTMLHtmlElement\",\n      iframe: \"HTMLIFrameElement\",\n      img: \"HTMLImageElement\",\n      input: \"HTMLInputElement\",\n      keygen: \"HTMLKeygenElement\",\n      label: \"HTMLLabelElement\",\n      legend: \"HTMLLegendElement\",\n      li: \"HTMLLIElement\",\n      link: \"HTMLLinkElement\",\n      map: \"HTMLMapElement\",\n      marquee: \"HTMLMarqueeElement\",\n      menu: \"HTMLMenuElement\",\n      menuitem: \"HTMLMenuItemElement\",\n      meta: \"HTMLMetaElement\",\n      meter: \"HTMLMeterElement\",\n      object: \"HTMLObjectElement\",\n      ol: \"HTMLOListElement\",\n      optgroup: \"HTMLOptGroupElement\",\n      option: \"HTMLOptionElement\",\n      output: \"HTMLOutputElement\",\n      p: \"HTMLParagraphElement\",\n      param: \"HTMLParamElement\",\n      pre: \"HTMLPreElement\",\n      progress: \"HTMLProgressElement\",\n      q: \"HTMLQuoteElement\",\n      script: \"HTMLScriptElement\",\n      select: \"HTMLSelectElement\",\n      shadow: \"HTMLShadowElement\",\n      source: \"HTMLSourceElement\",\n      span: \"HTMLSpanElement\",\n      style: \"HTMLStyleElement\",\n      table: \"HTMLTableElement\",\n      tbody: \"HTMLTableSectionElement\",\n      template: \"HTMLTemplateElement\",\n      textarea: \"HTMLTextAreaElement\",\n      thead: \"HTMLTableSectionElement\",\n      time: \"HTMLTimeElement\",\n      title: \"HTMLTitleElement\",\n      tr: \"HTMLTableRowElement\",\n      track: \"HTMLTrackElement\",\n      ul: \"HTMLUListElement\",\n      video: \"HTMLVideoElement\"\n    };\n    function overrideConstructor(tagName) {\n      var nativeConstructorName = elements[tagName];\n      var nativeConstructor = window[nativeConstructorName];\n      if (!nativeConstructor) return;\n      var element = document.createElement(tagName);\n      var wrapperConstructor = element.constructor;\n      window[nativeConstructorName] = wrapperConstructor;\n    }\n    Object.keys(elements).forEach(overrideConstructor);\n    Object.getOwnPropertyNames(scope.wrappers).forEach(function(name) {\n      window[name] = scope.wrappers[name];\n    });\n  })(window.ShadowDOMPolyfill);\n  (function(scope) {\n    var ShadowCSS = {\n      strictStyling: false,\n      registry: {},\n      shimStyling: function(root, name, extendsName) {\n        var scopeStyles = this.prepareRoot(root, name, extendsName);\n        var typeExtension = this.isTypeExtension(extendsName);\n        var scopeSelector = this.makeScopeSelector(name, typeExtension);\n        var cssText = stylesToCssText(scopeStyles, true);\n        cssText = this.scopeCssText(cssText, scopeSelector);\n        if (root) {\n          root.shimmedStyle = cssText;\n        }\n        this.addCssToDocument(cssText, name);\n      },\n      shimStyle: function(style, selector) {\n        return this.shimCssText(style.textContent, selector);\n      },\n      shimCssText: function(cssText, selector) {\n        cssText = this.insertDirectives(cssText);\n        return this.scopeCssText(cssText, selector);\n      },\n      makeScopeSelector: function(name, typeExtension) {\n        if (name) {\n          return typeExtension ? \"[is=\" + name + \"]\" : name;\n        }\n        return \"\";\n      },\n      isTypeExtension: function(extendsName) {\n        return extendsName && extendsName.indexOf(\"-\") < 0;\n      },\n      prepareRoot: function(root, name, extendsName) {\n        var def = this.registerRoot(root, name, extendsName);\n        this.replaceTextInStyles(def.rootStyles, this.insertDirectives);\n        this.removeStyles(root, def.rootStyles);\n        if (this.strictStyling) {\n          this.applyScopeToContent(root, name);\n        }\n        return def.scopeStyles;\n      },\n      removeStyles: function(root, styles) {\n        for (var i = 0, l = styles.length, s; i < l && (s = styles[i]); i++) {\n          s.parentNode.removeChild(s);\n        }\n      },\n      registerRoot: function(root, name, extendsName) {\n        var def = this.registry[name] = {\n          root: root,\n          name: name,\n          extendsName: extendsName\n        };\n        var styles = this.findStyles(root);\n        def.rootStyles = styles;\n        def.scopeStyles = def.rootStyles;\n        var extendee = this.registry[def.extendsName];\n        if (extendee) {\n          def.scopeStyles = extendee.scopeStyles.concat(def.scopeStyles);\n        }\n        return def;\n      },\n      findStyles: function(root) {\n        if (!root) {\n          return [];\n        }\n        var styles = root.querySelectorAll(\"style\");\n        return Array.prototype.filter.call(styles, function(s) {\n          return !s.hasAttribute(NO_SHIM_ATTRIBUTE);\n        });\n      },\n      applyScopeToContent: function(root, name) {\n        if (root) {\n          Array.prototype.forEach.call(root.querySelectorAll(\"*\"), function(node) {\n            node.setAttribute(name, \"\");\n          });\n          Array.prototype.forEach.call(root.querySelectorAll(\"template\"), function(template) {\n            this.applyScopeToContent(template.content, name);\n          }, this);\n        }\n      },\n      insertDirectives: function(cssText) {\n        cssText = this.insertPolyfillDirectivesInCssText(cssText);\n        return this.insertPolyfillRulesInCssText(cssText);\n      },\n      insertPolyfillDirectivesInCssText: function(cssText) {\n        cssText = cssText.replace(cssCommentNextSelectorRe, function(match, p1) {\n          return p1.slice(0, -2) + \"{\";\n        });\n        return cssText.replace(cssContentNextSelectorRe, function(match, p1) {\n          return p1 + \" {\";\n        });\n      },\n      insertPolyfillRulesInCssText: function(cssText) {\n        cssText = cssText.replace(cssCommentRuleRe, function(match, p1) {\n          return p1.slice(0, -1);\n        });\n        return cssText.replace(cssContentRuleRe, function(match, p1, p2, p3) {\n          var rule = match.replace(p1, \"\").replace(p2, \"\");\n          return p3 + rule;\n        });\n      },\n      scopeCssText: function(cssText, scopeSelector) {\n        var unscoped = this.extractUnscopedRulesFromCssText(cssText);\n        cssText = this.insertPolyfillHostInCssText(cssText);\n        cssText = this.convertColonHost(cssText);\n        cssText = this.convertColonHostContext(cssText);\n        cssText = this.convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n          var self = this, cssText;\n          withCssRules(cssText, function(rules) {\n            cssText = self.scopeRules(rules, scopeSelector);\n          });\n        }\n        cssText = cssText + \"\\n\" + unscoped;\n        return cssText.trim();\n      },\n      extractUnscopedRulesFromCssText: function(cssText) {\n        var r = \"\", m;\n        while (m = cssCommentUnscopedRuleRe.exec(cssText)) {\n          r += m[1].slice(0, -1) + \"\\n\\n\";\n        }\n        while (m = cssContentUnscopedRuleRe.exec(cssText)) {\n          r += m[0].replace(m[2], \"\").replace(m[1], m[3]) + \"\\n\\n\";\n        }\n        return r;\n      },\n      convertColonHost: function(cssText) {\n        return this.convertColonRule(cssText, cssColonHostRe, this.colonHostPartReplacer);\n      },\n      convertColonHostContext: function(cssText) {\n        return this.convertColonRule(cssText, cssColonHostContextRe, this.colonHostContextPartReplacer);\n      },\n      convertColonRule: function(cssText, regExp, partReplacer) {\n        return cssText.replace(regExp, function(m, p1, p2, p3) {\n          p1 = polyfillHostNoCombinator;\n          if (p2) {\n            var parts = p2.split(\",\"), r = [];\n            for (var i = 0, l = parts.length, p; i < l && (p = parts[i]); i++) {\n              p = p.trim();\n              r.push(partReplacer(p1, p, p3));\n            }\n            return r.join(\",\");\n          } else {\n            return p1 + p3;\n          }\n        });\n      },\n      colonHostContextPartReplacer: function(host, part, suffix) {\n        if (part.match(polyfillHost)) {\n          return this.colonHostPartReplacer(host, part, suffix);\n        } else {\n          return host + part + suffix + \", \" + part + \" \" + host + suffix;\n        }\n      },\n      colonHostPartReplacer: function(host, part, suffix) {\n        return host + part.replace(polyfillHost, \"\") + suffix;\n      },\n      convertShadowDOMSelectors: function(cssText) {\n        for (var i = 0; i < shadowDOMSelectorsRe.length; i++) {\n          cssText = cssText.replace(shadowDOMSelectorsRe[i], \" \");\n        }\n        return cssText;\n      },\n      scopeRules: function(cssRules, scopeSelector) {\n        var cssText = \"\";\n        if (cssRules) {\n          Array.prototype.forEach.call(cssRules, function(rule) {\n            if (rule.selectorText && (rule.style && rule.style.cssText !== undefined)) {\n              cssText += this.scopeSelector(rule.selectorText, scopeSelector, this.strictStyling) + \" {\\n\t\";\n              cssText += this.propertiesFromRule(rule) + \"\\n}\\n\\n\";\n            } else if (rule.type === CSSRule.MEDIA_RULE) {\n              cssText += \"@media \" + rule.media.mediaText + \" {\\n\";\n              cssText += this.scopeRules(rule.cssRules, scopeSelector);\n              cssText += \"\\n}\\n\\n\";\n            } else {\n              try {\n                if (rule.cssText) {\n                  cssText += rule.cssText + \"\\n\\n\";\n                }\n              } catch (x) {\n                if (rule.type === CSSRule.KEYFRAMES_RULE && rule.cssRules) {\n                  cssText += this.ieSafeCssTextFromKeyFrameRule(rule);\n                }\n              }\n            }\n          }, this);\n        }\n        return cssText;\n      },\n      ieSafeCssTextFromKeyFrameRule: function(rule) {\n        var cssText = \"@keyframes \" + rule.name + \" {\";\n        Array.prototype.forEach.call(rule.cssRules, function(rule) {\n          cssText += \" \" + rule.keyText + \" {\" + rule.style.cssText + \"}\";\n        });\n        cssText += \" }\";\n        return cssText;\n      },\n      scopeSelector: function(selector, scopeSelector, strict) {\n        var r = [], parts = selector.split(\",\");\n        parts.forEach(function(p) {\n          p = p.trim();\n          if (this.selectorNeedsScoping(p, scopeSelector)) {\n            p = strict && !p.match(polyfillHostNoCombinator) ? this.applyStrictSelectorScope(p, scopeSelector) : this.applySelectorScope(p, scopeSelector);\n          }\n          r.push(p);\n        }, this);\n        return r.join(\", \");\n      },\n      selectorNeedsScoping: function(selector, scopeSelector) {\n        if (Array.isArray(scopeSelector)) {\n          return true;\n        }\n        var re = this.makeScopeMatcher(scopeSelector);\n        return !selector.match(re);\n      },\n      makeScopeMatcher: function(scopeSelector) {\n        scopeSelector = scopeSelector.replace(/\\[/g, \"\\\\[\").replace(/\\[/g, \"\\\\]\");\n        return new RegExp(\"^(\" + scopeSelector + \")\" + selectorReSuffix, \"m\");\n      },\n      applySelectorScope: function(selector, selectorScope) {\n        return Array.isArray(selectorScope) ? this.applySelectorScopeList(selector, selectorScope) : this.applySimpleSelectorScope(selector, selectorScope);\n      },\n      applySelectorScopeList: function(selector, scopeSelectorList) {\n        var r = [];\n        for (var i = 0, s; s = scopeSelectorList[i]; i++) {\n          r.push(this.applySimpleSelectorScope(selector, s));\n        }\n        return r.join(\", \");\n      },\n      applySimpleSelectorScope: function(selector, scopeSelector) {\n        if (selector.match(polyfillHostRe)) {\n          selector = selector.replace(polyfillHostNoCombinator, scopeSelector);\n          return selector.replace(polyfillHostRe, scopeSelector + \" \");\n        } else {\n          return scopeSelector + \" \" + selector;\n        }\n      },\n      applyStrictSelectorScope: function(selector, scopeSelector) {\n        scopeSelector = scopeSelector.replace(/\\[is=([^\\]]*)\\]/g, \"$1\");\n        var splits = [ \" \", \">\", \"+\", \"~\" ], scoped = selector, attrName = \"[\" + scopeSelector + \"]\";\n        splits.forEach(function(sep) {\n          var parts = scoped.split(sep);\n          scoped = parts.map(function(p) {\n            var t = p.trim().replace(polyfillHostRe, \"\");\n            if (t && splits.indexOf(t) < 0 && t.indexOf(attrName) < 0) {\n              p = t.replace(/([^:]*)(:*)(.*)/, \"$1\" + attrName + \"$2$3\");\n            }\n            return p;\n          }).join(sep);\n        });\n        return scoped;\n      },\n      insertPolyfillHostInCssText: function(selector) {\n        return selector.replace(colonHostContextRe, polyfillHostContext).replace(colonHostRe, polyfillHost);\n      },\n      propertiesFromRule: function(rule) {\n        var cssText = rule.style.cssText;\n        if (rule.style.content && !rule.style.content.match(/['\"]+|attr/)) {\n          cssText = cssText.replace(/content:[^;]*;/g, \"content: '\" + rule.style.content + \"';\");\n        }\n        var style = rule.style;\n        for (var i in style) {\n          if (style[i] === \"initial\") {\n            cssText += i + \": initial; \";\n          }\n        }\n        return cssText;\n      },\n      replaceTextInStyles: function(styles, action) {\n        if (styles && action) {\n          if (!(styles instanceof Array)) {\n            styles = [ styles ];\n          }\n          Array.prototype.forEach.call(styles, function(s) {\n            s.textContent = action.call(this, s.textContent);\n          }, this);\n        }\n      },\n      addCssToDocument: function(cssText, name) {\n        if (cssText.match(\"@import\")) {\n          addOwnSheet(cssText, name);\n        } else {\n          addCssToDocument(cssText);\n        }\n      }\n    };\n    var selectorRe = /([^{]*)({[\\s\\S]*?})/gim, cssCommentRe = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim, cssCommentNextSelectorRe = /\\/\\*\\s*@polyfill ([^*]*\\*+([^/*][^*]*\\*+)*\\/)([^{]*?){/gim, cssContentNextSelectorRe = /polyfill-next-selector[^}]*content\\:[\\s]*?['\"](.*?)['\"][;\\s]*}([^{]*?){/gim, cssCommentRuleRe = /\\/\\*\\s@polyfill-rule([^*]*\\*+([^/*][^*]*\\*+)*)\\//gim, cssContentRuleRe = /(polyfill-rule)[^}]*(content\\:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim, cssCommentUnscopedRuleRe = /\\/\\*\\s@polyfill-unscoped-rule([^*]*\\*+([^/*][^*]*\\*+)*)\\//gim, cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content\\:[\\s]*['\"](.*?)['\"])[;\\s]*[^}]*}/gim, cssPseudoRe = /::(x-[^\\s{,(]*)/gim, cssPartRe = /::part\\(([^)]*)\\)/gim, polyfillHost = \"-shadowcsshost\", polyfillHostContext = \"-shadowcsscontext\", parenSuffix = \")(?:\\\\((\" + \"(?:\\\\([^)(]*\\\\)|[^)(]*)+?\" + \")\\\\))?([^,{]*)\";\n    var cssColonHostRe = new RegExp(\"(\" + polyfillHost + parenSuffix, \"gim\"), cssColonHostContextRe = new RegExp(\"(\" + polyfillHostContext + parenSuffix, \"gim\"), selectorReSuffix = \"([>\\\\s~+[.,{:][\\\\s\\\\S]*)?$\", colonHostRe = /\\:host/gim, colonHostContextRe = /\\:host-context/gim, polyfillHostNoCombinator = polyfillHost + \"-no-combinator\", polyfillHostRe = new RegExp(polyfillHost, \"gim\"), polyfillHostContextRe = new RegExp(polyfillHostContext, \"gim\"), shadowDOMSelectorsRe = [ /\\^\\^/g, /\\^/g, /\\/shadow\\//g, /\\/shadow-deep\\//g, /::shadow/g, /\\/deep\\//g, /::content/g ];\n    function stylesToCssText(styles, preserveComments) {\n      var cssText = \"\";\n      Array.prototype.forEach.call(styles, function(s) {\n        cssText += s.textContent + \"\\n\\n\";\n      });\n      if (!preserveComments) {\n        cssText = cssText.replace(cssCommentRe, \"\");\n      }\n      return cssText;\n    }\n    function cssTextToStyle(cssText) {\n      var style = document.createElement(\"style\");\n      style.textContent = cssText;\n      return style;\n    }\n    function cssToRules(cssText) {\n      var style = cssTextToStyle(cssText);\n      document.head.appendChild(style);\n      var rules = [];\n      if (style.sheet) {\n        try {\n          rules = style.sheet.cssRules;\n        } catch (e) {}\n      } else {\n        console.warn(\"sheet not found\", style);\n      }\n      style.parentNode.removeChild(style);\n      return rules;\n    }\n    var frame = document.createElement(\"iframe\");\n    frame.style.display = \"none\";\n    function initFrame() {\n      frame.initialized = true;\n      document.body.appendChild(frame);\n      var doc = frame.contentDocument;\n      var base = doc.createElement(\"base\");\n      base.href = document.baseURI;\n      doc.head.appendChild(base);\n    }\n    function inFrame(fn) {\n      if (!frame.initialized) {\n        initFrame();\n      }\n      document.body.appendChild(frame);\n      fn(frame.contentDocument);\n      document.body.removeChild(frame);\n    }\n    var isChrome = navigator.userAgent.match(\"Chrome\");\n    function withCssRules(cssText, callback) {\n      if (!callback) {\n        return;\n      }\n      var rules;\n      if (cssText.match(\"@import\") && isChrome) {\n        var style = cssTextToStyle(cssText);\n        inFrame(function(doc) {\n          doc.head.appendChild(style.impl);\n          rules = Array.prototype.slice.call(style.sheet.cssRules, 0);\n          callback(rules);\n        });\n      } else {\n        rules = cssToRules(cssText);\n        callback(rules);\n      }\n    }\n    function rulesToCss(cssRules) {\n      for (var i = 0, css = []; i < cssRules.length; i++) {\n        css.push(cssRules[i].cssText);\n      }\n      return css.join(\"\\n\\n\");\n    }\n    function addCssToDocument(cssText) {\n      if (cssText) {\n        getSheet().appendChild(document.createTextNode(cssText));\n      }\n    }\n    function addOwnSheet(cssText, name) {\n      var style = cssTextToStyle(cssText);\n      style.setAttribute(name, \"\");\n      style.setAttribute(SHIMMED_ATTRIBUTE, \"\");\n      document.head.appendChild(style);\n    }\n    var SHIM_ATTRIBUTE = \"shim-shadowdom\";\n    var SHIMMED_ATTRIBUTE = \"shim-shadowdom-css\";\n    var NO_SHIM_ATTRIBUTE = \"no-shim\";\n    var sheet;\n    function getSheet() {\n      if (!sheet) {\n        sheet = document.createElement(\"style\");\n        sheet.setAttribute(SHIMMED_ATTRIBUTE, \"\");\n        sheet[SHIMMED_ATTRIBUTE] = true;\n      }\n      return sheet;\n    }\n    if (window.ShadowDOMPolyfill) {\n      addCssToDocument(\"style { display: none !important; }\\n\");\n      var doc = ShadowDOMPolyfill.wrap(document);\n      var head = doc.querySelector(\"head\");\n      head.insertBefore(getSheet(), head.childNodes[0]);\n      document.addEventListener(\"DOMContentLoaded\", function() {\n        var urlResolver = scope.urlResolver;\n        if (window.HTMLImports && !HTMLImports.useNative) {\n          var SHIM_SHEET_SELECTOR = \"link[rel=stylesheet]\" + \"[\" + SHIM_ATTRIBUTE + \"]\";\n          var SHIM_STYLE_SELECTOR = \"style[\" + SHIM_ATTRIBUTE + \"]\";\n          HTMLImports.importer.documentPreloadSelectors += \",\" + SHIM_SHEET_SELECTOR;\n          HTMLImports.importer.importsPreloadSelectors += \",\" + SHIM_SHEET_SELECTOR;\n          HTMLImports.parser.documentSelectors = [ HTMLImports.parser.documentSelectors, SHIM_SHEET_SELECTOR, SHIM_STYLE_SELECTOR ].join(\",\");\n          var originalParseGeneric = HTMLImports.parser.parseGeneric;\n          HTMLImports.parser.parseGeneric = function(elt) {\n            if (elt[SHIMMED_ATTRIBUTE]) {\n              return;\n            }\n            var style = elt.__importElement || elt;\n            if (!style.hasAttribute(SHIM_ATTRIBUTE)) {\n              originalParseGeneric.call(this, elt);\n              return;\n            }\n            if (elt.__resource) {\n              style = elt.ownerDocument.createElement(\"style\");\n              style.textContent = elt.__resource;\n            }\n            HTMLImports.path.resolveUrlsInStyle(style);\n            style.textContent = ShadowCSS.shimStyle(style);\n            style.removeAttribute(SHIM_ATTRIBUTE, \"\");\n            style.setAttribute(SHIMMED_ATTRIBUTE, \"\");\n            style[SHIMMED_ATTRIBUTE] = true;\n            if (style.parentNode !== head) {\n              if (elt.parentNode === head) {\n                head.replaceChild(style, elt);\n              } else {\n                this.addElementToDocument(style);\n              }\n            }\n            style.__importParsed = true;\n            this.markParsingComplete(elt);\n            this.parseNext();\n          };\n          var hasResource = HTMLImports.parser.hasResource;\n          HTMLImports.parser.hasResource = function(node) {\n            if (node.localName === \"link\" && node.rel === \"stylesheet\" && node.hasAttribute(SHIM_ATTRIBUTE)) {\n              return node.__resource;\n            } else {\n              return hasResource.call(this, node);\n            }\n          };\n        }\n      });\n    }\n    scope.ShadowCSS = ShadowCSS;\n  })(window.WebComponents);\n}\n\n(function(scope) {\n  if (window.ShadowDOMPolyfill) {\n    window.wrap = ShadowDOMPolyfill.wrapIfNeeded;\n    window.unwrap = ShadowDOMPolyfill.unwrapIfNeeded;\n  } else {\n    window.wrap = window.unwrap = function(n) {\n      return n;\n    };\n  }\n})(window.WebComponents);\n\n(function(global) {\n  var registrationsTable = new WeakMap();\n  var setImmediate;\n  if (/Trident/.test(navigator.userAgent)) {\n    setImmediate = setTimeout;\n  } else if (window.setImmediate) {\n    setImmediate = window.setImmediate;\n  } else {\n    var setImmediateQueue = [];\n    var sentinel = String(Math.random());\n    window.addEventListener(\"message\", function(e) {\n      if (e.data === sentinel) {\n        var queue = setImmediateQueue;\n        setImmediateQueue = [];\n        queue.forEach(function(func) {\n          func();\n        });\n      }\n    });\n    setImmediate = function(func) {\n      setImmediateQueue.push(func);\n      window.postMessage(sentinel, \"*\");\n    };\n  }\n  var isScheduled = false;\n  var scheduledObservers = [];\n  function scheduleCallback(observer) {\n    scheduledObservers.push(observer);\n    if (!isScheduled) {\n      isScheduled = true;\n      setImmediate(dispatchCallbacks);\n    }\n  }\n  function wrapIfNeeded(node) {\n    return window.ShadowDOMPolyfill && window.ShadowDOMPolyfill.wrapIfNeeded(node) || node;\n  }\n  function dispatchCallbacks() {\n    isScheduled = false;\n    var observers = scheduledObservers;\n    scheduledObservers = [];\n    observers.sort(function(o1, o2) {\n      return o1.uid_ - o2.uid_;\n    });\n    var anyNonEmpty = false;\n    observers.forEach(function(observer) {\n      var queue = observer.takeRecords();\n      removeTransientObserversFor(observer);\n      if (queue.length) {\n        observer.callback_(queue, observer);\n        anyNonEmpty = true;\n      }\n    });\n    if (anyNonEmpty) dispatchCallbacks();\n  }\n  function removeTransientObserversFor(observer) {\n    observer.nodes_.forEach(function(node) {\n      var registrations = registrationsTable.get(node);\n      if (!registrations) return;\n      registrations.forEach(function(registration) {\n        if (registration.observer === observer) registration.removeTransientObservers();\n      });\n    });\n  }\n  function forEachAncestorAndObserverEnqueueRecord(target, callback) {\n    for (var node = target; node; node = node.parentNode) {\n      var registrations = registrationsTable.get(node);\n      if (registrations) {\n        for (var j = 0; j < registrations.length; j++) {\n          var registration = registrations[j];\n          var options = registration.options;\n          if (node !== target && !options.subtree) continue;\n          var record = callback(options);\n          if (record) registration.enqueue(record);\n        }\n      }\n    }\n  }\n  var uidCounter = 0;\n  function JsMutationObserver(callback) {\n    this.callback_ = callback;\n    this.nodes_ = [];\n    this.records_ = [];\n    this.uid_ = ++uidCounter;\n  }\n  JsMutationObserver.prototype = {\n    observe: function(target, options) {\n      target = wrapIfNeeded(target);\n      if (!options.childList && !options.attributes && !options.characterData || options.attributeOldValue && !options.attributes || options.attributeFilter && options.attributeFilter.length && !options.attributes || options.characterDataOldValue && !options.characterData) {\n        throw new SyntaxError();\n      }\n      var registrations = registrationsTable.get(target);\n      if (!registrations) registrationsTable.set(target, registrations = []);\n      var registration;\n      for (var i = 0; i < registrations.length; i++) {\n        if (registrations[i].observer === this) {\n          registration = registrations[i];\n          registration.removeListeners();\n          registration.options = options;\n          break;\n        }\n      }\n      if (!registration) {\n        registration = new Registration(this, target, options);\n        registrations.push(registration);\n        this.nodes_.push(target);\n      }\n      registration.addListeners();\n    },\n    disconnect: function() {\n      this.nodes_.forEach(function(node) {\n        var registrations = registrationsTable.get(node);\n        for (var i = 0; i < registrations.length; i++) {\n          var registration = registrations[i];\n          if (registration.observer === this) {\n            registration.removeListeners();\n            registrations.splice(i, 1);\n            break;\n          }\n        }\n      }, this);\n      this.records_ = [];\n    },\n    takeRecords: function() {\n      var copyOfRecords = this.records_;\n      this.records_ = [];\n      return copyOfRecords;\n    }\n  };\n  function MutationRecord(type, target) {\n    this.type = type;\n    this.target = target;\n    this.addedNodes = [];\n    this.removedNodes = [];\n    this.previousSibling = null;\n    this.nextSibling = null;\n    this.attributeName = null;\n    this.attributeNamespace = null;\n    this.oldValue = null;\n  }\n  function copyMutationRecord(original) {\n    var record = new MutationRecord(original.type, original.target);\n    record.addedNodes = original.addedNodes.slice();\n    record.removedNodes = original.removedNodes.slice();\n    record.previousSibling = original.previousSibling;\n    record.nextSibling = original.nextSibling;\n    record.attributeName = original.attributeName;\n    record.attributeNamespace = original.attributeNamespace;\n    record.oldValue = original.oldValue;\n    return record;\n  }\n  var currentRecord, recordWithOldValue;\n  function getRecord(type, target) {\n    return currentRecord = new MutationRecord(type, target);\n  }\n  function getRecordWithOldValue(oldValue) {\n    if (recordWithOldValue) return recordWithOldValue;\n    recordWithOldValue = copyMutationRecord(currentRecord);\n    recordWithOldValue.oldValue = oldValue;\n    return recordWithOldValue;\n  }\n  function clearRecords() {\n    currentRecord = recordWithOldValue = undefined;\n  }\n  function recordRepresentsCurrentMutation(record) {\n    return record === recordWithOldValue || record === currentRecord;\n  }\n  function selectRecord(lastRecord, newRecord) {\n    if (lastRecord === newRecord) return lastRecord;\n    if (recordWithOldValue && recordRepresentsCurrentMutation(lastRecord)) return recordWithOldValue;\n    return null;\n  }\n  function Registration(observer, target, options) {\n    this.observer = observer;\n    this.target = target;\n    this.options = options;\n    this.transientObservedNodes = [];\n  }\n  Registration.prototype = {\n    enqueue: function(record) {\n      var records = this.observer.records_;\n      var length = records.length;\n      if (records.length > 0) {\n        var lastRecord = records[length - 1];\n        var recordToReplaceLast = selectRecord(lastRecord, record);\n        if (recordToReplaceLast) {\n          records[length - 1] = recordToReplaceLast;\n          return;\n        }\n      } else {\n        scheduleCallback(this.observer);\n      }\n      records[length] = record;\n    },\n    addListeners: function() {\n      this.addListeners_(this.target);\n    },\n    addListeners_: function(node) {\n      var options = this.options;\n      if (options.attributes) node.addEventListener(\"DOMAttrModified\", this, true);\n      if (options.characterData) node.addEventListener(\"DOMCharacterDataModified\", this, true);\n      if (options.childList) node.addEventListener(\"DOMNodeInserted\", this, true);\n      if (options.childList || options.subtree) node.addEventListener(\"DOMNodeRemoved\", this, true);\n    },\n    removeListeners: function() {\n      this.removeListeners_(this.target);\n    },\n    removeListeners_: function(node) {\n      var options = this.options;\n      if (options.attributes) node.removeEventListener(\"DOMAttrModified\", this, true);\n      if (options.characterData) node.removeEventListener(\"DOMCharacterDataModified\", this, true);\n      if (options.childList) node.removeEventListener(\"DOMNodeInserted\", this, true);\n      if (options.childList || options.subtree) node.removeEventListener(\"DOMNodeRemoved\", this, true);\n    },\n    addTransientObserver: function(node) {\n      if (node === this.target) return;\n      this.addListeners_(node);\n      this.transientObservedNodes.push(node);\n      var registrations = registrationsTable.get(node);\n      if (!registrations) registrationsTable.set(node, registrations = []);\n      registrations.push(this);\n    },\n    removeTransientObservers: function() {\n      var transientObservedNodes = this.transientObservedNodes;\n      this.transientObservedNodes = [];\n      transientObservedNodes.forEach(function(node) {\n        this.removeListeners_(node);\n        var registrations = registrationsTable.get(node);\n        for (var i = 0; i < registrations.length; i++) {\n          if (registrations[i] === this) {\n            registrations.splice(i, 1);\n            break;\n          }\n        }\n      }, this);\n    },\n    handleEvent: function(e) {\n      e.stopImmediatePropagation();\n      switch (e.type) {\n       case \"DOMAttrModified\":\n        var name = e.attrName;\n        var namespace = e.relatedNode.namespaceURI;\n        var target = e.target;\n        var record = new getRecord(\"attributes\", target);\n        record.attributeName = name;\n        record.attributeNamespace = namespace;\n        var oldValue = e.attrChange === MutationEvent.ADDITION ? null : e.prevValue;\n        forEachAncestorAndObserverEnqueueRecord(target, function(options) {\n          if (!options.attributes) return;\n          if (options.attributeFilter && options.attributeFilter.length && options.attributeFilter.indexOf(name) === -1 && options.attributeFilter.indexOf(namespace) === -1) {\n            return;\n          }\n          if (options.attributeOldValue) return getRecordWithOldValue(oldValue);\n          return record;\n        });\n        break;\n\n       case \"DOMCharacterDataModified\":\n        var target = e.target;\n        var record = getRecord(\"characterData\", target);\n        var oldValue = e.prevValue;\n        forEachAncestorAndObserverEnqueueRecord(target, function(options) {\n          if (!options.characterData) return;\n          if (options.characterDataOldValue) return getRecordWithOldValue(oldValue);\n          return record;\n        });\n        break;\n\n       case \"DOMNodeRemoved\":\n        this.addTransientObserver(e.target);\n\n       case \"DOMNodeInserted\":\n        var target = e.relatedNode;\n        var changedNode = e.target;\n        var addedNodes, removedNodes;\n        if (e.type === \"DOMNodeInserted\") {\n          addedNodes = [ changedNode ];\n          removedNodes = [];\n        } else {\n          addedNodes = [];\n          removedNodes = [ changedNode ];\n        }\n        var previousSibling = changedNode.previousSibling;\n        var nextSibling = changedNode.nextSibling;\n        var record = getRecord(\"childList\", target);\n        record.addedNodes = addedNodes;\n        record.removedNodes = removedNodes;\n        record.previousSibling = previousSibling;\n        record.nextSibling = nextSibling;\n        forEachAncestorAndObserverEnqueueRecord(target, function(options) {\n          if (!options.childList) return;\n          return record;\n        });\n      }\n      clearRecords();\n    }\n  };\n  global.JsMutationObserver = JsMutationObserver;\n  if (!global.MutationObserver) global.MutationObserver = JsMutationObserver;\n})(this);\n\nwindow.HTMLImports = window.HTMLImports || {\n  flags: {}\n};\n\n(function(scope) {\n  var IMPORT_LINK_TYPE = \"import\";\n  var useNative = Boolean(IMPORT_LINK_TYPE in document.createElement(\"link\"));\n  var hasShadowDOMPolyfill = Boolean(window.ShadowDOMPolyfill);\n  var wrap = function(node) {\n    return hasShadowDOMPolyfill ? ShadowDOMPolyfill.wrapIfNeeded(node) : node;\n  };\n  var rootDocument = wrap(document);\n  var currentScriptDescriptor = {\n    get: function() {\n      var script = HTMLImports.currentScript || document.currentScript || (document.readyState !== \"complete\" ? document.scripts[document.scripts.length - 1] : null);\n      return wrap(script);\n    },\n    configurable: true\n  };\n  Object.defineProperty(document, \"_currentScript\", currentScriptDescriptor);\n  Object.defineProperty(rootDocument, \"_currentScript\", currentScriptDescriptor);\n  var isIE = /Trident/.test(navigator.userAgent);\n  function whenReady(callback, doc) {\n    doc = doc || rootDocument;\n    whenDocumentReady(function() {\n      watchImportsLoad(callback, doc);\n    }, doc);\n  }\n  var requiredReadyState = isIE ? \"complete\" : \"interactive\";\n  var READY_EVENT = \"readystatechange\";\n  function isDocumentReady(doc) {\n    return doc.readyState === \"complete\" || doc.readyState === requiredReadyState;\n  }\n  function whenDocumentReady(callback, doc) {\n    if (!isDocumentReady(doc)) {\n      var checkReady = function() {\n        if (doc.readyState === \"complete\" || doc.readyState === requiredReadyState) {\n          doc.removeEventListener(READY_EVENT, checkReady);\n          whenDocumentReady(callback, doc);\n        }\n      };\n      doc.addEventListener(READY_EVENT, checkReady);\n    } else if (callback) {\n      callback();\n    }\n  }\n  function markTargetLoaded(event) {\n    event.target.__loaded = true;\n  }\n  function watchImportsLoad(callback, doc) {\n    var imports = doc.querySelectorAll(\"link[rel=import]\");\n    var loaded = 0, l = imports.length;\n    function checkDone(d) {\n      if (loaded == l && callback) {\n        callback();\n      }\n    }\n    function loadedImport(e) {\n      markTargetLoaded(e);\n      loaded++;\n      checkDone();\n    }\n    if (l) {\n      for (var i = 0, imp; i < l && (imp = imports[i]); i++) {\n        if (isImportLoaded(imp)) {\n          loadedImport.call(imp, {\n            target: imp\n          });\n        } else {\n          imp.addEventListener(\"load\", loadedImport);\n          imp.addEventListener(\"error\", loadedImport);\n        }\n      }\n    } else {\n      checkDone();\n    }\n  }\n  function isImportLoaded(link) {\n    return useNative ? link.__loaded || link.import && link.import.readyState !== \"loading\" : link.__importParsed;\n  }\n  if (useNative) {\n    new MutationObserver(function(mxns) {\n      for (var i = 0, l = mxns.length, m; i < l && (m = mxns[i]); i++) {\n        if (m.addedNodes) {\n          handleImports(m.addedNodes);\n        }\n      }\n    }).observe(document.head, {\n      childList: true\n    });\n    function handleImports(nodes) {\n      for (var i = 0, l = nodes.length, n; i < l && (n = nodes[i]); i++) {\n        if (isImport(n)) {\n          handleImport(n);\n        }\n      }\n    }\n    function isImport(element) {\n      return element.localName === \"link\" && element.rel === \"import\";\n    }\n    function handleImport(element) {\n      var loaded = element.import;\n      if (loaded) {\n        markTargetLoaded({\n          target: element\n        });\n      } else {\n        element.addEventListener(\"load\", markTargetLoaded);\n        element.addEventListener(\"error\", markTargetLoaded);\n      }\n    }\n    (function() {\n      if (document.readyState === \"loading\") {\n        var imports = document.querySelectorAll(\"link[rel=import]\");\n        for (var i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\n          handleImport(imp);\n        }\n      }\n    })();\n  }\n  whenReady(function() {\n    HTMLImports.ready = true;\n    HTMLImports.readyTime = new Date().getTime();\n    rootDocument.dispatchEvent(new CustomEvent(\"HTMLImportsLoaded\", {\n      bubbles: true\n    }));\n  });\n  scope.IMPORT_LINK_TYPE = IMPORT_LINK_TYPE;\n  scope.useNative = useNative;\n  scope.rootDocument = rootDocument;\n  scope.whenReady = whenReady;\n  scope.isIE = isIE;\n})(HTMLImports);\n\n(function(scope) {\n  var modules = [];\n  var addModule = function(module) {\n    modules.push(module);\n  };\n  var initializeModules = function() {\n    modules.forEach(function(module) {\n      module(scope);\n    });\n  };\n  scope.addModule = addModule;\n  scope.initializeModules = initializeModules;\n})(HTMLImports);\n\nHTMLImports.addModule(function(scope) {\n  var CSS_URL_REGEXP = /(url\\()([^)]*)(\\))/g;\n  var CSS_IMPORT_REGEXP = /(@import[\\s]+(?!url\\())([^;]*)(;)/g;\n  var path = {\n    resolveUrlsInStyle: function(style) {\n      var doc = style.ownerDocument;\n      var resolver = doc.createElement(\"a\");\n      style.textContent = this.resolveUrlsInCssText(style.textContent, resolver);\n      return style;\n    },\n    resolveUrlsInCssText: function(cssText, urlObj) {\n      var r = this.replaceUrls(cssText, urlObj, CSS_URL_REGEXP);\n      r = this.replaceUrls(r, urlObj, CSS_IMPORT_REGEXP);\n      return r;\n    },\n    replaceUrls: function(text, urlObj, regexp) {\n      return text.replace(regexp, function(m, pre, url, post) {\n        var urlPath = url.replace(/[\"']/g, \"\");\n        urlObj.href = urlPath;\n        urlPath = urlObj.href;\n        return pre + \"'\" + urlPath + \"'\" + post;\n      });\n    }\n  };\n  scope.path = path;\n});\n\nHTMLImports.addModule(function(scope) {\n  xhr = {\n    async: true,\n    ok: function(request) {\n      return request.status >= 200 && request.status < 300 || request.status === 304 || request.status === 0;\n    },\n    load: function(url, next, nextContext) {\n      var request = new XMLHttpRequest();\n      if (scope.flags.debug || scope.flags.bust) {\n        url += \"?\" + Math.random();\n      }\n      request.open(\"GET\", url, xhr.async);\n      request.addEventListener(\"readystatechange\", function(e) {\n        if (request.readyState === 4) {\n          var locationHeader = request.getResponseHeader(\"Location\");\n          var redirectedUrl = null;\n          if (locationHeader) {\n            var redirectedUrl = locationHeader.substr(0, 1) === \"/\" ? location.origin + locationHeader : locationHeader;\n          }\n          next.call(nextContext, !xhr.ok(request) && request, request.response || request.responseText, redirectedUrl);\n        }\n      });\n      request.send();\n      return request;\n    },\n    loadDocument: function(url, next, nextContext) {\n      this.load(url, next, nextContext).responseType = \"document\";\n    }\n  };\n  scope.xhr = xhr;\n});\n\nHTMLImports.addModule(function(scope) {\n  var xhr = scope.xhr;\n  var flags = scope.flags;\n  var Loader = function(onLoad, onComplete) {\n    this.cache = {};\n    this.onload = onLoad;\n    this.oncomplete = onComplete;\n    this.inflight = 0;\n    this.pending = {};\n  };\n  Loader.prototype = {\n    addNodes: function(nodes) {\n      this.inflight += nodes.length;\n      for (var i = 0, l = nodes.length, n; i < l && (n = nodes[i]); i++) {\n        this.require(n);\n      }\n      this.checkDone();\n    },\n    addNode: function(node) {\n      this.inflight++;\n      this.require(node);\n      this.checkDone();\n    },\n    require: function(elt) {\n      var url = elt.src || elt.href;\n      elt.__nodeUrl = url;\n      if (!this.dedupe(url, elt)) {\n        this.fetch(url, elt);\n      }\n    },\n    dedupe: function(url, elt) {\n      if (this.pending[url]) {\n        this.pending[url].push(elt);\n        return true;\n      }\n      var resource;\n      if (this.cache[url]) {\n        this.onload(url, elt, this.cache[url]);\n        this.tail();\n        return true;\n      }\n      this.pending[url] = [ elt ];\n      return false;\n    },\n    fetch: function(url, elt) {\n      flags.load && console.log(\"fetch\", url, elt);\n      if (url.match(/^data:/)) {\n        var pieces = url.split(\",\");\n        var header = pieces[0];\n        var body = pieces[1];\n        if (header.indexOf(\";base64\") > -1) {\n          body = atob(body);\n        } else {\n          body = decodeURIComponent(body);\n        }\n        setTimeout(function() {\n          this.receive(url, elt, null, body);\n        }.bind(this), 0);\n      } else {\n        var receiveXhr = function(err, resource, redirectedUrl) {\n          this.receive(url, elt, err, resource, redirectedUrl);\n        }.bind(this);\n        xhr.load(url, receiveXhr);\n      }\n    },\n    receive: function(url, elt, err, resource, redirectedUrl) {\n      this.cache[url] = resource;\n      var $p = this.pending[url];\n      for (var i = 0, l = $p.length, p; i < l && (p = $p[i]); i++) {\n        this.onload(url, p, resource, err, redirectedUrl);\n        this.tail();\n      }\n      this.pending[url] = null;\n    },\n    tail: function() {\n      --this.inflight;\n      this.checkDone();\n    },\n    checkDone: function() {\n      if (!this.inflight) {\n        this.oncomplete();\n      }\n    }\n  };\n  scope.Loader = Loader;\n});\n\nHTMLImports.addModule(function(scope) {\n  var Observer = function(addCallback) {\n    this.addCallback = addCallback;\n    this.mo = new MutationObserver(this.handler.bind(this));\n  };\n  Observer.prototype = {\n    handler: function(mutations) {\n      for (var i = 0, l = mutations.length, m; i < l && (m = mutations[i]); i++) {\n        if (m.type === \"childList\" && m.addedNodes.length) {\n          this.addedNodes(m.addedNodes);\n        }\n      }\n    },\n    addedNodes: function(nodes) {\n      if (this.addCallback) {\n        this.addCallback(nodes);\n      }\n      for (var i = 0, l = nodes.length, n, loading; i < l && (n = nodes[i]); i++) {\n        if (n.children && n.children.length) {\n          this.addedNodes(n.children);\n        }\n      }\n    },\n    observe: function(root) {\n      this.mo.observe(root, {\n        childList: true,\n        subtree: true\n      });\n    }\n  };\n  scope.Observer = Observer;\n});\n\nHTMLImports.addModule(function(scope) {\n  var path = scope.path;\n  var rootDocument = scope.rootDocument;\n  var flags = scope.flags;\n  var isIE = scope.isIE;\n  var IMPORT_LINK_TYPE = scope.IMPORT_LINK_TYPE;\n  var IMPORT_SELECTOR = \"link[rel=\" + IMPORT_LINK_TYPE + \"]\";\n  var importParser = {\n    documentSelectors: IMPORT_SELECTOR,\n    importsSelectors: [ IMPORT_SELECTOR, \"link[rel=stylesheet]\", \"style\", \"script:not([type])\", 'script[type=\"text/javascript\"]' ].join(\",\"),\n    map: {\n      link: \"parseLink\",\n      script: \"parseScript\",\n      style: \"parseStyle\"\n    },\n    dynamicElements: [],\n    parseNext: function() {\n      var next = this.nextToParse();\n      if (next) {\n        this.parse(next);\n      }\n    },\n    parse: function(elt) {\n      if (this.isParsed(elt)) {\n        flags.parse && console.log(\"[%s] is already parsed\", elt.localName);\n        return;\n      }\n      var fn = this[this.map[elt.localName]];\n      if (fn) {\n        this.markParsing(elt);\n        fn.call(this, elt);\n      }\n    },\n    parseDynamic: function(elt, quiet) {\n      this.dynamicElements.push(elt);\n      if (!quiet) {\n        this.parseNext();\n      }\n    },\n    markParsing: function(elt) {\n      flags.parse && console.log(\"parsing\", elt);\n      this.parsingElement = elt;\n    },\n    markParsingComplete: function(elt) {\n      elt.__importParsed = true;\n      this.markDynamicParsingComplete(elt);\n      if (elt.__importElement) {\n        elt.__importElement.__importParsed = true;\n        this.markDynamicParsingComplete(elt.__importElement);\n      }\n      this.parsingElement = null;\n      flags.parse && console.log(\"completed\", elt);\n    },\n    markDynamicParsingComplete: function(elt) {\n      var i = this.dynamicElements.indexOf(elt);\n      if (i >= 0) {\n        this.dynamicElements.splice(i, 1);\n      }\n    },\n    parseImport: function(elt) {\n      if (HTMLImports.__importsParsingHook) {\n        HTMLImports.__importsParsingHook(elt);\n      }\n      if (elt.import) {\n        elt.import.__importParsed = true;\n      }\n      this.markParsingComplete(elt);\n      if (elt.__resource && !elt.__error) {\n        elt.dispatchEvent(new CustomEvent(\"load\", {\n          bubbles: false\n        }));\n      } else {\n        elt.dispatchEvent(new CustomEvent(\"error\", {\n          bubbles: false\n        }));\n      }\n      if (elt.__pending) {\n        var fn;\n        while (elt.__pending.length) {\n          fn = elt.__pending.shift();\n          if (fn) {\n            fn({\n              target: elt\n            });\n          }\n        }\n      }\n      this.parseNext();\n    },\n    parseLink: function(linkElt) {\n      if (nodeIsImport(linkElt)) {\n        this.parseImport(linkElt);\n      } else {\n        linkElt.href = linkElt.href;\n        this.parseGeneric(linkElt);\n      }\n    },\n    parseStyle: function(elt) {\n      var src = elt;\n      elt = cloneStyle(elt);\n      elt.__importElement = src;\n      this.parseGeneric(elt);\n    },\n    parseGeneric: function(elt) {\n      this.trackElement(elt);\n      this.addElementToDocument(elt);\n    },\n    rootImportForElement: function(elt) {\n      var n = elt;\n      while (n.ownerDocument.__importLink) {\n        n = n.ownerDocument.__importLink;\n      }\n      return n;\n    },\n    addElementToDocument: function(elt) {\n      var port = this.rootImportForElement(elt.__importElement || elt);\n      var l = port.__insertedElements = port.__insertedElements || 0;\n      var refNode = port.nextElementSibling;\n      for (var i = 0; i < l; i++) {\n        refNode = refNode && refNode.nextElementSibling;\n      }\n      port.parentNode.insertBefore(elt, refNode);\n    },\n    trackElement: function(elt, callback) {\n      var self = this;\n      var done = function(e) {\n        if (callback) {\n          callback(e);\n        }\n        self.markParsingComplete(elt);\n        self.parseNext();\n      };\n      elt.addEventListener(\"load\", done);\n      elt.addEventListener(\"error\", done);\n      if (isIE && elt.localName === \"style\") {\n        var fakeLoad = false;\n        if (elt.textContent.indexOf(\"@import\") == -1) {\n          fakeLoad = true;\n        } else if (elt.sheet) {\n          fakeLoad = true;\n          var csr = elt.sheet.cssRules;\n          var len = csr ? csr.length : 0;\n          for (var i = 0, r; i < len && (r = csr[i]); i++) {\n            if (r.type === CSSRule.IMPORT_RULE) {\n              fakeLoad = fakeLoad && Boolean(r.styleSheet);\n            }\n          }\n        }\n        if (fakeLoad) {\n          elt.dispatchEvent(new CustomEvent(\"load\", {\n            bubbles: false\n          }));\n        }\n      }\n    },\n    parseScript: function(scriptElt) {\n      var script = document.createElement(\"script\");\n      script.__importElement = scriptElt;\n      script.src = scriptElt.src ? scriptElt.src : generateScriptDataUrl(scriptElt);\n      scope.currentScript = scriptElt;\n      this.trackElement(script, function(e) {\n        script.parentNode.removeChild(script);\n        scope.currentScript = null;\n      });\n      this.addElementToDocument(script);\n    },\n    nextToParse: function() {\n      this._mayParse = [];\n      return !this.parsingElement && (this.nextToParseInDoc(rootDocument) || this.nextToParseDynamic());\n    },\n    nextToParseInDoc: function(doc, link) {\n      if (doc && this._mayParse.indexOf(doc) < 0) {\n        this._mayParse.push(doc);\n        var nodes = doc.querySelectorAll(this.parseSelectorsForNode(doc));\n        for (var i = 0, l = nodes.length, p = 0, n; i < l && (n = nodes[i]); i++) {\n          if (!this.isParsed(n)) {\n            if (this.hasResource(n)) {\n              return nodeIsImport(n) ? this.nextToParseInDoc(n.import, n) : n;\n            } else {\n              return;\n            }\n          }\n        }\n      }\n      return link;\n    },\n    nextToParseDynamic: function() {\n      return this.dynamicElements[0];\n    },\n    parseSelectorsForNode: function(node) {\n      var doc = node.ownerDocument || node;\n      return doc === rootDocument ? this.documentSelectors : this.importsSelectors;\n    },\n    isParsed: function(node) {\n      return node.__importParsed;\n    },\n    needsDynamicParsing: function(elt) {\n      return this.dynamicElements.indexOf(elt) >= 0;\n    },\n    hasResource: function(node) {\n      if (nodeIsImport(node) && node.import === undefined) {\n        return false;\n      }\n      return true;\n    }\n  };\n  function nodeIsImport(elt) {\n    return elt.localName === \"link\" && elt.rel === IMPORT_LINK_TYPE;\n  }\n  function generateScriptDataUrl(script) {\n    var scriptContent = generateScriptContent(script);\n    return \"data:text/javascript;charset=utf-8,\" + encodeURIComponent(scriptContent);\n  }\n  function generateScriptContent(script) {\n    return script.textContent + generateSourceMapHint(script);\n  }\n  function generateSourceMapHint(script) {\n    var owner = script.ownerDocument;\n    owner.__importedScripts = owner.__importedScripts || 0;\n    var moniker = script.ownerDocument.baseURI;\n    var num = owner.__importedScripts ? \"-\" + owner.__importedScripts : \"\";\n    owner.__importedScripts++;\n    return \"\\n//# sourceURL=\" + moniker + num + \".js\\n\";\n  }\n  function cloneStyle(style) {\n    var clone = style.ownerDocument.createElement(\"style\");\n    clone.textContent = style.textContent;\n    path.resolveUrlsInStyle(clone);\n    return clone;\n  }\n  scope.parser = importParser;\n  scope.IMPORT_SELECTOR = IMPORT_SELECTOR;\n});\n\nHTMLImports.addModule(function(scope) {\n  var flags = scope.flags;\n  var IMPORT_LINK_TYPE = scope.IMPORT_LINK_TYPE;\n  var IMPORT_SELECTOR = scope.IMPORT_SELECTOR;\n  var rootDocument = scope.rootDocument;\n  var Loader = scope.Loader;\n  var Observer = scope.Observer;\n  var parser = scope.parser;\n  var importer = {\n    documents: {},\n    documentPreloadSelectors: IMPORT_SELECTOR,\n    importsPreloadSelectors: [ IMPORT_SELECTOR ].join(\",\"),\n    loadNode: function(node) {\n      importLoader.addNode(node);\n    },\n    loadSubtree: function(parent) {\n      var nodes = this.marshalNodes(parent);\n      importLoader.addNodes(nodes);\n    },\n    marshalNodes: function(parent) {\n      return parent.querySelectorAll(this.loadSelectorsForNode(parent));\n    },\n    loadSelectorsForNode: function(node) {\n      var doc = node.ownerDocument || node;\n      return doc === rootDocument ? this.documentPreloadSelectors : this.importsPreloadSelectors;\n    },\n    loaded: function(url, elt, resource, err, redirectedUrl) {\n      flags.load && console.log(\"loaded\", url, elt);\n      elt.__resource = resource;\n      elt.__error = err;\n      if (isImportLink(elt)) {\n        var doc = this.documents[url];\n        if (doc === undefined) {\n          doc = err ? null : makeDocument(resource, redirectedUrl || url);\n          if (doc) {\n            doc.__importLink = elt;\n            this.bootDocument(doc);\n          }\n          this.documents[url] = doc;\n        }\n        elt.import = doc;\n      }\n      parser.parseNext();\n    },\n    bootDocument: function(doc) {\n      this.loadSubtree(doc);\n      this.observer.observe(doc);\n      parser.parseNext();\n    },\n    loadedAll: function() {\n      parser.parseNext();\n    }\n  };\n  var importLoader = new Loader(importer.loaded.bind(importer), importer.loadedAll.bind(importer));\n  importer.observer = new Observer();\n  function isImportLink(elt) {\n    return isLinkRel(elt, IMPORT_LINK_TYPE);\n  }\n  function isLinkRel(elt, rel) {\n    return elt.localName === \"link\" && elt.getAttribute(\"rel\") === rel;\n  }\n  function makeDocument(resource, url) {\n    var doc = document.implementation.createHTMLDocument(IMPORT_LINK_TYPE);\n    doc._URL = url;\n    var base = doc.createElement(\"base\");\n    base.setAttribute(\"href\", url);\n    if (!doc.baseURI) {\n      doc.baseURI = url;\n    }\n    var meta = doc.createElement(\"meta\");\n    meta.setAttribute(\"charset\", \"utf-8\");\n    doc.head.appendChild(meta);\n    doc.head.appendChild(base);\n    doc.body.innerHTML = resource;\n    if (window.HTMLTemplateElement && HTMLTemplateElement.bootstrap) {\n      HTMLTemplateElement.bootstrap(doc);\n    }\n    return doc;\n  }\n  if (!document.baseURI) {\n    var baseURIDescriptor = {\n      get: function() {\n        var base = document.querySelector(\"base\");\n        return base ? base.href : window.location.href;\n      },\n      configurable: true\n    };\n    Object.defineProperty(document, \"baseURI\", baseURIDescriptor);\n    Object.defineProperty(rootDocument, \"baseURI\", baseURIDescriptor);\n  }\n  scope.importer = importer;\n  scope.importLoader = importLoader;\n});\n\nHTMLImports.addModule(function(scope) {\n  var parser = scope.parser;\n  var importer = scope.importer;\n  var dynamic = {\n    added: function(nodes) {\n      var owner, parsed;\n      for (var i = 0, l = nodes.length, n; i < l && (n = nodes[i]); i++) {\n        if (!owner) {\n          owner = n.ownerDocument;\n          parsed = parser.isParsed(owner);\n        }\n        loading = this.shouldLoadNode(n);\n        if (loading) {\n          importer.loadNode(n);\n        }\n        if (this.shouldParseNode(n) && parsed) {\n          parser.parseDynamic(n, loading);\n        }\n      }\n    },\n    shouldLoadNode: function(node) {\n      return node.nodeType === 1 && matches.call(node, importer.loadSelectorsForNode(node));\n    },\n    shouldParseNode: function(node) {\n      return node.nodeType === 1 && matches.call(node, parser.parseSelectorsForNode(node));\n    }\n  };\n  importer.observer.addCallback = dynamic.added.bind(dynamic);\n  var matches = HTMLElement.prototype.matches || HTMLElement.prototype.matchesSelector || HTMLElement.prototype.webkitMatchesSelector || HTMLElement.prototype.mozMatchesSelector || HTMLElement.prototype.msMatchesSelector;\n});\n\n(function(scope) {\n  initializeModules = scope.initializeModules;\n  if (scope.useNative) {\n    return;\n  }\n  if (typeof window.CustomEvent !== \"function\") {\n    window.CustomEvent = function(inType, dictionary) {\n      var e = document.createEvent(\"HTMLEvents\");\n      e.initEvent(inType, dictionary.bubbles === false ? false : true, dictionary.cancelable === false ? false : true, dictionary.detail);\n      return e;\n    };\n  }\n  initializeModules();\n  var rootDocument = scope.rootDocument;\n  function bootstrap() {\n    HTMLImports.importer.bootDocument(rootDocument);\n  }\n  if (document.readyState === \"complete\" || document.readyState === \"interactive\" && !window.attachEvent) {\n    bootstrap();\n  } else {\n    document.addEventListener(\"DOMContentLoaded\", bootstrap);\n  }\n})(HTMLImports);\n\nwindow.CustomElements = window.CustomElements || {\n  flags: {}\n};\n\n(function(scope) {\n  var flags = scope.flags;\n  var modules = [];\n  var addModule = function(module) {\n    modules.push(module);\n  };\n  var initializeModules = function() {\n    modules.forEach(function(module) {\n      module(scope);\n    });\n  };\n  scope.addModule = addModule;\n  scope.initializeModules = initializeModules;\n  scope.hasNative = Boolean(document.registerElement);\n  scope.useNative = !flags.register && scope.hasNative && !window.ShadowDOMPolyfill && (!window.HTMLImports || HTMLImports.useNative);\n})(CustomElements);\n\nCustomElements.addModule(function(scope) {\n  var IMPORT_LINK_TYPE = window.HTMLImports ? HTMLImports.IMPORT_LINK_TYPE : \"none\";\n  function forSubtree(node, cb) {\n    findAllElements(node, function(e) {\n      if (cb(e)) {\n        return true;\n      }\n      forRoots(e, cb);\n    });\n    forRoots(node, cb);\n  }\n  function findAllElements(node, find, data) {\n    var e = node.firstElementChild;\n    if (!e) {\n      e = node.firstChild;\n      while (e && e.nodeType !== Node.ELEMENT_NODE) {\n        e = e.nextSibling;\n      }\n    }\n    while (e) {\n      if (find(e, data) !== true) {\n        findAllElements(e, find, data);\n      }\n      e = e.nextElementSibling;\n    }\n    return null;\n  }\n  function forRoots(node, cb) {\n    var root = node.shadowRoot;\n    while (root) {\n      forSubtree(root, cb);\n      root = root.olderShadowRoot;\n    }\n  }\n  var processingDocuments;\n  function forDocumentTree(doc, cb) {\n    processingDocuments = [];\n    _forDocumentTree(doc, cb);\n    processingDocuments = null;\n  }\n  function _forDocumentTree(doc, cb) {\n    doc = wrap(doc);\n    if (processingDocuments.indexOf(doc) >= 0) {\n      return;\n    }\n    processingDocuments.push(doc);\n    var imports = doc.querySelectorAll(\"link[rel=\" + IMPORT_LINK_TYPE + \"]\");\n    for (var i = 0, l = imports.length, n; i < l && (n = imports[i]); i++) {\n      if (n.import) {\n        _forDocumentTree(n.import, cb);\n      }\n    }\n    cb(doc);\n  }\n  scope.forDocumentTree = forDocumentTree;\n  scope.forSubtree = forSubtree;\n});\n\nCustomElements.addModule(function(scope) {\n  var flags = scope.flags;\n  var forSubtree = scope.forSubtree;\n  var forDocumentTree = scope.forDocumentTree;\n  function addedNode(node) {\n    return added(node) || addedSubtree(node);\n  }\n  function added(node) {\n    if (scope.upgrade(node)) {\n      return true;\n    }\n    attached(node);\n  }\n  function addedSubtree(node) {\n    forSubtree(node, function(e) {\n      if (added(e)) {\n        return true;\n      }\n    });\n  }\n  function attachedNode(node) {\n    attached(node);\n    if (inDocument(node)) {\n      forSubtree(node, function(e) {\n        attached(e);\n      });\n    }\n  }\n  var hasPolyfillMutations = !window.MutationObserver || window.MutationObserver === window.JsMutationObserver;\n  scope.hasPolyfillMutations = hasPolyfillMutations;\n  var isPendingMutations = false;\n  var pendingMutations = [];\n  function deferMutation(fn) {\n    pendingMutations.push(fn);\n    if (!isPendingMutations) {\n      isPendingMutations = true;\n      setTimeout(takeMutations);\n    }\n  }\n  function takeMutations() {\n    isPendingMutations = false;\n    var $p = pendingMutations;\n    for (var i = 0, l = $p.length, p; i < l && (p = $p[i]); i++) {\n      p();\n    }\n    pendingMutations = [];\n  }\n  function attached(element) {\n    if (hasPolyfillMutations) {\n      deferMutation(function() {\n        _attached(element);\n      });\n    } else {\n      _attached(element);\n    }\n  }\n  function _attached(element) {\n    if (element.__upgraded__ && (element.attachedCallback || element.detachedCallback)) {\n      if (!element.__attached && inDocument(element)) {\n        element.__attached = true;\n        if (element.attachedCallback) {\n          element.attachedCallback();\n        }\n      }\n    }\n  }\n  function detachedNode(node) {\n    detached(node);\n    forSubtree(node, function(e) {\n      detached(e);\n    });\n  }\n  function detached(element) {\n    if (hasPolyfillMutations) {\n      deferMutation(function() {\n        _detached(element);\n      });\n    } else {\n      _detached(element);\n    }\n  }\n  function _detached(element) {\n    if (element.__upgraded__ && (element.attachedCallback || element.detachedCallback)) {\n      if (element.__attached && !inDocument(element)) {\n        element.__attached = false;\n        if (element.detachedCallback) {\n          element.detachedCallback();\n        }\n      }\n    }\n  }\n  function inDocument(element) {\n    var p = element;\n    var doc = wrap(document);\n    while (p) {\n      if (p == doc) {\n        return true;\n      }\n      p = p.parentNode || p.host;\n    }\n  }\n  function watchShadow(node) {\n    if (node.shadowRoot && !node.shadowRoot.__watched) {\n      flags.dom && console.log(\"watching shadow-root for: \", node.localName);\n      var root = node.shadowRoot;\n      while (root) {\n        observe(root);\n        root = root.olderShadowRoot;\n      }\n    }\n  }\n  function handler(mutations) {\n    if (flags.dom) {\n      var mx = mutations[0];\n      if (mx && mx.type === \"childList\" && mx.addedNodes) {\n        if (mx.addedNodes) {\n          var d = mx.addedNodes[0];\n          while (d && d !== document && !d.host) {\n            d = d.parentNode;\n          }\n          var u = d && (d.URL || d._URL || d.host && d.host.localName) || \"\";\n          u = u.split(\"/?\").shift().split(\"/\").pop();\n        }\n      }\n      console.group(\"mutations (%d) [%s]\", mutations.length, u || \"\");\n    }\n    mutations.forEach(function(mx) {\n      if (mx.type === \"childList\") {\n        forEach(mx.addedNodes, function(n) {\n          if (!n.localName) {\n            return;\n          }\n          addedNode(n);\n        });\n        forEach(mx.removedNodes, function(n) {\n          if (!n.localName) {\n            return;\n          }\n          detachedNode(n);\n        });\n      }\n    });\n    flags.dom && console.groupEnd();\n  }\n  function takeRecords(node) {\n    node = wrap(node);\n    if (!node) {\n      node = wrap(document);\n    }\n    while (node.parentNode) {\n      node = node.parentNode;\n    }\n    var observer = node.__observer;\n    if (observer) {\n      handler(observer.takeRecords());\n      takeMutations();\n    }\n  }\n  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\n  function observe(inRoot) {\n    if (inRoot.__observer) {\n      return;\n    }\n    var observer = new MutationObserver(handler);\n    observer.observe(inRoot, {\n      childList: true,\n      subtree: true\n    });\n    inRoot.__observer = observer;\n  }\n  function upgradeDocument(doc) {\n    doc = wrap(doc);\n    flags.dom && console.group(\"upgradeDocument: \", doc.baseURI.split(\"/\").pop());\n    addedNode(doc);\n    observe(doc);\n    flags.dom && console.groupEnd();\n  }\n  function upgradeDocumentTree(doc) {\n    forDocumentTree(doc, upgradeDocument);\n  }\n  var originalCreateShadowRoot = Element.prototype.createShadowRoot;\n  Element.prototype.createShadowRoot = function() {\n    var root = originalCreateShadowRoot.call(this);\n    CustomElements.watchShadow(this);\n    return root;\n  };\n  scope.watchShadow = watchShadow;\n  scope.upgradeDocumentTree = upgradeDocumentTree;\n  scope.upgradeSubtree = addedSubtree;\n  scope.upgradeAll = addedNode;\n  scope.attachedNode = attachedNode;\n  scope.takeRecords = takeRecords;\n});\n\nCustomElements.addModule(function(scope) {\n  var flags = scope.flags;\n  function upgrade(node) {\n    if (!node.__upgraded__ && node.nodeType === Node.ELEMENT_NODE) {\n      var is = node.getAttribute(\"is\");\n      var definition = scope.getRegisteredDefinition(is || node.localName);\n      if (definition) {\n        if (is && definition.tag == node.localName) {\n          return upgradeWithDefinition(node, definition);\n        } else if (!is && !definition.extends) {\n          return upgradeWithDefinition(node, definition);\n        }\n      }\n    }\n  }\n  function upgradeWithDefinition(element, definition) {\n    flags.upgrade && console.group(\"upgrade:\", element.localName);\n    if (definition.is) {\n      element.setAttribute(\"is\", definition.is);\n    }\n    implementPrototype(element, definition);\n    element.__upgraded__ = true;\n    created(element);\n    scope.attachedNode(element);\n    scope.upgradeSubtree(element);\n    flags.upgrade && console.groupEnd();\n    return element;\n  }\n  function implementPrototype(element, definition) {\n    if (Object.__proto__) {\n      element.__proto__ = definition.prototype;\n    } else {\n      customMixin(element, definition.prototype, definition.native);\n      element.__proto__ = definition.prototype;\n    }\n  }\n  function customMixin(inTarget, inSrc, inNative) {\n    var used = {};\n    var p = inSrc;\n    while (p !== inNative && p !== HTMLElement.prototype) {\n      var keys = Object.getOwnPropertyNames(p);\n      for (var i = 0, k; k = keys[i]; i++) {\n        if (!used[k]) {\n          Object.defineProperty(inTarget, k, Object.getOwnPropertyDescriptor(p, k));\n          used[k] = 1;\n        }\n      }\n      p = Object.getPrototypeOf(p);\n    }\n  }\n  function created(element) {\n    if (element.createdCallback) {\n      element.createdCallback();\n    }\n  }\n  scope.upgrade = upgrade;\n  scope.upgradeWithDefinition = upgradeWithDefinition;\n  scope.implementPrototype = implementPrototype;\n});\n\nCustomElements.addModule(function(scope) {\n  var upgradeDocumentTree = scope.upgradeDocumentTree;\n  var upgrade = scope.upgrade;\n  var upgradeWithDefinition = scope.upgradeWithDefinition;\n  var implementPrototype = scope.implementPrototype;\n  var useNative = scope.useNative;\n  function register(name, options) {\n    var definition = options || {};\n    if (!name) {\n      throw new Error(\"document.registerElement: first argument `name` must not be empty\");\n    }\n    if (name.indexOf(\"-\") < 0) {\n      throw new Error(\"document.registerElement: first argument ('name') must contain a dash ('-'). Argument provided was '\" + String(name) + \"'.\");\n    }\n    if (isReservedTag(name)) {\n      throw new Error(\"Failed to execute 'registerElement' on 'Document': Registration failed for type '\" + String(name) + \"'. The type name is invalid.\");\n    }\n    if (getRegisteredDefinition(name)) {\n      throw new Error(\"DuplicateDefinitionError: a type with name '\" + String(name) + \"' is already registered\");\n    }\n    if (!definition.prototype) {\n      definition.prototype = Object_create(HTMLElement.prototype);\n    }\n    definition.__name = name.toLowerCase();\n    definition.lifecycle = definition.lifecycle || {};\n    definition.ancestry = ancestry(definition.extends);\n    resolveTagName(definition);\n    resolvePrototypeChain(definition);\n    overrideAttributeApi(definition.prototype);\n    registerDefinition(definition.__name, definition);\n    definition.ctor = generateConstructor(definition);\n    definition.ctor.prototype = definition.prototype;\n    definition.prototype.constructor = definition.ctor;\n    if (scope.ready) {\n      upgradeDocumentTree(document);\n    }\n    return definition.ctor;\n  }\n  function overrideAttributeApi(prototype) {\n    if (prototype.setAttribute._polyfilled) {\n      return;\n    }\n    var setAttribute = prototype.setAttribute;\n    prototype.setAttribute = function(name, value) {\n      changeAttribute.call(this, name, value, setAttribute);\n    };\n    var removeAttribute = prototype.removeAttribute;\n    prototype.removeAttribute = function(name) {\n      changeAttribute.call(this, name, null, removeAttribute);\n    };\n    prototype.setAttribute._polyfilled = true;\n  }\n  function changeAttribute(name, value, operation) {\n    name = name.toLowerCase();\n    var oldValue = this.getAttribute(name);\n    operation.apply(this, arguments);\n    var newValue = this.getAttribute(name);\n    if (this.attributeChangedCallback && newValue !== oldValue) {\n      this.attributeChangedCallback(name, oldValue, newValue);\n    }\n  }\n  function isReservedTag(name) {\n    for (var i = 0; i < reservedTagList.length; i++) {\n      if (name === reservedTagList[i]) {\n        return true;\n      }\n    }\n  }\n  var reservedTagList = [ \"annotation-xml\", \"color-profile\", \"font-face\", \"font-face-src\", \"font-face-uri\", \"font-face-format\", \"font-face-name\", \"missing-glyph\" ];\n  function ancestry(extnds) {\n    var extendee = getRegisteredDefinition(extnds);\n    if (extendee) {\n      return ancestry(extendee.extends).concat([ extendee ]);\n    }\n    return [];\n  }\n  function resolveTagName(definition) {\n    var baseTag = definition.extends;\n    for (var i = 0, a; a = definition.ancestry[i]; i++) {\n      baseTag = a.is && a.tag;\n    }\n    definition.tag = baseTag || definition.__name;\n    if (baseTag) {\n      definition.is = definition.__name;\n    }\n  }\n  function resolvePrototypeChain(definition) {\n    if (!Object.__proto__) {\n      var nativePrototype = HTMLElement.prototype;\n      if (definition.is) {\n        var inst = document.createElement(definition.tag);\n        var expectedPrototype = Object.getPrototypeOf(inst);\n        if (expectedPrototype === definition.prototype) {\n          nativePrototype = expectedPrototype;\n        }\n      }\n      var proto = definition.prototype, ancestor;\n      while (proto && proto !== nativePrototype) {\n        ancestor = Object.getPrototypeOf(proto);\n        proto.__proto__ = ancestor;\n        proto = ancestor;\n      }\n      definition.native = nativePrototype;\n    }\n  }\n  function instantiate(definition) {\n    return upgradeWithDefinition(domCreateElement(definition.tag), definition);\n  }\n  var registry = {};\n  function getRegisteredDefinition(name) {\n    if (name) {\n      return registry[name.toLowerCase()];\n    }\n  }\n  function registerDefinition(name, definition) {\n    registry[name] = definition;\n  }\n  function generateConstructor(definition) {\n    return function() {\n      return instantiate(definition);\n    };\n  }\n  var HTML_NAMESPACE = \"http://www.w3.org/1999/xhtml\";\n  function createElementNS(namespace, tag, typeExtension) {\n    if (namespace === HTML_NAMESPACE) {\n      return createElement(tag, typeExtension);\n    } else {\n      return domCreateElementNS(namespace, tag);\n    }\n  }\n  function createElement(tag, typeExtension) {\n    var definition = getRegisteredDefinition(typeExtension || tag);\n    if (definition) {\n      if (tag == definition.tag && typeExtension == definition.is) {\n        return new definition.ctor();\n      }\n      if (!typeExtension && !definition.is) {\n        return new definition.ctor();\n      }\n    }\n    var element;\n    if (typeExtension) {\n      element = createElement(tag);\n      element.setAttribute(\"is\", typeExtension);\n      return element;\n    }\n    element = domCreateElement(tag);\n    if (tag.indexOf(\"-\") >= 0) {\n      implementPrototype(element, HTMLElement);\n    }\n    return element;\n  }\n  function cloneNode(deep) {\n    var n = domCloneNode.call(this, deep);\n    upgrade(n);\n    return n;\n  }\n  var domCreateElement = document.createElement.bind(document);\n  var domCreateElementNS = document.createElementNS.bind(document);\n  var domCloneNode = Node.prototype.cloneNode;\n  var isInstance;\n  if (!Object.__proto__ && !useNative) {\n    isInstance = function(obj, ctor) {\n      var p = obj;\n      while (p) {\n        if (p === ctor.prototype) {\n          return true;\n        }\n        p = p.__proto__;\n      }\n      return false;\n    };\n  } else {\n    isInstance = function(obj, base) {\n      return obj instanceof base;\n    };\n  }\n  document.registerElement = register;\n  document.createElement = createElement;\n  document.createElementNS = createElementNS;\n  Node.prototype.cloneNode = cloneNode;\n  scope.registry = registry;\n  scope.instanceof = isInstance;\n  scope.reservedTagList = reservedTagList;\n  scope.getRegisteredDefinition = getRegisteredDefinition;\n  document.register = document.registerElement;\n});\n\n(function(scope) {\n  var useNative = scope.useNative;\n  var initializeModules = scope.initializeModules;\n  if (useNative) {\n    var nop = function() {};\n    scope.watchShadow = nop;\n    scope.upgrade = nop;\n    scope.upgradeAll = nop;\n    scope.upgradeDocumentTree = nop;\n    scope.upgradeSubtree = nop;\n    scope.takeRecords = nop;\n    scope.instanceof = function(obj, base) {\n      return obj instanceof base;\n    };\n  } else {\n    initializeModules();\n  }\n  var upgradeDocumentTree = scope.upgradeDocumentTree;\n  if (!window.wrap) {\n    if (window.ShadowDOMPolyfill) {\n      window.wrap = ShadowDOMPolyfill.wrapIfNeeded;\n      window.unwrap = ShadowDOMPolyfill.unwrapIfNeeded;\n    } else {\n      window.wrap = window.unwrap = function(node) {\n        return node;\n      };\n    }\n  }\n  function bootstrap() {\n    upgradeDocumentTree(wrap(document));\n    if (window.HTMLImports) {\n      HTMLImports.__importsParsingHook = function(elt) {\n        upgradeDocumentTree(wrap(elt.import));\n      };\n    }\n    CustomElements.ready = true;\n    setTimeout(function() {\n      CustomElements.readyTime = Date.now();\n      if (window.HTMLImports) {\n        CustomElements.elapsed = CustomElements.readyTime - HTMLImports.readyTime;\n      }\n      document.dispatchEvent(new CustomEvent(\"WebComponentsReady\", {\n        bubbles: true\n      }));\n    });\n  }\n  if (typeof window.CustomEvent !== \"function\") {\n    window.CustomEvent = function(inType, params) {\n      params = params || {};\n      var e = document.createEvent(\"CustomEvent\");\n      e.initCustomEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable), params.detail);\n      return e;\n    };\n    window.CustomEvent.prototype = window.Event.prototype;\n  }\n  if (document.readyState === \"complete\" || scope.flags.eager) {\n    bootstrap();\n  } else if (document.readyState === \"interactive\" && !window.attachEvent && (!window.HTMLImports || window.HTMLImports.ready)) {\n    bootstrap();\n  } else {\n    var loadEvent = window.HTMLImports && !HTMLImports.ready ? \"HTMLImportsLoaded\" : \"DOMContentLoaded\";\n    window.addEventListener(loadEvent, bootstrap);\n  }\n})(window.CustomElements);\n\n(function(scope) {\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function(scope) {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments, 1);\n      return function() {\n        var args2 = args.slice();\n        args2.push.apply(args2, arguments);\n        return self.apply(scope, args2);\n      };\n    };\n  }\n})(window.WebComponents);\n\n(function(scope) {\n  \"use strict\";\n  if (!window.performance) {\n    var start = Date.now();\n    window.performance = {\n      now: function() {\n        return Date.now() - start;\n      }\n    };\n  }\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = function() {\n      var nativeRaf = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\n      return nativeRaf ? function(callback) {\n        return nativeRaf(function() {\n          callback(performance.now());\n        });\n      } : function(callback) {\n        return window.setTimeout(callback, 1e3 / 60);\n      };\n    }();\n  }\n  if (!window.cancelAnimationFrame) {\n    window.cancelAnimationFrame = function() {\n      return window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || function(id) {\n        clearTimeout(id);\n      };\n    }();\n  }\n  var elementDeclarations = [];\n  var polymerStub = function(name, dictionary) {\n    if (typeof name !== \"string\" && arguments.length === 1) {\n      Array.prototype.push.call(arguments, document._currentScript);\n    }\n    elementDeclarations.push(arguments);\n  };\n  window.Polymer = polymerStub;\n  scope.consumeDeclarations = function(callback) {\n    scope.consumeDeclarations = function() {\n      throw \"Possible attempt to load Polymer twice\";\n    };\n    if (callback) {\n      callback(elementDeclarations);\n    }\n    elementDeclarations = null;\n  };\n  function installPolymerWarning() {\n    if (window.Polymer === polymerStub) {\n      window.Polymer = function() {\n        throw new Error(\"You tried to use polymer without loading it first. To \" + 'load polymer, <link rel=\"import\" href=\"' + 'components/polymer/polymer.html\">');\n      };\n    }\n  }\n  if (HTMLImports.useNative) {\n    installPolymerWarning();\n  } else {\n    addEventListener(\"DOMContentLoaded\", installPolymerWarning);\n  }\n})(window.WebComponents);\n\n(function(scope) {\n  var style = document.createElement(\"style\");\n  style.textContent = \"\" + \"body {\" + \"transition: opacity ease-in 0.2s;\" + \" } \\n\" + \"body[unresolved] {\" + \"opacity: 0; display: block; overflow: hidden; position: relative;\" + \" } \\n\";\n  var head = document.querySelector(\"head\");\n  head.insertBefore(style, head.firstChild);\n})(window.WebComponents);\n\n(function(scope) {\n  window.Platform = scope;\n})(window.WebComponents);\n\nif (typeof exports !== 'undefined') {\n  module.exports = window.WebComponents;\n}\n\n},{}],\"react\":[function(require,module,exports){\n'use strict';\n\nmodule.exports = require('./lib/React');\n\n},{\"./lib/React\":\"react/lib/React\"}]},{},[2])\n//# sourceMappingURL=/packages/react-runtime-dev/react.browserify.js\n","sourceMap":"{\n  \"version\": 3,\n  \"sources\": [\n    \"../../../cosmos_browserify/.0.10.0.rgxg44++os+web.browser+web.cordova/plugin.CosmosBrowserify.os/npm/CosmosBrowserify/node_modules/browserify/node_modules/browser-pack/_prelude.js\",\n    \"../../../cosmos_browserify/.0.10.0.rgxg44++os+web.browser+web.cordova/plugin.CosmosBrowserify.os/npm/CosmosBrowserify/node_modules/browserify/node_modules/process/browser.js\",\n    \"_stream_0.js\",\n    \"node_modules/react-addons-create-fragment/index.js\",\n    \"node_modules/react-addons-css-transition-group/index.js\",\n    \"node_modules/react-addons-linked-state-mixin/index.js\",\n    \"node_modules/react-addons-perf/index.js\",\n    \"node_modules/react-addons-pure-render-mixin/index.js\",\n    \"node_modules/react-addons-test-utils/index.js\",\n    \"node_modules/react-addons-transition-group/index.js\",\n    \"node_modules/react-addons-update/index.js\",\n    \"node_modules/react/lib/canDefineProperty.js\",\n    \"node_modules/react/node_modules/fbjs/lib/CSSCore.js\",\n    \"node_modules/react/node_modules/fbjs/lib/EventListener.js\",\n    \"node_modules/react/node_modules/fbjs/lib/ExecutionEnvironment.js\",\n    \"node_modules/react/node_modules/fbjs/lib/TouchEventUtils.js\",\n    \"node_modules/react/node_modules/fbjs/lib/camelize.js\",\n    \"node_modules/react/node_modules/fbjs/lib/camelizeStyleName.js\",\n    \"node_modules/react/node_modules/fbjs/lib/containsNode.js\",\n    \"node_modules/react/node_modules/fbjs/lib/createArrayFromMixed.js\",\n    \"node_modules/react/node_modules/fbjs/lib/createNodesFromMarkup.js\",\n    \"node_modules/react/node_modules/fbjs/lib/emptyFunction.js\",\n    \"node_modules/react/node_modules/fbjs/lib/emptyObject.js\",\n    \"node_modules/react/node_modules/fbjs/lib/focusNode.js\",\n    \"node_modules/react/node_modules/fbjs/lib/getActiveElement.js\",\n    \"node_modules/react/node_modules/fbjs/lib/getMarkupWrap.js\",\n    \"node_modules/react/node_modules/fbjs/lib/getUnboundedScrollPosition.js\",\n    \"node_modules/react/node_modules/fbjs/lib/hyphenate.js\",\n    \"node_modules/react/node_modules/fbjs/lib/hyphenateStyleName.js\",\n    \"node_modules/react/node_modules/fbjs/lib/invariant.js\",\n    \"node_modules/react/node_modules/fbjs/lib/isNode.js\",\n    \"node_modules/react/node_modules/fbjs/lib/isTextNode.js\",\n    \"node_modules/react/node_modules/fbjs/lib/joinClasses.js\",\n    \"node_modules/react/node_modules/fbjs/lib/keyMirror.js\",\n    \"node_modules/react/node_modules/fbjs/lib/keyOf.js\",\n    \"node_modules/react/node_modules/fbjs/lib/mapObject.js\",\n    \"node_modules/react/node_modules/fbjs/lib/memoizeStringOnly.js\",\n    \"node_modules/react/node_modules/fbjs/lib/performance.js\",\n    \"node_modules/react/node_modules/fbjs/lib/performanceNow.js\",\n    \"node_modules/react/node_modules/fbjs/lib/shallowEqual.js\",\n    \"node_modules/react/node_modules/fbjs/lib/toArray.js\",\n    \"node_modules/react/node_modules/fbjs/lib/warning.js\",\n    \"../../../../../Sandbox/pm/web/react-dom/server\",\n    \"../../../../../Sandbox/pm/web/react-dom\",\n    \"../../../../../Sandbox/pm/web/react/addons\",\n    \"../../../../../Sandbox/pm/web/react/lib/AutoFocusUtils\",\n    \"../../../../../Sandbox/pm/web/react/lib/BeforeInputEventPlugin\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/CSSPropertyOperations.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/CSSProperty\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/CallbackQueue.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ChangeEventPlugin\",\n    \"../../../../../Sandbox/pm/web/react/lib/ClientReactRootIndex\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/DOMChildrenOperations.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/DOMPropertyOperations.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/DOMProperty.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/Danger.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/DefaultEventPluginOrder\",\n    \"../../../../../Sandbox/pm/web/react/lib/EnterLeaveEventPlugin\",\n    \"../../../../../Sandbox/pm/web/react/lib/EventConstants\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/EventPluginHub.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/EventPluginRegistry.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/EventPluginUtils.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/EventPropagators.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/FallbackCompositionState\",\n    \"../../../../../Sandbox/pm/web/react/lib/HTMLDOMPropertyConfig\",\n    \"../../../../../Sandbox/pm/web/react/lib/LinkedStateMixin\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/LinkedValueUtils.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/MetaMatchers\",\n    \"../../../../../Sandbox/pm/web/react/lib/Object.assign\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/OrderedMap.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/PooledClass.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactBrowserComponentMixin.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactBrowserEventEmitter\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactCSSTransitionGroupChild\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactCSSTransitionGroup\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactChildReconciler.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactChildren\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactClass.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactComponentBrowserEnvironment\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactComponentEnvironment.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactComponentWithPureRenderMixin\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactComponent.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactCompositeComponent.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactCurrentOwner\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactDOMButton\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactDOMComponent.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactDOMFactories.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactDOMFeatureFlags\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactDOMIDOperations.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactDOMInput.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactDOMOption.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactDOMSelection\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactDOMSelect.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactDOMServer\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactDOMTextComponent.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactDOMTextarea.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactDOM.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactDefaultBatchingStrategy\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactDefaultInjection.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactDefaultPerfAnalysis\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactDefaultPerf\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactElementValidator.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactElement.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactEmptyComponentRegistry\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactEmptyComponent\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactErrorUtils.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactEventEmitterMixin\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactEventListener\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactFragment.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactInjection\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactInputSelection\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactInstanceHandles.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactInstanceMap\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactIsomorphic.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactLink\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactMarkupChecksum\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactMount.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactMultiChildUpdateTypes\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactMultiChild.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactNativeComponent.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactNoopUpdateQueue.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactOwner.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactPerf.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactPropTransferer\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactPropTypeLocationNames.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactPropTypeLocations\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactPropTypes\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactReconcileTransaction\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactReconciler\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactRef\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactRootIndex\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactServerBatchingStrategy\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactServerRenderingTransaction\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactServerRendering.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactStateSetters\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactTestUtils.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactTransitionChildMapping\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactTransitionEvents\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactTransitionGroup\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactUpdateQueue.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactUpdates.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ReactVersion\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ReactWithAddons.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/React\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ResponderEventPlugin.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ResponderSyntheticEvent\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/ResponderTouchHistoryStore.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/SVGDOMPropertyConfig\",\n    \"../../../../../Sandbox/pm/web/react/lib/SelectEventPlugin\",\n    \"../../../../../Sandbox/pm/web/react/lib/ServerReactRootIndex\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/SimpleEventPlugin.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/SyntheticClipboardEvent\",\n    \"../../../../../Sandbox/pm/web/react/lib/SyntheticCompositionEvent\",\n    \"../../../../../Sandbox/pm/web/react/lib/SyntheticDragEvent\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/SyntheticEvent.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/SyntheticFocusEvent\",\n    \"../../../../../Sandbox/pm/web/react/lib/SyntheticInputEvent\",\n    \"../../../../../Sandbox/pm/web/react/lib/SyntheticKeyboardEvent\",\n    \"../../../../../Sandbox/pm/web/react/lib/SyntheticMouseEvent\",\n    \"../../../../../Sandbox/pm/web/react/lib/SyntheticTouchEvent\",\n    \"../../../../../Sandbox/pm/web/react/lib/SyntheticUIEvent\",\n    \"../../../../../Sandbox/pm/web/react/lib/SyntheticWheelEvent\",\n    \"../../../../../Sandbox/pm/web/react/lib/TapEventPlugin\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/Transaction.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/ViewportMetrics\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/accumulateInto.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/accumulate.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/adler32\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/cloneWithProps.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/createHierarchyRenderer\",\n    \"../../../../../Sandbox/pm/web/react/lib/dangerousStyleValue\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/deprecated.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/escapeTextContentForBrowser\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/findDOMNode.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/flattenChildren.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/forEachAccumulated\",\n    \"../../../../../Sandbox/pm/web/react/lib/getEventCharCode\",\n    \"../../../../../Sandbox/pm/web/react/lib/getEventKey\",\n    \"../../../../../Sandbox/pm/web/react/lib/getEventModifierState\",\n    \"../../../../../Sandbox/pm/web/react/lib/getEventTarget\",\n    \"../../../../../Sandbox/pm/web/react/lib/getIteratorFn\",\n    \"../../../../../Sandbox/pm/web/react/lib/getNodeForCharacterOffset\",\n    \"../../../../../Sandbox/pm/web/react/lib/getTestDocument\",\n    \"../../../../../Sandbox/pm/web/react/lib/getTextContentAccessor\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/instantiateReactComponent.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/isEventSupported\",\n    \"../../../../../Sandbox/pm/web/react/lib/isTextInputElement\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/onlyChild.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/quoteAttributeValueForBrowser\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/reactComponentExpect.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/renderSubtreeIntoContainer\",\n    \"../../../../../Sandbox/pm/web/react/lib/setInnerHTML\",\n    \"../../../../../Sandbox/pm/web/react/lib/setTextContent\",\n    \"../../../../../Sandbox/pm/web/react/lib/shallowCompare\",\n    \"../../../../../Sandbox/pm/web/react/lib/shouldUpdateReactComponent\",\n    \"../../../../../Sandbox/pm/web/react/lib/sliceChildren\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/traverseAllChildren.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/update.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/node_modules/react/lib/validateDOMNesting.js\",\n    \"../../../../../Sandbox/pm/web/react/lib/webcomponents\",\n    \"../../../../../Sandbox/pm/web/react\"\n  ],\n  \"names\": [],\n  \"mappings\": \"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;;ACAA;;ACAA;;ACAA;;ACAA;;ACAA;;ACAA;;ACAA;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxDA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnphUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACthhzOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChtztvOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnrrpcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnnpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACzrlwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClzrrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACjhLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrnzhlEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChtxtPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClrlrzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjervBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrnttBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AClvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACxdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjhbvjgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvnxkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACphLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxtttOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjtvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AChvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzvNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC5LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1WA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3uMA;AACA;AACA;AACA\",\n  \"file\": \"generated.js\",\n  \"sourceRoot\": \"\",\n  \"sourcesContent\": [\n    \"(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\\\"function\\\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\\\"Cannot find module '\\\"+o+\\\"'\\\");throw f.code=\\\"MODULE_NOT_FOUND\\\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\\\"function\\\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})\",\n    \"// shim for using process in browser\\n\\nvar process = module.exports = {};\\nvar queue = [];\\nvar draining = false;\\nvar currentQueue;\\nvar queueIndex = -1;\\n\\nfunction cleanUpNextTick() {\\n    draining = false;\\n    if (currentQueue.length) {\\n        queue = currentQueue.concat(queue);\\n    } else {\\n        queueIndex = -1;\\n    }\\n    if (queue.length) {\\n        drainQueue();\\n    }\\n}\\n\\nfunction drainQueue() {\\n    if (draining) {\\n        return;\\n    }\\n    var timeout = setTimeout(cleanUpNextTick);\\n    draining = true;\\n\\n    var len = queue.length;\\n    while(len) {\\n        currentQueue = queue;\\n        queue = [];\\n        while (++queueIndex < len) {\\n            if (currentQueue) {\\n                currentQueue[queueIndex].run();\\n            }\\n        }\\n        queueIndex = -1;\\n        len = queue.length;\\n    }\\n    currentQueue = null;\\n    draining = false;\\n    clearTimeout(timeout);\\n}\\n\\nprocess.nextTick = function (fun) {\\n    var args = new Array(arguments.length - 1);\\n    if (arguments.length > 1) {\\n        for (var i = 1; i < arguments.length; i++) {\\n            args[i - 1] = arguments[i];\\n        }\\n    }\\n    queue.push(new Item(fun, args));\\n    if (queue.length === 1 && !draining) {\\n        setTimeout(drainQueue, 0);\\n    }\\n};\\n\\n// v8 likes predictible objects\\nfunction Item(fun, array) {\\n    this.fun = fun;\\n    this.array = array;\\n}\\nItem.prototype.run = function () {\\n    this.fun.apply(null, this.array);\\n};\\nprocess.title = 'browser';\\nprocess.browser = true;\\nprocess.env = {};\\nprocess.argv = [];\\nprocess.version = ''; // empty string to avoid regexp issues\\nprocess.versions = {};\\n\\nfunction noop() {}\\n\\nprocess.on = noop;\\nprocess.addListener = noop;\\nprocess.once = noop;\\nprocess.off = noop;\\nprocess.removeListener = noop;\\nprocess.removeAllListeners = noop;\\nprocess.emit = noop;\\n\\nprocess.binding = function (name) {\\n    throw new Error('process.binding is not supported');\\n};\\n\\nprocess.cwd = function () { return '/' };\\nprocess.chdir = function (dir) {\\n    throw new Error('process.chdir is not supported');\\n};\\nprocess.umask = function() { return 0; };\\n\",\n    \"React = require(\\\"react\\\");\\nReactDOM = require(\\\"react-dom\\\");\\n\\nif (Meteor.isServer) {\\n  ReactDOMServer = require(\\\"react-dom/server\\\");\\n}\\n\\n// Addons\\nReact.addons = {\\n  TransitionGroup   : require('react-addons-transition-group'),\\n  CSSTransitionGroup: require('react-addons-css-transition-group'),\\n  LinkedStateMixin  : require('react-addons-linked-state-mixin'),\\n  createFragment    : require('react-addons-create-fragment'),\\n  update            : require('react-addons-update'),\\n  PureRenderMixin   : require('react-addons-pure-render-mixin'),\\n  TestUtils         : require('react-addons-test-utils'),\\n  Perf              : require('react-addons-perf')\\n}\\n\",\n    \"module.exports = require('react/lib/ReactFragment').create;\",\n    \"module.exports = require('react/lib/ReactCSSTransitionGroup');\",\n    \"module.exports = require('react/lib/LinkedStateMixin');\",\n    \"module.exports = require('react/lib/ReactDefaultPerf');\",\n    \"module.exports = require('react/lib/ReactComponentWithPureRenderMixin');\",\n    \"module.exports = require('react/lib/ReactTestUtils');\",\n    \"module.exports = require('react/lib/ReactTransitionGroup');\",\n    \"module.exports = require('react/lib/update');\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule canDefineProperty\\n */\\n\\n'use strict';\\n\\nvar canDefineProperty = false;\\nif (process.env.NODE_ENV !== 'production') {\\n  try {\\n    Object.defineProperty({}, 'x', { get: function () {} });\\n    canDefineProperty = true;\\n  } catch (x) {\\n    // IE will fail on defineProperty\\n  }\\n}\\n\\nmodule.exports = canDefineProperty;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule CSSCore\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar invariant = require('./invariant');\\n\\n/**\\n * The CSSCore module specifies the API (and implements most of the methods)\\n * that should be used when dealing with the display of elements (via their\\n * CSS classes and visibility on screen. It is an API focused on mutating the\\n * display and not reading it as no logical state should be encoded in the\\n * display of elements.\\n */\\n\\nvar CSSCore = {\\n\\n  /**\\n   * Adds the class passed in to the element if it doesn't already have it.\\n   *\\n   * @param {DOMElement} element the element to set the class on\\n   * @param {string} className the CSS className\\n   * @return {DOMElement} the element passed in\\n   */\\n  addClass: function (element, className) {\\n    !!/\\\\s/.test(className) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'CSSCore.addClass takes only a single class name. \\\"%s\\\" contains ' + 'multiple classes.', className) : invariant(false) : undefined;\\n\\n    if (className) {\\n      if (element.classList) {\\n        element.classList.add(className);\\n      } else if (!CSSCore.hasClass(element, className)) {\\n        element.className = element.className + ' ' + className;\\n      }\\n    }\\n    return element;\\n  },\\n\\n  /**\\n   * Removes the class passed in from the element\\n   *\\n   * @param {DOMElement} element the element to set the class on\\n   * @param {string} className the CSS className\\n   * @return {DOMElement} the element passed in\\n   */\\n  removeClass: function (element, className) {\\n    !!/\\\\s/.test(className) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'CSSCore.removeClass takes only a single class name. \\\"%s\\\" contains ' + 'multiple classes.', className) : invariant(false) : undefined;\\n\\n    if (className) {\\n      if (element.classList) {\\n        element.classList.remove(className);\\n      } else if (CSSCore.hasClass(element, className)) {\\n        element.className = element.className.replace(new RegExp('(^|\\\\\\\\s)' + className + '(?:\\\\\\\\s|$)', 'g'), '$1').replace(/\\\\s+/g, ' ') // multiple spaces to one\\n        .replace(/^\\\\s*|\\\\s*$/g, ''); // trim the ends\\n      }\\n    }\\n    return element;\\n  },\\n\\n  /**\\n   * Helper to add or remove a class from an element based on a condition.\\n   *\\n   * @param {DOMElement} element the element to set the class on\\n   * @param {string} className the CSS className\\n   * @param {*} bool condition to whether to add or remove the class\\n   * @return {DOMElement} the element passed in\\n   */\\n  conditionClass: function (element, className, bool) {\\n    return (bool ? CSSCore.addClass : CSSCore.removeClass)(element, className);\\n  },\\n\\n  /**\\n   * Tests whether the element has the class specified.\\n   *\\n   * @param {DOMNode|DOMWindow} element the element to set the class on\\n   * @param {string} className the CSS className\\n   * @return {boolean} true if the element has the class, false if not\\n   */\\n  hasClass: function (element, className) {\\n    !!/\\\\s/.test(className) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'CSS.hasClass takes only a single class name.') : invariant(false) : undefined;\\n    if (element.classList) {\\n      return !!className && element.classList.contains(className);\\n    }\\n    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;\\n  }\\n\\n};\\n\\nmodule.exports = CSSCore;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n *\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n *\\n * @providesModule EventListener\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar emptyFunction = require('./emptyFunction');\\n\\n/**\\n * Upstream version of event listener. Does not take into account specific\\n * nature of platform.\\n */\\nvar EventListener = {\\n  /**\\n   * Listen to DOM events during the bubble phase.\\n   *\\n   * @param {DOMEventTarget} target DOM element to register listener on.\\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\\n   * @param {function} callback Callback function.\\n   * @return {object} Object with a `remove` method.\\n   */\\n  listen: function (target, eventType, callback) {\\n    if (target.addEventListener) {\\n      target.addEventListener(eventType, callback, false);\\n      return {\\n        remove: function () {\\n          target.removeEventListener(eventType, callback, false);\\n        }\\n      };\\n    } else if (target.attachEvent) {\\n      target.attachEvent('on' + eventType, callback);\\n      return {\\n        remove: function () {\\n          target.detachEvent('on' + eventType, callback);\\n        }\\n      };\\n    }\\n  },\\n\\n  /**\\n   * Listen to DOM events during the capture phase.\\n   *\\n   * @param {DOMEventTarget} target DOM element to register listener on.\\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\\n   * @param {function} callback Callback function.\\n   * @return {object} Object with a `remove` method.\\n   */\\n  capture: function (target, eventType, callback) {\\n    if (target.addEventListener) {\\n      target.addEventListener(eventType, callback, true);\\n      return {\\n        remove: function () {\\n          target.removeEventListener(eventType, callback, true);\\n        }\\n      };\\n    } else {\\n      if (process.env.NODE_ENV !== 'production') {\\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\\n      }\\n      return {\\n        remove: emptyFunction\\n      };\\n    }\\n  },\\n\\n  registerDefault: function () {}\\n};\\n\\nmodule.exports = EventListener;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ExecutionEnvironment\\n */\\n\\n'use strict';\\n\\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\\n\\n/**\\n * Simple, lightweight module assisting with the detection and context of\\n * Worker. Helps avoid circular dependencies and allows code to reason about\\n * whether or not they are in a Worker, even if they never include the main\\n * `ReactWorker` dependency.\\n */\\nvar ExecutionEnvironment = {\\n\\n  canUseDOM: canUseDOM,\\n\\n  canUseWorkers: typeof Worker !== 'undefined',\\n\\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\\n\\n  canUseViewport: canUseDOM && !!window.screen,\\n\\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\\n\\n};\\n\\nmodule.exports = ExecutionEnvironment;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule TouchEventUtils\\n */\\n\\n\\\"use strict\\\";\\n\\nvar TouchEventUtils = {\\n  /**\\n   * Utility function for common case of extracting out the primary touch from a\\n   * touch event.\\n   * - `touchEnd` events usually do not have the `touches` property.\\n   *   http://stackoverflow.com/questions/3666929/\\n   *   mobile-sarai-touchend-event-not-firing-when-last-touch-is-removed\\n   *\\n   * @param {Event} nativeEvent Native event that may or may not be a touch.\\n   * @return {TouchesObject?} an object with pageX and pageY or null.\\n   */\\n  extractSingleTouch: function (nativeEvent) {\\n    var touches = nativeEvent.touches;\\n    var changedTouches = nativeEvent.changedTouches;\\n    var hasTouches = touches && touches.length > 0;\\n    var hasChangedTouches = changedTouches && changedTouches.length > 0;\\n\\n    return !hasTouches && hasChangedTouches ? changedTouches[0] : hasTouches ? touches[0] : nativeEvent;\\n  }\\n};\\n\\nmodule.exports = TouchEventUtils;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule camelize\\n * @typechecks\\n */\\n\\n\\\"use strict\\\";\\n\\nvar _hyphenPattern = /-(.)/g;\\n\\n/**\\n * Camelcases a hyphenated string, for example:\\n *\\n *   > camelize('background-color')\\n *   < \\\"backgroundColor\\\"\\n *\\n * @param {string} string\\n * @return {string}\\n */\\nfunction camelize(string) {\\n  return string.replace(_hyphenPattern, function (_, character) {\\n    return character.toUpperCase();\\n  });\\n}\\n\\nmodule.exports = camelize;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule camelizeStyleName\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar camelize = require('./camelize');\\n\\nvar msPattern = /^-ms-/;\\n\\n/**\\n * Camelcases a hyphenated CSS property name, for example:\\n *\\n *   > camelizeStyleName('background-color')\\n *   < \\\"backgroundColor\\\"\\n *   > camelizeStyleName('-moz-transition')\\n *   < \\\"MozTransition\\\"\\n *   > camelizeStyleName('-ms-transition')\\n *   < \\\"msTransition\\\"\\n *\\n * As Andi Smith suggests\\n * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix\\n * is converted to lowercase `ms`.\\n *\\n * @param {string} string\\n * @return {string}\\n */\\nfunction camelizeStyleName(string) {\\n  return camelize(string.replace(msPattern, 'ms-'));\\n}\\n\\nmodule.exports = camelizeStyleName;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule containsNode\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar isTextNode = require('./isTextNode');\\n\\n/*eslint-disable no-bitwise */\\n\\n/**\\n * Checks if a given DOM node contains or is another DOM node.\\n *\\n * @param {?DOMNode} outerNode Outer DOM node.\\n * @param {?DOMNode} innerNode Inner DOM node.\\n * @return {boolean} True if `outerNode` contains or is `innerNode`.\\n */\\nfunction containsNode(_x, _x2) {\\n  var _again = true;\\n\\n  _function: while (_again) {\\n    var outerNode = _x,\\n        innerNode = _x2;\\n    _again = false;\\n\\n    if (!outerNode || !innerNode) {\\n      return false;\\n    } else if (outerNode === innerNode) {\\n      return true;\\n    } else if (isTextNode(outerNode)) {\\n      return false;\\n    } else if (isTextNode(innerNode)) {\\n      _x = outerNode;\\n      _x2 = innerNode.parentNode;\\n      _again = true;\\n      continue _function;\\n    } else if (outerNode.contains) {\\n      return outerNode.contains(innerNode);\\n    } else if (outerNode.compareDocumentPosition) {\\n      return !!(outerNode.compareDocumentPosition(innerNode) & 16);\\n    } else {\\n      return false;\\n    }\\n  }\\n}\\n\\nmodule.exports = containsNode;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule createArrayFromMixed\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar toArray = require('./toArray');\\n\\n/**\\n * Perform a heuristic test to determine if an object is \\\"array-like\\\".\\n *\\n *   A monk asked Joshu, a Zen master, \\\"Has a dog Buddha nature?\\\"\\n *   Joshu replied: \\\"Mu.\\\"\\n *\\n * This function determines if its argument has \\\"array nature\\\": it returns\\n * true if the argument is an actual array, an `arguments' object, or an\\n * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).\\n *\\n * It will return false for other array-like objects like Filelist.\\n *\\n * @param {*} obj\\n * @return {boolean}\\n */\\nfunction hasArrayNature(obj) {\\n  return(\\n    // not null/false\\n    !!obj && (\\n    // arrays are objects, NodeLists are functions in Safari\\n    typeof obj == 'object' || typeof obj == 'function') &&\\n    // quacks like an array\\n    'length' in obj &&\\n    // not window\\n    !('setInterval' in obj) &&\\n    // no DOM node should be considered an array-like\\n    // a 'select' element has 'length' and 'item' properties on IE8\\n    typeof obj.nodeType != 'number' && (\\n    // a real array\\n    Array.isArray(obj) ||\\n    // arguments\\n    'callee' in obj ||\\n    // HTMLCollection/NodeList\\n    'item' in obj)\\n  );\\n}\\n\\n/**\\n * Ensure that the argument is an array by wrapping it in an array if it is not.\\n * Creates a copy of the argument if it is already an array.\\n *\\n * This is mostly useful idiomatically:\\n *\\n *   var createArrayFromMixed = require('createArrayFromMixed');\\n *\\n *   function takesOneOrMoreThings(things) {\\n *     things = createArrayFromMixed(things);\\n *     ...\\n *   }\\n *\\n * This allows you to treat `things' as an array, but accept scalars in the API.\\n *\\n * If you need to convert an array-like object, like `arguments`, into an array\\n * use toArray instead.\\n *\\n * @param {*} obj\\n * @return {array}\\n */\\nfunction createArrayFromMixed(obj) {\\n  if (!hasArrayNature(obj)) {\\n    return [obj];\\n  } else if (Array.isArray(obj)) {\\n    return obj.slice();\\n  } else {\\n    return toArray(obj);\\n  }\\n}\\n\\nmodule.exports = createArrayFromMixed;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule createNodesFromMarkup\\n * @typechecks\\n */\\n\\n/*eslint-disable fb-www/unsafe-html*/\\n\\n'use strict';\\n\\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\\n\\nvar createArrayFromMixed = require('./createArrayFromMixed');\\nvar getMarkupWrap = require('./getMarkupWrap');\\nvar invariant = require('./invariant');\\n\\n/**\\n * Dummy container used to render all markup.\\n */\\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\\n\\n/**\\n * Pattern used by `getNodeName`.\\n */\\nvar nodeNamePattern = /^\\\\s*<(\\\\w+)/;\\n\\n/**\\n * Extracts the `nodeName` of the first element in a string of markup.\\n *\\n * @param {string} markup String of markup.\\n * @return {?string} Node name of the supplied markup.\\n */\\nfunction getNodeName(markup) {\\n  var nodeNameMatch = markup.match(nodeNamePattern);\\n  return nodeNameMatch && nodeNameMatch[1].toLowerCase();\\n}\\n\\n/**\\n * Creates an array containing the nodes rendered from the supplied markup. The\\n * optionally supplied `handleScript` function will be invoked once for each\\n * <script> element that is rendered. If no `handleScript` function is supplied,\\n * an exception is thrown if any <script> elements are rendered.\\n *\\n * @param {string} markup A string of valid HTML markup.\\n * @param {?function} handleScript Invoked once for each rendered <script>.\\n * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.\\n */\\nfunction createNodesFromMarkup(markup, handleScript) {\\n  var node = dummyNode;\\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : undefined;\\n  var nodeName = getNodeName(markup);\\n\\n  var wrap = nodeName && getMarkupWrap(nodeName);\\n  if (wrap) {\\n    node.innerHTML = wrap[1] + markup + wrap[2];\\n\\n    var wrapDepth = wrap[0];\\n    while (wrapDepth--) {\\n      node = node.lastChild;\\n    }\\n  } else {\\n    node.innerHTML = markup;\\n  }\\n\\n  var scripts = node.getElementsByTagName('script');\\n  if (scripts.length) {\\n    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : undefined;\\n    createArrayFromMixed(scripts).forEach(handleScript);\\n  }\\n\\n  var nodes = createArrayFromMixed(node.childNodes);\\n  while (node.lastChild) {\\n    node.removeChild(node.lastChild);\\n  }\\n  return nodes;\\n}\\n\\nmodule.exports = createNodesFromMarkup;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule emptyFunction\\n */\\n\\n\\\"use strict\\\";\\n\\nfunction makeEmptyFunction(arg) {\\n  return function () {\\n    return arg;\\n  };\\n}\\n\\n/**\\n * This function accepts and discards inputs; it has no side effects. This is\\n * primarily useful idiomatically for overridable function endpoints which\\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\\n */\\nfunction emptyFunction() {}\\n\\nemptyFunction.thatReturns = makeEmptyFunction;\\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\\nemptyFunction.thatReturnsThis = function () {\\n  return this;\\n};\\nemptyFunction.thatReturnsArgument = function (arg) {\\n  return arg;\\n};\\n\\nmodule.exports = emptyFunction;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule emptyObject\\n */\\n\\n'use strict';\\n\\nvar emptyObject = {};\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  Object_freeze(emptyObject);\\n}\\n\\nmodule.exports = emptyObject;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule focusNode\\n */\\n\\n'use strict';\\n\\n/**\\n * @param {DOMElement} node input/textarea to focus\\n */\\nfunction focusNode(node) {\\n  // IE8 can throw \\\"Can't move focus to the control because it is invisible,\\n  // not enabled, or of a type that does not accept the focus.\\\" for all kinds of\\n  // reasons that are too expensive and fragile to test.\\n  try {\\n    node.focus();\\n  } catch (e) {}\\n}\\n\\nmodule.exports = focusNode;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getActiveElement\\n * @typechecks\\n */\\n\\n/**\\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\\n * not safe to call document.activeElement if there is nothing focused.\\n *\\n * The activeElement will be null only if the document or document body is not yet defined.\\n */\\n'use strict';\\n\\nfunction getActiveElement() /*?DOMElement*/{\\n  if (typeof document === 'undefined') {\\n    return null;\\n  }\\n\\n  try {\\n    return document.activeElement || document.body;\\n  } catch (e) {\\n    return document.body;\\n  }\\n}\\n\\nmodule.exports = getActiveElement;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getMarkupWrap\\n */\\n\\n/*eslint-disable fb-www/unsafe-html */\\n\\n'use strict';\\n\\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\\n\\nvar invariant = require('./invariant');\\n\\n/**\\n * Dummy container used to detect which wraps are necessary.\\n */\\nvar dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;\\n\\n/**\\n * Some browsers cannot use `innerHTML` to render certain elements standalone,\\n * so we wrap them, render the wrapped nodes, then extract the desired node.\\n *\\n * In IE8, certain elements cannot render alone, so wrap all elements ('*').\\n */\\n\\nvar shouldWrap = {};\\n\\nvar selectWrap = [1, '<select multiple=\\\"true\\\">', '</select>'];\\nvar tableWrap = [1, '<table>', '</table>'];\\nvar trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\\n\\nvar svgWrap = [1, '<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">', '</svg>'];\\n\\nvar markupWrap = {\\n  '*': [1, '?<div>', '</div>'],\\n\\n  'area': [1, '<map>', '</map>'],\\n  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\\n  'legend': [1, '<fieldset>', '</fieldset>'],\\n  'param': [1, '<object>', '</object>'],\\n  'tr': [2, '<table><tbody>', '</tbody></table>'],\\n\\n  'optgroup': selectWrap,\\n  'option': selectWrap,\\n\\n  'caption': tableWrap,\\n  'colgroup': tableWrap,\\n  'tbody': tableWrap,\\n  'tfoot': tableWrap,\\n  'thead': tableWrap,\\n\\n  'td': trWrap,\\n  'th': trWrap\\n};\\n\\n// Initialize the SVG elements since we know they'll always need to be wrapped\\n// consistently. If they are created inside a <div> they will be initialized in\\n// the wrong namespace (and will not display).\\nvar svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];\\nsvgElements.forEach(function (nodeName) {\\n  markupWrap[nodeName] = svgWrap;\\n  shouldWrap[nodeName] = true;\\n});\\n\\n/**\\n * Gets the markup wrap configuration for the supplied `nodeName`.\\n *\\n * NOTE: This lazily detects which wraps are necessary for the current browser.\\n *\\n * @param {string} nodeName Lowercase `nodeName`.\\n * @return {?array} Markup wrap configuration, if applicable.\\n */\\nfunction getMarkupWrap(nodeName) {\\n  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : undefined;\\n  if (!markupWrap.hasOwnProperty(nodeName)) {\\n    nodeName = '*';\\n  }\\n  if (!shouldWrap.hasOwnProperty(nodeName)) {\\n    if (nodeName === '*') {\\n      dummyNode.innerHTML = '<link />';\\n    } else {\\n      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';\\n    }\\n    shouldWrap[nodeName] = !dummyNode.firstChild;\\n  }\\n  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;\\n}\\n\\nmodule.exports = getMarkupWrap;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getUnboundedScrollPosition\\n * @typechecks\\n */\\n\\n'use strict';\\n\\n/**\\n * Gets the scroll position of the supplied element or window.\\n *\\n * The return values are unbounded, unlike `getScrollPosition`. This means they\\n * may be negative or exceed the element boundaries (which is possible using\\n * inertial scrolling).\\n *\\n * @param {DOMWindow|DOMElement} scrollable\\n * @return {object} Map with `x` and `y` keys.\\n */\\nfunction getUnboundedScrollPosition(scrollable) {\\n  if (scrollable === window) {\\n    return {\\n      x: window.pageXOffset || document.documentElement.scrollLeft,\\n      y: window.pageYOffset || document.documentElement.scrollTop\\n    };\\n  }\\n  return {\\n    x: scrollable.scrollLeft,\\n    y: scrollable.scrollTop\\n  };\\n}\\n\\nmodule.exports = getUnboundedScrollPosition;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule hyphenate\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar _uppercasePattern = /([A-Z])/g;\\n\\n/**\\n * Hyphenates a camelcased string, for example:\\n *\\n *   > hyphenate('backgroundColor')\\n *   < \\\"background-color\\\"\\n *\\n * For CSS style names, use `hyphenateStyleName` instead which works properly\\n * with all vendor prefixes, including `ms`.\\n *\\n * @param {string} string\\n * @return {string}\\n */\\nfunction hyphenate(string) {\\n  return string.replace(_uppercasePattern, '-$1').toLowerCase();\\n}\\n\\nmodule.exports = hyphenate;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule hyphenateStyleName\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar hyphenate = require('./hyphenate');\\n\\nvar msPattern = /^ms-/;\\n\\n/**\\n * Hyphenates a camelcased CSS property name, for example:\\n *\\n *   > hyphenateStyleName('backgroundColor')\\n *   < \\\"background-color\\\"\\n *   > hyphenateStyleName('MozTransition')\\n *   < \\\"-moz-transition\\\"\\n *   > hyphenateStyleName('msTransition')\\n *   < \\\"-ms-transition\\\"\\n *\\n * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix\\n * is converted to `-ms-`.\\n *\\n * @param {string} string\\n * @return {string}\\n */\\nfunction hyphenateStyleName(string) {\\n  return hyphenate(string).replace(msPattern, '-ms-');\\n}\\n\\nmodule.exports = hyphenateStyleName;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule invariant\\n */\\n\\n'use strict';\\n\\n/**\\n * Use invariant() to assert state which your program assumes to be true.\\n *\\n * Provide sprintf-style format (only %s is supported) and arguments\\n * to provide information about what broke and what you were\\n * expecting.\\n *\\n * The invariant message will be stripped in production, but the invariant\\n * will remain to ensure logic does not differ in production.\\n */\\n\\nvar invariant = function (condition, format, a, b, c, d, e, f) {\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (format === undefined) {\\n      throw new Error('invariant requires an error message argument');\\n    }\\n  }\\n\\n  if (!condition) {\\n    var error;\\n    if (format === undefined) {\\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\\n    } else {\\n      var args = [a, b, c, d, e, f];\\n      var argIndex = 0;\\n      error = new Error('Invariant Violation: ' + format.replace(/%s/g, function () {\\n        return args[argIndex++];\\n      }));\\n    }\\n\\n    error.framesToPop = 1; // we don't care about invariant's own frame\\n    throw error;\\n  }\\n};\\n\\nmodule.exports = invariant;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule isNode\\n * @typechecks\\n */\\n\\n/**\\n * @param {*} object The object to check.\\n * @return {boolean} Whether or not the object is a DOM node.\\n */\\n'use strict';\\n\\nfunction isNode(object) {\\n  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\\n}\\n\\nmodule.exports = isNode;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule isTextNode\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar isNode = require('./isNode');\\n\\n/**\\n * @param {*} object The object to check.\\n * @return {boolean} Whether or not the object is a DOM text node.\\n */\\nfunction isTextNode(object) {\\n  return isNode(object) && object.nodeType == 3;\\n}\\n\\nmodule.exports = isTextNode;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule joinClasses\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\n/**\\n * Combines multiple className strings into one.\\n * http://jsperf.com/joinclasses-args-vs-array\\n *\\n * @param {...?string} className\\n * @return {string}\\n */\\nfunction joinClasses(className /*, ... */) {\\n  if (!className) {\\n    className = '';\\n  }\\n  var nextClass;\\n  var argLength = arguments.length;\\n  if (argLength > 1) {\\n    for (var ii = 1; ii < argLength; ii++) {\\n      nextClass = arguments[ii];\\n      if (nextClass) {\\n        className = (className ? className + ' ' : '') + nextClass;\\n      }\\n    }\\n  }\\n  return className;\\n}\\n\\nmodule.exports = joinClasses;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule keyMirror\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar invariant = require('./invariant');\\n\\n/**\\n * Constructs an enumeration with keys equal to their value.\\n *\\n * For example:\\n *\\n *   var COLORS = keyMirror({blue: null, red: null});\\n *   var myColor = COLORS.blue;\\n *   var isColorValid = !!COLORS[myColor];\\n *\\n * The last line could not be performed if the values of the generated enum were\\n * not equal to their keys.\\n *\\n *   Input:  {key1: val1, key2: val2}\\n *   Output: {key1: key1, key2: key2}\\n *\\n * @param {object} obj\\n * @return {object}\\n */\\nvar keyMirror = function (obj) {\\n  var ret = {};\\n  var key;\\n  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : undefined;\\n  for (key in obj) {\\n    if (!obj.hasOwnProperty(key)) {\\n      continue;\\n    }\\n    ret[key] = key;\\n  }\\n  return ret;\\n};\\n\\nmodule.exports = keyMirror;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule keyOf\\n */\\n\\n/**\\n * Allows extraction of a minified key. Let's the build system minify keys\\n * without losing the ability to dynamically use key strings as values\\n * themselves. Pass in an object with a single key/val pair and it will return\\n * you the string key of that single record. Suppose you want to grab the\\n * value for a key 'className' inside of an object. Key/val minification may\\n * have aliased that key to be 'xa12'. keyOf({className: null}) will return\\n * 'xa12' in that case. Resolve keys you want to use once at startup time, then\\n * reuse those resolutions.\\n */\\n\\\"use strict\\\";\\n\\nvar keyOf = function (oneKeyObj) {\\n  var key;\\n  for (key in oneKeyObj) {\\n    if (!oneKeyObj.hasOwnProperty(key)) {\\n      continue;\\n    }\\n    return key;\\n  }\\n  return null;\\n};\\n\\nmodule.exports = keyOf;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule mapObject\\n */\\n\\n'use strict';\\n\\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\\n\\n/**\\n * Executes the provided `callback` once for each enumerable own property in the\\n * object and constructs a new object from the results. The `callback` is\\n * invoked with three arguments:\\n *\\n *  - the property value\\n *  - the property name\\n *  - the object being traversed\\n *\\n * Properties that are added after the call to `mapObject` will not be visited\\n * by `callback`. If the values of existing properties are changed, the value\\n * passed to `callback` will be the value at the time `mapObject` visits them.\\n * Properties that are deleted before being visited are not visited.\\n *\\n * @grep function objectMap()\\n * @grep function objMap()\\n *\\n * @param {?object} object\\n * @param {function} callback\\n * @param {*} context\\n * @return {?object}\\n */\\nfunction mapObject(object, callback, context) {\\n  if (!object) {\\n    return null;\\n  }\\n  var result = {};\\n  for (var name in object) {\\n    if (hasOwnProperty.call(object, name)) {\\n      result[name] = callback.call(context, object[name], name, object);\\n    }\\n  }\\n  return result;\\n}\\n\\nmodule.exports = mapObject;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule memoizeStringOnly\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\n/**\\n * Memoizes the return value of a function that accepts one string argument.\\n *\\n * @param {function} callback\\n * @return {function}\\n */\\nfunction memoizeStringOnly(callback) {\\n  var cache = {};\\n  return function (string) {\\n    if (!cache.hasOwnProperty(string)) {\\n      cache[string] = callback.call(this, string);\\n    }\\n    return cache[string];\\n  };\\n}\\n\\nmodule.exports = memoizeStringOnly;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule performance\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\\n\\nvar performance;\\n\\nif (ExecutionEnvironment.canUseDOM) {\\n  performance = window.performance || window.msPerformance || window.webkitPerformance;\\n}\\n\\nmodule.exports = performance || {};\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule performanceNow\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar performance = require('./performance');\\nvar curPerformance = performance;\\n\\n/**\\n * Detect if we can use `window.performance.now()` and gracefully fallback to\\n * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now\\n * because of Facebook's testing infrastructure.\\n */\\nif (!curPerformance || !curPerformance.now) {\\n  curPerformance = Date;\\n}\\n\\nvar performanceNow = curPerformance.now.bind(curPerformance);\\n\\nmodule.exports = performanceNow;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule shallowEqual\\n * @typechecks\\n * \\n */\\n\\n'use strict';\\n\\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\\n\\n/**\\n * Performs equality by iterating through keys on an object and returning false\\n * when any key has values which are not strictly equal between the arguments.\\n * Returns true when the values of all keys are strictly equal.\\n */\\nfunction shallowEqual(objA, objB) {\\n  if (objA === objB) {\\n    return true;\\n  }\\n\\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\\n    return false;\\n  }\\n\\n  var keysA = Object.keys(objA);\\n  var keysB = Object.keys(objB);\\n\\n  if (keysA.length !== keysB.length) {\\n    return false;\\n  }\\n\\n  // Test for A's keys different from B.\\n  var bHasOwnProperty = hasOwnProperty.bind(objB);\\n  for (var i = 0; i < keysA.length; i++) {\\n    if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\\n      return false;\\n    }\\n  }\\n\\n  return true;\\n}\\n\\nmodule.exports = shallowEqual;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule toArray\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar invariant = require('./invariant');\\n\\n/**\\n * Convert array-like objects to arrays.\\n *\\n * This API assumes the caller knows the contents of the data type. For less\\n * well defined inputs use createArrayFromMixed.\\n *\\n * @param {object|function|filelist} obj\\n * @return {array}\\n */\\nfunction toArray(obj) {\\n  var length = obj.length;\\n\\n  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in\\n  // old versions of Safari).\\n  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : undefined;\\n\\n  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : undefined;\\n\\n  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : undefined;\\n\\n  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs\\n  // without method will throw during the slice call and skip straight to the\\n  // fallback.\\n  if (obj.hasOwnProperty) {\\n    try {\\n      return Array.prototype.slice.call(obj);\\n    } catch (e) {\\n      // IE < 9 does not support Array#slice on collections objects\\n    }\\n  }\\n\\n  // Fall back to copying key by key. This assumes all keys have a value,\\n  // so will not preserve sparsely populated inputs.\\n  var ret = Array(length);\\n  for (var ii = 0; ii < length; ii++) {\\n    ret[ii] = obj[ii];\\n  }\\n  return ret;\\n}\\n\\nmodule.exports = toArray;\",\n    \"/**\\n * Copyright 2014-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule warning\\n */\\n\\n'use strict';\\n\\nvar emptyFunction = require('./emptyFunction');\\n\\n/**\\n * Similar to invariant but only logs a warning if the condition is not met.\\n * This can be used to log issues in development environments in critical\\n * paths. Removing the logging code for production environments will keep the\\n * same logic and follow the same code paths.\\n */\\n\\nvar warning = emptyFunction;\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  warning = function (condition, format) {\\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\\n      args[_key - 2] = arguments[_key];\\n    }\\n\\n    if (format === undefined) {\\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\\n    }\\n\\n    if (format.indexOf('Failed Composite propType: ') === 0) {\\n      return; // Ignore CompositeComponent proptype check.\\n    }\\n\\n    if (!condition) {\\n      var argIndex = 0;\\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\\n        return args[argIndex++];\\n      });\\n      if (typeof console !== 'undefined') {\\n        console.error(message);\\n      }\\n      try {\\n        // --- Welcome to debugging React ---\\n        // This error was thrown as a convenience so that you can use this stack\\n        // to find the callsite that caused this warning to fire.\\n        throw new Error(message);\\n      } catch (x) {}\\n    }\\n  };\\n}\\n\\nmodule.exports = warning;\",\n    \"'use strict';\\n\\nmodule.exports = require('react/lib/ReactDOMServer');\\n\",\n    \"'use strict';\\n\\nmodule.exports = require('react/lib/ReactDOM');\\n\",\n    \"'use strict';\\n\\nvar warning = require('fbjs/lib/warning');\\nwarning(\\n  false,\\n  // Require examples in this string must be split to prevent React's\\n  // build tools from mistaking them for real requires.\\n  // Otherwise the build tools will attempt to build a 'react-addons-{addon}' module.\\n  'require' + \\\"('react/addons') is deprecated. \\\" +\\n  'Access using require' + \\\"('react-addons-{addon}') instead.\\\"\\n);\\n\\nmodule.exports = require('./lib/ReactWithAddons');\\n\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule AutoFocusUtils\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar ReactMount = require('./ReactMount');\\n\\nvar findDOMNode = require('./findDOMNode');\\nvar focusNode = require('fbjs/lib/focusNode');\\n\\nvar Mixin = {\\n  componentDidMount: function () {\\n    if (this.props.autoFocus) {\\n      focusNode(findDOMNode(this));\\n    }\\n  }\\n};\\n\\nvar AutoFocusUtils = {\\n  Mixin: Mixin,\\n\\n  focusDOMComponent: function () {\\n    focusNode(ReactMount.getNode(this._rootNodeID));\\n  }\\n};\\n\\nmodule.exports = AutoFocusUtils;\",\n    \"/**\\n * Copyright 2013-2015 Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule BeforeInputEventPlugin\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar EventConstants = require('./EventConstants');\\nvar EventPropagators = require('./EventPropagators');\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\nvar FallbackCompositionState = require('./FallbackCompositionState');\\nvar SyntheticCompositionEvent = require('./SyntheticCompositionEvent');\\nvar SyntheticInputEvent = require('./SyntheticInputEvent');\\n\\nvar keyOf = require('fbjs/lib/keyOf');\\n\\nvar END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space\\nvar START_KEYCODE = 229;\\n\\nvar canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;\\n\\nvar documentMode = null;\\nif (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {\\n  documentMode = document.documentMode;\\n}\\n\\n// Webkit offers a very useful `textInput` event that can be used to\\n// directly represent `beforeInput`. The IE `textinput` event is not as\\n// useful, so we don't use it.\\nvar canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();\\n\\n// In IE9+, we have access to composition events, but the data supplied\\n// by the native compositionend event may be incorrect. Japanese ideographic\\n// spaces, for instance (\\\\u3000) are not recorded correctly.\\nvar useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);\\n\\n/**\\n * Opera <= 12 includes TextEvent in window, but does not fire\\n * text input events. Rely on keypress instead.\\n */\\nfunction isPresto() {\\n  var opera = window.opera;\\n  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;\\n}\\n\\nvar SPACEBAR_CODE = 32;\\nvar SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);\\n\\nvar topLevelTypes = EventConstants.topLevelTypes;\\n\\n// Events and their corresponding property names.\\nvar eventTypes = {\\n  beforeInput: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onBeforeInput: null }),\\n      captured: keyOf({ onBeforeInputCapture: null })\\n    },\\n    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]\\n  },\\n  compositionEnd: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onCompositionEnd: null }),\\n      captured: keyOf({ onCompositionEndCapture: null })\\n    },\\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\\n  },\\n  compositionStart: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onCompositionStart: null }),\\n      captured: keyOf({ onCompositionStartCapture: null })\\n    },\\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\\n  },\\n  compositionUpdate: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onCompositionUpdate: null }),\\n      captured: keyOf({ onCompositionUpdateCapture: null })\\n    },\\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]\\n  }\\n};\\n\\n// Track whether we've ever handled a keypress on the space key.\\nvar hasSpaceKeypress = false;\\n\\n/**\\n * Return whether a native keypress event is assumed to be a command.\\n * This is required because Firefox fires `keypress` events for key commands\\n * (cut, copy, select-all, etc.) even though no character is inserted.\\n */\\nfunction isKeypressCommand(nativeEvent) {\\n  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&\\n  // ctrlKey && altKey is equivalent to AltGr, and is not a command.\\n  !(nativeEvent.ctrlKey && nativeEvent.altKey);\\n}\\n\\n/**\\n * Translate native top level events into event types.\\n *\\n * @param {string} topLevelType\\n * @return {object}\\n */\\nfunction getCompositionEventType(topLevelType) {\\n  switch (topLevelType) {\\n    case topLevelTypes.topCompositionStart:\\n      return eventTypes.compositionStart;\\n    case topLevelTypes.topCompositionEnd:\\n      return eventTypes.compositionEnd;\\n    case topLevelTypes.topCompositionUpdate:\\n      return eventTypes.compositionUpdate;\\n  }\\n}\\n\\n/**\\n * Does our fallback best-guess model think this event signifies that\\n * composition has begun?\\n *\\n * @param {string} topLevelType\\n * @param {object} nativeEvent\\n * @return {boolean}\\n */\\nfunction isFallbackCompositionStart(topLevelType, nativeEvent) {\\n  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;\\n}\\n\\n/**\\n * Does our fallback mode think that this event is the end of composition?\\n *\\n * @param {string} topLevelType\\n * @param {object} nativeEvent\\n * @return {boolean}\\n */\\nfunction isFallbackCompositionEnd(topLevelType, nativeEvent) {\\n  switch (topLevelType) {\\n    case topLevelTypes.topKeyUp:\\n      // Command keys insert or clear IME input.\\n      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;\\n    case topLevelTypes.topKeyDown:\\n      // Expect IME keyCode on each keydown. If we get any other\\n      // code we must have exited earlier.\\n      return nativeEvent.keyCode !== START_KEYCODE;\\n    case topLevelTypes.topKeyPress:\\n    case topLevelTypes.topMouseDown:\\n    case topLevelTypes.topBlur:\\n      // Events are not possible without cancelling IME.\\n      return true;\\n    default:\\n      return false;\\n  }\\n}\\n\\n/**\\n * Google Input Tools provides composition data via a CustomEvent,\\n * with the `data` property populated in the `detail` object. If this\\n * is available on the event object, use it. If not, this is a plain\\n * composition event and we have nothing special to extract.\\n *\\n * @param {object} nativeEvent\\n * @return {?string}\\n */\\nfunction getDataFromCustomEvent(nativeEvent) {\\n  var detail = nativeEvent.detail;\\n  if (typeof detail === 'object' && 'data' in detail) {\\n    return detail.data;\\n  }\\n  return null;\\n}\\n\\n// Track the current IME composition fallback object, if any.\\nvar currentComposition = null;\\n\\n/**\\n * @param {string} topLevelType Record from `EventConstants`.\\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\\n * @param {object} nativeEvent Native browser event.\\n * @return {?object} A SyntheticCompositionEvent.\\n */\\nfunction extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\\n  var eventType;\\n  var fallbackData;\\n\\n  if (canUseCompositionEvent) {\\n    eventType = getCompositionEventType(topLevelType);\\n  } else if (!currentComposition) {\\n    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {\\n      eventType = eventTypes.compositionStart;\\n    }\\n  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {\\n    eventType = eventTypes.compositionEnd;\\n  }\\n\\n  if (!eventType) {\\n    return null;\\n  }\\n\\n  if (useFallbackCompositionData) {\\n    // The current composition is stored statically and must not be\\n    // overwritten while composition continues.\\n    if (!currentComposition && eventType === eventTypes.compositionStart) {\\n      currentComposition = FallbackCompositionState.getPooled(topLevelTarget);\\n    } else if (eventType === eventTypes.compositionEnd) {\\n      if (currentComposition) {\\n        fallbackData = currentComposition.getData();\\n      }\\n    }\\n  }\\n\\n  var event = SyntheticCompositionEvent.getPooled(eventType, topLevelTargetID, nativeEvent, nativeEventTarget);\\n\\n  if (fallbackData) {\\n    // Inject data generated from fallback path into the synthetic event.\\n    // This matches the property of native CompositionEventInterface.\\n    event.data = fallbackData;\\n  } else {\\n    var customData = getDataFromCustomEvent(nativeEvent);\\n    if (customData !== null) {\\n      event.data = customData;\\n    }\\n  }\\n\\n  EventPropagators.accumulateTwoPhaseDispatches(event);\\n  return event;\\n}\\n\\n/**\\n * @param {string} topLevelType Record from `EventConstants`.\\n * @param {object} nativeEvent Native browser event.\\n * @return {?string} The string corresponding to this `beforeInput` event.\\n */\\nfunction getNativeBeforeInputChars(topLevelType, nativeEvent) {\\n  switch (topLevelType) {\\n    case topLevelTypes.topCompositionEnd:\\n      return getDataFromCustomEvent(nativeEvent);\\n    case topLevelTypes.topKeyPress:\\n      /**\\n       * If native `textInput` events are available, our goal is to make\\n       * use of them. However, there is a special case: the spacebar key.\\n       * In Webkit, preventing default on a spacebar `textInput` event\\n       * cancels character insertion, but it *also* causes the browser\\n       * to fall back to its default spacebar behavior of scrolling the\\n       * page.\\n       *\\n       * Tracking at:\\n       * https://code.google.com/p/chromium/issues/detail?id=355103\\n       *\\n       * To avoid this issue, use the keypress event as if no `textInput`\\n       * event is available.\\n       */\\n      var which = nativeEvent.which;\\n      if (which !== SPACEBAR_CODE) {\\n        return null;\\n      }\\n\\n      hasSpaceKeypress = true;\\n      return SPACEBAR_CHAR;\\n\\n    case topLevelTypes.topTextInput:\\n      // Record the characters to be added to the DOM.\\n      var chars = nativeEvent.data;\\n\\n      // If it's a spacebar character, assume that we have already handled\\n      // it at the keypress level and bail immediately. Android Chrome\\n      // doesn't give us keycodes, so we need to blacklist it.\\n      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {\\n        return null;\\n      }\\n\\n      return chars;\\n\\n    default:\\n      // For other native event types, do nothing.\\n      return null;\\n  }\\n}\\n\\n/**\\n * For browsers that do not provide the `textInput` event, extract the\\n * appropriate string to use for SyntheticInputEvent.\\n *\\n * @param {string} topLevelType Record from `EventConstants`.\\n * @param {object} nativeEvent Native browser event.\\n * @return {?string} The fallback string for this `beforeInput` event.\\n */\\nfunction getFallbackBeforeInputChars(topLevelType, nativeEvent) {\\n  // If we are currently composing (IME) and using a fallback to do so,\\n  // try to extract the composed characters from the fallback object.\\n  if (currentComposition) {\\n    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {\\n      var chars = currentComposition.getData();\\n      FallbackCompositionState.release(currentComposition);\\n      currentComposition = null;\\n      return chars;\\n    }\\n    return null;\\n  }\\n\\n  switch (topLevelType) {\\n    case topLevelTypes.topPaste:\\n      // If a paste event occurs after a keypress, throw out the input\\n      // chars. Paste events should not lead to BeforeInput events.\\n      return null;\\n    case topLevelTypes.topKeyPress:\\n      /**\\n       * As of v27, Firefox may fire keypress events even when no character\\n       * will be inserted. A few possibilities:\\n       *\\n       * - `which` is `0`. Arrow keys, Esc key, etc.\\n       *\\n       * - `which` is the pressed key code, but no char is available.\\n       *   Ex: 'AltGr + d` in Polish. There is no modified character for\\n       *   this key combination and no character is inserted into the\\n       *   document, but FF fires the keypress for char code `100` anyway.\\n       *   No `input` event will occur.\\n       *\\n       * - `which` is the pressed key code, but a command combination is\\n       *   being used. Ex: `Cmd+C`. No character is inserted, and no\\n       *   `input` event will occur.\\n       */\\n      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {\\n        return String.fromCharCode(nativeEvent.which);\\n      }\\n      return null;\\n    case topLevelTypes.topCompositionEnd:\\n      return useFallbackCompositionData ? null : nativeEvent.data;\\n    default:\\n      return null;\\n  }\\n}\\n\\n/**\\n * Extract a SyntheticInputEvent for `beforeInput`, based on either native\\n * `textInput` or fallback behavior.\\n *\\n * @param {string} topLevelType Record from `EventConstants`.\\n * @param {DOMEventTarget} topLevelTarget The listening component root node.\\n * @param {string} topLevelTargetID ID of `topLevelTarget`.\\n * @param {object} nativeEvent Native browser event.\\n * @return {?object} A SyntheticInputEvent.\\n */\\nfunction extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\\n  var chars;\\n\\n  if (canUseTextInputEvent) {\\n    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);\\n  } else {\\n    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);\\n  }\\n\\n  // If no characters are being inserted, no BeforeInput event should\\n  // be fired.\\n  if (!chars) {\\n    return null;\\n  }\\n\\n  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, topLevelTargetID, nativeEvent, nativeEventTarget);\\n\\n  event.data = chars;\\n  EventPropagators.accumulateTwoPhaseDispatches(event);\\n  return event;\\n}\\n\\n/**\\n * Create an `onBeforeInput` event to match\\n * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.\\n *\\n * This event plugin is based on the native `textInput` event\\n * available in Chrome, Safari, Opera, and IE. This event fires after\\n * `onKeyPress` and `onCompositionEnd`, but before `onInput`.\\n *\\n * `beforeInput` is spec'd but not implemented in any browsers, and\\n * the `input` event does not provide any useful information about what has\\n * actually been added, contrary to the spec. Thus, `textInput` is the best\\n * available event to identify the characters that have actually been inserted\\n * into the target node.\\n *\\n * This plugin is also responsible for emitting `composition` events, thus\\n * allowing us to share composition fallback code for both `beforeInput` and\\n * `composition` event types.\\n */\\nvar BeforeInputEventPlugin = {\\n\\n  eventTypes: eventTypes,\\n\\n  /**\\n   * @param {string} topLevelType Record from `EventConstants`.\\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\\n   * @param {object} nativeEvent Native browser event.\\n   * @return {*} An accumulation of synthetic events.\\n   * @see {EventPluginHub.extractEvents}\\n   */\\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\\n    return [extractCompositionEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget)];\\n  }\\n};\\n\\nmodule.exports = BeforeInputEventPlugin;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule CSSPropertyOperations\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar CSSProperty = require('./CSSProperty');\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\nvar ReactPerf = require('./ReactPerf');\\n\\nvar camelizeStyleName = require('fbjs/lib/camelizeStyleName');\\nvar dangerousStyleValue = require('./dangerousStyleValue');\\nvar hyphenateStyleName = require('fbjs/lib/hyphenateStyleName');\\nvar memoizeStringOnly = require('fbjs/lib/memoizeStringOnly');\\nvar warning = require('fbjs/lib/warning');\\n\\nvar processStyleName = memoizeStringOnly(function (styleName) {\\n  return hyphenateStyleName(styleName);\\n});\\n\\nvar hasShorthandPropertyBug = false;\\nvar styleFloatAccessor = 'cssFloat';\\nif (ExecutionEnvironment.canUseDOM) {\\n  var tempStyle = document.createElement('div').style;\\n  try {\\n    // IE8 throws \\\"Invalid argument.\\\" if resetting shorthand style properties.\\n    tempStyle.font = '';\\n  } catch (e) {\\n    hasShorthandPropertyBug = true;\\n  }\\n  // IE8 only supports accessing cssFloat (standard) as styleFloat\\n  if (document.documentElement.style.cssFloat === undefined) {\\n    styleFloatAccessor = 'styleFloat';\\n  }\\n}\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  // 'msTransform' is correct, but the other prefixes should be capitalized\\n  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;\\n\\n  // style values shouldn't contain a semicolon\\n  var badStyleValueWithSemicolonPattern = /;\\\\s*$/;\\n\\n  var warnedStyleNames = {};\\n  var warnedStyleValues = {};\\n\\n  var warnHyphenatedStyleName = function (name) {\\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\\n      return;\\n    }\\n\\n    warnedStyleNames[name] = true;\\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?', name, camelizeStyleName(name)) : undefined;\\n  };\\n\\n  var warnBadVendoredStyleName = function (name) {\\n    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {\\n      return;\\n    }\\n\\n    warnedStyleNames[name] = true;\\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1)) : undefined;\\n  };\\n\\n  var warnStyleValueWithSemicolon = function (name, value) {\\n    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {\\n      return;\\n    }\\n\\n    warnedStyleValues[value] = true;\\n    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\\\\'t contain a semicolon. ' + 'Try \\\"%s: %s\\\" instead.', name, value.replace(badStyleValueWithSemicolonPattern, '')) : undefined;\\n  };\\n\\n  /**\\n   * @param {string} name\\n   * @param {*} value\\n   */\\n  var warnValidStyle = function (name, value) {\\n    if (name.indexOf('-') > -1) {\\n      warnHyphenatedStyleName(name);\\n    } else if (badVendoredStyleNamePattern.test(name)) {\\n      warnBadVendoredStyleName(name);\\n    } else if (badStyleValueWithSemicolonPattern.test(value)) {\\n      warnStyleValueWithSemicolon(name, value);\\n    }\\n  };\\n}\\n\\n/**\\n * Operations for dealing with CSS properties.\\n */\\nvar CSSPropertyOperations = {\\n\\n  /**\\n   * Serializes a mapping of style properties for use as inline styles:\\n   *\\n   *   > createMarkupForStyles({width: '200px', height: 0})\\n   *   \\\"width:200px;height:0;\\\"\\n   *\\n   * Undefined values are ignored so that declarative programming is easier.\\n   * The result should be HTML-escaped before insertion into the DOM.\\n   *\\n   * @param {object} styles\\n   * @return {?string}\\n   */\\n  createMarkupForStyles: function (styles) {\\n    var serialized = '';\\n    for (var styleName in styles) {\\n      if (!styles.hasOwnProperty(styleName)) {\\n        continue;\\n      }\\n      var styleValue = styles[styleName];\\n      if (process.env.NODE_ENV !== 'production') {\\n        warnValidStyle(styleName, styleValue);\\n      }\\n      if (styleValue != null) {\\n        serialized += processStyleName(styleName) + ':';\\n        serialized += dangerousStyleValue(styleName, styleValue) + ';';\\n      }\\n    }\\n    return serialized || null;\\n  },\\n\\n  /**\\n   * Sets the value for multiple styles on a node.  If a value is specified as\\n   * '' (empty string), the corresponding style property will be unset.\\n   *\\n   * @param {DOMElement} node\\n   * @param {object} styles\\n   */\\n  setValueForStyles: function (node, styles) {\\n    var style = node.style;\\n    for (var styleName in styles) {\\n      if (!styles.hasOwnProperty(styleName)) {\\n        continue;\\n      }\\n      if (process.env.NODE_ENV !== 'production') {\\n        warnValidStyle(styleName, styles[styleName]);\\n      }\\n      var styleValue = dangerousStyleValue(styleName, styles[styleName]);\\n      if (styleName === 'float') {\\n        styleName = styleFloatAccessor;\\n      }\\n      if (styleValue) {\\n        style[styleName] = styleValue;\\n      } else {\\n        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];\\n        if (expansion) {\\n          // Shorthand property that IE8 won't like unsetting, so unset each\\n          // component to placate it\\n          for (var individualStyleName in expansion) {\\n            style[individualStyleName] = '';\\n          }\\n        } else {\\n          style[styleName] = '';\\n        }\\n      }\\n    }\\n  }\\n\\n};\\n\\nReactPerf.measureMethods(CSSPropertyOperations, 'CSSPropertyOperations', {\\n  setValueForStyles: 'setValueForStyles'\\n});\\n\\nmodule.exports = CSSPropertyOperations;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule CSSProperty\\n */\\n\\n'use strict';\\n\\n/**\\n * CSS properties which accept numbers but are not in units of \\\"px\\\".\\n */\\nvar isUnitlessNumber = {\\n  animationIterationCount: true,\\n  boxFlex: true,\\n  boxFlexGroup: true,\\n  boxOrdinalGroup: true,\\n  columnCount: true,\\n  flex: true,\\n  flexGrow: true,\\n  flexPositive: true,\\n  flexShrink: true,\\n  flexNegative: true,\\n  flexOrder: true,\\n  fontWeight: true,\\n  lineClamp: true,\\n  lineHeight: true,\\n  opacity: true,\\n  order: true,\\n  orphans: true,\\n  tabSize: true,\\n  widows: true,\\n  zIndex: true,\\n  zoom: true,\\n\\n  // SVG-related properties\\n  fillOpacity: true,\\n  stopOpacity: true,\\n  strokeDashoffset: true,\\n  strokeOpacity: true,\\n  strokeWidth: true\\n};\\n\\n/**\\n * @param {string} prefix vendor-specific prefix, eg: Webkit\\n * @param {string} key style name, eg: transitionDuration\\n * @return {string} style name prefixed with `prefix`, properly camelCased, eg:\\n * WebkitTransitionDuration\\n */\\nfunction prefixKey(prefix, key) {\\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\\n}\\n\\n/**\\n * Support style names that may come passed in prefixed by adding permutations\\n * of vendor prefixes.\\n */\\nvar prefixes = ['Webkit', 'ms', 'Moz', 'O'];\\n\\n// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an\\n// infinite loop, because it iterates over the newly added props too.\\nObject.keys(isUnitlessNumber).forEach(function (prop) {\\n  prefixes.forEach(function (prefix) {\\n    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];\\n  });\\n});\\n\\n/**\\n * Most style properties can be unset by doing .style[prop] = '' but IE8\\n * doesn't like doing that with shorthand properties so for the properties that\\n * IE8 breaks on, which are listed here, we instead unset each of the\\n * individual properties. See http://bugs.jquery.com/ticket/12385.\\n * The 4-value 'clock' properties like margin, padding, border-width seem to\\n * behave without any problems. Curiously, list-style works too without any\\n * special prodding.\\n */\\nvar shorthandPropertyExpansions = {\\n  background: {\\n    backgroundAttachment: true,\\n    backgroundColor: true,\\n    backgroundImage: true,\\n    backgroundPositionX: true,\\n    backgroundPositionY: true,\\n    backgroundRepeat: true\\n  },\\n  backgroundPosition: {\\n    backgroundPositionX: true,\\n    backgroundPositionY: true\\n  },\\n  border: {\\n    borderWidth: true,\\n    borderStyle: true,\\n    borderColor: true\\n  },\\n  borderBottom: {\\n    borderBottomWidth: true,\\n    borderBottomStyle: true,\\n    borderBottomColor: true\\n  },\\n  borderLeft: {\\n    borderLeftWidth: true,\\n    borderLeftStyle: true,\\n    borderLeftColor: true\\n  },\\n  borderRight: {\\n    borderRightWidth: true,\\n    borderRightStyle: true,\\n    borderRightColor: true\\n  },\\n  borderTop: {\\n    borderTopWidth: true,\\n    borderTopStyle: true,\\n    borderTopColor: true\\n  },\\n  font: {\\n    fontStyle: true,\\n    fontVariant: true,\\n    fontWeight: true,\\n    fontSize: true,\\n    lineHeight: true,\\n    fontFamily: true\\n  },\\n  outline: {\\n    outlineWidth: true,\\n    outlineStyle: true,\\n    outlineColor: true\\n  }\\n};\\n\\nvar CSSProperty = {\\n  isUnitlessNumber: isUnitlessNumber,\\n  shorthandPropertyExpansions: shorthandPropertyExpansions\\n};\\n\\nmodule.exports = CSSProperty;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule CallbackQueue\\n */\\n\\n'use strict';\\n\\nvar PooledClass = require('./PooledClass');\\n\\nvar assign = require('./Object.assign');\\nvar invariant = require('fbjs/lib/invariant');\\n\\n/**\\n * A specialized pseudo-event module to help keep track of components waiting to\\n * be notified when their DOM representations are available for use.\\n *\\n * This implements `PooledClass`, so you should never need to instantiate this.\\n * Instead, use `CallbackQueue.getPooled()`.\\n *\\n * @class ReactMountReady\\n * @implements PooledClass\\n * @internal\\n */\\nfunction CallbackQueue() {\\n  this._callbacks = null;\\n  this._contexts = null;\\n}\\n\\nassign(CallbackQueue.prototype, {\\n\\n  /**\\n   * Enqueues a callback to be invoked when `notifyAll` is invoked.\\n   *\\n   * @param {function} callback Invoked when `notifyAll` is invoked.\\n   * @param {?object} context Context to call `callback` with.\\n   * @internal\\n   */\\n  enqueue: function (callback, context) {\\n    this._callbacks = this._callbacks || [];\\n    this._contexts = this._contexts || [];\\n    this._callbacks.push(callback);\\n    this._contexts.push(context);\\n  },\\n\\n  /**\\n   * Invokes all enqueued callbacks and clears the queue. This is invoked after\\n   * the DOM representation of a component has been created or updated.\\n   *\\n   * @internal\\n   */\\n  notifyAll: function () {\\n    var callbacks = this._callbacks;\\n    var contexts = this._contexts;\\n    if (callbacks) {\\n      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : invariant(false) : undefined;\\n      this._callbacks = null;\\n      this._contexts = null;\\n      for (var i = 0; i < callbacks.length; i++) {\\n        callbacks[i].call(contexts[i]);\\n      }\\n      callbacks.length = 0;\\n      contexts.length = 0;\\n    }\\n  },\\n\\n  /**\\n   * Resets the internal queue.\\n   *\\n   * @internal\\n   */\\n  reset: function () {\\n    this._callbacks = null;\\n    this._contexts = null;\\n  },\\n\\n  /**\\n   * `PooledClass` looks for this.\\n   */\\n  destructor: function () {\\n    this.reset();\\n  }\\n\\n});\\n\\nPooledClass.addPoolingTo(CallbackQueue);\\n\\nmodule.exports = CallbackQueue;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ChangeEventPlugin\\n */\\n\\n'use strict';\\n\\nvar EventConstants = require('./EventConstants');\\nvar EventPluginHub = require('./EventPluginHub');\\nvar EventPropagators = require('./EventPropagators');\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\nvar ReactUpdates = require('./ReactUpdates');\\nvar SyntheticEvent = require('./SyntheticEvent');\\n\\nvar getEventTarget = require('./getEventTarget');\\nvar isEventSupported = require('./isEventSupported');\\nvar isTextInputElement = require('./isTextInputElement');\\nvar keyOf = require('fbjs/lib/keyOf');\\n\\nvar topLevelTypes = EventConstants.topLevelTypes;\\n\\nvar eventTypes = {\\n  change: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onChange: null }),\\n      captured: keyOf({ onChangeCapture: null })\\n    },\\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]\\n  }\\n};\\n\\n/**\\n * For IE shims\\n */\\nvar activeElement = null;\\nvar activeElementID = null;\\nvar activeElementValue = null;\\nvar activeElementValueProp = null;\\n\\n/**\\n * SECTION: handle `change` event\\n */\\nfunction shouldUseChangeEvent(elem) {\\n  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\\n  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';\\n}\\n\\nvar doesChangeEventBubble = false;\\nif (ExecutionEnvironment.canUseDOM) {\\n  // See `handleChange` comment below\\n  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);\\n}\\n\\nfunction manualDispatchChangeEvent(nativeEvent) {\\n  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementID, nativeEvent, getEventTarget(nativeEvent));\\n  EventPropagators.accumulateTwoPhaseDispatches(event);\\n\\n  // If change and propertychange bubbled, we'd just bind to it like all the\\n  // other events and have it go through ReactBrowserEventEmitter. Since it\\n  // doesn't, we manually listen for the events and so we have to enqueue and\\n  // process the abstract event manually.\\n  //\\n  // Batching is necessary here in order to ensure that all event handlers run\\n  // before the next rerender (including event handlers attached to ancestor\\n  // elements instead of directly on the input). Without this, controlled\\n  // components don't work properly in conjunction with event bubbling because\\n  // the component is rerendered and the value reverted before all the event\\n  // handlers can run. See https://github.com/facebook/react/issues/708.\\n  ReactUpdates.batchedUpdates(runEventInBatch, event);\\n}\\n\\nfunction runEventInBatch(event) {\\n  EventPluginHub.enqueueEvents(event);\\n  EventPluginHub.processEventQueue(false);\\n}\\n\\nfunction startWatchingForChangeEventIE8(target, targetID) {\\n  activeElement = target;\\n  activeElementID = targetID;\\n  activeElement.attachEvent('onchange', manualDispatchChangeEvent);\\n}\\n\\nfunction stopWatchingForChangeEventIE8() {\\n  if (!activeElement) {\\n    return;\\n  }\\n  activeElement.detachEvent('onchange', manualDispatchChangeEvent);\\n  activeElement = null;\\n  activeElementID = null;\\n}\\n\\nfunction getTargetIDForChangeEvent(topLevelType, topLevelTarget, topLevelTargetID) {\\n  if (topLevelType === topLevelTypes.topChange) {\\n    return topLevelTargetID;\\n  }\\n}\\nfunction handleEventsForChangeEventIE8(topLevelType, topLevelTarget, topLevelTargetID) {\\n  if (topLevelType === topLevelTypes.topFocus) {\\n    // stopWatching() should be a noop here but we call it just in case we\\n    // missed a blur event somehow.\\n    stopWatchingForChangeEventIE8();\\n    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);\\n  } else if (topLevelType === topLevelTypes.topBlur) {\\n    stopWatchingForChangeEventIE8();\\n  }\\n}\\n\\n/**\\n * SECTION: handle `input` event\\n */\\nvar isInputEventSupported = false;\\nif (ExecutionEnvironment.canUseDOM) {\\n  // IE9 claims to support the input event but fails to trigger it when\\n  // deleting text, so we ignore its input events\\n  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);\\n}\\n\\n/**\\n * (For old IE.) Replacement getter/setter for the `value` property that gets\\n * set on the active element.\\n */\\nvar newValueProp = {\\n  get: function () {\\n    return activeElementValueProp.get.call(this);\\n  },\\n  set: function (val) {\\n    // Cast to a string so we can do equality checks.\\n    activeElementValue = '' + val;\\n    activeElementValueProp.set.call(this, val);\\n  }\\n};\\n\\n/**\\n * (For old IE.) Starts tracking propertychange events on the passed-in element\\n * and override the value property so that we can distinguish user events from\\n * value changes in JS.\\n */\\nfunction startWatchingForValueChange(target, targetID) {\\n  activeElement = target;\\n  activeElementID = targetID;\\n  activeElementValue = target.value;\\n  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');\\n\\n  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only\\n  // on DOM elements\\n  Object.defineProperty(activeElement, 'value', newValueProp);\\n  activeElement.attachEvent('onpropertychange', handlePropertyChange);\\n}\\n\\n/**\\n * (For old IE.) Removes the event listeners from the currently-tracked element,\\n * if any exists.\\n */\\nfunction stopWatchingForValueChange() {\\n  if (!activeElement) {\\n    return;\\n  }\\n\\n  // delete restores the original property definition\\n  delete activeElement.value;\\n  activeElement.detachEvent('onpropertychange', handlePropertyChange);\\n\\n  activeElement = null;\\n  activeElementID = null;\\n  activeElementValue = null;\\n  activeElementValueProp = null;\\n}\\n\\n/**\\n * (For old IE.) Handles a propertychange event, sending a `change` event if\\n * the value of the active element has changed.\\n */\\nfunction handlePropertyChange(nativeEvent) {\\n  if (nativeEvent.propertyName !== 'value') {\\n    return;\\n  }\\n  var value = nativeEvent.srcElement.value;\\n  if (value === activeElementValue) {\\n    return;\\n  }\\n  activeElementValue = value;\\n\\n  manualDispatchChangeEvent(nativeEvent);\\n}\\n\\n/**\\n * If a `change` event should be fired, returns the target's ID.\\n */\\nfunction getTargetIDForInputEvent(topLevelType, topLevelTarget, topLevelTargetID) {\\n  if (topLevelType === topLevelTypes.topInput) {\\n    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly\\n    // what we want so fall through here and trigger an abstract event\\n    return topLevelTargetID;\\n  }\\n}\\n\\n// For IE8 and IE9.\\nfunction handleEventsForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {\\n  if (topLevelType === topLevelTypes.topFocus) {\\n    // In IE8, we can capture almost all .value changes by adding a\\n    // propertychange handler and looking for events with propertyName\\n    // equal to 'value'\\n    // In IE9, propertychange fires for most input events but is buggy and\\n    // doesn't fire when text is deleted, but conveniently, selectionchange\\n    // appears to fire in all of the remaining cases so we catch those and\\n    // forward the event if the value has changed\\n    // In either case, we don't want to call the event handler if the value\\n    // is changed from JS so we redefine a setter for `.value` that updates\\n    // our activeElementValue variable, allowing us to ignore those changes\\n    //\\n    // stopWatching() should be a noop here but we call it just in case we\\n    // missed a blur event somehow.\\n    stopWatchingForValueChange();\\n    startWatchingForValueChange(topLevelTarget, topLevelTargetID);\\n  } else if (topLevelType === topLevelTypes.topBlur) {\\n    stopWatchingForValueChange();\\n  }\\n}\\n\\n// For IE8 and IE9.\\nfunction getTargetIDForInputEventIE(topLevelType, topLevelTarget, topLevelTargetID) {\\n  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {\\n    // On the selectionchange event, the target is just document which isn't\\n    // helpful for us so just check activeElement instead.\\n    //\\n    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire\\n    // propertychange on the first input event after setting `value` from a\\n    // script and fires only keydown, keypress, keyup. Catching keyup usually\\n    // gets it and catching keydown lets us fire an event for the first\\n    // keystroke if user does a key repeat (it'll be a little delayed: right\\n    // before the second keystroke). Other input methods (e.g., paste) seem to\\n    // fire selectionchange normally.\\n    if (activeElement && activeElement.value !== activeElementValue) {\\n      activeElementValue = activeElement.value;\\n      return activeElementID;\\n    }\\n  }\\n}\\n\\n/**\\n * SECTION: handle `click` event\\n */\\nfunction shouldUseClickEvent(elem) {\\n  // Use the `click` event to detect changes to checkbox and radio inputs.\\n  // This approach works across all browsers, whereas `change` does not fire\\n  // until `blur` in IE8.\\n  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');\\n}\\n\\nfunction getTargetIDForClickEvent(topLevelType, topLevelTarget, topLevelTargetID) {\\n  if (topLevelType === topLevelTypes.topClick) {\\n    return topLevelTargetID;\\n  }\\n}\\n\\n/**\\n * This plugin creates an `onChange` event that normalizes change events\\n * across form elements. This event fires at a time when it's possible to\\n * change the element's value without seeing a flicker.\\n *\\n * Supported elements are:\\n * - input (see `isTextInputElement`)\\n * - textarea\\n * - select\\n */\\nvar ChangeEventPlugin = {\\n\\n  eventTypes: eventTypes,\\n\\n  /**\\n   * @param {string} topLevelType Record from `EventConstants`.\\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\\n   * @param {object} nativeEvent Native browser event.\\n   * @return {*} An accumulation of synthetic events.\\n   * @see {EventPluginHub.extractEvents}\\n   */\\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\\n\\n    var getTargetIDFunc, handleEventFunc;\\n    if (shouldUseChangeEvent(topLevelTarget)) {\\n      if (doesChangeEventBubble) {\\n        getTargetIDFunc = getTargetIDForChangeEvent;\\n      } else {\\n        handleEventFunc = handleEventsForChangeEventIE8;\\n      }\\n    } else if (isTextInputElement(topLevelTarget)) {\\n      if (isInputEventSupported) {\\n        getTargetIDFunc = getTargetIDForInputEvent;\\n      } else {\\n        getTargetIDFunc = getTargetIDForInputEventIE;\\n        handleEventFunc = handleEventsForInputEventIE;\\n      }\\n    } else if (shouldUseClickEvent(topLevelTarget)) {\\n      getTargetIDFunc = getTargetIDForClickEvent;\\n    }\\n\\n    if (getTargetIDFunc) {\\n      var targetID = getTargetIDFunc(topLevelType, topLevelTarget, topLevelTargetID);\\n      if (targetID) {\\n        var event = SyntheticEvent.getPooled(eventTypes.change, targetID, nativeEvent, nativeEventTarget);\\n        event.type = 'change';\\n        EventPropagators.accumulateTwoPhaseDispatches(event);\\n        return event;\\n      }\\n    }\\n\\n    if (handleEventFunc) {\\n      handleEventFunc(topLevelType, topLevelTarget, topLevelTargetID);\\n    }\\n  }\\n\\n};\\n\\nmodule.exports = ChangeEventPlugin;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ClientReactRootIndex\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar nextReactRootIndex = 0;\\n\\nvar ClientReactRootIndex = {\\n  createReactRootIndex: function () {\\n    return nextReactRootIndex++;\\n  }\\n};\\n\\nmodule.exports = ClientReactRootIndex;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule DOMChildrenOperations\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar Danger = require('./Danger');\\nvar ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');\\nvar ReactPerf = require('./ReactPerf');\\n\\nvar setInnerHTML = require('./setInnerHTML');\\nvar setTextContent = require('./setTextContent');\\nvar invariant = require('fbjs/lib/invariant');\\n\\n/**\\n * Inserts `childNode` as a child of `parentNode` at the `index`.\\n *\\n * @param {DOMElement} parentNode Parent node in which to insert.\\n * @param {DOMElement} childNode Child node to insert.\\n * @param {number} index Index at which to insert the child.\\n * @internal\\n */\\nfunction insertChildAt(parentNode, childNode, index) {\\n  // By exploiting arrays returning `undefined` for an undefined index, we can\\n  // rely exclusively on `insertBefore(node, null)` instead of also using\\n  // `appendChild(node)`. However, using `undefined` is not allowed by all\\n  // browsers so we must replace it with `null`.\\n\\n  // fix render order error in safari\\n  // IE8 will throw error when index out of list size.\\n  var beforeChild = index >= parentNode.childNodes.length ? null : parentNode.childNodes.item(index);\\n\\n  parentNode.insertBefore(childNode, beforeChild);\\n}\\n\\n/**\\n * Operations for updating with DOM children.\\n */\\nvar DOMChildrenOperations = {\\n\\n  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,\\n\\n  updateTextContent: setTextContent,\\n\\n  /**\\n   * Updates a component's children by processing a series of updates. The\\n   * update configurations are each expected to have a `parentNode` property.\\n   *\\n   * @param {array<object>} updates List of update configurations.\\n   * @param {array<string>} markupList List of markup strings.\\n   * @internal\\n   */\\n  processUpdates: function (updates, markupList) {\\n    var update;\\n    // Mapping from parent IDs to initial child orderings.\\n    var initialChildren = null;\\n    // List of children that will be moved or removed.\\n    var updatedChildren = null;\\n\\n    for (var i = 0; i < updates.length; i++) {\\n      update = updates[i];\\n      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING || update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {\\n        var updatedIndex = update.fromIndex;\\n        var updatedChild = update.parentNode.childNodes[updatedIndex];\\n        var parentID = update.parentID;\\n\\n        !updatedChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processUpdates(): Unable to find child %s of element. This ' + 'probably means the DOM was unexpectedly mutated (e.g., by the ' + 'browser), usually due to forgetting a <tbody> when using tables, ' + 'nesting tags like <form>, <p>, or <a>, or using non-SVG elements ' + 'in an <svg> parent. Try inspecting the child nodes of the element ' + 'with React ID `%s`.', updatedIndex, parentID) : invariant(false) : undefined;\\n\\n        initialChildren = initialChildren || {};\\n        initialChildren[parentID] = initialChildren[parentID] || [];\\n        initialChildren[parentID][updatedIndex] = updatedChild;\\n\\n        updatedChildren = updatedChildren || [];\\n        updatedChildren.push(updatedChild);\\n      }\\n    }\\n\\n    var renderedMarkup;\\n    // markupList is either a list of markup or just a list of elements\\n    if (markupList.length && typeof markupList[0] === 'string') {\\n      renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);\\n    } else {\\n      renderedMarkup = markupList;\\n    }\\n\\n    // Remove updated children first so that `toIndex` is consistent.\\n    if (updatedChildren) {\\n      for (var j = 0; j < updatedChildren.length; j++) {\\n        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);\\n      }\\n    }\\n\\n    for (var k = 0; k < updates.length; k++) {\\n      update = updates[k];\\n      switch (update.type) {\\n        case ReactMultiChildUpdateTypes.INSERT_MARKUP:\\n          insertChildAt(update.parentNode, renderedMarkup[update.markupIndex], update.toIndex);\\n          break;\\n        case ReactMultiChildUpdateTypes.MOVE_EXISTING:\\n          insertChildAt(update.parentNode, initialChildren[update.parentID][update.fromIndex], update.toIndex);\\n          break;\\n        case ReactMultiChildUpdateTypes.SET_MARKUP:\\n          setInnerHTML(update.parentNode, update.content);\\n          break;\\n        case ReactMultiChildUpdateTypes.TEXT_CONTENT:\\n          setTextContent(update.parentNode, update.content);\\n          break;\\n        case ReactMultiChildUpdateTypes.REMOVE_NODE:\\n          // Already removed by the for-loop above.\\n          break;\\n      }\\n    }\\n  }\\n\\n};\\n\\nReactPerf.measureMethods(DOMChildrenOperations, 'DOMChildrenOperations', {\\n  updateTextContent: 'updateTextContent'\\n});\\n\\nmodule.exports = DOMChildrenOperations;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule DOMPropertyOperations\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar DOMProperty = require('./DOMProperty');\\nvar ReactPerf = require('./ReactPerf');\\n\\nvar quoteAttributeValueForBrowser = require('./quoteAttributeValueForBrowser');\\nvar warning = require('fbjs/lib/warning');\\n\\n// Simplified subset\\nvar VALID_ATTRIBUTE_NAME_REGEX = /^[a-zA-Z_][\\\\w\\\\.\\\\-]*$/;\\nvar illegalAttributeNameCache = {};\\nvar validatedAttributeNameCache = {};\\n\\nfunction isAttributeNameSafe(attributeName) {\\n  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {\\n    return true;\\n  }\\n  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {\\n    return false;\\n  }\\n  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {\\n    validatedAttributeNameCache[attributeName] = true;\\n    return true;\\n  }\\n  illegalAttributeNameCache[attributeName] = true;\\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : undefined;\\n  return false;\\n}\\n\\nfunction shouldIgnoreValue(propertyInfo, value) {\\n  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;\\n}\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  var reactProps = {\\n    children: true,\\n    dangerouslySetInnerHTML: true,\\n    key: true,\\n    ref: true\\n  };\\n  var warnedProperties = {};\\n\\n  var warnUnknownProperty = function (name) {\\n    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {\\n      return;\\n    }\\n\\n    warnedProperties[name] = true;\\n    var lowerCasedName = name.toLowerCase();\\n\\n    // data-* attributes should be lowercase; suggest the lowercase version\\n    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;\\n\\n    // For now, only warn when we have a suggested correction. This prevents\\n    // logging too much when using transferPropsTo.\\n    process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?', name, standardName) : undefined;\\n  };\\n}\\n\\n/**\\n * Operations for dealing with DOM properties.\\n */\\nvar DOMPropertyOperations = {\\n\\n  /**\\n   * Creates markup for the ID property.\\n   *\\n   * @param {string} id Unescaped ID.\\n   * @return {string} Markup string.\\n   */\\n  createMarkupForID: function (id) {\\n    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);\\n  },\\n\\n  setAttributeForID: function (node, id) {\\n    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);\\n  },\\n\\n  /**\\n   * Creates markup for a property.\\n   *\\n   * @param {string} name\\n   * @param {*} value\\n   * @return {?string} Markup string, or null if the property was invalid.\\n   */\\n  createMarkupForProperty: function (name, value) {\\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\\n    if (propertyInfo) {\\n      if (shouldIgnoreValue(propertyInfo, value)) {\\n        return '';\\n      }\\n      var attributeName = propertyInfo.attributeName;\\n      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\\n        return attributeName + '=\\\"\\\"';\\n      }\\n      return attributeName + '=' + quoteAttributeValueForBrowser(value);\\n    } else if (DOMProperty.isCustomAttribute(name)) {\\n      if (value == null) {\\n        return '';\\n      }\\n      return name + '=' + quoteAttributeValueForBrowser(value);\\n    } else if (process.env.NODE_ENV !== 'production') {\\n      warnUnknownProperty(name);\\n    }\\n    return null;\\n  },\\n\\n  /**\\n   * Creates markup for a custom property.\\n   *\\n   * @param {string} name\\n   * @param {*} value\\n   * @return {string} Markup string, or empty string if the property was invalid.\\n   */\\n  createMarkupForCustomAttribute: function (name, value) {\\n    if (!isAttributeNameSafe(name) || value == null) {\\n      return '';\\n    }\\n    return name + '=' + quoteAttributeValueForBrowser(value);\\n  },\\n\\n  /**\\n   * Sets the value for a property on a node.\\n   *\\n   * @param {DOMElement} node\\n   * @param {string} name\\n   * @param {*} value\\n   */\\n  setValueForProperty: function (node, name, value) {\\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\\n    if (propertyInfo) {\\n      var mutationMethod = propertyInfo.mutationMethod;\\n      if (mutationMethod) {\\n        mutationMethod(node, value);\\n      } else if (shouldIgnoreValue(propertyInfo, value)) {\\n        this.deleteValueForProperty(node, name);\\n      } else if (propertyInfo.mustUseAttribute) {\\n        var attributeName = propertyInfo.attributeName;\\n        var namespace = propertyInfo.attributeNamespace;\\n        // `setAttribute` with objects becomes only `[object]` in IE8/9,\\n        // ('' + value) makes it output the correct toString()-value.\\n        if (namespace) {\\n          node.setAttributeNS(namespace, attributeName, '' + value);\\n        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {\\n          node.setAttribute(attributeName, '');\\n        } else {\\n          node.setAttribute(attributeName, '' + value);\\n        }\\n      } else {\\n        var propName = propertyInfo.propertyName;\\n        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the\\n        // property type before comparing; only `value` does and is string.\\n        if (!propertyInfo.hasSideEffects || '' + node[propName] !== '' + value) {\\n          // Contrary to `setAttribute`, object properties are properly\\n          // `toString`ed by IE8/9.\\n          node[propName] = value;\\n        }\\n      }\\n    } else if (DOMProperty.isCustomAttribute(name)) {\\n      DOMPropertyOperations.setValueForAttribute(node, name, value);\\n    } else if (process.env.NODE_ENV !== 'production') {\\n      warnUnknownProperty(name);\\n    }\\n  },\\n\\n  setValueForAttribute: function (node, name, value) {\\n    if (!isAttributeNameSafe(name)) {\\n      return;\\n    }\\n    if (value == null) {\\n      node.removeAttribute(name);\\n    } else {\\n      node.setAttribute(name, '' + value);\\n    }\\n  },\\n\\n  /**\\n   * Deletes the value for a property on a node.\\n   *\\n   * @param {DOMElement} node\\n   * @param {string} name\\n   */\\n  deleteValueForProperty: function (node, name) {\\n    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;\\n    if (propertyInfo) {\\n      var mutationMethod = propertyInfo.mutationMethod;\\n      if (mutationMethod) {\\n        mutationMethod(node, undefined);\\n      } else if (propertyInfo.mustUseAttribute) {\\n        node.removeAttribute(propertyInfo.attributeName);\\n      } else {\\n        var propName = propertyInfo.propertyName;\\n        var defaultValue = DOMProperty.getDefaultValueForProperty(node.nodeName, propName);\\n        if (!propertyInfo.hasSideEffects || '' + node[propName] !== defaultValue) {\\n          node[propName] = defaultValue;\\n        }\\n      }\\n    } else if (DOMProperty.isCustomAttribute(name)) {\\n      node.removeAttribute(name);\\n    } else if (process.env.NODE_ENV !== 'production') {\\n      warnUnknownProperty(name);\\n    }\\n  }\\n\\n};\\n\\nReactPerf.measureMethods(DOMPropertyOperations, 'DOMPropertyOperations', {\\n  setValueForProperty: 'setValueForProperty',\\n  setValueForAttribute: 'setValueForAttribute',\\n  deleteValueForProperty: 'deleteValueForProperty'\\n});\\n\\nmodule.exports = DOMPropertyOperations;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule DOMProperty\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\nfunction checkMask(value, bitmask) {\\n  return (value & bitmask) === bitmask;\\n}\\n\\nvar DOMPropertyInjection = {\\n  /**\\n   * Mapping from normalized, camelcased property names to a configuration that\\n   * specifies how the associated DOM property should be accessed or rendered.\\n   */\\n  MUST_USE_ATTRIBUTE: 0x1,\\n  MUST_USE_PROPERTY: 0x2,\\n  HAS_SIDE_EFFECTS: 0x4,\\n  HAS_BOOLEAN_VALUE: 0x8,\\n  HAS_NUMERIC_VALUE: 0x10,\\n  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,\\n  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,\\n\\n  /**\\n   * Inject some specialized knowledge about the DOM. This takes a config object\\n   * with the following properties:\\n   *\\n   * isCustomAttribute: function that given an attribute name will return true\\n   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*\\n   * attributes where it's impossible to enumerate all of the possible\\n   * attribute names,\\n   *\\n   * Properties: object mapping DOM property name to one of the\\n   * DOMPropertyInjection constants or null. If your attribute isn't in here,\\n   * it won't get written to the DOM.\\n   *\\n   * DOMAttributeNames: object mapping React attribute name to the DOM\\n   * attribute name. Attribute names not specified use the **lowercase**\\n   * normalized name.\\n   *\\n   * DOMAttributeNamespaces: object mapping React attribute name to the DOM\\n   * attribute namespace URL. (Attribute names not specified use no namespace.)\\n   *\\n   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.\\n   * Property names not specified use the normalized name.\\n   *\\n   * DOMMutationMethods: Properties that require special mutation methods. If\\n   * `value` is undefined, the mutation method should unset the property.\\n   *\\n   * @param {object} domPropertyConfig the config as described above.\\n   */\\n  injectDOMPropertyConfig: function (domPropertyConfig) {\\n    var Injection = DOMPropertyInjection;\\n    var Properties = domPropertyConfig.Properties || {};\\n    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};\\n    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};\\n    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};\\n    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};\\n\\n    if (domPropertyConfig.isCustomAttribute) {\\n      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);\\n    }\\n\\n    for (var propName in Properties) {\\n      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\\\\'re trying to inject DOM property ' + '\\\\'%s\\\\' which has already been injected. You may be accidentally ' + 'injecting the same DOM property config twice, or you may be ' + 'injecting two configs that have conflicting property names.', propName) : invariant(false) : undefined;\\n\\n      var lowerCased = propName.toLowerCase();\\n      var propConfig = Properties[propName];\\n\\n      var propertyInfo = {\\n        attributeName: lowerCased,\\n        attributeNamespace: null,\\n        propertyName: propName,\\n        mutationMethod: null,\\n\\n        mustUseAttribute: checkMask(propConfig, Injection.MUST_USE_ATTRIBUTE),\\n        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),\\n        hasSideEffects: checkMask(propConfig, Injection.HAS_SIDE_EFFECTS),\\n        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),\\n        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),\\n        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),\\n        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)\\n      };\\n\\n      !(!propertyInfo.mustUseAttribute || !propertyInfo.mustUseProperty) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Cannot require using both attribute and property: %s', propName) : invariant(false) : undefined;\\n      !(propertyInfo.mustUseProperty || !propertyInfo.hasSideEffects) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Properties that have side effects must use property: %s', propName) : invariant(false) : undefined;\\n      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or ' + 'numeric value, but not a combination: %s', propName) : invariant(false) : undefined;\\n\\n      if (process.env.NODE_ENV !== 'production') {\\n        DOMProperty.getPossibleStandardName[lowerCased] = propName;\\n      }\\n\\n      if (DOMAttributeNames.hasOwnProperty(propName)) {\\n        var attributeName = DOMAttributeNames[propName];\\n        propertyInfo.attributeName = attributeName;\\n        if (process.env.NODE_ENV !== 'production') {\\n          DOMProperty.getPossibleStandardName[attributeName] = propName;\\n        }\\n      }\\n\\n      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {\\n        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];\\n      }\\n\\n      if (DOMPropertyNames.hasOwnProperty(propName)) {\\n        propertyInfo.propertyName = DOMPropertyNames[propName];\\n      }\\n\\n      if (DOMMutationMethods.hasOwnProperty(propName)) {\\n        propertyInfo.mutationMethod = DOMMutationMethods[propName];\\n      }\\n\\n      DOMProperty.properties[propName] = propertyInfo;\\n    }\\n  }\\n};\\nvar defaultValueCache = {};\\n\\n/**\\n * DOMProperty exports lookup objects that can be used like functions:\\n *\\n *   > DOMProperty.isValid['id']\\n *   true\\n *   > DOMProperty.isValid['foobar']\\n *   undefined\\n *\\n * Although this may be confusing, it performs better in general.\\n *\\n * @see http://jsperf.com/key-exists\\n * @see http://jsperf.com/key-missing\\n */\\nvar DOMProperty = {\\n\\n  ID_ATTRIBUTE_NAME: 'data-reactid',\\n\\n  /**\\n   * Map from property \\\"standard name\\\" to an object with info about how to set\\n   * the property in the DOM. Each object contains:\\n   *\\n   * attributeName:\\n   *   Used when rendering markup or with `*Attribute()`.\\n   * attributeNamespace\\n   * propertyName:\\n   *   Used on DOM node instances. (This includes properties that mutate due to\\n   *   external factors.)\\n   * mutationMethod:\\n   *   If non-null, used instead of the property or `setAttribute()` after\\n   *   initial render.\\n   * mustUseAttribute:\\n   *   Whether the property must be accessed and mutated using `*Attribute()`.\\n   *   (This includes anything that fails `<propName> in <element>`.)\\n   * mustUseProperty:\\n   *   Whether the property must be accessed and mutated as an object property.\\n   * hasSideEffects:\\n   *   Whether or not setting a value causes side effects such as triggering\\n   *   resources to be loaded or text selection changes. If true, we read from\\n   *   the DOM before updating to ensure that the value is only set if it has\\n   *   changed.\\n   * hasBooleanValue:\\n   *   Whether the property should be removed when set to a falsey value.\\n   * hasNumericValue:\\n   *   Whether the property must be numeric or parse as a numeric and should be\\n   *   removed when set to a falsey value.\\n   * hasPositiveNumericValue:\\n   *   Whether the property must be positive numeric or parse as a positive\\n   *   numeric and should be removed when set to a falsey value.\\n   * hasOverloadedBooleanValue:\\n   *   Whether the property can be used as a flag as well as with a value.\\n   *   Removed when strictly equal to false; present without a value when\\n   *   strictly equal to true; present with a value otherwise.\\n   */\\n  properties: {},\\n\\n  /**\\n   * Mapping from lowercase property names to the properly cased version, used\\n   * to warn in the case of missing properties. Available only in __DEV__.\\n   * @type {Object}\\n   */\\n  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,\\n\\n  /**\\n   * All of the isCustomAttribute() functions that have been injected.\\n   */\\n  _isCustomAttributeFunctions: [],\\n\\n  /**\\n   * Checks whether a property name is a custom attribute.\\n   * @method\\n   */\\n  isCustomAttribute: function (attributeName) {\\n    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {\\n      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];\\n      if (isCustomAttributeFn(attributeName)) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  },\\n\\n  /**\\n   * Returns the default property value for a DOM property (i.e., not an\\n   * attribute). Most default values are '' or false, but not all. Worse yet,\\n   * some (in particular, `type`) vary depending on the type of element.\\n   *\\n   * TODO: Is it better to grab all the possible properties when creating an\\n   * element to avoid having to create the same element twice?\\n   */\\n  getDefaultValueForProperty: function (nodeName, prop) {\\n    var nodeDefaults = defaultValueCache[nodeName];\\n    var testElement;\\n    if (!nodeDefaults) {\\n      defaultValueCache[nodeName] = nodeDefaults = {};\\n    }\\n    if (!(prop in nodeDefaults)) {\\n      testElement = document.createElement(nodeName);\\n      nodeDefaults[prop] = testElement[prop];\\n    }\\n    return nodeDefaults[prop];\\n  },\\n\\n  injection: DOMPropertyInjection\\n};\\n\\nmodule.exports = DOMProperty;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule Danger\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\n\\nvar createNodesFromMarkup = require('fbjs/lib/createNodesFromMarkup');\\nvar emptyFunction = require('fbjs/lib/emptyFunction');\\nvar getMarkupWrap = require('fbjs/lib/getMarkupWrap');\\nvar invariant = require('fbjs/lib/invariant');\\n\\nvar OPEN_TAG_NAME_EXP = /^(<[^ \\\\/>]+)/;\\nvar RESULT_INDEX_ATTR = 'data-danger-index';\\n\\n/**\\n * Extracts the `nodeName` from a string of markup.\\n *\\n * NOTE: Extracting the `nodeName` does not require a regular expression match\\n * because we make assumptions about React-generated markup (i.e. there are no\\n * spaces surrounding the opening tag and there is at least one attribute).\\n *\\n * @param {string} markup String of markup.\\n * @return {string} Node name of the supplied markup.\\n * @see http://jsperf.com/extract-nodename\\n */\\nfunction getNodeName(markup) {\\n  return markup.substring(1, markup.indexOf(' '));\\n}\\n\\nvar Danger = {\\n\\n  /**\\n   * Renders markup into an array of nodes. The markup is expected to render\\n   * into a list of root nodes. Also, the length of `resultList` and\\n   * `markupList` should be the same.\\n   *\\n   * @param {array<string>} markupList List of markup strings to render.\\n   * @return {array<DOMElement>} List of rendered nodes.\\n   * @internal\\n   */\\n  dangerouslyRenderMarkup: function (markupList) {\\n    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' + 'thread. Make sure `window` and `document` are available globally ' + 'before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString for server rendering.') : invariant(false) : undefined;\\n    var nodeName;\\n    var markupByNodeName = {};\\n    // Group markup by `nodeName` if a wrap is necessary, else by '*'.\\n    for (var i = 0; i < markupList.length; i++) {\\n      !markupList[i] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyRenderMarkup(...): Missing markup.') : invariant(false) : undefined;\\n      nodeName = getNodeName(markupList[i]);\\n      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';\\n      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];\\n      markupByNodeName[nodeName][i] = markupList[i];\\n    }\\n    var resultList = [];\\n    var resultListAssignmentCount = 0;\\n    for (nodeName in markupByNodeName) {\\n      if (!markupByNodeName.hasOwnProperty(nodeName)) {\\n        continue;\\n      }\\n      var markupListByNodeName = markupByNodeName[nodeName];\\n\\n      // This for-in loop skips the holes of the sparse array. The order of\\n      // iteration should follow the order of assignment, which happens to match\\n      // numerical index order, but we don't rely on that.\\n      var resultIndex;\\n      for (resultIndex in markupListByNodeName) {\\n        if (markupListByNodeName.hasOwnProperty(resultIndex)) {\\n          var markup = markupListByNodeName[resultIndex];\\n\\n          // Push the requested markup with an additional RESULT_INDEX_ATTR\\n          // attribute.  If the markup does not start with a < character, it\\n          // will be discarded below (with an appropriate console.error).\\n          markupListByNodeName[resultIndex] = markup.replace(OPEN_TAG_NAME_EXP,\\n          // This index will be parsed back out below.\\n          '$1 ' + RESULT_INDEX_ATTR + '=\\\"' + resultIndex + '\\\" ');\\n        }\\n      }\\n\\n      // Render each group of markup with similar wrapping `nodeName`.\\n      var renderNodes = createNodesFromMarkup(markupListByNodeName.join(''), emptyFunction // Do nothing special with <script> tags.\\n      );\\n\\n      for (var j = 0; j < renderNodes.length; ++j) {\\n        var renderNode = renderNodes[j];\\n        if (renderNode.hasAttribute && renderNode.hasAttribute(RESULT_INDEX_ATTR)) {\\n\\n          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);\\n          renderNode.removeAttribute(RESULT_INDEX_ATTR);\\n\\n          !!resultList.hasOwnProperty(resultIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Assigning to an already-occupied result index.') : invariant(false) : undefined;\\n\\n          resultList[resultIndex] = renderNode;\\n\\n          // This should match resultList.length and markupList.length when\\n          // we're done.\\n          resultListAssignmentCount += 1;\\n        } else if (process.env.NODE_ENV !== 'production') {\\n          console.error('Danger: Discarding unexpected node:', renderNode);\\n        }\\n      }\\n    }\\n\\n    // Although resultList was populated out of order, it should now be a dense\\n    // array.\\n    !(resultListAssignmentCount === resultList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Did not assign to every index of resultList.') : invariant(false) : undefined;\\n\\n    !(resultList.length === markupList.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Danger: Expected markup to render %s nodes, but rendered %s.', markupList.length, resultList.length) : invariant(false) : undefined;\\n\\n    return resultList;\\n  },\\n\\n  /**\\n   * Replaces a node with a string of markup at its current position within its\\n   * parent. The markup must render into a single root node.\\n   *\\n   * @param {DOMElement} oldChild Child node to replace.\\n   * @param {string} markup Markup to render in place of the child node.\\n   * @internal\\n   */\\n  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {\\n    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' + 'worker thread. Make sure `window` and `document` are available ' + 'globally before requiring React when unit testing or use ' + 'ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;\\n    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(false) : undefined;\\n    !(oldChild.tagName.toLowerCase() !== 'html') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' + '<html> node. This is because browser quirks make this unreliable ' + 'and/or slow. If you want to render to the root you must use ' + 'server rendering. See ReactDOMServer.renderToString().') : invariant(false) : undefined;\\n\\n    var newChild;\\n    if (typeof markup === 'string') {\\n      newChild = createNodesFromMarkup(markup, emptyFunction)[0];\\n    } else {\\n      newChild = markup;\\n    }\\n    oldChild.parentNode.replaceChild(newChild, oldChild);\\n  }\\n\\n};\\n\\nmodule.exports = Danger;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule DefaultEventPluginOrder\\n */\\n\\n'use strict';\\n\\nvar keyOf = require('fbjs/lib/keyOf');\\n\\n/**\\n * Module that is injectable into `EventPluginHub`, that specifies a\\n * deterministic ordering of `EventPlugin`s. A convenient way to reason about\\n * plugins, without having to package every one of them. This is better than\\n * having plugins be ordered in the same order that they are injected because\\n * that ordering would be influenced by the packaging order.\\n * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that\\n * preventing default on events is convenient in `SimpleEventPlugin` handlers.\\n */\\nvar DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];\\n\\nmodule.exports = DefaultEventPluginOrder;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule EnterLeaveEventPlugin\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar EventConstants = require('./EventConstants');\\nvar EventPropagators = require('./EventPropagators');\\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\\n\\nvar ReactMount = require('./ReactMount');\\nvar keyOf = require('fbjs/lib/keyOf');\\n\\nvar topLevelTypes = EventConstants.topLevelTypes;\\nvar getFirstReactDOM = ReactMount.getFirstReactDOM;\\n\\nvar eventTypes = {\\n  mouseEnter: {\\n    registrationName: keyOf({ onMouseEnter: null }),\\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\\n  },\\n  mouseLeave: {\\n    registrationName: keyOf({ onMouseLeave: null }),\\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\\n  }\\n};\\n\\nvar extractedEvents = [null, null];\\n\\nvar EnterLeaveEventPlugin = {\\n\\n  eventTypes: eventTypes,\\n\\n  /**\\n   * For almost every interaction we care about, there will be both a top-level\\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\\n   * we do not extract duplicate events. However, moving the mouse into the\\n   * browser from outside will not fire a `mouseout` event. In this case, we use\\n   * the `mouseover` top-level event.\\n   *\\n   * @param {string} topLevelType Record from `EventConstants`.\\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\\n   * @param {object} nativeEvent Native browser event.\\n   * @return {*} An accumulation of synthetic events.\\n   * @see {EventPluginHub.extractEvents}\\n   */\\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\\n    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\\n      return null;\\n    }\\n    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {\\n      // Must not be a mouse in or mouse out - ignoring.\\n      return null;\\n    }\\n\\n    var win;\\n    if (topLevelTarget.window === topLevelTarget) {\\n      // `topLevelTarget` is probably a window object.\\n      win = topLevelTarget;\\n    } else {\\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\\n      var doc = topLevelTarget.ownerDocument;\\n      if (doc) {\\n        win = doc.defaultView || doc.parentWindow;\\n      } else {\\n        win = window;\\n      }\\n    }\\n\\n    var from;\\n    var to;\\n    var fromID = '';\\n    var toID = '';\\n    if (topLevelType === topLevelTypes.topMouseOut) {\\n      from = topLevelTarget;\\n      fromID = topLevelTargetID;\\n      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);\\n      if (to) {\\n        toID = ReactMount.getID(to);\\n      } else {\\n        to = win;\\n      }\\n      to = to || win;\\n    } else {\\n      from = win;\\n      to = topLevelTarget;\\n      toID = topLevelTargetID;\\n    }\\n\\n    if (from === to) {\\n      // Nothing pertains to our managed components.\\n      return null;\\n    }\\n\\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);\\n    leave.type = 'mouseleave';\\n    leave.target = from;\\n    leave.relatedTarget = to;\\n\\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);\\n    enter.type = 'mouseenter';\\n    enter.target = to;\\n    enter.relatedTarget = from;\\n\\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\\n\\n    extractedEvents[0] = leave;\\n    extractedEvents[1] = enter;\\n\\n    return extractedEvents;\\n  }\\n\\n};\\n\\nmodule.exports = EnterLeaveEventPlugin;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule EventConstants\\n */\\n\\n'use strict';\\n\\nvar keyMirror = require('fbjs/lib/keyMirror');\\n\\nvar PropagationPhases = keyMirror({ bubbled: null, captured: null });\\n\\n/**\\n * Types of raw signals from the browser caught at the top level.\\n */\\nvar topLevelTypes = keyMirror({\\n  topAbort: null,\\n  topBlur: null,\\n  topCanPlay: null,\\n  topCanPlayThrough: null,\\n  topChange: null,\\n  topClick: null,\\n  topCompositionEnd: null,\\n  topCompositionStart: null,\\n  topCompositionUpdate: null,\\n  topContextMenu: null,\\n  topCopy: null,\\n  topCut: null,\\n  topDoubleClick: null,\\n  topDrag: null,\\n  topDragEnd: null,\\n  topDragEnter: null,\\n  topDragExit: null,\\n  topDragLeave: null,\\n  topDragOver: null,\\n  topDragStart: null,\\n  topDrop: null,\\n  topDurationChange: null,\\n  topEmptied: null,\\n  topEncrypted: null,\\n  topEnded: null,\\n  topError: null,\\n  topFocus: null,\\n  topInput: null,\\n  topKeyDown: null,\\n  topKeyPress: null,\\n  topKeyUp: null,\\n  topLoad: null,\\n  topLoadedData: null,\\n  topLoadedMetadata: null,\\n  topLoadStart: null,\\n  topMouseDown: null,\\n  topMouseMove: null,\\n  topMouseOut: null,\\n  topMouseOver: null,\\n  topMouseUp: null,\\n  topPaste: null,\\n  topPause: null,\\n  topPlay: null,\\n  topPlaying: null,\\n  topProgress: null,\\n  topRateChange: null,\\n  topReset: null,\\n  topScroll: null,\\n  topSeeked: null,\\n  topSeeking: null,\\n  topSelectionChange: null,\\n  topStalled: null,\\n  topSubmit: null,\\n  topSuspend: null,\\n  topTextInput: null,\\n  topTimeUpdate: null,\\n  topTouchCancel: null,\\n  topTouchEnd: null,\\n  topTouchMove: null,\\n  topTouchStart: null,\\n  topVolumeChange: null,\\n  topWaiting: null,\\n  topWheel: null\\n});\\n\\nvar EventConstants = {\\n  topLevelTypes: topLevelTypes,\\n  PropagationPhases: PropagationPhases\\n};\\n\\nmodule.exports = EventConstants;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule EventPluginHub\\n */\\n\\n'use strict';\\n\\nvar EventPluginRegistry = require('./EventPluginRegistry');\\nvar EventPluginUtils = require('./EventPluginUtils');\\nvar ReactErrorUtils = require('./ReactErrorUtils');\\n\\nvar accumulateInto = require('./accumulateInto');\\nvar forEachAccumulated = require('./forEachAccumulated');\\nvar invariant = require('fbjs/lib/invariant');\\nvar warning = require('fbjs/lib/warning');\\n\\n/**\\n * Internal store for event listeners\\n */\\nvar listenerBank = {};\\n\\n/**\\n * Internal queue of events that have accumulated their dispatches and are\\n * waiting to have their dispatches executed.\\n */\\nvar eventQueue = null;\\n\\n/**\\n * Dispatches an event and releases it back into the pool, unless persistent.\\n *\\n * @param {?object} event Synthetic event to be dispatched.\\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\\n * @private\\n */\\nvar executeDispatchesAndRelease = function (event, simulated) {\\n  if (event) {\\n    EventPluginUtils.executeDispatchesInOrder(event, simulated);\\n\\n    if (!event.isPersistent()) {\\n      event.constructor.release(event);\\n    }\\n  }\\n};\\nvar executeDispatchesAndReleaseSimulated = function (e) {\\n  return executeDispatchesAndRelease(e, true);\\n};\\nvar executeDispatchesAndReleaseTopLevel = function (e) {\\n  return executeDispatchesAndRelease(e, false);\\n};\\n\\n/**\\n * - `InstanceHandle`: [required] Module that performs logical traversals of DOM\\n *   hierarchy given ids of the logical DOM elements involved.\\n */\\nvar InstanceHandle = null;\\n\\nfunction validateInstanceHandle() {\\n  var valid = InstanceHandle && InstanceHandle.traverseTwoPhase && InstanceHandle.traverseEnterLeave;\\n  process.env.NODE_ENV !== 'production' ? warning(valid, 'InstanceHandle not injected before use!') : undefined;\\n}\\n\\n/**\\n * This is a unified interface for event plugins to be installed and configured.\\n *\\n * Event plugins can implement the following properties:\\n *\\n *   `extractEvents` {function(string, DOMEventTarget, string, object): *}\\n *     Required. When a top-level event is fired, this method is expected to\\n *     extract synthetic events that will in turn be queued and dispatched.\\n *\\n *   `eventTypes` {object}\\n *     Optional, plugins that fire events must publish a mapping of registration\\n *     names that are used to register listeners. Values of this mapping must\\n *     be objects that contain `registrationName` or `phasedRegistrationNames`.\\n *\\n *   `executeDispatch` {function(object, function, string)}\\n *     Optional, allows plugins to override how an event gets dispatched. By\\n *     default, the listener is simply invoked.\\n *\\n * Each plugin that is injected into `EventsPluginHub` is immediately operable.\\n *\\n * @public\\n */\\nvar EventPluginHub = {\\n\\n  /**\\n   * Methods for injecting dependencies.\\n   */\\n  injection: {\\n\\n    /**\\n     * @param {object} InjectedMount\\n     * @public\\n     */\\n    injectMount: EventPluginUtils.injection.injectMount,\\n\\n    /**\\n     * @param {object} InjectedInstanceHandle\\n     * @public\\n     */\\n    injectInstanceHandle: function (InjectedInstanceHandle) {\\n      InstanceHandle = InjectedInstanceHandle;\\n      if (process.env.NODE_ENV !== 'production') {\\n        validateInstanceHandle();\\n      }\\n    },\\n\\n    getInstanceHandle: function () {\\n      if (process.env.NODE_ENV !== 'production') {\\n        validateInstanceHandle();\\n      }\\n      return InstanceHandle;\\n    },\\n\\n    /**\\n     * @param {array} InjectedEventPluginOrder\\n     * @public\\n     */\\n    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,\\n\\n    /**\\n     * @param {object} injectedNamesToPlugins Map from names to plugin modules.\\n     */\\n    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName\\n\\n  },\\n\\n  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,\\n\\n  registrationNameModules: EventPluginRegistry.registrationNameModules,\\n\\n  /**\\n   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.\\n   *\\n   * @param {string} id ID of the DOM element.\\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\\n   * @param {?function} listener The callback to store.\\n   */\\n  putListener: function (id, registrationName, listener) {\\n    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : invariant(false) : undefined;\\n\\n    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});\\n    bankForRegistrationName[id] = listener;\\n\\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\\n    if (PluginModule && PluginModule.didPutListener) {\\n      PluginModule.didPutListener(id, registrationName, listener);\\n    }\\n  },\\n\\n  /**\\n   * @param {string} id ID of the DOM element.\\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\\n   * @return {?function} The stored callback.\\n   */\\n  getListener: function (id, registrationName) {\\n    var bankForRegistrationName = listenerBank[registrationName];\\n    return bankForRegistrationName && bankForRegistrationName[id];\\n  },\\n\\n  /**\\n   * Deletes a listener from the registration bank.\\n   *\\n   * @param {string} id ID of the DOM element.\\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\\n   */\\n  deleteListener: function (id, registrationName) {\\n    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\\n    if (PluginModule && PluginModule.willDeleteListener) {\\n      PluginModule.willDeleteListener(id, registrationName);\\n    }\\n\\n    var bankForRegistrationName = listenerBank[registrationName];\\n    // TODO: This should never be null -- when is it?\\n    if (bankForRegistrationName) {\\n      delete bankForRegistrationName[id];\\n    }\\n  },\\n\\n  /**\\n   * Deletes all listeners for the DOM element with the supplied ID.\\n   *\\n   * @param {string} id ID of the DOM element.\\n   */\\n  deleteAllListeners: function (id) {\\n    for (var registrationName in listenerBank) {\\n      if (!listenerBank[registrationName][id]) {\\n        continue;\\n      }\\n\\n      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];\\n      if (PluginModule && PluginModule.willDeleteListener) {\\n        PluginModule.willDeleteListener(id, registrationName);\\n      }\\n\\n      delete listenerBank[registrationName][id];\\n    }\\n  },\\n\\n  /**\\n   * Allows registered plugins an opportunity to extract events from top-level\\n   * native browser events.\\n   *\\n   * @param {string} topLevelType Record from `EventConstants`.\\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\\n   * @param {object} nativeEvent Native browser event.\\n   * @return {*} An accumulation of synthetic events.\\n   * @internal\\n   */\\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\\n    var events;\\n    var plugins = EventPluginRegistry.plugins;\\n    for (var i = 0; i < plugins.length; i++) {\\n      // Not every plugin in the ordering may be loaded at runtime.\\n      var possiblePlugin = plugins[i];\\n      if (possiblePlugin) {\\n        var extractedEvents = possiblePlugin.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);\\n        if (extractedEvents) {\\n          events = accumulateInto(events, extractedEvents);\\n        }\\n      }\\n    }\\n    return events;\\n  },\\n\\n  /**\\n   * Enqueues a synthetic event that should be dispatched when\\n   * `processEventQueue` is invoked.\\n   *\\n   * @param {*} events An accumulation of synthetic events.\\n   * @internal\\n   */\\n  enqueueEvents: function (events) {\\n    if (events) {\\n      eventQueue = accumulateInto(eventQueue, events);\\n    }\\n  },\\n\\n  /**\\n   * Dispatches all synthetic events on the event queue.\\n   *\\n   * @internal\\n   */\\n  processEventQueue: function (simulated) {\\n    // Set `eventQueue` to null before processing it so that we can tell if more\\n    // events get enqueued while processing.\\n    var processingEventQueue = eventQueue;\\n    eventQueue = null;\\n    if (simulated) {\\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);\\n    } else {\\n      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\\n    }\\n    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing ' + 'an event queue. Support for this has not yet been implemented.') : invariant(false) : undefined;\\n    // This would be a good time to rethrow if any of the event handlers threw.\\n    ReactErrorUtils.rethrowCaughtError();\\n  },\\n\\n  /**\\n   * These are needed for tests only. Do not use!\\n   */\\n  __purge: function () {\\n    listenerBank = {};\\n  },\\n\\n  __getListenerBank: function () {\\n    return listenerBank;\\n  }\\n\\n};\\n\\nmodule.exports = EventPluginHub;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule EventPluginRegistry\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\n/**\\n * Injectable ordering of event plugins.\\n */\\nvar EventPluginOrder = null;\\n\\n/**\\n * Injectable mapping from names to event plugin modules.\\n */\\nvar namesToPlugins = {};\\n\\n/**\\n * Recomputes the plugin list using the injected plugins and plugin ordering.\\n *\\n * @private\\n */\\nfunction recomputePluginOrdering() {\\n  if (!EventPluginOrder) {\\n    // Wait until an `EventPluginOrder` is injected.\\n    return;\\n  }\\n  for (var pluginName in namesToPlugins) {\\n    var PluginModule = namesToPlugins[pluginName];\\n    var pluginIndex = EventPluginOrder.indexOf(pluginName);\\n    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in ' + 'the plugin ordering, `%s`.', pluginName) : invariant(false) : undefined;\\n    if (EventPluginRegistry.plugins[pluginIndex]) {\\n      continue;\\n    }\\n    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` ' + 'method, but `%s` does not.', pluginName) : invariant(false) : undefined;\\n    EventPluginRegistry.plugins[pluginIndex] = PluginModule;\\n    var publishedEvents = PluginModule.eventTypes;\\n    for (var eventName in publishedEvents) {\\n      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : invariant(false) : undefined;\\n    }\\n  }\\n}\\n\\n/**\\n * Publishes an event so that it can be dispatched by the supplied plugin.\\n *\\n * @param {object} dispatchConfig Dispatch configuration for the event.\\n * @param {object} PluginModule Plugin publishing the event.\\n * @return {boolean} True if the event was successfully published.\\n * @private\\n */\\nfunction publishEventForPlugin(dispatchConfig, PluginModule, eventName) {\\n  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'event name, `%s`.', eventName) : invariant(false) : undefined;\\n  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;\\n\\n  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\\n  if (phasedRegistrationNames) {\\n    for (var phaseName in phasedRegistrationNames) {\\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\\n        var phasedRegistrationName = phasedRegistrationNames[phaseName];\\n        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);\\n      }\\n    }\\n    return true;\\n  } else if (dispatchConfig.registrationName) {\\n    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);\\n    return true;\\n  }\\n  return false;\\n}\\n\\n/**\\n * Publishes a registration name that is used to identify dispatched events and\\n * can be used with `EventPluginHub.putListener` to register listeners.\\n *\\n * @param {string} registrationName Registration name to add.\\n * @param {object} PluginModule Plugin publishing the event.\\n * @private\\n */\\nfunction publishRegistrationName(registrationName, PluginModule, eventName) {\\n  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same ' + 'registration name, `%s`.', registrationName) : invariant(false) : undefined;\\n  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;\\n  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;\\n}\\n\\n/**\\n * Registers plugins so that they can extract and dispatch events.\\n *\\n * @see {EventPluginHub}\\n */\\nvar EventPluginRegistry = {\\n\\n  /**\\n   * Ordered list of injected plugins.\\n   */\\n  plugins: [],\\n\\n  /**\\n   * Mapping from event name to dispatch config\\n   */\\n  eventNameDispatchConfigs: {},\\n\\n  /**\\n   * Mapping from registration name to plugin module\\n   */\\n  registrationNameModules: {},\\n\\n  /**\\n   * Mapping from registration name to event name\\n   */\\n  registrationNameDependencies: {},\\n\\n  /**\\n   * Injects an ordering of plugins (by plugin name). This allows the ordering\\n   * to be decoupled from injection of the actual plugins so that ordering is\\n   * always deterministic regardless of packaging, on-the-fly injection, etc.\\n   *\\n   * @param {array} InjectedEventPluginOrder\\n   * @internal\\n   * @see {EventPluginHub.injection.injectEventPluginOrder}\\n   */\\n  injectEventPluginOrder: function (InjectedEventPluginOrder) {\\n    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than ' + 'once. You are likely trying to load more than one copy of React.') : invariant(false) : undefined;\\n    // Clone the ordering so it cannot be dynamically mutated.\\n    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);\\n    recomputePluginOrdering();\\n  },\\n\\n  /**\\n   * Injects plugins to be used by `EventPluginHub`. The plugin names must be\\n   * in the ordering injected by `injectEventPluginOrder`.\\n   *\\n   * Plugins can be injected as part of page initialization or on-the-fly.\\n   *\\n   * @param {object} injectedNamesToPlugins Map from names to plugin modules.\\n   * @internal\\n   * @see {EventPluginHub.injection.injectEventPluginsByName}\\n   */\\n  injectEventPluginsByName: function (injectedNamesToPlugins) {\\n    var isOrderingDirty = false;\\n    for (var pluginName in injectedNamesToPlugins) {\\n      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\\n        continue;\\n      }\\n      var PluginModule = injectedNamesToPlugins[pluginName];\\n      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {\\n        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins ' + 'using the same name, `%s`.', pluginName) : invariant(false) : undefined;\\n        namesToPlugins[pluginName] = PluginModule;\\n        isOrderingDirty = true;\\n      }\\n    }\\n    if (isOrderingDirty) {\\n      recomputePluginOrdering();\\n    }\\n  },\\n\\n  /**\\n   * Looks up the plugin for the supplied event.\\n   *\\n   * @param {object} event A synthetic event.\\n   * @return {?object} The plugin that created the supplied event.\\n   * @internal\\n   */\\n  getPluginModuleForEvent: function (event) {\\n    var dispatchConfig = event.dispatchConfig;\\n    if (dispatchConfig.registrationName) {\\n      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;\\n    }\\n    for (var phase in dispatchConfig.phasedRegistrationNames) {\\n      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {\\n        continue;\\n      }\\n      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];\\n      if (PluginModule) {\\n        return PluginModule;\\n      }\\n    }\\n    return null;\\n  },\\n\\n  /**\\n   * Exposed for unit testing.\\n   * @private\\n   */\\n  _resetEventPlugins: function () {\\n    EventPluginOrder = null;\\n    for (var pluginName in namesToPlugins) {\\n      if (namesToPlugins.hasOwnProperty(pluginName)) {\\n        delete namesToPlugins[pluginName];\\n      }\\n    }\\n    EventPluginRegistry.plugins.length = 0;\\n\\n    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;\\n    for (var eventName in eventNameDispatchConfigs) {\\n      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {\\n        delete eventNameDispatchConfigs[eventName];\\n      }\\n    }\\n\\n    var registrationNameModules = EventPluginRegistry.registrationNameModules;\\n    for (var registrationName in registrationNameModules) {\\n      if (registrationNameModules.hasOwnProperty(registrationName)) {\\n        delete registrationNameModules[registrationName];\\n      }\\n    }\\n  }\\n\\n};\\n\\nmodule.exports = EventPluginRegistry;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule EventPluginUtils\\n */\\n\\n'use strict';\\n\\nvar EventConstants = require('./EventConstants');\\nvar ReactErrorUtils = require('./ReactErrorUtils');\\n\\nvar invariant = require('fbjs/lib/invariant');\\nvar warning = require('fbjs/lib/warning');\\n\\n/**\\n * Injected dependencies:\\n */\\n\\n/**\\n * - `Mount`: [required] Module that can convert between React dom IDs and\\n *   actual node references.\\n */\\nvar injection = {\\n  Mount: null,\\n  injectMount: function (InjectedMount) {\\n    injection.Mount = InjectedMount;\\n    if (process.env.NODE_ENV !== 'production') {\\n      process.env.NODE_ENV !== 'production' ? warning(InjectedMount && InjectedMount.getNode && InjectedMount.getID, 'EventPluginUtils.injection.injectMount(...): Injected Mount ' + 'module is missing getNode or getID.') : undefined;\\n    }\\n  }\\n};\\n\\nvar topLevelTypes = EventConstants.topLevelTypes;\\n\\nfunction isEndish(topLevelType) {\\n  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;\\n}\\n\\nfunction isMoveish(topLevelType) {\\n  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;\\n}\\nfunction isStartish(topLevelType) {\\n  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;\\n}\\n\\nvar validateEventDispatches;\\nif (process.env.NODE_ENV !== 'production') {\\n  validateEventDispatches = function (event) {\\n    var dispatchListeners = event._dispatchListeners;\\n    var dispatchIDs = event._dispatchIDs;\\n\\n    var listenersIsArr = Array.isArray(dispatchListeners);\\n    var idsIsArr = Array.isArray(dispatchIDs);\\n    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;\\n    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;\\n\\n    process.env.NODE_ENV !== 'production' ? warning(idsIsArr === listenersIsArr && IDsLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : undefined;\\n  };\\n}\\n\\n/**\\n * Dispatch the event to the listener.\\n * @param {SyntheticEvent} event SyntheticEvent to handle\\n * @param {boolean} simulated If the event is simulated (changes exn behavior)\\n * @param {function} listener Application-level callback\\n * @param {string} domID DOM id to pass to the callback.\\n */\\nfunction executeDispatch(event, simulated, listener, domID) {\\n  var type = event.type || 'unknown-event';\\n  event.currentTarget = injection.Mount.getNode(domID);\\n  if (simulated) {\\n    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event, domID);\\n  } else {\\n    ReactErrorUtils.invokeGuardedCallback(type, listener, event, domID);\\n  }\\n  event.currentTarget = null;\\n}\\n\\n/**\\n * Standard/simple iteration through an event's collected dispatches.\\n */\\nfunction executeDispatchesInOrder(event, simulated) {\\n  var dispatchListeners = event._dispatchListeners;\\n  var dispatchIDs = event._dispatchIDs;\\n  if (process.env.NODE_ENV !== 'production') {\\n    validateEventDispatches(event);\\n  }\\n  if (Array.isArray(dispatchListeners)) {\\n    for (var i = 0; i < dispatchListeners.length; i++) {\\n      if (event.isPropagationStopped()) {\\n        break;\\n      }\\n      // Listeners and IDs are two parallel arrays that are always in sync.\\n      executeDispatch(event, simulated, dispatchListeners[i], dispatchIDs[i]);\\n    }\\n  } else if (dispatchListeners) {\\n    executeDispatch(event, simulated, dispatchListeners, dispatchIDs);\\n  }\\n  event._dispatchListeners = null;\\n  event._dispatchIDs = null;\\n}\\n\\n/**\\n * Standard/simple iteration through an event's collected dispatches, but stops\\n * at the first dispatch execution returning true, and returns that id.\\n *\\n * @return {?string} id of the first dispatch execution who's listener returns\\n * true, or null if no listener returned true.\\n */\\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\\n  var dispatchListeners = event._dispatchListeners;\\n  var dispatchIDs = event._dispatchIDs;\\n  if (process.env.NODE_ENV !== 'production') {\\n    validateEventDispatches(event);\\n  }\\n  if (Array.isArray(dispatchListeners)) {\\n    for (var i = 0; i < dispatchListeners.length; i++) {\\n      if (event.isPropagationStopped()) {\\n        break;\\n      }\\n      // Listeners and IDs are two parallel arrays that are always in sync.\\n      if (dispatchListeners[i](event, dispatchIDs[i])) {\\n        return dispatchIDs[i];\\n      }\\n    }\\n  } else if (dispatchListeners) {\\n    if (dispatchListeners(event, dispatchIDs)) {\\n      return dispatchIDs;\\n    }\\n  }\\n  return null;\\n}\\n\\n/**\\n * @see executeDispatchesInOrderStopAtTrueImpl\\n */\\nfunction executeDispatchesInOrderStopAtTrue(event) {\\n  var ret = executeDispatchesInOrderStopAtTrueImpl(event);\\n  event._dispatchIDs = null;\\n  event._dispatchListeners = null;\\n  return ret;\\n}\\n\\n/**\\n * Execution of a \\\"direct\\\" dispatch - there must be at most one dispatch\\n * accumulated on the event or it is considered an error. It doesn't really make\\n * sense for an event with multiple dispatches (bubbled) to keep track of the\\n * return values at each dispatch execution, but it does tend to make sense when\\n * dealing with \\\"direct\\\" dispatches.\\n *\\n * @return {*} The return value of executing the single dispatch.\\n */\\nfunction executeDirectDispatch(event) {\\n  if (process.env.NODE_ENV !== 'production') {\\n    validateEventDispatches(event);\\n  }\\n  var dispatchListener = event._dispatchListeners;\\n  var dispatchID = event._dispatchIDs;\\n  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : invariant(false) : undefined;\\n  var res = dispatchListener ? dispatchListener(event, dispatchID) : null;\\n  event._dispatchListeners = null;\\n  event._dispatchIDs = null;\\n  return res;\\n}\\n\\n/**\\n * @param {SyntheticEvent} event\\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\\n */\\nfunction hasDispatches(event) {\\n  return !!event._dispatchListeners;\\n}\\n\\n/**\\n * General utilities that are useful in creating custom Event Plugins.\\n */\\nvar EventPluginUtils = {\\n  isEndish: isEndish,\\n  isMoveish: isMoveish,\\n  isStartish: isStartish,\\n\\n  executeDirectDispatch: executeDirectDispatch,\\n  executeDispatchesInOrder: executeDispatchesInOrder,\\n  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,\\n  hasDispatches: hasDispatches,\\n\\n  getNode: function (id) {\\n    return injection.Mount.getNode(id);\\n  },\\n  getID: function (node) {\\n    return injection.Mount.getID(node);\\n  },\\n\\n  injection: injection\\n};\\n\\nmodule.exports = EventPluginUtils;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule EventPropagators\\n */\\n\\n'use strict';\\n\\nvar EventConstants = require('./EventConstants');\\nvar EventPluginHub = require('./EventPluginHub');\\n\\nvar warning = require('fbjs/lib/warning');\\n\\nvar accumulateInto = require('./accumulateInto');\\nvar forEachAccumulated = require('./forEachAccumulated');\\n\\nvar PropagationPhases = EventConstants.PropagationPhases;\\nvar getListener = EventPluginHub.getListener;\\n\\n/**\\n * Some event types have a notion of different registration names for different\\n * \\\"phases\\\" of propagation. This finds listeners by a given phase.\\n */\\nfunction listenerAtPhase(id, event, propagationPhase) {\\n  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];\\n  return getListener(id, registrationName);\\n}\\n\\n/**\\n * Tags a `SyntheticEvent` with dispatched listeners. Creating this function\\n * here, allows us to not have to bind or create functions for each event.\\n * Mutating the event's members allows us to not have to create a wrapping\\n * \\\"dispatch\\\" object that pairs the event with the listener.\\n */\\nfunction accumulateDirectionalDispatches(domID, upwards, event) {\\n  if (process.env.NODE_ENV !== 'production') {\\n    process.env.NODE_ENV !== 'production' ? warning(domID, 'Dispatching id must not be null') : undefined;\\n  }\\n  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;\\n  var listener = listenerAtPhase(domID, event, phase);\\n  if (listener) {\\n    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\\n    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);\\n  }\\n}\\n\\n/**\\n * Collect dispatches (must be entirely collected before dispatching - see unit\\n * tests). Lazily allocate the array to conserve memory.  We must loop through\\n * each event and perform the traversal for each one. We cannot perform a\\n * single traversal for the entire collection of events because each event may\\n * have a different target.\\n */\\nfunction accumulateTwoPhaseDispatchesSingle(event) {\\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\\n    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(event.dispatchMarker, accumulateDirectionalDispatches, event);\\n  }\\n}\\n\\n/**\\n * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.\\n */\\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\\n    EventPluginHub.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(event.dispatchMarker, accumulateDirectionalDispatches, event);\\n  }\\n}\\n\\n/**\\n * Accumulates without regard to direction, does not look for phased\\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\\n */\\nfunction accumulateDispatches(id, ignoredDirection, event) {\\n  if (event && event.dispatchConfig.registrationName) {\\n    var registrationName = event.dispatchConfig.registrationName;\\n    var listener = getListener(id, registrationName);\\n    if (listener) {\\n      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);\\n      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);\\n    }\\n  }\\n}\\n\\n/**\\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\\n * `dispatchMarker`.\\n * @param {SyntheticEvent} event\\n */\\nfunction accumulateDirectDispatchesSingle(event) {\\n  if (event && event.dispatchConfig.registrationName) {\\n    accumulateDispatches(event.dispatchMarker, null, event);\\n  }\\n}\\n\\nfunction accumulateTwoPhaseDispatches(events) {\\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\\n}\\n\\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\\n}\\n\\nfunction accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {\\n  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(fromID, toID, accumulateDispatches, leave, enter);\\n}\\n\\nfunction accumulateDirectDispatches(events) {\\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\\n}\\n\\n/**\\n * A small set of propagation patterns, each of which will accept a small amount\\n * of information, and generate a set of \\\"dispatch ready event objects\\\" - which\\n * are sets of events that have already been annotated with a set of dispatched\\n * listener functions/ids. The API is designed this way to discourage these\\n * propagation strategies from actually executing the dispatches, since we\\n * always want to collect the entire set of dispatches before executing event a\\n * single one.\\n *\\n * @constructor EventPropagators\\n */\\nvar EventPropagators = {\\n  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,\\n  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,\\n  accumulateDirectDispatches: accumulateDirectDispatches,\\n  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches\\n};\\n\\nmodule.exports = EventPropagators;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule FallbackCompositionState\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar PooledClass = require('./PooledClass');\\n\\nvar assign = require('./Object.assign');\\nvar getTextContentAccessor = require('./getTextContentAccessor');\\n\\n/**\\n * This helper class stores information about text content of a target node,\\n * allowing comparison of content before and after a given event.\\n *\\n * Identify the node where selection currently begins, then observe\\n * both its text content and its current position in the DOM. Since the\\n * browser may natively replace the target node during composition, we can\\n * use its position to find its replacement.\\n *\\n * @param {DOMEventTarget} root\\n */\\nfunction FallbackCompositionState(root) {\\n  this._root = root;\\n  this._startText = this.getText();\\n  this._fallbackText = null;\\n}\\n\\nassign(FallbackCompositionState.prototype, {\\n  destructor: function () {\\n    this._root = null;\\n    this._startText = null;\\n    this._fallbackText = null;\\n  },\\n\\n  /**\\n   * Get current text of input.\\n   *\\n   * @return {string}\\n   */\\n  getText: function () {\\n    if ('value' in this._root) {\\n      return this._root.value;\\n    }\\n    return this._root[getTextContentAccessor()];\\n  },\\n\\n  /**\\n   * Determine the differing substring between the initially stored\\n   * text content and the current content.\\n   *\\n   * @return {string}\\n   */\\n  getData: function () {\\n    if (this._fallbackText) {\\n      return this._fallbackText;\\n    }\\n\\n    var start;\\n    var startValue = this._startText;\\n    var startLength = startValue.length;\\n    var end;\\n    var endValue = this.getText();\\n    var endLength = endValue.length;\\n\\n    for (start = 0; start < startLength; start++) {\\n      if (startValue[start] !== endValue[start]) {\\n        break;\\n      }\\n    }\\n\\n    var minEnd = startLength - start;\\n    for (end = 1; end <= minEnd; end++) {\\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\\n        break;\\n      }\\n    }\\n\\n    var sliceTail = end > 1 ? 1 - end : undefined;\\n    this._fallbackText = endValue.slice(start, sliceTail);\\n    return this._fallbackText;\\n  }\\n});\\n\\nPooledClass.addPoolingTo(FallbackCompositionState);\\n\\nmodule.exports = FallbackCompositionState;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule HTMLDOMPropertyConfig\\n */\\n\\n'use strict';\\n\\nvar DOMProperty = require('./DOMProperty');\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\n\\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\\nvar MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;\\nvar HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;\\nvar HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;\\nvar HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;\\nvar HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;\\nvar HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;\\n\\nvar hasSVG;\\nif (ExecutionEnvironment.canUseDOM) {\\n  var implementation = document.implementation;\\n  hasSVG = implementation && implementation.hasFeature && implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#BasicStructure', '1.1');\\n}\\n\\nvar HTMLDOMPropertyConfig = {\\n  isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\\\\d_.\\\\-]*$/),\\n  Properties: {\\n    /**\\n     * Standard Properties\\n     */\\n    accept: null,\\n    acceptCharset: null,\\n    accessKey: null,\\n    action: null,\\n    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\\n    allowTransparency: MUST_USE_ATTRIBUTE,\\n    alt: null,\\n    async: HAS_BOOLEAN_VALUE,\\n    autoComplete: null,\\n    // autoFocus is polyfilled/normalized by AutoFocusUtils\\n    // autoFocus: HAS_BOOLEAN_VALUE,\\n    autoPlay: HAS_BOOLEAN_VALUE,\\n    capture: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\\n    cellPadding: null,\\n    cellSpacing: null,\\n    charSet: MUST_USE_ATTRIBUTE,\\n    challenge: MUST_USE_ATTRIBUTE,\\n    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\\n    classID: MUST_USE_ATTRIBUTE,\\n    // To set className on SVG elements, it's necessary to use .setAttribute;\\n    // this works on HTML elements too in all browsers except IE8. Conveniently,\\n    // IE8 doesn't support SVG and so we can simply use the attribute in\\n    // browsers that support SVG and the property in browsers that don't,\\n    // regardless of whether the element is HTML or SVG.\\n    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,\\n    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\\n    colSpan: null,\\n    content: null,\\n    contentEditable: null,\\n    contextMenu: MUST_USE_ATTRIBUTE,\\n    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\\n    coords: null,\\n    crossOrigin: null,\\n    data: null, // For `<object />` acts as `src`.\\n    dateTime: MUST_USE_ATTRIBUTE,\\n    'default': HAS_BOOLEAN_VALUE,\\n    defer: HAS_BOOLEAN_VALUE,\\n    dir: null,\\n    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\\n    download: HAS_OVERLOADED_BOOLEAN_VALUE,\\n    draggable: null,\\n    encType: null,\\n    form: MUST_USE_ATTRIBUTE,\\n    formAction: MUST_USE_ATTRIBUTE,\\n    formEncType: MUST_USE_ATTRIBUTE,\\n    formMethod: MUST_USE_ATTRIBUTE,\\n    formNoValidate: HAS_BOOLEAN_VALUE,\\n    formTarget: MUST_USE_ATTRIBUTE,\\n    frameBorder: MUST_USE_ATTRIBUTE,\\n    headers: null,\\n    height: MUST_USE_ATTRIBUTE,\\n    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\\n    high: null,\\n    href: null,\\n    hrefLang: null,\\n    htmlFor: null,\\n    httpEquiv: null,\\n    icon: null,\\n    id: MUST_USE_PROPERTY,\\n    inputMode: MUST_USE_ATTRIBUTE,\\n    integrity: null,\\n    is: MUST_USE_ATTRIBUTE,\\n    keyParams: MUST_USE_ATTRIBUTE,\\n    keyType: MUST_USE_ATTRIBUTE,\\n    kind: null,\\n    label: null,\\n    lang: null,\\n    list: MUST_USE_ATTRIBUTE,\\n    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\\n    low: null,\\n    manifest: MUST_USE_ATTRIBUTE,\\n    marginHeight: null,\\n    marginWidth: null,\\n    max: null,\\n    maxLength: MUST_USE_ATTRIBUTE,\\n    media: MUST_USE_ATTRIBUTE,\\n    mediaGroup: null,\\n    method: null,\\n    min: null,\\n    minLength: MUST_USE_ATTRIBUTE,\\n    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\\n    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\\n    name: null,\\n    nonce: MUST_USE_ATTRIBUTE,\\n    noValidate: HAS_BOOLEAN_VALUE,\\n    open: HAS_BOOLEAN_VALUE,\\n    optimum: null,\\n    pattern: null,\\n    placeholder: null,\\n    poster: null,\\n    preload: null,\\n    radioGroup: null,\\n    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\\n    rel: null,\\n    required: HAS_BOOLEAN_VALUE,\\n    reversed: HAS_BOOLEAN_VALUE,\\n    role: MUST_USE_ATTRIBUTE,\\n    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\\n    rowSpan: null,\\n    sandbox: null,\\n    scope: null,\\n    scoped: HAS_BOOLEAN_VALUE,\\n    scrolling: null,\\n    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\\n    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\\n    shape: null,\\n    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,\\n    sizes: MUST_USE_ATTRIBUTE,\\n    span: HAS_POSITIVE_NUMERIC_VALUE,\\n    spellCheck: null,\\n    src: null,\\n    srcDoc: MUST_USE_PROPERTY,\\n    srcLang: null,\\n    srcSet: MUST_USE_ATTRIBUTE,\\n    start: HAS_NUMERIC_VALUE,\\n    step: null,\\n    style: null,\\n    summary: null,\\n    tabIndex: null,\\n    target: null,\\n    title: null,\\n    type: null,\\n    useMap: null,\\n    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,\\n    width: MUST_USE_ATTRIBUTE,\\n    wmode: MUST_USE_ATTRIBUTE,\\n    wrap: null,\\n\\n    /**\\n     * RDFa Properties\\n     */\\n    about: MUST_USE_ATTRIBUTE,\\n    datatype: MUST_USE_ATTRIBUTE,\\n    inlist: MUST_USE_ATTRIBUTE,\\n    prefix: MUST_USE_ATTRIBUTE,\\n    // property is also supported for OpenGraph in meta tags.\\n    property: MUST_USE_ATTRIBUTE,\\n    resource: MUST_USE_ATTRIBUTE,\\n    'typeof': MUST_USE_ATTRIBUTE,\\n    vocab: MUST_USE_ATTRIBUTE,\\n\\n    /**\\n     * Non-standard Properties\\n     */\\n    // autoCapitalize and autoCorrect are supported in Mobile Safari for\\n    // keyboard hints.\\n    autoCapitalize: null,\\n    autoCorrect: null,\\n    // autoSave allows WebKit/Blink to persist values of input fields on page reloads\\n    autoSave: null,\\n    // color is for Safari mask-icon link\\n    color: null,\\n    // itemProp, itemScope, itemType are for\\n    // Microdata support. See http://schema.org/docs/gs.html\\n    itemProp: MUST_USE_ATTRIBUTE,\\n    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,\\n    itemType: MUST_USE_ATTRIBUTE,\\n    // itemID and itemRef are for Microdata support as well but\\n    // only specified in the the WHATWG spec document. See\\n    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\\n    itemID: MUST_USE_ATTRIBUTE,\\n    itemRef: MUST_USE_ATTRIBUTE,\\n    // results show looking glass icon and recent searches on input\\n    // search fields in WebKit/Blink\\n    results: null,\\n    // IE-only attribute that specifies security restrictions on an iframe\\n    // as an alternative to the sandbox attribute on IE<10\\n    security: MUST_USE_ATTRIBUTE,\\n    // IE-only attribute that controls focus behavior\\n    unselectable: MUST_USE_ATTRIBUTE\\n  },\\n  DOMAttributeNames: {\\n    acceptCharset: 'accept-charset',\\n    className: 'class',\\n    htmlFor: 'for',\\n    httpEquiv: 'http-equiv'\\n  },\\n  DOMPropertyNames: {\\n    autoCapitalize: 'autocapitalize',\\n    autoComplete: 'autocomplete',\\n    autoCorrect: 'autocorrect',\\n    autoFocus: 'autofocus',\\n    autoPlay: 'autoplay',\\n    autoSave: 'autosave',\\n    // `encoding` is equivalent to `enctype`, IE8 lacks an `enctype` setter.\\n    // http://www.w3.org/TR/html5/forms.html#dom-fs-encoding\\n    encType: 'encoding',\\n    hrefLang: 'hreflang',\\n    radioGroup: 'radiogroup',\\n    spellCheck: 'spellcheck',\\n    srcDoc: 'srcdoc',\\n    srcSet: 'srcset'\\n  }\\n};\\n\\nmodule.exports = HTMLDOMPropertyConfig;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule LinkedStateMixin\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar ReactLink = require('./ReactLink');\\nvar ReactStateSetters = require('./ReactStateSetters');\\n\\n/**\\n * A simple mixin around ReactLink.forState().\\n */\\nvar LinkedStateMixin = {\\n  /**\\n   * Create a ReactLink that's linked to part of this component's state. The\\n   * ReactLink will have the current value of this.state[key] and will call\\n   * setState() when a change is requested.\\n   *\\n   * @param {string} key state key to update. Note: you may want to use keyOf()\\n   * if you're using Google Closure Compiler advanced mode.\\n   * @return {ReactLink} ReactLink instance linking to the state.\\n   */\\n  linkState: function (key) {\\n    return new ReactLink(this.state[key], ReactStateSetters.createStateKeySetter(this, key));\\n  }\\n};\\n\\nmodule.exports = LinkedStateMixin;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule LinkedValueUtils\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar ReactPropTypes = require('./ReactPropTypes');\\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\\n\\nvar invariant = require('fbjs/lib/invariant');\\nvar warning = require('fbjs/lib/warning');\\n\\nvar hasReadOnlyValue = {\\n  'button': true,\\n  'checkbox': true,\\n  'image': true,\\n  'hidden': true,\\n  'radio': true,\\n  'reset': true,\\n  'submit': true\\n};\\n\\nfunction _assertSingleLink(inputProps) {\\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\\\\'t want to use valueLink and vice versa.') : invariant(false) : undefined;\\n}\\nfunction _assertValueLink(inputProps) {\\n  _assertSingleLink(inputProps);\\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\\\\'t want to use valueLink.') : invariant(false) : undefined;\\n}\\n\\nfunction _assertCheckedLink(inputProps) {\\n  _assertSingleLink(inputProps);\\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\\\\'t want to ' + 'use checkedLink') : invariant(false) : undefined;\\n}\\n\\nvar propTypes = {\\n  value: function (props, propName, componentName) {\\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\\n      return null;\\n    }\\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\\n  },\\n  checked: function (props, propName, componentName) {\\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\\n      return null;\\n    }\\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\\n  },\\n  onChange: ReactPropTypes.func\\n};\\n\\nvar loggedTypeFailures = {};\\nfunction getDeclarationErrorAddendum(owner) {\\n  if (owner) {\\n    var name = owner.getName();\\n    if (name) {\\n      return ' Check the render method of `' + name + '`.';\\n    }\\n  }\\n  return '';\\n}\\n\\n/**\\n * Provide a linked `value` attribute for controlled forms. You should not use\\n * this outside of the ReactDOM controlled form components.\\n */\\nvar LinkedValueUtils = {\\n  checkPropTypes: function (tagName, props, owner) {\\n    for (var propName in propTypes) {\\n      if (propTypes.hasOwnProperty(propName)) {\\n        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);\\n      }\\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\\n        // Only monitor this failure once because there tends to be a lot of the\\n        // same error.\\n        loggedTypeFailures[error.message] = true;\\n\\n        var addendum = getDeclarationErrorAddendum(owner);\\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;\\n      }\\n    }\\n  },\\n\\n  /**\\n   * @param {object} inputProps Props for form component\\n   * @return {*} current value of the input either from value prop or link.\\n   */\\n  getValue: function (inputProps) {\\n    if (inputProps.valueLink) {\\n      _assertValueLink(inputProps);\\n      return inputProps.valueLink.value;\\n    }\\n    return inputProps.value;\\n  },\\n\\n  /**\\n   * @param {object} inputProps Props for form component\\n   * @return {*} current checked status of the input either from checked prop\\n   *             or link.\\n   */\\n  getChecked: function (inputProps) {\\n    if (inputProps.checkedLink) {\\n      _assertCheckedLink(inputProps);\\n      return inputProps.checkedLink.value;\\n    }\\n    return inputProps.checked;\\n  },\\n\\n  /**\\n   * @param {object} inputProps Props for form component\\n   * @param {SyntheticEvent} event change event to handle\\n   */\\n  executeOnChange: function (inputProps, event) {\\n    if (inputProps.valueLink) {\\n      _assertValueLink(inputProps);\\n      return inputProps.valueLink.requestChange(event.target.value);\\n    } else if (inputProps.checkedLink) {\\n      _assertCheckedLink(inputProps);\\n      return inputProps.checkedLink.requestChange(event.target.checked);\\n    } else if (inputProps.onChange) {\\n      return inputProps.onChange.call(undefined, event);\\n    }\\n  }\\n};\\n\\nmodule.exports = LinkedValueUtils;\",\n    \"/**\\n * Copyright 2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule MetaMatchers\\n */\\n\\n'use strict';\\n\\n/**\\n * This modules adds a jasmine matcher toEqualSpecsIn that can be used to\\n * compare the specs in two different \\\"describe\\\" functions and their result.\\n * It can be used to test a test.\\n */\\n\\nfunction getRunnerWithResults(describeFunction) {\\n  if (describeFunction._cachedRunner) {\\n    // Cached result of execution. This is a convenience way to test against\\n    // the same authorative function multiple times.\\n    return describeFunction._cachedRunner;\\n  }\\n  // Patch the current global environment.\\n  var env = new jasmine.Env();\\n  // Execute the tests synchronously.\\n  env.updateInterval = 0;\\n  var outerGetEnv = jasmine.getEnv;\\n  jasmine.getEnv = function () {\\n    return env;\\n  };\\n  // TODO: Bring over matchers from the existing environment.\\n  var runner = env.currentRunner();\\n  try {\\n    env.describe('', describeFunction);\\n    env.execute();\\n  } finally {\\n    // Restore the environment.\\n    jasmine.getEnv = outerGetEnv;\\n  }\\n  describeFunction._cachedRunner = runner;\\n  return runner;\\n}\\n\\nfunction compareSpec(actual, expected) {\\n  if (actual.results().totalCount !== expected.results().totalCount) {\\n    return 'Expected ' + expected.results().totalCount + ' expects, ' + 'but got ' + actual.results().totalCount + ':' + actual.getFullName();\\n  }\\n  return null;\\n}\\n\\nfunction includesDescription(specs, description, startIndex) {\\n  for (var i = startIndex; i < specs.length; i++) {\\n    if (specs[i].description === description) {\\n      return true;\\n    }\\n  }\\n  return false;\\n}\\n\\nfunction compareSpecs(actualSpecs, expectedSpecs) {\\n  for (var i = 0; i < actualSpecs.length && i < expectedSpecs.length; i++) {\\n    var actual = actualSpecs[i];\\n    var expected = expectedSpecs[i];\\n    if (actual.description === expected.description) {\\n      var errorMessage = compareSpec(actual, expected);\\n      if (errorMessage) {\\n        return errorMessage;\\n      }\\n      continue;\\n    } else if (includesDescription(actualSpecs, expected.description, i)) {\\n      return 'Did not expect the spec:' + actualSpecs[i].getFullName();\\n    } else {\\n      return 'Expected an equivalent to:' + expectedSpecs[i].getFullName();\\n    }\\n  }\\n  if (i < actualSpecs.length) {\\n    return 'Did not expect the spec:' + actualSpecs[i].getFullName();\\n  }\\n  if (i < expectedSpecs.length) {\\n    return 'Expected an equivalent to:' + expectedSpecs[i].getFullName();\\n  }\\n  return null;\\n}\\n\\nfunction compareDescription(a, b) {\\n  if (a.description === b.description) {\\n    return 0;\\n  }\\n  return a.description < b.description ? -1 : 1;\\n}\\n\\nfunction compareRunners(actual, expected) {\\n  return compareSpecs(actual.specs().sort(compareDescription), expected.specs().sort(compareDescription));\\n}\\n\\nvar MetaMatchers = {\\n  toEqualSpecsIn: function (expectedDescribeFunction) {\\n    var actualDescribeFunction = this.actual;\\n    if (typeof actualDescribeFunction !== 'function') {\\n      throw Error('toEqualSpecsIn() should be used on a describe function');\\n    }\\n    if (typeof expectedDescribeFunction !== 'function') {\\n      throw Error('toEqualSpecsIn() should be passed a describe function');\\n    }\\n    var actual = getRunnerWithResults(actualDescribeFunction);\\n    var expected = getRunnerWithResults(expectedDescribeFunction);\\n    var errorMessage = compareRunners(actual, expected);\\n    this.message = function () {\\n      return [errorMessage, 'The specs are equal. Expected them to be different.'];\\n    };\\n    return !errorMessage;\\n  }\\n};\\n\\nmodule.exports = MetaMatchers;\",\n    \"/**\\n * Copyright 2014-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule Object.assign\\n */\\n\\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign\\n\\n'use strict';\\n\\nfunction assign(target, sources) {\\n  if (target == null) {\\n    throw new TypeError('Object.assign target cannot be null or undefined');\\n  }\\n\\n  var to = Object(target);\\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\\n\\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\\n    var nextSource = arguments[nextIndex];\\n    if (nextSource == null) {\\n      continue;\\n    }\\n\\n    var from = Object(nextSource);\\n\\n    // We don't currently support accessors nor proxies. Therefore this\\n    // copy cannot throw. If we ever supported this then we must handle\\n    // exceptions and side-effects. We don't support symbols so they won't\\n    // be transferred.\\n\\n    for (var key in from) {\\n      if (hasOwnProperty.call(from, key)) {\\n        to[key] = from[key];\\n      }\\n    }\\n  }\\n\\n  return to;\\n}\\n\\nmodule.exports = assign;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule OrderedMap\\n */\\n\\n'use strict';\\n\\nvar assign = require('./Object.assign');\\nvar invariant = require('fbjs/lib/invariant');\\n\\nvar PREFIX = 'key:';\\n\\n/**\\n * Utility to extract a backing object from an initialization `Array`, allowing\\n * the caller to assist in resolving the unique ID for each entry via the\\n * `keyExtractor` callback. The `keyExtractor` must extract non-empty strings or\\n * numbers.\\n * @param {Array<Object!>} arr Array of items.\\n * @param {function} keyExtractor Extracts a unique key from each item.\\n * @return {Object} Map from unique key to originating value that the key was\\n * extracted from.\\n * @throws Exception if the initialization array has duplicate extracted keys.\\n */\\nfunction extractObjectFromArray(arr, keyExtractor) {\\n  var normalizedObj = {};\\n  for (var i = 0; i < arr.length; i++) {\\n    var item = arr[i];\\n    var key = keyExtractor(item);\\n    assertValidPublicKey(key);\\n    var normalizedKey = PREFIX + key;\\n    !!(normalizedKey in normalizedObj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap: IDs returned by the key extraction function must be unique.') : invariant(false) : undefined;\\n    normalizedObj[normalizedKey] = item;\\n  }\\n  return normalizedObj;\\n}\\n\\n/**\\n * Utility class for mappings with ordering. This class is to be used in an\\n * immutable manner. A `OrderedMap` is very much like the native JavaScript\\n * object, where keys map to values via the `get()` function. Also, like the\\n * native JavaScript object, there is an ordering associated with the mapping.\\n * This class is helpful because it eliminates many of the pitfalls that come\\n * with the native JavaScript ordered mappings. Specifically, there are\\n * inconsistencies with numeric keys in some JavaScript implementations\\n * (enumeration ordering). This class protects against those pitfalls and\\n * provides functional utilities for dealing with these `OrderedMap`s.\\n *\\n * - TODO:\\n * - orderedMergeExclusive: Merges mutually exclusive `OrderedMap`s.\\n * - mapReverse().\\n *\\n * @class {OrderedMap}\\n * @constructor {OrderedMap}\\n * @param {Object} normalizedObj Object that is known to be a defensive copy of\\n * caller supplied data. We require a defensive copy to guard against callers\\n * mutating.  It is also assumed that the keys of `normalizedObj` have been\\n * normalized and do not contain any numeric-appearing strings.\\n * @param {number} computedLength The precomputed length of `_normalizedObj`\\n * keys.\\n * @private\\n */\\nfunction OrderedMapImpl(normalizedObj, computedLength) {\\n  this._normalizedObj = normalizedObj;\\n  this._computedPositions = null;\\n  this.length = computedLength;\\n}\\n\\n/**\\n * Validates a \\\"public\\\" key - that is, one that the public facing API supplies.\\n * The key is then normalized for internal storage. In order to be considered\\n * valid, all keys must be non-empty, defined, non-null strings or numbers.\\n *\\n * @param {string?} key Validates that the key is suitable for use in a\\n * `OrderedMap`.\\n * @throws Error if key is not appropriate for use in `OrderedMap`.\\n */\\nfunction assertValidPublicKey(key) {\\n  !(key !== '' && (typeof key === 'string' || typeof key === 'number')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap: Key must be non-empty, non-null string or number.') : invariant(false) : undefined;\\n}\\n\\n/**\\n * Validates that arguments to range operations are within the correct limits.\\n *\\n * @param {number} start Start of range.\\n * @param {number} length Length of range.\\n * @param {number} actualLen Actual length of range that should not be\\n * exceeded.\\n * @throws Error if range arguments are out of bounds.\\n */\\nfunction assertValidRangeIndices(start, length, actualLen) {\\n  !(typeof start === 'number' && typeof length === 'number' && length >= 0 && start >= 0 && start + length <= actualLen) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap: `mapRange` and `forEachRange` expect non-negative start and ' + 'length arguments within the bounds of the instance.') : invariant(false) : undefined;\\n}\\n\\n/**\\n * Merges two \\\"normalized\\\" objects (objects who's key have been normalized) into\\n * a `OrderedMap`.\\n *\\n * @param {Object} a Object of key value pairs.\\n * @param {Object} b Object of key value pairs.\\n * @return {OrderedMap} new `OrderedMap` that results in merging `a` and `b`.\\n */\\nfunction _fromNormalizedObjects(a, b) {\\n  // Second optional, both must be plain JavaScript objects.\\n  !(a && a.constructor === Object && (!b || b.constructor === Object)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap: Corrupted instance of OrderedMap detected.') : invariant(false) : undefined;\\n\\n  var newSet = {};\\n  var length = 0;\\n  var key;\\n  for (key in a) {\\n    if (a.hasOwnProperty(key)) {\\n      newSet[key] = a[key];\\n      length++;\\n    }\\n  }\\n\\n  for (key in b) {\\n    if (b.hasOwnProperty(key)) {\\n      // Increment length if not already added via first object (a)\\n      if (!(key in newSet)) {\\n        length++;\\n      }\\n      newSet[key] = b[key];\\n    }\\n  }\\n  return new OrderedMapImpl(newSet, length);\\n}\\n\\n/**\\n * Methods for `OrderedMap` instances.\\n *\\n * @lends OrderedMap.prototype\\n * TODO: Make this data structure lazy, unify with LazyArray.\\n * TODO: Unify this with ImmutableObject - it is to be used immutably.\\n * TODO: If so, consider providing `fromObject` API.\\n * TODO: Create faster implementation of merging/mapping from original Array,\\n * without having to first create an object - simply for the sake of merging.\\n */\\nvar OrderedMapMethods = {\\n\\n  /**\\n   * Returns whether or not a given key is present in the map.\\n   *\\n   * @param {string} key Valid string key to lookup membership for.\\n   * @return {boolean} Whether or not `key` is a member of the map.\\n   * @throws Error if provided known invalid key.\\n   */\\n  has: function (key) {\\n    assertValidPublicKey(key);\\n    var normalizedKey = PREFIX + key;\\n    return normalizedKey in this._normalizedObj;\\n  },\\n\\n  /**\\n   * Returns the object for a given key, or `undefined` if not present. To\\n   * distinguish an undefined entry vs not being in the set, use `has()`.\\n   *\\n   * @param {string} key String key to lookup the value for.\\n   * @return {Object?} Object at key `key`, or undefined if not in map.\\n   * @throws Error if provided known invalid key.\\n   */\\n  get: function (key) {\\n    assertValidPublicKey(key);\\n    var normalizedKey = PREFIX + key;\\n    return this.has(key) ? this._normalizedObj[normalizedKey] : undefined;\\n  },\\n\\n  /**\\n   * Merges, appending new keys to the end of the ordering. Keys in `orderedMap`\\n   * that are redundant with `this`, maintain the same ordering index that they\\n   * had in `this`.  This is how standard JavaScript object merging would work.\\n   * If you wish to prepend a `OrderedMap` to the beginning of another\\n   * `OrderedMap` then simply reverse the order of operation. This is the analog\\n   * to `merge(x, y)`.\\n   *\\n   * @param {OrderedMap} orderedMap OrderedMap to merge onto the end.\\n   * @return {OrderedMap} New OrderedMap that represents the result of the\\n   * merge.\\n   */\\n  merge: function (orderedMap) {\\n    !(orderedMap instanceof OrderedMapImpl) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap.merge(...): Expected an OrderedMap instance.') : invariant(false) : undefined;\\n    return _fromNormalizedObjects(this._normalizedObj, orderedMap._normalizedObj);\\n  },\\n\\n  /**\\n   * Functional map API. Returns a new `OrderedMap`.\\n   *\\n   * @param {Function} cb Callback to invoke for each item.\\n   * @param {Object?=} context Context to invoke callback from.\\n   * @return {OrderedMap} OrderedMap that results from mapping.\\n   */\\n  map: function (cb, context) {\\n    return this.mapRange(cb, 0, this.length, context);\\n  },\\n\\n  /**\\n   * The callback `cb` is invoked with the arguments (item, key,\\n   * indexInOriginal).\\n   *\\n   * @param {Function} cb Determines result for each item.\\n   * @param {number} start Start index of map range.\\n   * @param {end} length End index of map range.\\n   * @param {*!?} context Context of callback invocation.\\n   * @return {OrderedMap} OrderedMap resulting from mapping the range.\\n   */\\n  mapRange: function (cb, start, length, context) {\\n    var thisSet = this._normalizedObj;\\n    var newSet = {};\\n    var i = 0;\\n    assertValidRangeIndices(start, length, this.length);\\n    var end = start + length - 1;\\n    for (var key in thisSet) {\\n      if (thisSet.hasOwnProperty(key)) {\\n        if (i >= start) {\\n          if (i > end) {\\n            break;\\n          }\\n          var item = thisSet[key];\\n          newSet[key] = cb.call(context, item, key.substr(PREFIX.length), i);\\n        }\\n        i++;\\n      }\\n    }\\n    return new OrderedMapImpl(newSet, length);\\n  },\\n\\n  /**\\n   * Function filter API. Returns new `OrderedMap`.\\n   *\\n   * @param {Function} cb Callback to invoke for each item.\\n   * @param {Object?=} context Context to invoke callback from.\\n   * @return {OrderedMap} OrderedMap that results from filtering.\\n   */\\n  filter: function (cb, context) {\\n    return this.filterRange(cb, 0, this.length, context);\\n  },\\n\\n  /**\\n   * The callback `cb` is invoked with the arguments (item, key,\\n   * indexInOriginal).\\n   *\\n   * @param {Function} cb Returns true if item should be in result.\\n   * @param {number} start Start index of filter range.\\n   * @param {number} length End index of map range.\\n   * @param {*!?} context Context of callback invocation.\\n   * @return {OrderedMap} OrderedMap resulting from filtering the range.\\n   */\\n  filterRange: function (cb, start, length, context) {\\n    var newSet = {};\\n    var newSetLength = 0;\\n    this.forEachRange(function (item, key, originalIndex) {\\n      if (cb.call(context, item, key, originalIndex)) {\\n        var normalizedKey = PREFIX + key;\\n        newSet[normalizedKey] = item;\\n        newSetLength++;\\n      }\\n    }, start, length);\\n    return new OrderedMapImpl(newSet, newSetLength);\\n  },\\n\\n  forEach: function (cb, context) {\\n    this.forEachRange(cb, 0, this.length, context);\\n  },\\n\\n  forEachRange: function (cb, start, length, context) {\\n    assertValidRangeIndices(start, length, this.length);\\n    var thisSet = this._normalizedObj;\\n    var i = 0;\\n    var end = start + length - 1;\\n    for (var key in thisSet) {\\n      if (thisSet.hasOwnProperty(key)) {\\n        if (i >= start) {\\n          if (i > end) {\\n            break;\\n          }\\n          var item = thisSet[key];\\n          cb.call(context, item, key.substr(PREFIX.length), i);\\n        }\\n        i++;\\n      }\\n    }\\n  },\\n\\n  /**\\n   * Even though `mapRange`/`forEachKeyRange` allow zero length mappings, we'll\\n   * impose an additional restriction here that the length of mapping be greater\\n   * than zero - the only reason is that there are many ways to express length\\n   * zero in terms of two keys and that is confusing.\\n   */\\n  mapKeyRange: function (cb, startKey, endKey, context) {\\n    var startIndex = this.indexOfKey(startKey);\\n    var endIndex = this.indexOfKey(endKey);\\n    !(startIndex !== undefined && endIndex !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mapKeyRange must be given keys that are present.') : invariant(false) : undefined;\\n    !(endIndex >= startIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap.mapKeyRange(...): `endKey` must not come before `startIndex`.') : invariant(false) : undefined;\\n    return this.mapRange(cb, startIndex, endIndex - startIndex + 1, context);\\n  },\\n\\n  forEachKeyRange: function (cb, startKey, endKey, context) {\\n    var startIndex = this.indexOfKey(startKey);\\n    var endIndex = this.indexOfKey(endKey);\\n    !(startIndex !== undefined && endIndex !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'forEachKeyRange must be given keys that are present.') : invariant(false) : undefined;\\n    !(endIndex >= startIndex) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap.forEachKeyRange(...): `endKey` must not come before ' + '`startIndex`.') : invariant(false) : undefined;\\n    this.forEachRange(cb, startIndex, endIndex - startIndex + 1, context);\\n  },\\n\\n  /**\\n   * @param {number} pos Index to search for key at.\\n   * @return {string|undefined} Either the key at index `pos` or undefined if\\n   * not in map.\\n   */\\n  keyAtIndex: function (pos) {\\n    var computedPositions = this._getOrComputePositions();\\n    var keyAtPos = computedPositions.keyByIndex[pos];\\n    return keyAtPos ? keyAtPos.substr(PREFIX.length) : undefined;\\n  },\\n\\n  /**\\n   * @param {string} key String key from which to find the next key.\\n   * @return {string|undefined} Either the next key, or undefined if there is no\\n   * next key.\\n   * @throws Error if `key` is not in this `OrderedMap`.\\n   */\\n  keyAfter: function (key) {\\n    return this.nthKeyAfter(key, 1);\\n  },\\n\\n  /**\\n   * @param {string} key String key from which to find the preceding key.\\n   * @return {string|undefined} Either the preceding key, or undefined if there\\n   * is no preceding.key.\\n   * @throws Error if `key` is not in this `OrderedMap`.\\n   */\\n  keyBefore: function (key) {\\n    return this.nthKeyBefore(key, 1);\\n  },\\n\\n  /**\\n   * @param {string} key String key from which to find a following key.\\n   * @param {number} n Distance to scan forward after `key`.\\n   * @return {string|undefined} Either the nth key after `key`, or undefined if\\n   * there is no next key.\\n   * @throws Error if `key` is not in this `OrderedMap`.\\n   */\\n  nthKeyAfter: function (key, n) {\\n    var curIndex = this.indexOfKey(key);\\n    !(curIndex !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap.nthKeyAfter: The key `%s` does not exist in this instance.', key) : invariant(false) : undefined;\\n    return this.keyAtIndex(curIndex + n);\\n  },\\n\\n  /**\\n   * @param {string} key String key from which to find a preceding key.\\n   * @param {number} n Distance to scan backwards before `key`.\\n   * @return {string|undefined} Either the nth key before `key`, or undefined if\\n   * there is no previous key.\\n   * @throws Error if `key` is not in this `OrderedMap`.\\n   */\\n  nthKeyBefore: function (key, n) {\\n    return this.nthKeyAfter(key, -n);\\n  },\\n\\n  /**\\n   * @param {string} key Key to find the index of.\\n   * @return {number|undefined} Index of the provided key, or `undefined` if the\\n   * key is not found.\\n   */\\n  indexOfKey: function (key) {\\n    assertValidPublicKey(key);\\n    var normalizedKey = PREFIX + key;\\n    var computedPositions = this._getOrComputePositions();\\n    var computedPosition = computedPositions.indexByKey[normalizedKey];\\n    // Just writing it this way to make it clear this is intentional.\\n    return computedPosition === undefined ? undefined : computedPosition;\\n  },\\n\\n  /**\\n   * @return {Array} An ordered array of this object's values.\\n   */\\n  toArray: function () {\\n    var result = [];\\n    var thisSet = this._normalizedObj;\\n    for (var key in thisSet) {\\n      if (thisSet.hasOwnProperty(key)) {\\n        result.push(thisSet[key]);\\n      }\\n    }\\n    return result;\\n  },\\n\\n  /**\\n   * Finds the key at a given position, or indicates via `undefined` that that\\n   * position does not exist in the `OrderedMap`. It is appropriate to return\\n   * undefined, indicating that the key doesn't exist in the `OrderedMap`\\n   * because `undefined` is not ever a valid `OrderedMap` key.\\n   *\\n   * @private\\n   * @return {string?} Name of the item at position `pos`, or `undefined` if\\n   * there is no item at that position.\\n   */\\n  _getOrComputePositions: function () {\\n    // TODO: Entertain computing this at construction time in some less\\n    // performance critical paths.\\n    var computedPositions = this._computedPositions;\\n    if (!computedPositions) {\\n      this._computePositions();\\n    }\\n    return this._computedPositions;\\n  },\\n\\n  /**\\n   * Precomputes the index/key mapping for future lookup. Since `OrderedMap`s\\n   * are immutable, there is only ever a need to perform this once.\\n   * @private\\n   */\\n  _computePositions: function () {\\n    this._computedPositions = {\\n      keyByIndex: {},\\n      indexByKey: {}\\n    };\\n    var keyByIndex = this._computedPositions.keyByIndex;\\n    var indexByKey = this._computedPositions.indexByKey;\\n    var index = 0;\\n    var thisSet = this._normalizedObj;\\n    for (var key in thisSet) {\\n      if (thisSet.hasOwnProperty(key)) {\\n        keyByIndex[index] = key;\\n        indexByKey[key] = index;\\n        index++;\\n      }\\n    }\\n  }\\n};\\n\\nassign(OrderedMapImpl.prototype, OrderedMapMethods);\\n\\nvar OrderedMap = {\\n  from: function (orderedMap) {\\n    !(orderedMap instanceof OrderedMapImpl) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap.from(...): Expected an OrderedMap instance.') : invariant(false) : undefined;\\n    return _fromNormalizedObjects(orderedMap._normalizedObj, null);\\n  },\\n\\n  fromArray: function (arr, keyExtractor) {\\n    !Array.isArray(arr) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap.fromArray(...): First argument must be an array.') : invariant(false) : undefined;\\n    !(typeof keyExtractor === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'OrderedMap.fromArray(...): Second argument must be a function used ' + 'to determine the unique key for each entry.') : invariant(false) : undefined;\\n    return new OrderedMapImpl(extractObjectFromArray(arr, keyExtractor), arr.length);\\n  }\\n};\\n\\nmodule.exports = OrderedMap;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule PooledClass\\n */\\n\\n'use strict';\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\n/**\\n * Static poolers. Several custom versions for each potential number of\\n * arguments. A completely generic pooler is easy to implement, but would\\n * require accessing the `arguments` object. In each of these, `this` refers to\\n * the Class itself, not an instance. If any others are needed, simply add them\\n * here, or in their own files.\\n */\\nvar oneArgumentPooler = function (copyFieldsFrom) {\\n  var Klass = this;\\n  if (Klass.instancePool.length) {\\n    var instance = Klass.instancePool.pop();\\n    Klass.call(instance, copyFieldsFrom);\\n    return instance;\\n  } else {\\n    return new Klass(copyFieldsFrom);\\n  }\\n};\\n\\nvar twoArgumentPooler = function (a1, a2) {\\n  var Klass = this;\\n  if (Klass.instancePool.length) {\\n    var instance = Klass.instancePool.pop();\\n    Klass.call(instance, a1, a2);\\n    return instance;\\n  } else {\\n    return new Klass(a1, a2);\\n  }\\n};\\n\\nvar threeArgumentPooler = function (a1, a2, a3) {\\n  var Klass = this;\\n  if (Klass.instancePool.length) {\\n    var instance = Klass.instancePool.pop();\\n    Klass.call(instance, a1, a2, a3);\\n    return instance;\\n  } else {\\n    return new Klass(a1, a2, a3);\\n  }\\n};\\n\\nvar fourArgumentPooler = function (a1, a2, a3, a4) {\\n  var Klass = this;\\n  if (Klass.instancePool.length) {\\n    var instance = Klass.instancePool.pop();\\n    Klass.call(instance, a1, a2, a3, a4);\\n    return instance;\\n  } else {\\n    return new Klass(a1, a2, a3, a4);\\n  }\\n};\\n\\nvar fiveArgumentPooler = function (a1, a2, a3, a4, a5) {\\n  var Klass = this;\\n  if (Klass.instancePool.length) {\\n    var instance = Klass.instancePool.pop();\\n    Klass.call(instance, a1, a2, a3, a4, a5);\\n    return instance;\\n  } else {\\n    return new Klass(a1, a2, a3, a4, a5);\\n  }\\n};\\n\\nvar standardReleaser = function (instance) {\\n  var Klass = this;\\n  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;\\n  instance.destructor();\\n  if (Klass.instancePool.length < Klass.poolSize) {\\n    Klass.instancePool.push(instance);\\n  }\\n};\\n\\nvar DEFAULT_POOL_SIZE = 10;\\nvar DEFAULT_POOLER = oneArgumentPooler;\\n\\n/**\\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\\n * you give this may have a `poolSize` property, and will look for a\\n * prototypical `destructor` on instances (optional).\\n *\\n * @param {Function} CopyConstructor Constructor that can be used to reset.\\n * @param {Function} pooler Customizable pooler.\\n */\\nvar addPoolingTo = function (CopyConstructor, pooler) {\\n  var NewKlass = CopyConstructor;\\n  NewKlass.instancePool = [];\\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\\n  if (!NewKlass.poolSize) {\\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\\n  }\\n  NewKlass.release = standardReleaser;\\n  return NewKlass;\\n};\\n\\nvar PooledClass = {\\n  addPoolingTo: addPoolingTo,\\n  oneArgumentPooler: oneArgumentPooler,\\n  twoArgumentPooler: twoArgumentPooler,\\n  threeArgumentPooler: threeArgumentPooler,\\n  fourArgumentPooler: fourArgumentPooler,\\n  fiveArgumentPooler: fiveArgumentPooler\\n};\\n\\nmodule.exports = PooledClass;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactBrowserComponentMixin\\n */\\n\\n'use strict';\\n\\nvar ReactInstanceMap = require('./ReactInstanceMap');\\n\\nvar findDOMNode = require('./findDOMNode');\\nvar warning = require('fbjs/lib/warning');\\n\\nvar didWarnKey = '_getDOMNodeDidWarn';\\n\\nvar ReactBrowserComponentMixin = {\\n  /**\\n   * Returns the DOM node rendered by this component.\\n   *\\n   * @return {DOMElement} The root node of this component.\\n   * @final\\n   * @protected\\n   */\\n  getDOMNode: function () {\\n    process.env.NODE_ENV !== 'production' ? warning(this.constructor[didWarnKey], '%s.getDOMNode(...) is deprecated. Please use ' + 'ReactDOM.findDOMNode(instance) instead.', ReactInstanceMap.get(this).getName() || this.tagName || 'Unknown') : undefined;\\n    this.constructor[didWarnKey] = true;\\n    return findDOMNode(this);\\n  }\\n};\\n\\nmodule.exports = ReactBrowserComponentMixin;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactBrowserEventEmitter\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar EventConstants = require('./EventConstants');\\nvar EventPluginHub = require('./EventPluginHub');\\nvar EventPluginRegistry = require('./EventPluginRegistry');\\nvar ReactEventEmitterMixin = require('./ReactEventEmitterMixin');\\nvar ReactPerf = require('./ReactPerf');\\nvar ViewportMetrics = require('./ViewportMetrics');\\n\\nvar assign = require('./Object.assign');\\nvar isEventSupported = require('./isEventSupported');\\n\\n/**\\n * Summary of `ReactBrowserEventEmitter` event handling:\\n *\\n *  - Top-level delegation is used to trap most native browser events. This\\n *    may only occur in the main thread and is the responsibility of\\n *    ReactEventListener, which is injected and can therefore support pluggable\\n *    event sources. This is the only work that occurs in the main thread.\\n *\\n *  - We normalize and de-duplicate events to account for browser quirks. This\\n *    may be done in the worker thread.\\n *\\n *  - Forward these native events (with the associated top-level type used to\\n *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want\\n *    to extract any synthetic events.\\n *\\n *  - The `EventPluginHub` will then process each event by annotating them with\\n *    \\\"dispatches\\\", a sequence of listeners and IDs that care about that event.\\n *\\n *  - The `EventPluginHub` then dispatches the events.\\n *\\n * Overview of React and the event system:\\n *\\n * +------------+    .\\n * |    DOM     |    .\\n * +------------+    .\\n *       |           .\\n *       v           .\\n * +------------+    .\\n * | ReactEvent |    .\\n * |  Listener  |    .\\n * +------------+    .                         +-----------+\\n *       |           .               +--------+|SimpleEvent|\\n *       |           .               |         |Plugin     |\\n * +-----|------+    .               v         +-----------+\\n * |     |      |    .    +--------------+                    +------------+\\n * |     +-----------.--->|EventPluginHub|                    |    Event   |\\n * |            |    .    |              |     +-----------+  | Propagators|\\n * | ReactEvent |    .    |              |     |TapEvent   |  |------------|\\n * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|\\n * |            |    .    |              |     +-----------+  |  utilities |\\n * |     +-----------.--->|              |                    +------------+\\n * |     |      |    .    +--------------+\\n * +-----|------+    .                ^        +-----------+\\n *       |           .                |        |Enter/Leave|\\n *       +           .                +-------+|Plugin     |\\n * +-------------+   .                         +-----------+\\n * | application |   .\\n * |-------------|   .\\n * |             |   .\\n * |             |   .\\n * +-------------+   .\\n *                   .\\n *    React Core     .  General Purpose Event Plugin System\\n */\\n\\nvar alreadyListeningTo = {};\\nvar isMonitoringScrollValue = false;\\nvar reactTopListenersCounter = 0;\\n\\n// For events like 'submit' which don't consistently bubble (which we trap at a\\n// lower node than `document`), binding at `document` would cause duplicate\\n// events so we don't include them here\\nvar topEventMapping = {\\n  topAbort: 'abort',\\n  topBlur: 'blur',\\n  topCanPlay: 'canplay',\\n  topCanPlayThrough: 'canplaythrough',\\n  topChange: 'change',\\n  topClick: 'click',\\n  topCompositionEnd: 'compositionend',\\n  topCompositionStart: 'compositionstart',\\n  topCompositionUpdate: 'compositionupdate',\\n  topContextMenu: 'contextmenu',\\n  topCopy: 'copy',\\n  topCut: 'cut',\\n  topDoubleClick: 'dblclick',\\n  topDrag: 'drag',\\n  topDragEnd: 'dragend',\\n  topDragEnter: 'dragenter',\\n  topDragExit: 'dragexit',\\n  topDragLeave: 'dragleave',\\n  topDragOver: 'dragover',\\n  topDragStart: 'dragstart',\\n  topDrop: 'drop',\\n  topDurationChange: 'durationchange',\\n  topEmptied: 'emptied',\\n  topEncrypted: 'encrypted',\\n  topEnded: 'ended',\\n  topError: 'error',\\n  topFocus: 'focus',\\n  topInput: 'input',\\n  topKeyDown: 'keydown',\\n  topKeyPress: 'keypress',\\n  topKeyUp: 'keyup',\\n  topLoadedData: 'loadeddata',\\n  topLoadedMetadata: 'loadedmetadata',\\n  topLoadStart: 'loadstart',\\n  topMouseDown: 'mousedown',\\n  topMouseMove: 'mousemove',\\n  topMouseOut: 'mouseout',\\n  topMouseOver: 'mouseover',\\n  topMouseUp: 'mouseup',\\n  topPaste: 'paste',\\n  topPause: 'pause',\\n  topPlay: 'play',\\n  topPlaying: 'playing',\\n  topProgress: 'progress',\\n  topRateChange: 'ratechange',\\n  topScroll: 'scroll',\\n  topSeeked: 'seeked',\\n  topSeeking: 'seeking',\\n  topSelectionChange: 'selectionchange',\\n  topStalled: 'stalled',\\n  topSuspend: 'suspend',\\n  topTextInput: 'textInput',\\n  topTimeUpdate: 'timeupdate',\\n  topTouchCancel: 'touchcancel',\\n  topTouchEnd: 'touchend',\\n  topTouchMove: 'touchmove',\\n  topTouchStart: 'touchstart',\\n  topVolumeChange: 'volumechange',\\n  topWaiting: 'waiting',\\n  topWheel: 'wheel'\\n};\\n\\n/**\\n * To ensure no conflicts with other potential React instances on the page\\n */\\nvar topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);\\n\\nfunction getListeningForDocument(mountAt) {\\n  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`\\n  // directly.\\n  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {\\n    mountAt[topListenersIDKey] = reactTopListenersCounter++;\\n    alreadyListeningTo[mountAt[topListenersIDKey]] = {};\\n  }\\n  return alreadyListeningTo[mountAt[topListenersIDKey]];\\n}\\n\\n/**\\n * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For\\n * example:\\n *\\n *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);\\n *\\n * This would allocate a \\\"registration\\\" of `('onClick', myFunction)` on 'myID'.\\n *\\n * @internal\\n */\\nvar ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {\\n\\n  /**\\n   * Injectable event backend\\n   */\\n  ReactEventListener: null,\\n\\n  injection: {\\n    /**\\n     * @param {object} ReactEventListener\\n     */\\n    injectReactEventListener: function (ReactEventListener) {\\n      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);\\n      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;\\n    }\\n  },\\n\\n  /**\\n   * Sets whether or not any created callbacks should be enabled.\\n   *\\n   * @param {boolean} enabled True if callbacks should be enabled.\\n   */\\n  setEnabled: function (enabled) {\\n    if (ReactBrowserEventEmitter.ReactEventListener) {\\n      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);\\n    }\\n  },\\n\\n  /**\\n   * @return {boolean} True if callbacks are enabled.\\n   */\\n  isEnabled: function () {\\n    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());\\n  },\\n\\n  /**\\n   * We listen for bubbled touch events on the document object.\\n   *\\n   * Firefox v8.01 (and possibly others) exhibited strange behavior when\\n   * mounting `onmousemove` events at some node that was not the document\\n   * element. The symptoms were that if your mouse is not moving over something\\n   * contained within that mount point (for example on the background) the\\n   * top-level listeners for `onmousemove` won't be called. However, if you\\n   * register the `mousemove` on the document object, then it will of course\\n   * catch all `mousemove`s. This along with iOS quirks, justifies restricting\\n   * top-level listeners to the document object only, at least for these\\n   * movement types of events and possibly all events.\\n   *\\n   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\\n   *\\n   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but\\n   * they bubble to document.\\n   *\\n   * @param {string} registrationName Name of listener (e.g. `onClick`).\\n   * @param {object} contentDocumentHandle Document which owns the container\\n   */\\n  listenTo: function (registrationName, contentDocumentHandle) {\\n    var mountAt = contentDocumentHandle;\\n    var isListening = getListeningForDocument(mountAt);\\n    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];\\n\\n    var topLevelTypes = EventConstants.topLevelTypes;\\n    for (var i = 0; i < dependencies.length; i++) {\\n      var dependency = dependencies[i];\\n      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {\\n        if (dependency === topLevelTypes.topWheel) {\\n          if (isEventSupported('wheel')) {\\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);\\n          } else if (isEventSupported('mousewheel')) {\\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);\\n          } else {\\n            // Firefox needs to capture a different mouse scroll event.\\n            // @see http://www.quirksmode.org/dom/events/tests/scroll.html\\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);\\n          }\\n        } else if (dependency === topLevelTypes.topScroll) {\\n\\n          if (isEventSupported('scroll', true)) {\\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);\\n          } else {\\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);\\n          }\\n        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {\\n\\n          if (isEventSupported('focus', true)) {\\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);\\n            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);\\n          } else if (isEventSupported('focusin')) {\\n            // IE has `focusin` and `focusout` events which bubble.\\n            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html\\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);\\n            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);\\n          }\\n\\n          // to make sure blur and focus event listeners are only attached once\\n          isListening[topLevelTypes.topBlur] = true;\\n          isListening[topLevelTypes.topFocus] = true;\\n        } else if (topEventMapping.hasOwnProperty(dependency)) {\\n          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);\\n        }\\n\\n        isListening[dependency] = true;\\n      }\\n    }\\n  },\\n\\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\\n    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);\\n  },\\n\\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\\n    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);\\n  },\\n\\n  /**\\n   * Listens to window scroll and resize events. We cache scroll values so that\\n   * application code can access them without triggering reflows.\\n   *\\n   * NOTE: Scroll events do not bubble.\\n   *\\n   * @see http://www.quirksmode.org/dom/events/scroll.html\\n   */\\n  ensureScrollValueMonitoring: function () {\\n    if (!isMonitoringScrollValue) {\\n      var refresh = ViewportMetrics.refreshScrollValues;\\n      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);\\n      isMonitoringScrollValue = true;\\n    }\\n  },\\n\\n  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,\\n\\n  registrationNameModules: EventPluginHub.registrationNameModules,\\n\\n  putListener: EventPluginHub.putListener,\\n\\n  getListener: EventPluginHub.getListener,\\n\\n  deleteListener: EventPluginHub.deleteListener,\\n\\n  deleteAllListeners: EventPluginHub.deleteAllListeners\\n\\n});\\n\\nReactPerf.measureMethods(ReactBrowserEventEmitter, 'ReactBrowserEventEmitter', {\\n  putListener: 'putListener',\\n  deleteListener: 'deleteListener'\\n});\\n\\nmodule.exports = ReactBrowserEventEmitter;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @typechecks\\n * @providesModule ReactCSSTransitionGroupChild\\n */\\n\\n'use strict';\\n\\nvar React = require('./React');\\nvar ReactDOM = require('./ReactDOM');\\n\\nvar CSSCore = require('fbjs/lib/CSSCore');\\nvar ReactTransitionEvents = require('./ReactTransitionEvents');\\n\\nvar onlyChild = require('./onlyChild');\\n\\n// We don't remove the element from the DOM until we receive an animationend or\\n// transitionend event. If the user screws up and forgets to add an animation\\n// their node will be stuck in the DOM forever, so we detect if an animation\\n// does not start and if it doesn't, we just call the end listener immediately.\\nvar TICK = 17;\\n\\nvar ReactCSSTransitionGroupChild = React.createClass({\\n  displayName: 'ReactCSSTransitionGroupChild',\\n\\n  propTypes: {\\n    name: React.PropTypes.oneOfType([React.PropTypes.string, React.PropTypes.shape({\\n      enter: React.PropTypes.string,\\n      leave: React.PropTypes.string,\\n      active: React.PropTypes.string\\n    }), React.PropTypes.shape({\\n      enter: React.PropTypes.string,\\n      enterActive: React.PropTypes.string,\\n      leave: React.PropTypes.string,\\n      leaveActive: React.PropTypes.string,\\n      appear: React.PropTypes.string,\\n      appearActive: React.PropTypes.string\\n    })]).isRequired,\\n\\n    // Once we require timeouts to be specified, we can remove the\\n    // boolean flags (appear etc.) and just accept a number\\n    // or a bool for the timeout flags (appearTimeout etc.)\\n    appear: React.PropTypes.bool,\\n    enter: React.PropTypes.bool,\\n    leave: React.PropTypes.bool,\\n    appearTimeout: React.PropTypes.number,\\n    enterTimeout: React.PropTypes.number,\\n    leaveTimeout: React.PropTypes.number\\n  },\\n\\n  transition: function (animationType, finishCallback, userSpecifiedDelay) {\\n    var node = ReactDOM.findDOMNode(this);\\n\\n    if (!node) {\\n      if (finishCallback) {\\n        finishCallback();\\n      }\\n      return;\\n    }\\n\\n    var className = this.props.name[animationType] || this.props.name + '-' + animationType;\\n    var activeClassName = this.props.name[animationType + 'Active'] || className + '-active';\\n    var timeout = null;\\n\\n    var endListener = function (e) {\\n      if (e && e.target !== node) {\\n        return;\\n      }\\n\\n      clearTimeout(timeout);\\n\\n      CSSCore.removeClass(node, className);\\n      CSSCore.removeClass(node, activeClassName);\\n\\n      ReactTransitionEvents.removeEndEventListener(node, endListener);\\n\\n      // Usually this optional callback is used for informing an owner of\\n      // a leave animation and telling it to remove the child.\\n      if (finishCallback) {\\n        finishCallback();\\n      }\\n    };\\n\\n    CSSCore.addClass(node, className);\\n\\n    // Need to do this to actually trigger a transition.\\n    this.queueClass(activeClassName);\\n\\n    // If the user specified a timeout delay.\\n    if (userSpecifiedDelay) {\\n      // Clean-up the animation after the specified delay\\n      timeout = setTimeout(endListener, userSpecifiedDelay);\\n      this.transitionTimeouts.push(timeout);\\n    } else {\\n      // DEPRECATED: this listener will be removed in a future version of react\\n      ReactTransitionEvents.addEndEventListener(node, endListener);\\n    }\\n  },\\n\\n  queueClass: function (className) {\\n    this.classNameQueue.push(className);\\n\\n    if (!this.timeout) {\\n      this.timeout = setTimeout(this.flushClassNameQueue, TICK);\\n    }\\n  },\\n\\n  flushClassNameQueue: function () {\\n    if (this.isMounted()) {\\n      this.classNameQueue.forEach(CSSCore.addClass.bind(CSSCore, ReactDOM.findDOMNode(this)));\\n    }\\n    this.classNameQueue.length = 0;\\n    this.timeout = null;\\n  },\\n\\n  componentWillMount: function () {\\n    this.classNameQueue = [];\\n    this.transitionTimeouts = [];\\n  },\\n\\n  componentWillUnmount: function () {\\n    if (this.timeout) {\\n      clearTimeout(this.timeout);\\n    }\\n    this.transitionTimeouts.forEach(function (timeout) {\\n      clearTimeout(timeout);\\n    });\\n  },\\n\\n  componentWillAppear: function (done) {\\n    if (this.props.appear) {\\n      this.transition('appear', done, this.props.appearTimeout);\\n    } else {\\n      done();\\n    }\\n  },\\n\\n  componentWillEnter: function (done) {\\n    if (this.props.enter) {\\n      this.transition('enter', done, this.props.enterTimeout);\\n    } else {\\n      done();\\n    }\\n  },\\n\\n  componentWillLeave: function (done) {\\n    if (this.props.leave) {\\n      this.transition('leave', done, this.props.leaveTimeout);\\n    } else {\\n      done();\\n    }\\n  },\\n\\n  render: function () {\\n    return onlyChild(this.props.children);\\n  }\\n});\\n\\nmodule.exports = ReactCSSTransitionGroupChild;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @typechecks\\n * @providesModule ReactCSSTransitionGroup\\n */\\n\\n'use strict';\\n\\nvar React = require('./React');\\n\\nvar assign = require('./Object.assign');\\n\\nvar ReactTransitionGroup = require('./ReactTransitionGroup');\\nvar ReactCSSTransitionGroupChild = require('./ReactCSSTransitionGroupChild');\\n\\nfunction createTransitionTimeoutPropValidator(transitionType) {\\n  var timeoutPropName = 'transition' + transitionType + 'Timeout';\\n  var enabledPropName = 'transition' + transitionType;\\n\\n  return function (props) {\\n    // If the transition is enabled\\n    if (props[enabledPropName]) {\\n      // If no timeout duration is provided\\n      if (props[timeoutPropName] == null) {\\n        return new Error(timeoutPropName + ' wasn\\\\'t supplied to ReactCSSTransitionGroup: ' + 'this can cause unreliable animations and won\\\\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.');\\n\\n        // If the duration isn't a number\\n      } else if (typeof props[timeoutPropName] !== 'number') {\\n          return new Error(timeoutPropName + ' must be a number (in milliseconds)');\\n        }\\n    }\\n  };\\n}\\n\\nvar ReactCSSTransitionGroup = React.createClass({\\n  displayName: 'ReactCSSTransitionGroup',\\n\\n  propTypes: {\\n    transitionName: ReactCSSTransitionGroupChild.propTypes.name,\\n\\n    transitionAppear: React.PropTypes.bool,\\n    transitionEnter: React.PropTypes.bool,\\n    transitionLeave: React.PropTypes.bool,\\n    transitionAppearTimeout: createTransitionTimeoutPropValidator('Appear'),\\n    transitionEnterTimeout: createTransitionTimeoutPropValidator('Enter'),\\n    transitionLeaveTimeout: createTransitionTimeoutPropValidator('Leave')\\n  },\\n\\n  getDefaultProps: function () {\\n    return {\\n      transitionAppear: false,\\n      transitionEnter: true,\\n      transitionLeave: true\\n    };\\n  },\\n\\n  _wrapChild: function (child) {\\n    // We need to provide this childFactory so that\\n    // ReactCSSTransitionGroupChild can receive updates to name, enter, and\\n    // leave while it is leaving.\\n    return React.createElement(ReactCSSTransitionGroupChild, {\\n      name: this.props.transitionName,\\n      appear: this.props.transitionAppear,\\n      enter: this.props.transitionEnter,\\n      leave: this.props.transitionLeave,\\n      appearTimeout: this.props.transitionAppearTimeout,\\n      enterTimeout: this.props.transitionEnterTimeout,\\n      leaveTimeout: this.props.transitionLeaveTimeout\\n    }, child);\\n  },\\n\\n  render: function () {\\n    return React.createElement(ReactTransitionGroup, assign({}, this.props, { childFactory: this._wrapChild }));\\n  }\\n});\\n\\nmodule.exports = ReactCSSTransitionGroup;\",\n    \"/**\\n * Copyright 2014-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactChildReconciler\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar ReactReconciler = require('./ReactReconciler');\\n\\nvar instantiateReactComponent = require('./instantiateReactComponent');\\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\\nvar traverseAllChildren = require('./traverseAllChildren');\\nvar warning = require('fbjs/lib/warning');\\n\\nfunction instantiateChild(childInstances, child, name) {\\n  // We found a component instance.\\n  var keyUnique = childInstances[name] === undefined;\\n  if (process.env.NODE_ENV !== 'production') {\\n    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;\\n  }\\n  if (child != null && keyUnique) {\\n    childInstances[name] = instantiateReactComponent(child, null);\\n  }\\n}\\n\\n/**\\n * ReactChildReconciler provides helpers for initializing or updating a set of\\n * children. Its output is suitable for passing it onto ReactMultiChild which\\n * does diffed reordering and insertion.\\n */\\nvar ReactChildReconciler = {\\n  /**\\n   * Generates a \\\"mount image\\\" for each of the supplied children. In the case\\n   * of `ReactDOMComponent`, a mount image is a string of markup.\\n   *\\n   * @param {?object} nestedChildNodes Nested child maps.\\n   * @return {?object} A set of child instances.\\n   * @internal\\n   */\\n  instantiateChildren: function (nestedChildNodes, transaction, context) {\\n    if (nestedChildNodes == null) {\\n      return null;\\n    }\\n    var childInstances = {};\\n    traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);\\n    return childInstances;\\n  },\\n\\n  /**\\n   * Updates the rendered children and returns a new set of children.\\n   *\\n   * @param {?object} prevChildren Previously initialized set of children.\\n   * @param {?object} nextChildren Flat child element maps.\\n   * @param {ReactReconcileTransaction} transaction\\n   * @param {object} context\\n   * @return {?object} A new set of child instances.\\n   * @internal\\n   */\\n  updateChildren: function (prevChildren, nextChildren, transaction, context) {\\n    // We currently don't have a way to track moves here but if we use iterators\\n    // instead of for..in we can zip the iterators and check if an item has\\n    // moved.\\n    // TODO: If nothing has changed, return the prevChildren object so that we\\n    // can quickly bailout if nothing has changed.\\n    if (!nextChildren && !prevChildren) {\\n      return null;\\n    }\\n    var name;\\n    for (name in nextChildren) {\\n      if (!nextChildren.hasOwnProperty(name)) {\\n        continue;\\n      }\\n      var prevChild = prevChildren && prevChildren[name];\\n      var prevElement = prevChild && prevChild._currentElement;\\n      var nextElement = nextChildren[name];\\n      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {\\n        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);\\n        nextChildren[name] = prevChild;\\n      } else {\\n        if (prevChild) {\\n          ReactReconciler.unmountComponent(prevChild, name);\\n        }\\n        // The child must be instantiated before it's mounted.\\n        var nextChildInstance = instantiateReactComponent(nextElement, null);\\n        nextChildren[name] = nextChildInstance;\\n      }\\n    }\\n    // Unmount children that are no longer present.\\n    for (name in prevChildren) {\\n      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\\n        ReactReconciler.unmountComponent(prevChildren[name]);\\n      }\\n    }\\n    return nextChildren;\\n  },\\n\\n  /**\\n   * Unmounts all rendered children. This should be used to clean up children\\n   * when this component is unmounted.\\n   *\\n   * @param {?object} renderedChildren Previously initialized set of children.\\n   * @internal\\n   */\\n  unmountChildren: function (renderedChildren) {\\n    for (var name in renderedChildren) {\\n      if (renderedChildren.hasOwnProperty(name)) {\\n        var renderedChild = renderedChildren[name];\\n        ReactReconciler.unmountComponent(renderedChild);\\n      }\\n    }\\n  }\\n\\n};\\n\\nmodule.exports = ReactChildReconciler;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactChildren\\n */\\n\\n'use strict';\\n\\nvar PooledClass = require('./PooledClass');\\nvar ReactElement = require('./ReactElement');\\n\\nvar emptyFunction = require('fbjs/lib/emptyFunction');\\nvar traverseAllChildren = require('./traverseAllChildren');\\n\\nvar twoArgumentPooler = PooledClass.twoArgumentPooler;\\nvar fourArgumentPooler = PooledClass.fourArgumentPooler;\\n\\nvar userProvidedKeyEscapeRegex = /\\\\/(?!\\\\/)/g;\\nfunction escapeUserProvidedKey(text) {\\n  return ('' + text).replace(userProvidedKeyEscapeRegex, '//');\\n}\\n\\n/**\\n * PooledClass representing the bookkeeping associated with performing a child\\n * traversal. Allows avoiding binding callbacks.\\n *\\n * @constructor ForEachBookKeeping\\n * @param {!function} forEachFunction Function to perform traversal with.\\n * @param {?*} forEachContext Context to perform context with.\\n */\\nfunction ForEachBookKeeping(forEachFunction, forEachContext) {\\n  this.func = forEachFunction;\\n  this.context = forEachContext;\\n  this.count = 0;\\n}\\nForEachBookKeeping.prototype.destructor = function () {\\n  this.func = null;\\n  this.context = null;\\n  this.count = 0;\\n};\\nPooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);\\n\\nfunction forEachSingleChild(bookKeeping, child, name) {\\n  var func = bookKeeping.func;\\n  var context = bookKeeping.context;\\n\\n  func.call(context, child, bookKeeping.count++);\\n}\\n\\n/**\\n * Iterates through children that are typically specified as `props.children`.\\n *\\n * The provided forEachFunc(child, index) will be called for each\\n * leaf child.\\n *\\n * @param {?*} children Children tree container.\\n * @param {function(*, int)} forEachFunc\\n * @param {*} forEachContext Context for forEachContext.\\n */\\nfunction forEachChildren(children, forEachFunc, forEachContext) {\\n  if (children == null) {\\n    return children;\\n  }\\n  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);\\n  traverseAllChildren(children, forEachSingleChild, traverseContext);\\n  ForEachBookKeeping.release(traverseContext);\\n}\\n\\n/**\\n * PooledClass representing the bookkeeping associated with performing a child\\n * mapping. Allows avoiding binding callbacks.\\n *\\n * @constructor MapBookKeeping\\n * @param {!*} mapResult Object containing the ordered map of results.\\n * @param {!function} mapFunction Function to perform mapping with.\\n * @param {?*} mapContext Context to perform mapping with.\\n */\\nfunction MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {\\n  this.result = mapResult;\\n  this.keyPrefix = keyPrefix;\\n  this.func = mapFunction;\\n  this.context = mapContext;\\n  this.count = 0;\\n}\\nMapBookKeeping.prototype.destructor = function () {\\n  this.result = null;\\n  this.keyPrefix = null;\\n  this.func = null;\\n  this.context = null;\\n  this.count = 0;\\n};\\nPooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);\\n\\nfunction mapSingleChildIntoContext(bookKeeping, child, childKey) {\\n  var result = bookKeeping.result;\\n  var keyPrefix = bookKeeping.keyPrefix;\\n  var func = bookKeeping.func;\\n  var context = bookKeeping.context;\\n\\n  var mappedChild = func.call(context, child, bookKeeping.count++);\\n  if (Array.isArray(mappedChild)) {\\n    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);\\n  } else if (mappedChild != null) {\\n    if (ReactElement.isValidElement(mappedChild)) {\\n      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,\\n      // Keep both the (mapped) and old keys if they differ, just as\\n      // traverseAllChildren used to do for objects as children\\n      keyPrefix + (mappedChild !== child ? escapeUserProvidedKey(mappedChild.key || '') + '/' : '') + childKey);\\n    }\\n    result.push(mappedChild);\\n  }\\n}\\n\\nfunction mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\\n  var escapedPrefix = '';\\n  if (prefix != null) {\\n    escapedPrefix = escapeUserProvidedKey(prefix) + '/';\\n  }\\n  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);\\n  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\\n  MapBookKeeping.release(traverseContext);\\n}\\n\\n/**\\n * Maps children that are typically specified as `props.children`.\\n *\\n * The provided mapFunction(child, key, index) will be called for each\\n * leaf child.\\n *\\n * @param {?*} children Children tree container.\\n * @param {function(*, int)} func The map function.\\n * @param {*} context Context for mapFunction.\\n * @return {object} Object containing the ordered map of results.\\n */\\nfunction mapChildren(children, func, context) {\\n  if (children == null) {\\n    return children;\\n  }\\n  var result = [];\\n  mapIntoWithKeyPrefixInternal(children, result, null, func, context);\\n  return result;\\n}\\n\\nfunction forEachSingleChildDummy(traverseContext, child, name) {\\n  return null;\\n}\\n\\n/**\\n * Count the number of children that are typically specified as\\n * `props.children`.\\n *\\n * @param {?*} children Children tree container.\\n * @return {number} The number of children.\\n */\\nfunction countChildren(children, context) {\\n  return traverseAllChildren(children, forEachSingleChildDummy, null);\\n}\\n\\n/**\\n * Flatten a children object (typically specified as `props.children`) and\\n * return an array with appropriately re-keyed children.\\n */\\nfunction toArray(children) {\\n  var result = [];\\n  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);\\n  return result;\\n}\\n\\nvar ReactChildren = {\\n  forEach: forEachChildren,\\n  map: mapChildren,\\n  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,\\n  count: countChildren,\\n  toArray: toArray\\n};\\n\\nmodule.exports = ReactChildren;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactClass\\n */\\n\\n'use strict';\\n\\nvar ReactComponent = require('./ReactComponent');\\nvar ReactElement = require('./ReactElement');\\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\\n\\nvar assign = require('./Object.assign');\\nvar emptyObject = require('fbjs/lib/emptyObject');\\nvar invariant = require('fbjs/lib/invariant');\\nvar keyMirror = require('fbjs/lib/keyMirror');\\nvar keyOf = require('fbjs/lib/keyOf');\\nvar warning = require('fbjs/lib/warning');\\n\\nvar MIXINS_KEY = keyOf({ mixins: null });\\n\\n/**\\n * Policies that describe methods in `ReactClassInterface`.\\n */\\nvar SpecPolicy = keyMirror({\\n  /**\\n   * These methods may be defined only once by the class specification or mixin.\\n   */\\n  DEFINE_ONCE: null,\\n  /**\\n   * These methods may be defined by both the class specification and mixins.\\n   * Subsequent definitions will be chained. These methods must return void.\\n   */\\n  DEFINE_MANY: null,\\n  /**\\n   * These methods are overriding the base class.\\n   */\\n  OVERRIDE_BASE: null,\\n  /**\\n   * These methods are similar to DEFINE_MANY, except we assume they return\\n   * objects. We try to merge the keys of the return values of all the mixed in\\n   * functions. If there is a key conflict we throw.\\n   */\\n  DEFINE_MANY_MERGED: null\\n});\\n\\nvar injectedMixins = [];\\n\\nvar warnedSetProps = false;\\nfunction warnSetProps() {\\n  if (!warnedSetProps) {\\n    warnedSetProps = true;\\n    process.env.NODE_ENV !== 'production' ? warning(false, 'setProps(...) and replaceProps(...) are deprecated. ' + 'Instead, call render again at the top level.') : undefined;\\n  }\\n}\\n\\n/**\\n * Composite components are higher-level components that compose other composite\\n * or native components.\\n *\\n * To create a new type of `ReactClass`, pass a specification of\\n * your new class to `React.createClass`. The only requirement of your class\\n * specification is that you implement a `render` method.\\n *\\n *   var MyComponent = React.createClass({\\n *     render: function() {\\n *       return <div>Hello World</div>;\\n *     }\\n *   });\\n *\\n * The class specification supports a specific protocol of methods that have\\n * special meaning (e.g. `render`). See `ReactClassInterface` for\\n * more the comprehensive protocol. Any other properties and methods in the\\n * class specification will be available on the prototype.\\n *\\n * @interface ReactClassInterface\\n * @internal\\n */\\nvar ReactClassInterface = {\\n\\n  /**\\n   * An array of Mixin objects to include when defining your component.\\n   *\\n   * @type {array}\\n   * @optional\\n   */\\n  mixins: SpecPolicy.DEFINE_MANY,\\n\\n  /**\\n   * An object containing properties and methods that should be defined on\\n   * the component's constructor instead of its prototype (static methods).\\n   *\\n   * @type {object}\\n   * @optional\\n   */\\n  statics: SpecPolicy.DEFINE_MANY,\\n\\n  /**\\n   * Definition of prop types for this component.\\n   *\\n   * @type {object}\\n   * @optional\\n   */\\n  propTypes: SpecPolicy.DEFINE_MANY,\\n\\n  /**\\n   * Definition of context types for this component.\\n   *\\n   * @type {object}\\n   * @optional\\n   */\\n  contextTypes: SpecPolicy.DEFINE_MANY,\\n\\n  /**\\n   * Definition of context types this component sets for its children.\\n   *\\n   * @type {object}\\n   * @optional\\n   */\\n  childContextTypes: SpecPolicy.DEFINE_MANY,\\n\\n  // ==== Definition methods ====\\n\\n  /**\\n   * Invoked when the component is mounted. Values in the mapping will be set on\\n   * `this.props` if that prop is not specified (i.e. using an `in` check).\\n   *\\n   * This method is invoked before `getInitialState` and therefore cannot rely\\n   * on `this.state` or use `this.setState`.\\n   *\\n   * @return {object}\\n   * @optional\\n   */\\n  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,\\n\\n  /**\\n   * Invoked once before the component is mounted. The return value will be used\\n   * as the initial value of `this.state`.\\n   *\\n   *   getInitialState: function() {\\n   *     return {\\n   *       isOn: false,\\n   *       fooBaz: new BazFoo()\\n   *     }\\n   *   }\\n   *\\n   * @return {object}\\n   * @optional\\n   */\\n  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,\\n\\n  /**\\n   * @return {object}\\n   * @optional\\n   */\\n  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,\\n\\n  /**\\n   * Uses props from `this.props` and state from `this.state` to render the\\n   * structure of the component.\\n   *\\n   * No guarantees are made about when or how often this method is invoked, so\\n   * it must not have side effects.\\n   *\\n   *   render: function() {\\n   *     var name = this.props.name;\\n   *     return <div>Hello, {name}!</div>;\\n   *   }\\n   *\\n   * @return {ReactComponent}\\n   * @nosideeffects\\n   * @required\\n   */\\n  render: SpecPolicy.DEFINE_ONCE,\\n\\n  // ==== Delegate methods ====\\n\\n  /**\\n   * Invoked when the component is initially created and about to be mounted.\\n   * This may have side effects, but any external subscriptions or data created\\n   * by this method must be cleaned up in `componentWillUnmount`.\\n   *\\n   * @optional\\n   */\\n  componentWillMount: SpecPolicy.DEFINE_MANY,\\n\\n  /**\\n   * Invoked when the component has been mounted and has a DOM representation.\\n   * However, there is no guarantee that the DOM node is in the document.\\n   *\\n   * Use this as an opportunity to operate on the DOM when the component has\\n   * been mounted (initialized and rendered) for the first time.\\n   *\\n   * @param {DOMElement} rootNode DOM element representing the component.\\n   * @optional\\n   */\\n  componentDidMount: SpecPolicy.DEFINE_MANY,\\n\\n  /**\\n   * Invoked before the component receives new props.\\n   *\\n   * Use this as an opportunity to react to a prop transition by updating the\\n   * state using `this.setState`. Current props are accessed via `this.props`.\\n   *\\n   *   componentWillReceiveProps: function(nextProps, nextContext) {\\n   *     this.setState({\\n   *       likesIncreasing: nextProps.likeCount > this.props.likeCount\\n   *     });\\n   *   }\\n   *\\n   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\\n   * transition may cause a state change, but the opposite is not true. If you\\n   * need it, you are probably looking for `componentWillUpdate`.\\n   *\\n   * @param {object} nextProps\\n   * @optional\\n   */\\n  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,\\n\\n  /**\\n   * Invoked while deciding if the component should be updated as a result of\\n   * receiving new props, state and/or context.\\n   *\\n   * Use this as an opportunity to `return false` when you're certain that the\\n   * transition to the new props/state/context will not require a component\\n   * update.\\n   *\\n   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\\n   *     return !equal(nextProps, this.props) ||\\n   *       !equal(nextState, this.state) ||\\n   *       !equal(nextContext, this.context);\\n   *   }\\n   *\\n   * @param {object} nextProps\\n   * @param {?object} nextState\\n   * @param {?object} nextContext\\n   * @return {boolean} True if the component should update.\\n   * @optional\\n   */\\n  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,\\n\\n  /**\\n   * Invoked when the component is about to update due to a transition from\\n   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\\n   * and `nextContext`.\\n   *\\n   * Use this as an opportunity to perform preparation before an update occurs.\\n   *\\n   * NOTE: You **cannot** use `this.setState()` in this method.\\n   *\\n   * @param {object} nextProps\\n   * @param {?object} nextState\\n   * @param {?object} nextContext\\n   * @param {ReactReconcileTransaction} transaction\\n   * @optional\\n   */\\n  componentWillUpdate: SpecPolicy.DEFINE_MANY,\\n\\n  /**\\n   * Invoked when the component's DOM representation has been updated.\\n   *\\n   * Use this as an opportunity to operate on the DOM when the component has\\n   * been updated.\\n   *\\n   * @param {object} prevProps\\n   * @param {?object} prevState\\n   * @param {?object} prevContext\\n   * @param {DOMElement} rootNode DOM element representing the component.\\n   * @optional\\n   */\\n  componentDidUpdate: SpecPolicy.DEFINE_MANY,\\n\\n  /**\\n   * Invoked when the component is about to be removed from its parent and have\\n   * its DOM representation destroyed.\\n   *\\n   * Use this as an opportunity to deallocate any external resources.\\n   *\\n   * NOTE: There is no `componentDidUnmount` since your component will have been\\n   * destroyed by that point.\\n   *\\n   * @optional\\n   */\\n  componentWillUnmount: SpecPolicy.DEFINE_MANY,\\n\\n  // ==== Advanced methods ====\\n\\n  /**\\n   * Updates the component's currently mounted DOM representation.\\n   *\\n   * By default, this implements React's rendering and reconciliation algorithm.\\n   * Sophisticated clients may wish to override this.\\n   *\\n   * @param {ReactReconcileTransaction} transaction\\n   * @internal\\n   * @overridable\\n   */\\n  updateComponent: SpecPolicy.OVERRIDE_BASE\\n\\n};\\n\\n/**\\n * Mapping from class specification keys to special processing functions.\\n *\\n * Although these are declared like instance properties in the specification\\n * when defining classes using `React.createClass`, they are actually static\\n * and are accessible on the constructor instead of the prototype. Despite\\n * being static, they must be defined outside of the \\\"statics\\\" key under\\n * which all other static methods are defined.\\n */\\nvar RESERVED_SPEC_KEYS = {\\n  displayName: function (Constructor, displayName) {\\n    Constructor.displayName = displayName;\\n  },\\n  mixins: function (Constructor, mixins) {\\n    if (mixins) {\\n      for (var i = 0; i < mixins.length; i++) {\\n        mixSpecIntoComponent(Constructor, mixins[i]);\\n      }\\n    }\\n  },\\n  childContextTypes: function (Constructor, childContextTypes) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);\\n    }\\n    Constructor.childContextTypes = assign({}, Constructor.childContextTypes, childContextTypes);\\n  },\\n  contextTypes: function (Constructor, contextTypes) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);\\n    }\\n    Constructor.contextTypes = assign({}, Constructor.contextTypes, contextTypes);\\n  },\\n  /**\\n   * Special case getDefaultProps which should move into statics but requires\\n   * automatic merging.\\n   */\\n  getDefaultProps: function (Constructor, getDefaultProps) {\\n    if (Constructor.getDefaultProps) {\\n      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);\\n    } else {\\n      Constructor.getDefaultProps = getDefaultProps;\\n    }\\n  },\\n  propTypes: function (Constructor, propTypes) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);\\n    }\\n    Constructor.propTypes = assign({}, Constructor.propTypes, propTypes);\\n  },\\n  statics: function (Constructor, statics) {\\n    mixStaticSpecIntoComponent(Constructor, statics);\\n  },\\n  autobind: function () {} };\\n\\n// noop\\nfunction validateTypeDef(Constructor, typeDef, location) {\\n  for (var propName in typeDef) {\\n    if (typeDef.hasOwnProperty(propName)) {\\n      // use a warning instead of an invariant so components\\n      // don't show up in prod but not in __DEV__\\n      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : undefined;\\n    }\\n  }\\n}\\n\\nfunction validateMethodOverride(proto, name) {\\n  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;\\n\\n  // Disallow overriding of base class methods unless explicitly allowed.\\n  if (ReactClassMixin.hasOwnProperty(name)) {\\n    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name) : invariant(false) : undefined;\\n  }\\n\\n  // Disallow defining methods more than once unless explicitly allowed.\\n  if (proto.hasOwnProperty(name)) {\\n    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name) : invariant(false) : undefined;\\n  }\\n}\\n\\n/**\\n * Mixin helper which handles policy validation and reserved\\n * specification keys when building React classses.\\n */\\nfunction mixSpecIntoComponent(Constructor, spec) {\\n  if (!spec) {\\n    return;\\n  }\\n\\n  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\\\'re attempting to ' + 'use a component class as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;\\n  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\\\\'re attempting to ' + 'use a component as a mixin. Instead, just use a regular object.') : invariant(false) : undefined;\\n\\n  var proto = Constructor.prototype;\\n\\n  // By handling mixins before any other properties, we ensure the same\\n  // chaining order is applied to methods with DEFINE_MANY policy, whether\\n  // mixins are listed before or after these methods in the spec.\\n  if (spec.hasOwnProperty(MIXINS_KEY)) {\\n    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\\n  }\\n\\n  for (var name in spec) {\\n    if (!spec.hasOwnProperty(name)) {\\n      continue;\\n    }\\n\\n    if (name === MIXINS_KEY) {\\n      // We have already handled mixins in a special case above.\\n      continue;\\n    }\\n\\n    var property = spec[name];\\n    validateMethodOverride(proto, name);\\n\\n    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\\n      RESERVED_SPEC_KEYS[name](Constructor, property);\\n    } else {\\n      // Setup methods on prototype:\\n      // The following member methods should not be automatically bound:\\n      // 1. Expected ReactClass methods (in the \\\"interface\\\").\\n      // 2. Overridden methods (that were mixed in).\\n      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\\n      var isAlreadyDefined = proto.hasOwnProperty(name);\\n      var isFunction = typeof property === 'function';\\n      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\\n\\n      if (shouldAutoBind) {\\n        if (!proto.__reactAutoBindMap) {\\n          proto.__reactAutoBindMap = {};\\n        }\\n        proto.__reactAutoBindMap[name] = property;\\n        proto[name] = property;\\n      } else {\\n        if (isAlreadyDefined) {\\n          var specPolicy = ReactClassInterface[name];\\n\\n          // These cases should already be caught by validateMethodOverride.\\n          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name) : invariant(false) : undefined;\\n\\n          // For methods which are defined more than once, call the existing\\n          // methods before calling the new property, merging if appropriate.\\n          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {\\n            proto[name] = createMergedResultFunction(proto[name], property);\\n          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {\\n            proto[name] = createChainedFunction(proto[name], property);\\n          }\\n        } else {\\n          proto[name] = property;\\n          if (process.env.NODE_ENV !== 'production') {\\n            // Add verbose displayName to the function, which helps when looking\\n            // at profiling tools.\\n            if (typeof property === 'function' && spec.displayName) {\\n              proto[name].displayName = spec.displayName + '_' + name;\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\\nfunction mixStaticSpecIntoComponent(Constructor, statics) {\\n  if (!statics) {\\n    return;\\n  }\\n  for (var name in statics) {\\n    var property = statics[name];\\n    if (!statics.hasOwnProperty(name)) {\\n      continue;\\n    }\\n\\n    var isReserved = (name in RESERVED_SPEC_KEYS);\\n    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\\\\'t be on the \\\"statics\\\" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name) : invariant(false) : undefined;\\n\\n    var isInherited = (name in Constructor);\\n    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name) : invariant(false) : undefined;\\n    Constructor[name] = property;\\n  }\\n}\\n\\n/**\\n * Merge two objects, but throw if both contain the same key.\\n *\\n * @param {object} one The first object, which is mutated.\\n * @param {object} two The second object\\n * @return {object} one after it has been mutated to contain everything in two.\\n */\\nfunction mergeIntoWithNoDuplicateKeys(one, two) {\\n  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : invariant(false) : undefined;\\n\\n  for (var key in two) {\\n    if (two.hasOwnProperty(key)) {\\n      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key) : invariant(false) : undefined;\\n      one[key] = two[key];\\n    }\\n  }\\n  return one;\\n}\\n\\n/**\\n * Creates a function that invokes two functions and merges their return values.\\n *\\n * @param {function} one Function to invoke first.\\n * @param {function} two Function to invoke second.\\n * @return {function} Function that invokes the two argument functions.\\n * @private\\n */\\nfunction createMergedResultFunction(one, two) {\\n  return function mergedResult() {\\n    var a = one.apply(this, arguments);\\n    var b = two.apply(this, arguments);\\n    if (a == null) {\\n      return b;\\n    } else if (b == null) {\\n      return a;\\n    }\\n    var c = {};\\n    mergeIntoWithNoDuplicateKeys(c, a);\\n    mergeIntoWithNoDuplicateKeys(c, b);\\n    return c;\\n  };\\n}\\n\\n/**\\n * Creates a function that invokes two functions and ignores their return vales.\\n *\\n * @param {function} one Function to invoke first.\\n * @param {function} two Function to invoke second.\\n * @return {function} Function that invokes the two argument functions.\\n * @private\\n */\\nfunction createChainedFunction(one, two) {\\n  return function chainedFunction() {\\n    one.apply(this, arguments);\\n    two.apply(this, arguments);\\n  };\\n}\\n\\n/**\\n * Binds a method to the component.\\n *\\n * @param {object} component Component whose method is going to be bound.\\n * @param {function} method Method to be bound.\\n * @return {function} The bound method.\\n */\\nfunction bindAutoBindMethod(component, method) {\\n  var boundMethod = method.bind(component);\\n  if (process.env.NODE_ENV !== 'production') {\\n    boundMethod.__reactBoundContext = component;\\n    boundMethod.__reactBoundMethod = method;\\n    boundMethod.__reactBoundArguments = null;\\n    var componentName = component.constructor.displayName;\\n    var _bind = boundMethod.bind;\\n    /* eslint-disable block-scoped-var, no-undef */\\n    boundMethod.bind = function (newThis) {\\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\\n        args[_key - 1] = arguments[_key];\\n      }\\n\\n      // User is trying to bind() an autobound method; we effectively will\\n      // ignore the value of \\\"this\\\" that the user is trying to use, so\\n      // let's warn.\\n      if (newThis !== component && newThis !== null) {\\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : undefined;\\n      } else if (!args.length) {\\n        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : undefined;\\n        return boundMethod;\\n      }\\n      var reboundMethod = _bind.apply(boundMethod, arguments);\\n      reboundMethod.__reactBoundContext = component;\\n      reboundMethod.__reactBoundMethod = method;\\n      reboundMethod.__reactBoundArguments = args;\\n      return reboundMethod;\\n      /* eslint-enable */\\n    };\\n  }\\n  return boundMethod;\\n}\\n\\n/**\\n * Binds all auto-bound methods in a component.\\n *\\n * @param {object} component Component whose method is going to be bound.\\n */\\nfunction bindAutoBindMethods(component) {\\n  for (var autoBindKey in component.__reactAutoBindMap) {\\n    if (component.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {\\n      var method = component.__reactAutoBindMap[autoBindKey];\\n      component[autoBindKey] = bindAutoBindMethod(component, method);\\n    }\\n  }\\n}\\n\\n/**\\n * Add more to the ReactClass base class. These are all legacy features and\\n * therefore not already part of the modern ReactComponent.\\n */\\nvar ReactClassMixin = {\\n\\n  /**\\n   * TODO: This will be deprecated because state should always keep a consistent\\n   * type signature and the only use case for this, is to avoid that.\\n   */\\n  replaceState: function (newState, callback) {\\n    this.updater.enqueueReplaceState(this, newState);\\n    if (callback) {\\n      this.updater.enqueueCallback(this, callback);\\n    }\\n  },\\n\\n  /**\\n   * Checks whether or not this composite component is mounted.\\n   * @return {boolean} True if mounted, false otherwise.\\n   * @protected\\n   * @final\\n   */\\n  isMounted: function () {\\n    return this.updater.isMounted(this);\\n  },\\n\\n  /**\\n   * Sets a subset of the props.\\n   *\\n   * @param {object} partialProps Subset of the next props.\\n   * @param {?function} callback Called after props are updated.\\n   * @final\\n   * @public\\n   * @deprecated\\n   */\\n  setProps: function (partialProps, callback) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      warnSetProps();\\n    }\\n    this.updater.enqueueSetProps(this, partialProps);\\n    if (callback) {\\n      this.updater.enqueueCallback(this, callback);\\n    }\\n  },\\n\\n  /**\\n   * Replace all the props.\\n   *\\n   * @param {object} newProps Subset of the next props.\\n   * @param {?function} callback Called after props are updated.\\n   * @final\\n   * @public\\n   * @deprecated\\n   */\\n  replaceProps: function (newProps, callback) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      warnSetProps();\\n    }\\n    this.updater.enqueueReplaceProps(this, newProps);\\n    if (callback) {\\n      this.updater.enqueueCallback(this, callback);\\n    }\\n  }\\n};\\n\\nvar ReactClassComponent = function () {};\\nassign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\\n\\n/**\\n * Module for creating composite components.\\n *\\n * @class ReactClass\\n */\\nvar ReactClass = {\\n\\n  /**\\n   * Creates a composite component class given a class specification.\\n   *\\n   * @param {object} spec Class specification (which must define `render`).\\n   * @return {function} Component constructor function.\\n   * @public\\n   */\\n  createClass: function (spec) {\\n    var Constructor = function (props, context, updater) {\\n      // This constructor is overridden by mocks. The argument is used\\n      // by mocks to assert on what gets mounted.\\n\\n      if (process.env.NODE_ENV !== 'production') {\\n        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : undefined;\\n      }\\n\\n      // Wire up auto-binding\\n      if (this.__reactAutoBindMap) {\\n        bindAutoBindMethods(this);\\n      }\\n\\n      this.props = props;\\n      this.context = context;\\n      this.refs = emptyObject;\\n      this.updater = updater || ReactNoopUpdateQueue;\\n\\n      this.state = null;\\n\\n      // ReactClasses doesn't have constructors. Instead, they use the\\n      // getInitialState and componentWillMount methods for initialization.\\n\\n      var initialState = this.getInitialState ? this.getInitialState() : null;\\n      if (process.env.NODE_ENV !== 'production') {\\n        // We allow auto-mocks to proceed as if they're returning null.\\n        if (typeof initialState === 'undefined' && this.getInitialState._isMockFunction) {\\n          // This is probably bad practice. Consider warning here and\\n          // deprecating this convenience.\\n          initialState = null;\\n        }\\n      }\\n      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : invariant(false) : undefined;\\n\\n      this.state = initialState;\\n    };\\n    Constructor.prototype = new ReactClassComponent();\\n    Constructor.prototype.constructor = Constructor;\\n\\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\\n\\n    mixSpecIntoComponent(Constructor, spec);\\n\\n    // Initialize the defaultProps property after all mixins have been merged.\\n    if (Constructor.getDefaultProps) {\\n      Constructor.defaultProps = Constructor.getDefaultProps();\\n    }\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      // This is a tag to indicate that the use of these method names is ok,\\n      // since it's used with createClass. If it's not, then it's likely a\\n      // mistake so we'll warn you to use the static property, property\\n      // initializer or constructor respectively.\\n      if (Constructor.getDefaultProps) {\\n        Constructor.getDefaultProps.isReactClassApproved = {};\\n      }\\n      if (Constructor.prototype.getInitialState) {\\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\\n      }\\n    }\\n\\n    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : invariant(false) : undefined;\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : undefined;\\n      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : undefined;\\n    }\\n\\n    // Reduce time spent doing lookups by setting these on the prototype.\\n    for (var methodName in ReactClassInterface) {\\n      if (!Constructor.prototype[methodName]) {\\n        Constructor.prototype[methodName] = null;\\n      }\\n    }\\n\\n    return Constructor;\\n  },\\n\\n  injection: {\\n    injectMixin: function (mixin) {\\n      injectedMixins.push(mixin);\\n    }\\n  }\\n\\n};\\n\\nmodule.exports = ReactClass;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactComponentBrowserEnvironment\\n */\\n\\n'use strict';\\n\\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\\nvar ReactMount = require('./ReactMount');\\n\\n/**\\n * Abstracts away all functionality of the reconciler that requires knowledge of\\n * the browser context. TODO: These callers should be refactored to avoid the\\n * need for this injection.\\n */\\nvar ReactComponentBrowserEnvironment = {\\n\\n  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\\n\\n  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,\\n\\n  /**\\n   * If a particular environment requires that some resources be cleaned up,\\n   * specify this in the injected Mixin. In the DOM, we would likely want to\\n   * purge any cached node ID lookups.\\n   *\\n   * @private\\n   */\\n  unmountIDFromEnvironment: function (rootNodeID) {\\n    ReactMount.purgeID(rootNodeID);\\n  }\\n\\n};\\n\\nmodule.exports = ReactComponentBrowserEnvironment;\",\n    \"/**\\n * Copyright 2014-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactComponentEnvironment\\n */\\n\\n'use strict';\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\nvar injected = false;\\n\\nvar ReactComponentEnvironment = {\\n\\n  /**\\n   * Optionally injectable environment dependent cleanup hook. (server vs.\\n   * browser etc). Example: A browser system caches DOM nodes based on component\\n   * ID and must remove that cache entry when this instance is unmounted.\\n   */\\n  unmountIDFromEnvironment: null,\\n\\n  /**\\n   * Optionally injectable hook for swapping out mount images in the middle of\\n   * the tree.\\n   */\\n  replaceNodeWithMarkupByID: null,\\n\\n  /**\\n   * Optionally injectable hook for processing a queue of child updates. Will\\n   * later move into MultiChildComponents.\\n   */\\n  processChildrenUpdates: null,\\n\\n  injection: {\\n    injectEnvironment: function (environment) {\\n      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : invariant(false) : undefined;\\n      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;\\n      ReactComponentEnvironment.replaceNodeWithMarkupByID = environment.replaceNodeWithMarkupByID;\\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\\n      injected = true;\\n    }\\n  }\\n\\n};\\n\\nmodule.exports = ReactComponentEnvironment;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactComponentWithPureRenderMixin\\n */\\n\\n'use strict';\\n\\nvar shallowCompare = require('./shallowCompare');\\n\\n/**\\n * If your React component's render function is \\\"pure\\\", e.g. it will render the\\n * same result given the same props and state, provide this Mixin for a\\n * considerable performance boost.\\n *\\n * Most React components have pure render functions.\\n *\\n * Example:\\n *\\n *   var ReactComponentWithPureRenderMixin =\\n *     require('ReactComponentWithPureRenderMixin');\\n *   React.createClass({\\n *     mixins: [ReactComponentWithPureRenderMixin],\\n *\\n *     render: function() {\\n *       return <div className={this.props.className}>foo</div>;\\n *     }\\n *   });\\n *\\n * Note: This only checks shallow equality for props and state. If these contain\\n * complex data structures this mixin may have false-negatives for deeper\\n * differences. Only mixin to components which have simple props and state, or\\n * use `forceUpdate()` when you know deep data structures have changed.\\n */\\nvar ReactComponentWithPureRenderMixin = {\\n  shouldComponentUpdate: function (nextProps, nextState) {\\n    return shallowCompare(this, nextProps, nextState);\\n  }\\n};\\n\\nmodule.exports = ReactComponentWithPureRenderMixin;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactComponent\\n */\\n\\n'use strict';\\n\\nvar ReactNoopUpdateQueue = require('./ReactNoopUpdateQueue');\\n\\nvar canDefineProperty = require('./canDefineProperty');\\nvar emptyObject = require('fbjs/lib/emptyObject');\\nvar invariant = require('fbjs/lib/invariant');\\nvar warning = require('fbjs/lib/warning');\\n\\n/**\\n * Base class helpers for the updating state of a component.\\n */\\nfunction ReactComponent(props, context, updater) {\\n  this.props = props;\\n  this.context = context;\\n  this.refs = emptyObject;\\n  // We initialize the default updater but the real one gets injected by the\\n  // renderer.\\n  this.updater = updater || ReactNoopUpdateQueue;\\n}\\n\\nReactComponent.prototype.isReactComponent = {};\\n\\n/**\\n * Sets a subset of the state. Always use this to mutate\\n * state. You should treat `this.state` as immutable.\\n *\\n * There is no guarantee that `this.state` will be immediately updated, so\\n * accessing `this.state` after calling this method may return the old value.\\n *\\n * There is no guarantee that calls to `setState` will run synchronously,\\n * as they may eventually be batched together.  You can provide an optional\\n * callback that will be executed when the call to setState is actually\\n * completed.\\n *\\n * When a function is provided to setState, it will be called at some point in\\n * the future (not synchronously). It will be called with the up to date\\n * component arguments (state, props, context). These values can be different\\n * from this.* because your function may be called after receiveProps but before\\n * shouldComponentUpdate, and this new state, props, and context will not yet be\\n * assigned to this.\\n *\\n * @param {object|function} partialState Next partial state or function to\\n *        produce next partial state to be merged with current state.\\n * @param {?function} callback Called after state is updated.\\n * @final\\n * @protected\\n */\\nReactComponent.prototype.setState = function (partialState, callback) {\\n  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.') : invariant(false) : undefined;\\n  if (process.env.NODE_ENV !== 'production') {\\n    process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : undefined;\\n  }\\n  this.updater.enqueueSetState(this, partialState);\\n  if (callback) {\\n    this.updater.enqueueCallback(this, callback);\\n  }\\n};\\n\\n/**\\n * Forces an update. This should only be invoked when it is known with\\n * certainty that we are **not** in a DOM transaction.\\n *\\n * You may want to call this when you know that some deeper aspect of the\\n * component's state has changed but `setState` was not called.\\n *\\n * This will not invoke `shouldComponentUpdate`, but it will invoke\\n * `componentWillUpdate` and `componentDidUpdate`.\\n *\\n * @param {?function} callback Called after update is complete.\\n * @final\\n * @protected\\n */\\nReactComponent.prototype.forceUpdate = function (callback) {\\n  this.updater.enqueueForceUpdate(this);\\n  if (callback) {\\n    this.updater.enqueueCallback(this, callback);\\n  }\\n};\\n\\n/**\\n * Deprecated APIs. These APIs used to exist on classic React classes but since\\n * we would like to deprecate them, we're not going to move them over to this\\n * modern base class. Instead, we define a getter that warns if it's accessed.\\n */\\nif (process.env.NODE_ENV !== 'production') {\\n  var deprecatedAPIs = {\\n    getDOMNode: ['getDOMNode', 'Use ReactDOM.findDOMNode(component) instead.'],\\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\\n    replaceProps: ['replaceProps', 'Instead, call render again at the top level.'],\\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).'],\\n    setProps: ['setProps', 'Instead, call render again at the top level.']\\n  };\\n  var defineDeprecationWarning = function (methodName, info) {\\n    if (canDefineProperty) {\\n      Object.defineProperty(ReactComponent.prototype, methodName, {\\n        get: function () {\\n          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : undefined;\\n          return undefined;\\n        }\\n      });\\n    }\\n  };\\n  for (var fnName in deprecatedAPIs) {\\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\\n    }\\n  }\\n}\\n\\nmodule.exports = ReactComponent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactCompositeComponent\\n */\\n\\n'use strict';\\n\\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\\nvar ReactElement = require('./ReactElement');\\nvar ReactInstanceMap = require('./ReactInstanceMap');\\nvar ReactPerf = require('./ReactPerf');\\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\\nvar ReactReconciler = require('./ReactReconciler');\\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\\n\\nvar assign = require('./Object.assign');\\nvar emptyObject = require('fbjs/lib/emptyObject');\\nvar invariant = require('fbjs/lib/invariant');\\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\\nvar warning = require('fbjs/lib/warning');\\n\\nfunction getDeclarationErrorAddendum(component) {\\n  var owner = component._currentElement._owner || null;\\n  if (owner) {\\n    var name = owner.getName();\\n    if (name) {\\n      return ' Check the render method of `' + name + '`.';\\n    }\\n  }\\n  return '';\\n}\\n\\nfunction StatelessComponent(Component) {}\\nStatelessComponent.prototype.render = function () {\\n  var Component = ReactInstanceMap.get(this)._currentElement.type;\\n  return Component(this.props, this.context, this.updater);\\n};\\n\\n/**\\n * ------------------ The Life-Cycle of a Composite Component ------------------\\n *\\n * - constructor: Initialization of state. The instance is now retained.\\n *   - componentWillMount\\n *   - render\\n *   - [children's constructors]\\n *     - [children's componentWillMount and render]\\n *     - [children's componentDidMount]\\n *     - componentDidMount\\n *\\n *       Update Phases:\\n *       - componentWillReceiveProps (only called if parent updated)\\n *       - shouldComponentUpdate\\n *         - componentWillUpdate\\n *           - render\\n *           - [children's constructors or receive props phases]\\n *         - componentDidUpdate\\n *\\n *     - componentWillUnmount\\n *     - [children's componentWillUnmount]\\n *   - [children destroyed]\\n * - (destroyed): The instance is now blank, released by React and ready for GC.\\n *\\n * -----------------------------------------------------------------------------\\n */\\n\\n/**\\n * An incrementing ID assigned to each component when it is mounted. This is\\n * used to enforce the order in which `ReactUpdates` updates dirty components.\\n *\\n * @private\\n */\\nvar nextMountID = 1;\\n\\n/**\\n * @lends {ReactCompositeComponent.prototype}\\n */\\nvar ReactCompositeComponentMixin = {\\n\\n  /**\\n   * Base constructor for all composite component.\\n   *\\n   * @param {ReactElement} element\\n   * @final\\n   * @internal\\n   */\\n  construct: function (element) {\\n    this._currentElement = element;\\n    this._rootNodeID = null;\\n    this._instance = null;\\n\\n    // See ReactUpdateQueue\\n    this._pendingElement = null;\\n    this._pendingStateQueue = null;\\n    this._pendingReplaceState = false;\\n    this._pendingForceUpdate = false;\\n\\n    this._renderedComponent = null;\\n\\n    this._context = null;\\n    this._mountOrder = 0;\\n    this._topLevelWrapper = null;\\n\\n    // See ReactUpdates and ReactUpdateQueue.\\n    this._pendingCallbacks = null;\\n  },\\n\\n  /**\\n   * Initializes the component, renders markup, and registers event listeners.\\n   *\\n   * @param {string} rootID DOM ID of the root node.\\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\\n   * @return {?string} Rendered markup to be inserted into the DOM.\\n   * @final\\n   * @internal\\n   */\\n  mountComponent: function (rootID, transaction, context) {\\n    this._context = context;\\n    this._mountOrder = nextMountID++;\\n    this._rootNodeID = rootID;\\n\\n    var publicProps = this._processProps(this._currentElement.props);\\n    var publicContext = this._processContext(context);\\n\\n    var Component = this._currentElement.type;\\n\\n    // Initialize the public class\\n    var inst;\\n    var renderedElement;\\n\\n    // This is a way to detect if Component is a stateless arrow function\\n    // component, which is not newable. It might not be 100% reliable but is\\n    // something we can do until we start detecting that Component extends\\n    // React.Component. We already assume that typeof Component === 'function'.\\n    var canInstantiate = ('prototype' in Component);\\n\\n    if (canInstantiate) {\\n      if (process.env.NODE_ENV !== 'production') {\\n        ReactCurrentOwner.current = this;\\n        try {\\n          inst = new Component(publicProps, publicContext, ReactUpdateQueue);\\n        } finally {\\n          ReactCurrentOwner.current = null;\\n        }\\n      } else {\\n        inst = new Component(publicProps, publicContext, ReactUpdateQueue);\\n      }\\n    }\\n\\n    if (!canInstantiate || inst === null || inst === false || ReactElement.isValidElement(inst)) {\\n      renderedElement = inst;\\n      inst = new StatelessComponent(Component);\\n    }\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      // This will throw later in _renderValidatedComponent, but add an early\\n      // warning now to help debugging\\n      if (inst.render == null) {\\n        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`, returned ' + 'null/false from a stateless component, or tried to render an ' + 'element whose type is a function that isn\\\\'t a React component.', Component.displayName || Component.name || 'Component') : undefined;\\n      } else {\\n        // We support ES6 inheriting from React.Component, the module pattern,\\n        // and stateless components, but not ES6 classes that don't extend\\n        process.env.NODE_ENV !== 'production' ? warning(Component.prototype && Component.prototype.isReactComponent || !canInstantiate || !(inst instanceof Component), '%s(...): React component classes must extend React.Component.', Component.displayName || Component.name || 'Component') : undefined;\\n      }\\n    }\\n\\n    // These should be set up in the constructor, but as a convenience for\\n    // simpler class abstractions, we set them up after the fact.\\n    inst.props = publicProps;\\n    inst.context = publicContext;\\n    inst.refs = emptyObject;\\n    inst.updater = ReactUpdateQueue;\\n\\n    this._instance = inst;\\n\\n    // Store a reference from the instance back to the internal representation\\n    ReactInstanceMap.set(inst, this);\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      // Since plain JS classes are defined without any special initialization\\n      // logic, we can not catch common errors early. Therefore, we have to\\n      // catch them here, at initialization time, instead.\\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : undefined;\\n      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : undefined;\\n      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : undefined;\\n      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : undefined;\\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : undefined;\\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : undefined;\\n      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : undefined;\\n    }\\n\\n    var initialState = inst.state;\\n    if (initialState === undefined) {\\n      inst.state = initialState = null;\\n    }\\n    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\\n\\n    this._pendingStateQueue = null;\\n    this._pendingReplaceState = false;\\n    this._pendingForceUpdate = false;\\n\\n    if (inst.componentWillMount) {\\n      inst.componentWillMount();\\n      // When mounting, calls to `setState` by `componentWillMount` will set\\n      // `this._pendingStateQueue` without triggering a re-render.\\n      if (this._pendingStateQueue) {\\n        inst.state = this._processPendingState(inst.props, inst.context);\\n      }\\n    }\\n\\n    // If not a stateless component, we now render\\n    if (renderedElement === undefined) {\\n      renderedElement = this._renderValidatedComponent();\\n    }\\n\\n    this._renderedComponent = this._instantiateReactComponent(renderedElement);\\n\\n    var markup = ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, this._processChildContext(context));\\n    if (inst.componentDidMount) {\\n      transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);\\n    }\\n\\n    return markup;\\n  },\\n\\n  /**\\n   * Releases any resources allocated by `mountComponent`.\\n   *\\n   * @final\\n   * @internal\\n   */\\n  unmountComponent: function () {\\n    var inst = this._instance;\\n\\n    if (inst.componentWillUnmount) {\\n      inst.componentWillUnmount();\\n    }\\n\\n    ReactReconciler.unmountComponent(this._renderedComponent);\\n    this._renderedComponent = null;\\n    this._instance = null;\\n\\n    // Reset pending fields\\n    // Even if this component is scheduled for another update in ReactUpdates,\\n    // it would still be ignored because these fields are reset.\\n    this._pendingStateQueue = null;\\n    this._pendingReplaceState = false;\\n    this._pendingForceUpdate = false;\\n    this._pendingCallbacks = null;\\n    this._pendingElement = null;\\n\\n    // These fields do not really need to be reset since this object is no\\n    // longer accessible.\\n    this._context = null;\\n    this._rootNodeID = null;\\n    this._topLevelWrapper = null;\\n\\n    // Delete the reference from the instance to this internal representation\\n    // which allow the internals to be properly cleaned up even if the user\\n    // leaks a reference to the public instance.\\n    ReactInstanceMap.remove(inst);\\n\\n    // Some existing components rely on inst.props even after they've been\\n    // destroyed (in event handlers).\\n    // TODO: inst.props = null;\\n    // TODO: inst.state = null;\\n    // TODO: inst.context = null;\\n  },\\n\\n  /**\\n   * Filters the context object to only contain keys specified in\\n   * `contextTypes`\\n   *\\n   * @param {object} context\\n   * @return {?object}\\n   * @private\\n   */\\n  _maskContext: function (context) {\\n    var maskedContext = null;\\n    var Component = this._currentElement.type;\\n    var contextTypes = Component.contextTypes;\\n    if (!contextTypes) {\\n      return emptyObject;\\n    }\\n    maskedContext = {};\\n    for (var contextName in contextTypes) {\\n      maskedContext[contextName] = context[contextName];\\n    }\\n    return maskedContext;\\n  },\\n\\n  /**\\n   * Filters the context object to only contain keys specified in\\n   * `contextTypes`, and asserts that they are valid.\\n   *\\n   * @param {object} context\\n   * @return {?object}\\n   * @private\\n   */\\n  _processContext: function (context) {\\n    var maskedContext = this._maskContext(context);\\n    if (process.env.NODE_ENV !== 'production') {\\n      var Component = this._currentElement.type;\\n      if (Component.contextTypes) {\\n        this._checkPropTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);\\n      }\\n    }\\n    return maskedContext;\\n  },\\n\\n  /**\\n   * @param {object} currentContext\\n   * @return {object}\\n   * @private\\n   */\\n  _processChildContext: function (currentContext) {\\n    var Component = this._currentElement.type;\\n    var inst = this._instance;\\n    var childContext = inst.getChildContext && inst.getChildContext();\\n    if (childContext) {\\n      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\\n      if (process.env.NODE_ENV !== 'production') {\\n        this._checkPropTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);\\n      }\\n      for (var name in childContext) {\\n        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key \\\"%s\\\" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : invariant(false) : undefined;\\n      }\\n      return assign({}, currentContext, childContext);\\n    }\\n    return currentContext;\\n  },\\n\\n  /**\\n   * Processes props by setting default values for unspecified props and\\n   * asserting that the props are valid. Does not mutate its argument; returns\\n   * a new props object with defaults merged in.\\n   *\\n   * @param {object} newProps\\n   * @return {object}\\n   * @private\\n   */\\n  _processProps: function (newProps) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      var Component = this._currentElement.type;\\n      if (Component.propTypes) {\\n        this._checkPropTypes(Component.propTypes, newProps, ReactPropTypeLocations.prop);\\n      }\\n    }\\n    return newProps;\\n  },\\n\\n  /**\\n   * Assert that the props are valid\\n   *\\n   * @param {object} propTypes Map of prop name to a ReactPropType\\n   * @param {object} props\\n   * @param {string} location e.g. \\\"prop\\\", \\\"context\\\", \\\"child context\\\"\\n   * @private\\n   */\\n  _checkPropTypes: function (propTypes, props, location) {\\n    // TODO: Stop validating prop types here and only use the element\\n    // validation.\\n    var componentName = this.getName();\\n    for (var propName in propTypes) {\\n      if (propTypes.hasOwnProperty(propName)) {\\n        var error;\\n        try {\\n          // This is intentionally an invariant that gets caught. It's the same\\n          // behavior as without this statement except with a better message.\\n          !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually ' + 'from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;\\n          error = propTypes[propName](props, propName, componentName, location);\\n        } catch (ex) {\\n          error = ex;\\n        }\\n        if (error instanceof Error) {\\n          // We may want to extend this logic for similar errors in\\n          // top-level render calls, so I'm abstracting it away into\\n          // a function to minimize refactoring in the future\\n          var addendum = getDeclarationErrorAddendum(this);\\n\\n          if (location === ReactPropTypeLocations.prop) {\\n            // Preface gives us something to blacklist in warning module\\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Composite propType: %s%s', error.message, addendum) : undefined;\\n          } else {\\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Failed Context Types: %s%s', error.message, addendum) : undefined;\\n          }\\n        }\\n      }\\n    }\\n  },\\n\\n  receiveComponent: function (nextElement, transaction, nextContext) {\\n    var prevElement = this._currentElement;\\n    var prevContext = this._context;\\n\\n    this._pendingElement = null;\\n\\n    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);\\n  },\\n\\n  /**\\n   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`\\n   * is set, update the component.\\n   *\\n   * @param {ReactReconcileTransaction} transaction\\n   * @internal\\n   */\\n  performUpdateIfNecessary: function (transaction) {\\n    if (this._pendingElement != null) {\\n      ReactReconciler.receiveComponent(this, this._pendingElement || this._currentElement, transaction, this._context);\\n    }\\n\\n    if (this._pendingStateQueue !== null || this._pendingForceUpdate) {\\n      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);\\n    }\\n  },\\n\\n  /**\\n   * Perform an update to a mounted component. The componentWillReceiveProps and\\n   * shouldComponentUpdate methods are called, then (assuming the update isn't\\n   * skipped) the remaining update lifecycle methods are called and the DOM\\n   * representation is updated.\\n   *\\n   * By default, this implements React's rendering and reconciliation algorithm.\\n   * Sophisticated clients may wish to override this.\\n   *\\n   * @param {ReactReconcileTransaction} transaction\\n   * @param {ReactElement} prevParentElement\\n   * @param {ReactElement} nextParentElement\\n   * @internal\\n   * @overridable\\n   */\\n  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {\\n    var inst = this._instance;\\n\\n    var nextContext = this._context === nextUnmaskedContext ? inst.context : this._processContext(nextUnmaskedContext);\\n    var nextProps;\\n\\n    // Distinguish between a props update versus a simple state update\\n    if (prevParentElement === nextParentElement) {\\n      // Skip checking prop types again -- we don't read inst.props to avoid\\n      // warning for DOM component props in this upgrade\\n      nextProps = nextParentElement.props;\\n    } else {\\n      nextProps = this._processProps(nextParentElement.props);\\n      // An update here will schedule an update but immediately set\\n      // _pendingStateQueue which will ensure that any state updates gets\\n      // immediately reconciled instead of waiting for the next batch.\\n\\n      if (inst.componentWillReceiveProps) {\\n        inst.componentWillReceiveProps(nextProps, nextContext);\\n      }\\n    }\\n\\n    var nextState = this._processPendingState(nextProps, nextContext);\\n\\n    var shouldUpdate = this._pendingForceUpdate || !inst.shouldComponentUpdate || inst.shouldComponentUpdate(nextProps, nextState, nextContext);\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      process.env.NODE_ENV !== 'production' ? warning(typeof shouldUpdate !== 'undefined', '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : undefined;\\n    }\\n\\n    if (shouldUpdate) {\\n      this._pendingForceUpdate = false;\\n      // Will set `this.props`, `this.state` and `this.context`.\\n      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);\\n    } else {\\n      // If it's determined that a component should not update, we still want\\n      // to set props and state but we shortcut the rest of the update.\\n      this._currentElement = nextParentElement;\\n      this._context = nextUnmaskedContext;\\n      inst.props = nextProps;\\n      inst.state = nextState;\\n      inst.context = nextContext;\\n    }\\n  },\\n\\n  _processPendingState: function (props, context) {\\n    var inst = this._instance;\\n    var queue = this._pendingStateQueue;\\n    var replace = this._pendingReplaceState;\\n    this._pendingReplaceState = false;\\n    this._pendingStateQueue = null;\\n\\n    if (!queue) {\\n      return inst.state;\\n    }\\n\\n    if (replace && queue.length === 1) {\\n      return queue[0];\\n    }\\n\\n    var nextState = assign({}, replace ? queue[0] : inst.state);\\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\\n      var partial = queue[i];\\n      assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\\n    }\\n\\n    return nextState;\\n  },\\n\\n  /**\\n   * Merges new props and state, notifies delegate methods of update and\\n   * performs update.\\n   *\\n   * @param {ReactElement} nextElement Next element\\n   * @param {object} nextProps Next public object to set as properties.\\n   * @param {?object} nextState Next object to set as state.\\n   * @param {?object} nextContext Next public object to set as context.\\n   * @param {ReactReconcileTransaction} transaction\\n   * @param {?object} unmaskedContext\\n   * @private\\n   */\\n  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {\\n    var inst = this._instance;\\n\\n    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);\\n    var prevProps;\\n    var prevState;\\n    var prevContext;\\n    if (hasComponentDidUpdate) {\\n      prevProps = inst.props;\\n      prevState = inst.state;\\n      prevContext = inst.context;\\n    }\\n\\n    if (inst.componentWillUpdate) {\\n      inst.componentWillUpdate(nextProps, nextState, nextContext);\\n    }\\n\\n    this._currentElement = nextElement;\\n    this._context = unmaskedContext;\\n    inst.props = nextProps;\\n    inst.state = nextState;\\n    inst.context = nextContext;\\n\\n    this._updateRenderedComponent(transaction, unmaskedContext);\\n\\n    if (hasComponentDidUpdate) {\\n      transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);\\n    }\\n  },\\n\\n  /**\\n   * Call the component's `render` method and update the DOM accordingly.\\n   *\\n   * @param {ReactReconcileTransaction} transaction\\n   * @internal\\n   */\\n  _updateRenderedComponent: function (transaction, context) {\\n    var prevComponentInstance = this._renderedComponent;\\n    var prevRenderedElement = prevComponentInstance._currentElement;\\n    var nextRenderedElement = this._renderValidatedComponent();\\n    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {\\n      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));\\n    } else {\\n      // These two IDs are actually the same! But nothing should rely on that.\\n      var thisID = this._rootNodeID;\\n      var prevComponentID = prevComponentInstance._rootNodeID;\\n      ReactReconciler.unmountComponent(prevComponentInstance);\\n\\n      this._renderedComponent = this._instantiateReactComponent(nextRenderedElement);\\n      var nextMarkup = ReactReconciler.mountComponent(this._renderedComponent, thisID, transaction, this._processChildContext(context));\\n      this._replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\\n    }\\n  },\\n\\n  /**\\n   * @protected\\n   */\\n  _replaceNodeWithMarkupByID: function (prevComponentID, nextMarkup) {\\n    ReactComponentEnvironment.replaceNodeWithMarkupByID(prevComponentID, nextMarkup);\\n  },\\n\\n  /**\\n   * @protected\\n   */\\n  _renderValidatedComponentWithoutOwnerOrContext: function () {\\n    var inst = this._instance;\\n    var renderedComponent = inst.render();\\n    if (process.env.NODE_ENV !== 'production') {\\n      // We allow auto-mocks to proceed as if they're returning null.\\n      if (typeof renderedComponent === 'undefined' && inst.render._isMockFunction) {\\n        // This is probably bad practice. Consider warning here and\\n        // deprecating this convenience.\\n        renderedComponent = null;\\n      }\\n    }\\n\\n    return renderedComponent;\\n  },\\n\\n  /**\\n   * @private\\n   */\\n  _renderValidatedComponent: function () {\\n    var renderedComponent;\\n    ReactCurrentOwner.current = this;\\n    try {\\n      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();\\n    } finally {\\n      ReactCurrentOwner.current = null;\\n    }\\n    !(\\n    // TODO: An `isValidNode` function would probably be more appropriate\\n    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid ReactComponent must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : invariant(false) : undefined;\\n    return renderedComponent;\\n  },\\n\\n  /**\\n   * Lazily allocates the refs object and stores `component` as `ref`.\\n   *\\n   * @param {string} ref Reference name.\\n   * @param {component} component Component to store as `ref`.\\n   * @final\\n   * @private\\n   */\\n  attachRef: function (ref, component) {\\n    var inst = this.getPublicInstance();\\n    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : invariant(false) : undefined;\\n    var publicComponentInstance = component.getPublicInstance();\\n    if (process.env.NODE_ENV !== 'production') {\\n      var componentName = component && component.getName ? component.getName() : 'a component';\\n      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref \\\"%s\\\" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : undefined;\\n    }\\n    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;\\n    refs[ref] = publicComponentInstance;\\n  },\\n\\n  /**\\n   * Detaches a reference name.\\n   *\\n   * @param {string} ref Name to dereference.\\n   * @final\\n   * @private\\n   */\\n  detachRef: function (ref) {\\n    var refs = this.getPublicInstance().refs;\\n    delete refs[ref];\\n  },\\n\\n  /**\\n   * Get a text description of the component that can be used to identify it\\n   * in error messages.\\n   * @return {string} The name or null.\\n   * @internal\\n   */\\n  getName: function () {\\n    var type = this._currentElement.type;\\n    var constructor = this._instance && this._instance.constructor;\\n    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;\\n  },\\n\\n  /**\\n   * Get the publicly accessible representation of this component - i.e. what\\n   * is exposed by refs and returned by render. Can be null for stateless\\n   * components.\\n   *\\n   * @return {ReactComponent} the public component instance.\\n   * @internal\\n   */\\n  getPublicInstance: function () {\\n    var inst = this._instance;\\n    if (inst instanceof StatelessComponent) {\\n      return null;\\n    }\\n    return inst;\\n  },\\n\\n  // Stub\\n  _instantiateReactComponent: null\\n\\n};\\n\\nReactPerf.measureMethods(ReactCompositeComponentMixin, 'ReactCompositeComponent', {\\n  mountComponent: 'mountComponent',\\n  updateComponent: 'updateComponent',\\n  _renderValidatedComponent: '_renderValidatedComponent'\\n});\\n\\nvar ReactCompositeComponent = {\\n\\n  Mixin: ReactCompositeComponentMixin\\n\\n};\\n\\nmodule.exports = ReactCompositeComponent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactCurrentOwner\\n */\\n\\n'use strict';\\n\\n/**\\n * Keeps track of the current owner.\\n *\\n * The current owner is the component who should own any components that are\\n * currently being constructed.\\n */\\nvar ReactCurrentOwner = {\\n\\n  /**\\n   * @internal\\n   * @type {ReactComponent}\\n   */\\n  current: null\\n\\n};\\n\\nmodule.exports = ReactCurrentOwner;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDOMButton\\n */\\n\\n'use strict';\\n\\nvar mouseListenerNames = {\\n  onClick: true,\\n  onDoubleClick: true,\\n  onMouseDown: true,\\n  onMouseMove: true,\\n  onMouseUp: true,\\n\\n  onClickCapture: true,\\n  onDoubleClickCapture: true,\\n  onMouseDownCapture: true,\\n  onMouseMoveCapture: true,\\n  onMouseUpCapture: true\\n};\\n\\n/**\\n * Implements a <button> native component that does not receive mouse events\\n * when `disabled` is set.\\n */\\nvar ReactDOMButton = {\\n  getNativeProps: function (inst, props, context) {\\n    if (!props.disabled) {\\n      return props;\\n    }\\n\\n    // Copy the props, except the mouse listeners\\n    var nativeProps = {};\\n    for (var key in props) {\\n      if (props.hasOwnProperty(key) && !mouseListenerNames[key]) {\\n        nativeProps[key] = props[key];\\n      }\\n    }\\n\\n    return nativeProps;\\n  }\\n};\\n\\nmodule.exports = ReactDOMButton;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDOMComponent\\n * @typechecks static-only\\n */\\n\\n/* global hasOwnProperty:true */\\n\\n'use strict';\\n\\nvar AutoFocusUtils = require('./AutoFocusUtils');\\nvar CSSPropertyOperations = require('./CSSPropertyOperations');\\nvar DOMProperty = require('./DOMProperty');\\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\\nvar EventConstants = require('./EventConstants');\\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\\nvar ReactDOMButton = require('./ReactDOMButton');\\nvar ReactDOMInput = require('./ReactDOMInput');\\nvar ReactDOMOption = require('./ReactDOMOption');\\nvar ReactDOMSelect = require('./ReactDOMSelect');\\nvar ReactDOMTextarea = require('./ReactDOMTextarea');\\nvar ReactMount = require('./ReactMount');\\nvar ReactMultiChild = require('./ReactMultiChild');\\nvar ReactPerf = require('./ReactPerf');\\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\\n\\nvar assign = require('./Object.assign');\\nvar canDefineProperty = require('./canDefineProperty');\\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\\nvar invariant = require('fbjs/lib/invariant');\\nvar isEventSupported = require('./isEventSupported');\\nvar keyOf = require('fbjs/lib/keyOf');\\nvar setInnerHTML = require('./setInnerHTML');\\nvar setTextContent = require('./setTextContent');\\nvar shallowEqual = require('fbjs/lib/shallowEqual');\\nvar validateDOMNesting = require('./validateDOMNesting');\\nvar warning = require('fbjs/lib/warning');\\n\\nvar deleteListener = ReactBrowserEventEmitter.deleteListener;\\nvar listenTo = ReactBrowserEventEmitter.listenTo;\\nvar registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;\\n\\n// For quickly matching children type, to test if can be treated as content.\\nvar CONTENT_TYPES = { 'string': true, 'number': true };\\n\\nvar CHILDREN = keyOf({ children: null });\\nvar STYLE = keyOf({ style: null });\\nvar HTML = keyOf({ __html: null });\\n\\nvar ELEMENT_NODE_TYPE = 1;\\n\\nfunction getDeclarationErrorAddendum(internalInstance) {\\n  if (internalInstance) {\\n    var owner = internalInstance._currentElement._owner || null;\\n    if (owner) {\\n      var name = owner.getName();\\n      if (name) {\\n        return ' This DOM node was rendered by `' + name + '`.';\\n      }\\n    }\\n  }\\n  return '';\\n}\\n\\nvar legacyPropsDescriptor;\\nif (process.env.NODE_ENV !== 'production') {\\n  legacyPropsDescriptor = {\\n    props: {\\n      enumerable: false,\\n      get: function () {\\n        var component = this._reactInternalComponent;\\n        process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .props of a DOM node; instead, ' + 'recreate the props as `render` did originally or read the DOM ' + 'properties/attributes directly from this node (e.g., ' + 'this.refs.box.className).%s', getDeclarationErrorAddendum(component)) : undefined;\\n        return component._currentElement.props;\\n      }\\n    }\\n  };\\n}\\n\\nfunction legacyGetDOMNode() {\\n  if (process.env.NODE_ENV !== 'production') {\\n    var component = this._reactInternalComponent;\\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .getDOMNode() of a DOM node; ' + 'instead, use the node directly.%s', getDeclarationErrorAddendum(component)) : undefined;\\n  }\\n  return this;\\n}\\n\\nfunction legacyIsMounted() {\\n  var component = this._reactInternalComponent;\\n  if (process.env.NODE_ENV !== 'production') {\\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .isMounted() of a DOM node.%s', getDeclarationErrorAddendum(component)) : undefined;\\n  }\\n  return !!component;\\n}\\n\\nfunction legacySetStateEtc() {\\n  if (process.env.NODE_ENV !== 'production') {\\n    var component = this._reactInternalComponent;\\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setState(), .replaceState(), or ' + '.forceUpdate() of a DOM node. This is a no-op.%s', getDeclarationErrorAddendum(component)) : undefined;\\n  }\\n}\\n\\nfunction legacySetProps(partialProps, callback) {\\n  var component = this._reactInternalComponent;\\n  if (process.env.NODE_ENV !== 'production') {\\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .setProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;\\n  }\\n  if (!component) {\\n    return;\\n  }\\n  ReactUpdateQueue.enqueueSetPropsInternal(component, partialProps);\\n  if (callback) {\\n    ReactUpdateQueue.enqueueCallbackInternal(component, callback);\\n  }\\n}\\n\\nfunction legacyReplaceProps(partialProps, callback) {\\n  var component = this._reactInternalComponent;\\n  if (process.env.NODE_ENV !== 'production') {\\n    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDOMComponent: Do not access .replaceProps() of a DOM node. ' + 'Instead, call ReactDOM.render again at the top level.%s', getDeclarationErrorAddendum(component)) : undefined;\\n  }\\n  if (!component) {\\n    return;\\n  }\\n  ReactUpdateQueue.enqueueReplacePropsInternal(component, partialProps);\\n  if (callback) {\\n    ReactUpdateQueue.enqueueCallbackInternal(component, callback);\\n  }\\n}\\n\\nfunction friendlyStringify(obj) {\\n  if (typeof obj === 'object') {\\n    if (Array.isArray(obj)) {\\n      return '[' + obj.map(friendlyStringify).join(', ') + ']';\\n    } else {\\n      var pairs = [];\\n      for (var key in obj) {\\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\\n          var keyEscaped = /^[a-z$_][\\\\w$_]*$/i.test(key) ? key : JSON.stringify(key);\\n          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));\\n        }\\n      }\\n      return '{' + pairs.join(', ') + '}';\\n    }\\n  } else if (typeof obj === 'string') {\\n    return JSON.stringify(obj);\\n  } else if (typeof obj === 'function') {\\n    return '[function object]';\\n  }\\n  // Differs from JSON.stringify in that undefined becauses undefined and that\\n  // inf and nan don't become null\\n  return String(obj);\\n}\\n\\nvar styleMutationWarning = {};\\n\\nfunction checkAndWarnForMutatedStyle(style1, style2, component) {\\n  if (style1 == null || style2 == null) {\\n    return;\\n  }\\n  if (shallowEqual(style1, style2)) {\\n    return;\\n  }\\n\\n  var componentName = component._tag;\\n  var owner = component._currentElement._owner;\\n  var ownerName;\\n  if (owner) {\\n    ownerName = owner.getName();\\n  }\\n\\n  var hash = ownerName + '|' + componentName;\\n\\n  if (styleMutationWarning.hasOwnProperty(hash)) {\\n    return;\\n  }\\n\\n  styleMutationWarning[hash] = true;\\n\\n  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : undefined;\\n}\\n\\n/**\\n * @param {object} component\\n * @param {?object} props\\n */\\nfunction assertValidProps(component, props) {\\n  if (!props) {\\n    return;\\n  }\\n  // Note the use of `==` which checks for null or undefined.\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (voidElementTags[component._tag]) {\\n      process.env.NODE_ENV !== 'production' ? warning(props.children == null && props.dangerouslySetInnerHTML == null, '%s is a void element tag and must not have `children` or ' + 'use `props.dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : undefined;\\n    }\\n  }\\n  if (props.dangerouslySetInnerHTML != null) {\\n    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : invariant(false) : undefined;\\n    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. ' + 'Please visit https://fb.me/react-invariant-dangerously-set-inner-html ' + 'for more information.') : invariant(false) : undefined;\\n  }\\n  if (process.env.NODE_ENV !== 'production') {\\n    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : undefined;\\n    process.env.NODE_ENV !== 'production' ? warning(!props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : undefined;\\n  }\\n  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, ' + 'not a string. For example, style={{marginRight: spacing + \\\\'em\\\\'}} when ' + 'using JSX.%s', getDeclarationErrorAddendum(component)) : invariant(false) : undefined;\\n}\\n\\nfunction enqueuePutListener(id, registrationName, listener, transaction) {\\n  if (process.env.NODE_ENV !== 'production') {\\n    // IE8 has no API for event capturing and the `onScroll` event doesn't\\n    // bubble.\\n    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\\\\'t support the `onScroll` event') : undefined;\\n  }\\n  var container = ReactMount.findReactContainerForID(id);\\n  if (container) {\\n    var doc = container.nodeType === ELEMENT_NODE_TYPE ? container.ownerDocument : container;\\n    listenTo(registrationName, doc);\\n  }\\n  transaction.getReactMountReady().enqueue(putListener, {\\n    id: id,\\n    registrationName: registrationName,\\n    listener: listener\\n  });\\n}\\n\\nfunction putListener() {\\n  var listenerToPut = this;\\n  ReactBrowserEventEmitter.putListener(listenerToPut.id, listenerToPut.registrationName, listenerToPut.listener);\\n}\\n\\n// There are so many media events, it makes sense to just\\n// maintain a list rather than create a `trapBubbledEvent` for each\\nvar mediaEvents = {\\n  topAbort: 'abort',\\n  topCanPlay: 'canplay',\\n  topCanPlayThrough: 'canplaythrough',\\n  topDurationChange: 'durationchange',\\n  topEmptied: 'emptied',\\n  topEncrypted: 'encrypted',\\n  topEnded: 'ended',\\n  topError: 'error',\\n  topLoadedData: 'loadeddata',\\n  topLoadedMetadata: 'loadedmetadata',\\n  topLoadStart: 'loadstart',\\n  topPause: 'pause',\\n  topPlay: 'play',\\n  topPlaying: 'playing',\\n  topProgress: 'progress',\\n  topRateChange: 'ratechange',\\n  topSeeked: 'seeked',\\n  topSeeking: 'seeking',\\n  topStalled: 'stalled',\\n  topSuspend: 'suspend',\\n  topTimeUpdate: 'timeupdate',\\n  topVolumeChange: 'volumechange',\\n  topWaiting: 'waiting'\\n};\\n\\nfunction trapBubbledEventsLocal() {\\n  var inst = this;\\n  // If a component renders to null or if another component fatals and causes\\n  // the state of the tree to be corrupted, `node` here can be null.\\n  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : invariant(false) : undefined;\\n  var node = ReactMount.getNode(inst._rootNodeID);\\n  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : invariant(false) : undefined;\\n\\n  switch (inst._tag) {\\n    case 'iframe':\\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\\n      break;\\n    case 'video':\\n    case 'audio':\\n\\n      inst._wrapperState.listeners = [];\\n      // create listener for each media event\\n      for (var event in mediaEvents) {\\n        if (mediaEvents.hasOwnProperty(event)) {\\n          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));\\n        }\\n      }\\n\\n      break;\\n    case 'img':\\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];\\n      break;\\n    case 'form':\\n      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];\\n      break;\\n  }\\n}\\n\\nfunction mountReadyInputWrapper() {\\n  ReactDOMInput.mountReadyWrapper(this);\\n}\\n\\nfunction postUpdateSelectWrapper() {\\n  ReactDOMSelect.postUpdateWrapper(this);\\n}\\n\\n// For HTML, certain tags should omit their close tag. We keep a whitelist for\\n// those special cased tags.\\n\\nvar omittedCloseTags = {\\n  'area': true,\\n  'base': true,\\n  'br': true,\\n  'col': true,\\n  'embed': true,\\n  'hr': true,\\n  'img': true,\\n  'input': true,\\n  'keygen': true,\\n  'link': true,\\n  'meta': true,\\n  'param': true,\\n  'source': true,\\n  'track': true,\\n  'wbr': true\\n};\\n\\n// NOTE: menuitem's close tag should be omitted, but that causes problems.\\nvar newlineEatingTags = {\\n  'listing': true,\\n  'pre': true,\\n  'textarea': true\\n};\\n\\n// For HTML, certain tags cannot have children. This has the same purpose as\\n// `omittedCloseTags` except that `menuitem` should still have its closing tag.\\n\\nvar voidElementTags = assign({\\n  'menuitem': true\\n}, omittedCloseTags);\\n\\n// We accept any tag to be rendered but since this gets injected into arbitrary\\n// HTML, we want to make sure that it's a safe tag.\\n// http://www.w3.org/TR/REC-xml/#NT-Name\\n\\nvar VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\\\\.\\\\-\\\\d]*$/; // Simplified subset\\nvar validatedTagCache = {};\\nvar hasOwnProperty = ({}).hasOwnProperty;\\n\\nfunction validateDangerousTag(tag) {\\n  if (!hasOwnProperty.call(validatedTagCache, tag)) {\\n    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : invariant(false) : undefined;\\n    validatedTagCache[tag] = true;\\n  }\\n}\\n\\nfunction processChildContextDev(context, inst) {\\n  // Pass down our tag name to child components for validation purposes\\n  context = assign({}, context);\\n  var info = context[validateDOMNesting.ancestorInfoContextKey];\\n  context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(info, inst._tag, inst);\\n  return context;\\n}\\n\\nfunction isCustomComponent(tagName, props) {\\n  return tagName.indexOf('-') >= 0 || props.is != null;\\n}\\n\\n/**\\n * Creates a new React class that is idempotent and capable of containing other\\n * React components. It accepts event listeners and DOM properties that are\\n * valid according to `DOMProperty`.\\n *\\n *  - Event listeners: `onClick`, `onMouseDown`, etc.\\n *  - DOM properties: `className`, `name`, `title`, etc.\\n *\\n * The `style` property functions differently from the DOM API. It accepts an\\n * object mapping of style properties to values.\\n *\\n * @constructor ReactDOMComponent\\n * @extends ReactMultiChild\\n */\\nfunction ReactDOMComponent(tag) {\\n  validateDangerousTag(tag);\\n  this._tag = tag.toLowerCase();\\n  this._renderedChildren = null;\\n  this._previousStyle = null;\\n  this._previousStyleCopy = null;\\n  this._rootNodeID = null;\\n  this._wrapperState = null;\\n  this._topLevelWrapper = null;\\n  this._nodeWithLegacyProperties = null;\\n  if (process.env.NODE_ENV !== 'production') {\\n    this._unprocessedContextDev = null;\\n    this._processedContextDev = null;\\n  }\\n}\\n\\nReactDOMComponent.displayName = 'ReactDOMComponent';\\n\\nReactDOMComponent.Mixin = {\\n\\n  construct: function (element) {\\n    this._currentElement = element;\\n  },\\n\\n  /**\\n   * Generates root tag markup then recurses. This method has side effects and\\n   * is not idempotent.\\n   *\\n   * @internal\\n   * @param {string} rootID The root DOM ID for this node.\\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\\n   * @param {object} context\\n   * @return {string} The computed markup.\\n   */\\n  mountComponent: function (rootID, transaction, context) {\\n    this._rootNodeID = rootID;\\n\\n    var props = this._currentElement.props;\\n\\n    switch (this._tag) {\\n      case 'iframe':\\n      case 'img':\\n      case 'form':\\n      case 'video':\\n      case 'audio':\\n        this._wrapperState = {\\n          listeners: null\\n        };\\n        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);\\n        break;\\n      case 'button':\\n        props = ReactDOMButton.getNativeProps(this, props, context);\\n        break;\\n      case 'input':\\n        ReactDOMInput.mountWrapper(this, props, context);\\n        props = ReactDOMInput.getNativeProps(this, props, context);\\n        break;\\n      case 'option':\\n        ReactDOMOption.mountWrapper(this, props, context);\\n        props = ReactDOMOption.getNativeProps(this, props, context);\\n        break;\\n      case 'select':\\n        ReactDOMSelect.mountWrapper(this, props, context);\\n        props = ReactDOMSelect.getNativeProps(this, props, context);\\n        context = ReactDOMSelect.processChildContext(this, props, context);\\n        break;\\n      case 'textarea':\\n        ReactDOMTextarea.mountWrapper(this, props, context);\\n        props = ReactDOMTextarea.getNativeProps(this, props, context);\\n        break;\\n    }\\n\\n    assertValidProps(this, props);\\n    if (process.env.NODE_ENV !== 'production') {\\n      if (context[validateDOMNesting.ancestorInfoContextKey]) {\\n        validateDOMNesting(this._tag, this, context[validateDOMNesting.ancestorInfoContextKey]);\\n      }\\n    }\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      this._unprocessedContextDev = context;\\n      this._processedContextDev = processChildContextDev(context, this);\\n      context = this._processedContextDev;\\n    }\\n\\n    var mountImage;\\n    if (transaction.useCreateElement) {\\n      var ownerDocument = context[ReactMount.ownerDocumentContextKey];\\n      var el = ownerDocument.createElement(this._currentElement.type);\\n      DOMPropertyOperations.setAttributeForID(el, this._rootNodeID);\\n      // Populate node cache\\n      ReactMount.getID(el);\\n      this._updateDOMProperties({}, props, transaction, el);\\n      this._createInitialChildren(transaction, props, context, el);\\n      mountImage = el;\\n    } else {\\n      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);\\n      var tagContent = this._createContentMarkup(transaction, props, context);\\n      if (!tagContent && omittedCloseTags[this._tag]) {\\n        mountImage = tagOpen + '/>';\\n      } else {\\n        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';\\n      }\\n    }\\n\\n    switch (this._tag) {\\n      case 'input':\\n        transaction.getReactMountReady().enqueue(mountReadyInputWrapper, this);\\n      // falls through\\n      case 'button':\\n      case 'select':\\n      case 'textarea':\\n        if (props.autoFocus) {\\n          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);\\n        }\\n        break;\\n    }\\n\\n    return mountImage;\\n  },\\n\\n  /**\\n   * Creates markup for the open tag and all attributes.\\n   *\\n   * This method has side effects because events get registered.\\n   *\\n   * Iterating over object properties is faster than iterating over arrays.\\n   * @see http://jsperf.com/obj-vs-arr-iteration\\n   *\\n   * @private\\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\\n   * @param {object} props\\n   * @return {string} Markup of opening tag.\\n   */\\n  _createOpenTagMarkupAndPutListeners: function (transaction, props) {\\n    var ret = '<' + this._currentElement.type;\\n\\n    for (var propKey in props) {\\n      if (!props.hasOwnProperty(propKey)) {\\n        continue;\\n      }\\n      var propValue = props[propKey];\\n      if (propValue == null) {\\n        continue;\\n      }\\n      if (registrationNameModules.hasOwnProperty(propKey)) {\\n        if (propValue) {\\n          enqueuePutListener(this._rootNodeID, propKey, propValue, transaction);\\n        }\\n      } else {\\n        if (propKey === STYLE) {\\n          if (propValue) {\\n            if (process.env.NODE_ENV !== 'production') {\\n              // See `_updateDOMProperties`. style block\\n              this._previousStyle = propValue;\\n            }\\n            propValue = this._previousStyleCopy = assign({}, props.style);\\n          }\\n          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);\\n        }\\n        var markup = null;\\n        if (this._tag != null && isCustomComponent(this._tag, props)) {\\n          if (propKey !== CHILDREN) {\\n            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);\\n          }\\n        } else {\\n          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);\\n        }\\n        if (markup) {\\n          ret += ' ' + markup;\\n        }\\n      }\\n    }\\n\\n    // For static pages, no need to put React ID and checksum. Saves lots of\\n    // bytes.\\n    if (transaction.renderToStaticMarkup) {\\n      return ret;\\n    }\\n\\n    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);\\n    return ret + ' ' + markupForID;\\n  },\\n\\n  /**\\n   * Creates markup for the content between the tags.\\n   *\\n   * @private\\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\\n   * @param {object} props\\n   * @param {object} context\\n   * @return {string} Content markup.\\n   */\\n  _createContentMarkup: function (transaction, props, context) {\\n    var ret = '';\\n\\n    // Intentional use of != to avoid catching zero/false.\\n    var innerHTML = props.dangerouslySetInnerHTML;\\n    if (innerHTML != null) {\\n      if (innerHTML.__html != null) {\\n        ret = innerHTML.__html;\\n      }\\n    } else {\\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\\n      var childrenToUse = contentToUse != null ? null : props.children;\\n      if (contentToUse != null) {\\n        // TODO: Validate that text is allowed as a child of this node\\n        ret = escapeTextContentForBrowser(contentToUse);\\n      } else if (childrenToUse != null) {\\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\\n        ret = mountImages.join('');\\n      }\\n    }\\n    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\\\\n') {\\n      // text/html ignores the first character in these tags if it's a newline\\n      // Prefer to break application/xml over text/html (for now) by adding\\n      // a newline specifically to get eaten by the parser. (Alternately for\\n      // textareas, replacing \\\"^\\\\n\\\" with \\\"\\\\r\\\\n\\\" doesn't get eaten, and the first\\n      // \\\\r is normalized out by HTMLTextAreaElement#value.)\\n      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>\\n      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>\\n      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>\\n      // See: Parsing of \\\"textarea\\\" \\\"listing\\\" and \\\"pre\\\" elements\\n      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>\\n      return '\\\\n' + ret;\\n    } else {\\n      return ret;\\n    }\\n  },\\n\\n  _createInitialChildren: function (transaction, props, context, el) {\\n    // Intentional use of != to avoid catching zero/false.\\n    var innerHTML = props.dangerouslySetInnerHTML;\\n    if (innerHTML != null) {\\n      if (innerHTML.__html != null) {\\n        setInnerHTML(el, innerHTML.__html);\\n      }\\n    } else {\\n      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;\\n      var childrenToUse = contentToUse != null ? null : props.children;\\n      if (contentToUse != null) {\\n        // TODO: Validate that text is allowed as a child of this node\\n        setTextContent(el, contentToUse);\\n      } else if (childrenToUse != null) {\\n        var mountImages = this.mountChildren(childrenToUse, transaction, context);\\n        for (var i = 0; i < mountImages.length; i++) {\\n          el.appendChild(mountImages[i]);\\n        }\\n      }\\n    }\\n  },\\n\\n  /**\\n   * Receives a next element and updates the component.\\n   *\\n   * @internal\\n   * @param {ReactElement} nextElement\\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\\n   * @param {object} context\\n   */\\n  receiveComponent: function (nextElement, transaction, context) {\\n    var prevElement = this._currentElement;\\n    this._currentElement = nextElement;\\n    this.updateComponent(transaction, prevElement, nextElement, context);\\n  },\\n\\n  /**\\n   * Updates a native DOM component after it has already been allocated and\\n   * attached to the DOM. Reconciles the root DOM node, then recurses.\\n   *\\n   * @param {ReactReconcileTransaction} transaction\\n   * @param {ReactElement} prevElement\\n   * @param {ReactElement} nextElement\\n   * @internal\\n   * @overridable\\n   */\\n  updateComponent: function (transaction, prevElement, nextElement, context) {\\n    var lastProps = prevElement.props;\\n    var nextProps = this._currentElement.props;\\n\\n    switch (this._tag) {\\n      case 'button':\\n        lastProps = ReactDOMButton.getNativeProps(this, lastProps);\\n        nextProps = ReactDOMButton.getNativeProps(this, nextProps);\\n        break;\\n      case 'input':\\n        ReactDOMInput.updateWrapper(this);\\n        lastProps = ReactDOMInput.getNativeProps(this, lastProps);\\n        nextProps = ReactDOMInput.getNativeProps(this, nextProps);\\n        break;\\n      case 'option':\\n        lastProps = ReactDOMOption.getNativeProps(this, lastProps);\\n        nextProps = ReactDOMOption.getNativeProps(this, nextProps);\\n        break;\\n      case 'select':\\n        lastProps = ReactDOMSelect.getNativeProps(this, lastProps);\\n        nextProps = ReactDOMSelect.getNativeProps(this, nextProps);\\n        break;\\n      case 'textarea':\\n        ReactDOMTextarea.updateWrapper(this);\\n        lastProps = ReactDOMTextarea.getNativeProps(this, lastProps);\\n        nextProps = ReactDOMTextarea.getNativeProps(this, nextProps);\\n        break;\\n    }\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      // If the context is reference-equal to the old one, pass down the same\\n      // processed object so the update bailout in ReactReconciler behaves\\n      // correctly (and identically in dev and prod). See #5005.\\n      if (this._unprocessedContextDev !== context) {\\n        this._unprocessedContextDev = context;\\n        this._processedContextDev = processChildContextDev(context, this);\\n      }\\n      context = this._processedContextDev;\\n    }\\n\\n    assertValidProps(this, nextProps);\\n    this._updateDOMProperties(lastProps, nextProps, transaction, null);\\n    this._updateDOMChildren(lastProps, nextProps, transaction, context);\\n\\n    if (!canDefineProperty && this._nodeWithLegacyProperties) {\\n      this._nodeWithLegacyProperties.props = nextProps;\\n    }\\n\\n    if (this._tag === 'select') {\\n      // <select> value update needs to occur after <option> children\\n      // reconciliation\\n      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);\\n    }\\n  },\\n\\n  /**\\n   * Reconciles the properties by detecting differences in property values and\\n   * updating the DOM as necessary. This function is probably the single most\\n   * critical path for performance optimization.\\n   *\\n   * TODO: Benchmark whether checking for changed values in memory actually\\n   *       improves performance (especially statically positioned elements).\\n   * TODO: Benchmark the effects of putting this at the top since 99% of props\\n   *       do not change for a given reconciliation.\\n   * TODO: Benchmark areas that can be improved with caching.\\n   *\\n   * @private\\n   * @param {object} lastProps\\n   * @param {object} nextProps\\n   * @param {ReactReconcileTransaction} transaction\\n   * @param {?DOMElement} node\\n   */\\n  _updateDOMProperties: function (lastProps, nextProps, transaction, node) {\\n    var propKey;\\n    var styleName;\\n    var styleUpdates;\\n    for (propKey in lastProps) {\\n      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey)) {\\n        continue;\\n      }\\n      if (propKey === STYLE) {\\n        var lastStyle = this._previousStyleCopy;\\n        for (styleName in lastStyle) {\\n          if (lastStyle.hasOwnProperty(styleName)) {\\n            styleUpdates = styleUpdates || {};\\n            styleUpdates[styleName] = '';\\n          }\\n        }\\n        this._previousStyleCopy = null;\\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\\n        if (lastProps[propKey]) {\\n          // Only call deleteListener if there was a listener previously or\\n          // else willDeleteListener gets called when there wasn't actually a\\n          // listener (e.g., onClick={null})\\n          deleteListener(this._rootNodeID, propKey);\\n        }\\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\\n        if (!node) {\\n          node = ReactMount.getNode(this._rootNodeID);\\n        }\\n        DOMPropertyOperations.deleteValueForProperty(node, propKey);\\n      }\\n    }\\n    for (propKey in nextProps) {\\n      var nextProp = nextProps[propKey];\\n      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps[propKey];\\n      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {\\n        continue;\\n      }\\n      if (propKey === STYLE) {\\n        if (nextProp) {\\n          if (process.env.NODE_ENV !== 'production') {\\n            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);\\n            this._previousStyle = nextProp;\\n          }\\n          nextProp = this._previousStyleCopy = assign({}, nextProp);\\n        } else {\\n          this._previousStyleCopy = null;\\n        }\\n        if (lastProp) {\\n          // Unset styles on `lastProp` but not on `nextProp`.\\n          for (styleName in lastProp) {\\n            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {\\n              styleUpdates = styleUpdates || {};\\n              styleUpdates[styleName] = '';\\n            }\\n          }\\n          // Update styles that changed since `lastProp`.\\n          for (styleName in nextProp) {\\n            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {\\n              styleUpdates = styleUpdates || {};\\n              styleUpdates[styleName] = nextProp[styleName];\\n            }\\n          }\\n        } else {\\n          // Relies on `updateStylesByID` not mutating `styleUpdates`.\\n          styleUpdates = nextProp;\\n        }\\n      } else if (registrationNameModules.hasOwnProperty(propKey)) {\\n        if (nextProp) {\\n          enqueuePutListener(this._rootNodeID, propKey, nextProp, transaction);\\n        } else if (lastProp) {\\n          deleteListener(this._rootNodeID, propKey);\\n        }\\n      } else if (isCustomComponent(this._tag, nextProps)) {\\n        if (!node) {\\n          node = ReactMount.getNode(this._rootNodeID);\\n        }\\n        if (propKey === CHILDREN) {\\n          nextProp = null;\\n        }\\n        DOMPropertyOperations.setValueForAttribute(node, propKey, nextProp);\\n      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {\\n        if (!node) {\\n          node = ReactMount.getNode(this._rootNodeID);\\n        }\\n        // If we're updating to null or undefined, we should remove the property\\n        // from the DOM node instead of inadvertantly setting to a string. This\\n        // brings us in line with the same behavior we have on initial render.\\n        if (nextProp != null) {\\n          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);\\n        } else {\\n          DOMPropertyOperations.deleteValueForProperty(node, propKey);\\n        }\\n      }\\n    }\\n    if (styleUpdates) {\\n      if (!node) {\\n        node = ReactMount.getNode(this._rootNodeID);\\n      }\\n      CSSPropertyOperations.setValueForStyles(node, styleUpdates);\\n    }\\n  },\\n\\n  /**\\n   * Reconciles the children with the various properties that affect the\\n   * children content.\\n   *\\n   * @param {object} lastProps\\n   * @param {object} nextProps\\n   * @param {ReactReconcileTransaction} transaction\\n   * @param {object} context\\n   */\\n  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {\\n    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;\\n    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;\\n\\n    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;\\n    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;\\n\\n    // Note the use of `!=` which checks for null or undefined.\\n    var lastChildren = lastContent != null ? null : lastProps.children;\\n    var nextChildren = nextContent != null ? null : nextProps.children;\\n\\n    // If we're switching from children to content/html or vice versa, remove\\n    // the old content\\n    var lastHasContentOrHtml = lastContent != null || lastHtml != null;\\n    var nextHasContentOrHtml = nextContent != null || nextHtml != null;\\n    if (lastChildren != null && nextChildren == null) {\\n      this.updateChildren(null, transaction, context);\\n    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {\\n      this.updateTextContent('');\\n    }\\n\\n    if (nextContent != null) {\\n      if (lastContent !== nextContent) {\\n        this.updateTextContent('' + nextContent);\\n      }\\n    } else if (nextHtml != null) {\\n      if (lastHtml !== nextHtml) {\\n        this.updateMarkup('' + nextHtml);\\n      }\\n    } else if (nextChildren != null) {\\n      this.updateChildren(nextChildren, transaction, context);\\n    }\\n  },\\n\\n  /**\\n   * Destroys all event registrations for this instance. Does not remove from\\n   * the DOM. That must be done by the parent.\\n   *\\n   * @internal\\n   */\\n  unmountComponent: function () {\\n    switch (this._tag) {\\n      case 'iframe':\\n      case 'img':\\n      case 'form':\\n      case 'video':\\n      case 'audio':\\n        var listeners = this._wrapperState.listeners;\\n        if (listeners) {\\n          for (var i = 0; i < listeners.length; i++) {\\n            listeners[i].remove();\\n          }\\n        }\\n        break;\\n      case 'input':\\n        ReactDOMInput.unmountWrapper(this);\\n        break;\\n      case 'html':\\n      case 'head':\\n      case 'body':\\n        /**\\n         * Components like <html> <head> and <body> can't be removed or added\\n         * easily in a cross-browser way, however it's valuable to be able to\\n         * take advantage of React's reconciliation for styling and <title>\\n         * management. So we just document it and throw in dangerous cases.\\n         */\\n        !false ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is ' + 'impossible to unmount some top-level components (eg <html>, ' + '<head>, and <body>) reliably and efficiently. To fix this, have a ' + 'single top-level component that never unmounts render these ' + 'elements.', this._tag) : invariant(false) : undefined;\\n        break;\\n    }\\n\\n    this.unmountChildren();\\n    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);\\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\\n    this._rootNodeID = null;\\n    this._wrapperState = null;\\n    if (this._nodeWithLegacyProperties) {\\n      var node = this._nodeWithLegacyProperties;\\n      node._reactInternalComponent = null;\\n      this._nodeWithLegacyProperties = null;\\n    }\\n  },\\n\\n  getPublicInstance: function () {\\n    if (!this._nodeWithLegacyProperties) {\\n      var node = ReactMount.getNode(this._rootNodeID);\\n\\n      node._reactInternalComponent = this;\\n      node.getDOMNode = legacyGetDOMNode;\\n      node.isMounted = legacyIsMounted;\\n      node.setState = legacySetStateEtc;\\n      node.replaceState = legacySetStateEtc;\\n      node.forceUpdate = legacySetStateEtc;\\n      node.setProps = legacySetProps;\\n      node.replaceProps = legacyReplaceProps;\\n\\n      if (process.env.NODE_ENV !== 'production') {\\n        if (canDefineProperty) {\\n          Object.defineProperties(node, legacyPropsDescriptor);\\n        } else {\\n          // updateComponent will update this property on subsequent renders\\n          node.props = this._currentElement.props;\\n        }\\n      } else {\\n        // updateComponent will update this property on subsequent renders\\n        node.props = this._currentElement.props;\\n      }\\n\\n      this._nodeWithLegacyProperties = node;\\n    }\\n    return this._nodeWithLegacyProperties;\\n  }\\n\\n};\\n\\nReactPerf.measureMethods(ReactDOMComponent, 'ReactDOMComponent', {\\n  mountComponent: 'mountComponent',\\n  updateComponent: 'updateComponent'\\n});\\n\\nassign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);\\n\\nmodule.exports = ReactDOMComponent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDOMFactories\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar ReactElement = require('./ReactElement');\\nvar ReactElementValidator = require('./ReactElementValidator');\\n\\nvar mapObject = require('fbjs/lib/mapObject');\\n\\n/**\\n * Create a factory that creates HTML tag elements.\\n *\\n * @param {string} tag Tag name (e.g. `div`).\\n * @private\\n */\\nfunction createDOMFactory(tag) {\\n  if (process.env.NODE_ENV !== 'production') {\\n    return ReactElementValidator.createFactory(tag);\\n  }\\n  return ReactElement.createFactory(tag);\\n}\\n\\n/**\\n * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\\n * This is also accessible via `React.DOM`.\\n *\\n * @public\\n */\\nvar ReactDOMFactories = mapObject({\\n  a: 'a',\\n  abbr: 'abbr',\\n  address: 'address',\\n  area: 'area',\\n  article: 'article',\\n  aside: 'aside',\\n  audio: 'audio',\\n  b: 'b',\\n  base: 'base',\\n  bdi: 'bdi',\\n  bdo: 'bdo',\\n  big: 'big',\\n  blockquote: 'blockquote',\\n  body: 'body',\\n  br: 'br',\\n  button: 'button',\\n  canvas: 'canvas',\\n  caption: 'caption',\\n  cite: 'cite',\\n  code: 'code',\\n  col: 'col',\\n  colgroup: 'colgroup',\\n  data: 'data',\\n  datalist: 'datalist',\\n  dd: 'dd',\\n  del: 'del',\\n  details: 'details',\\n  dfn: 'dfn',\\n  dialog: 'dialog',\\n  div: 'div',\\n  dl: 'dl',\\n  dt: 'dt',\\n  em: 'em',\\n  embed: 'embed',\\n  fieldset: 'fieldset',\\n  figcaption: 'figcaption',\\n  figure: 'figure',\\n  footer: 'footer',\\n  form: 'form',\\n  h1: 'h1',\\n  h2: 'h2',\\n  h3: 'h3',\\n  h4: 'h4',\\n  h5: 'h5',\\n  h6: 'h6',\\n  head: 'head',\\n  header: 'header',\\n  hgroup: 'hgroup',\\n  hr: 'hr',\\n  html: 'html',\\n  i: 'i',\\n  iframe: 'iframe',\\n  img: 'img',\\n  input: 'input',\\n  ins: 'ins',\\n  kbd: 'kbd',\\n  keygen: 'keygen',\\n  label: 'label',\\n  legend: 'legend',\\n  li: 'li',\\n  link: 'link',\\n  main: 'main',\\n  map: 'map',\\n  mark: 'mark',\\n  menu: 'menu',\\n  menuitem: 'menuitem',\\n  meta: 'meta',\\n  meter: 'meter',\\n  nav: 'nav',\\n  noscript: 'noscript',\\n  object: 'object',\\n  ol: 'ol',\\n  optgroup: 'optgroup',\\n  option: 'option',\\n  output: 'output',\\n  p: 'p',\\n  param: 'param',\\n  picture: 'picture',\\n  pre: 'pre',\\n  progress: 'progress',\\n  q: 'q',\\n  rp: 'rp',\\n  rt: 'rt',\\n  ruby: 'ruby',\\n  s: 's',\\n  samp: 'samp',\\n  script: 'script',\\n  section: 'section',\\n  select: 'select',\\n  small: 'small',\\n  source: 'source',\\n  span: 'span',\\n  strong: 'strong',\\n  style: 'style',\\n  sub: 'sub',\\n  summary: 'summary',\\n  sup: 'sup',\\n  table: 'table',\\n  tbody: 'tbody',\\n  td: 'td',\\n  textarea: 'textarea',\\n  tfoot: 'tfoot',\\n  th: 'th',\\n  thead: 'thead',\\n  time: 'time',\\n  title: 'title',\\n  tr: 'tr',\\n  track: 'track',\\n  u: 'u',\\n  ul: 'ul',\\n  'var': 'var',\\n  video: 'video',\\n  wbr: 'wbr',\\n\\n  // SVG\\n  circle: 'circle',\\n  clipPath: 'clipPath',\\n  defs: 'defs',\\n  ellipse: 'ellipse',\\n  g: 'g',\\n  image: 'image',\\n  line: 'line',\\n  linearGradient: 'linearGradient',\\n  mask: 'mask',\\n  path: 'path',\\n  pattern: 'pattern',\\n  polygon: 'polygon',\\n  polyline: 'polyline',\\n  radialGradient: 'radialGradient',\\n  rect: 'rect',\\n  stop: 'stop',\\n  svg: 'svg',\\n  text: 'text',\\n  tspan: 'tspan'\\n\\n}, createDOMFactory);\\n\\nmodule.exports = ReactDOMFactories;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDOMFeatureFlags\\n */\\n\\n'use strict';\\n\\nvar ReactDOMFeatureFlags = {\\n  useCreateElement: false\\n};\\n\\nmodule.exports = ReactDOMFeatureFlags;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDOMIDOperations\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\\nvar ReactMount = require('./ReactMount');\\nvar ReactPerf = require('./ReactPerf');\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\n/**\\n * Errors for properties that should not be updated with `updatePropertyByID()`.\\n *\\n * @type {object}\\n * @private\\n */\\nvar INVALID_PROPERTY_ERRORS = {\\n  dangerouslySetInnerHTML: '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',\\n  style: '`style` must be set using `updateStylesByID()`.'\\n};\\n\\n/**\\n * Operations used to process updates to DOM nodes.\\n */\\nvar ReactDOMIDOperations = {\\n\\n  /**\\n   * Updates a DOM node with new property values. This should only be used to\\n   * update DOM properties in `DOMProperty`.\\n   *\\n   * @param {string} id ID of the node to update.\\n   * @param {string} name A valid property name, see `DOMProperty`.\\n   * @param {*} value New value of the property.\\n   * @internal\\n   */\\n  updatePropertyByID: function (id, name, value) {\\n    var node = ReactMount.getNode(id);\\n    !!INVALID_PROPERTY_ERRORS.hasOwnProperty(name) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updatePropertyByID(...): %s', INVALID_PROPERTY_ERRORS[name]) : invariant(false) : undefined;\\n\\n    // If we're updating to null or undefined, we should remove the property\\n    // from the DOM node instead of inadvertantly setting to a string. This\\n    // brings us in line with the same behavior we have on initial render.\\n    if (value != null) {\\n      DOMPropertyOperations.setValueForProperty(node, name, value);\\n    } else {\\n      DOMPropertyOperations.deleteValueForProperty(node, name);\\n    }\\n  },\\n\\n  /**\\n   * Replaces a DOM node that exists in the document with markup.\\n   *\\n   * @param {string} id ID of child to be replaced.\\n   * @param {string} markup Dangerous markup to inject in place of child.\\n   * @internal\\n   * @see {Danger.dangerouslyReplaceNodeWithMarkup}\\n   */\\n  dangerouslyReplaceNodeWithMarkupByID: function (id, markup) {\\n    var node = ReactMount.getNode(id);\\n    DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);\\n  },\\n\\n  /**\\n   * Updates a component's children by processing a series of updates.\\n   *\\n   * @param {array<object>} updates List of update configurations.\\n   * @param {array<string>} markup List of markup strings.\\n   * @internal\\n   */\\n  dangerouslyProcessChildrenUpdates: function (updates, markup) {\\n    for (var i = 0; i < updates.length; i++) {\\n      updates[i].parentNode = ReactMount.getNode(updates[i].parentID);\\n    }\\n    DOMChildrenOperations.processUpdates(updates, markup);\\n  }\\n};\\n\\nReactPerf.measureMethods(ReactDOMIDOperations, 'ReactDOMIDOperations', {\\n  dangerouslyReplaceNodeWithMarkupByID: 'dangerouslyReplaceNodeWithMarkupByID',\\n  dangerouslyProcessChildrenUpdates: 'dangerouslyProcessChildrenUpdates'\\n});\\n\\nmodule.exports = ReactDOMIDOperations;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDOMInput\\n */\\n\\n'use strict';\\n\\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\\nvar LinkedValueUtils = require('./LinkedValueUtils');\\nvar ReactMount = require('./ReactMount');\\nvar ReactUpdates = require('./ReactUpdates');\\n\\nvar assign = require('./Object.assign');\\nvar invariant = require('fbjs/lib/invariant');\\n\\nvar instancesByReactID = {};\\n\\nfunction forceUpdateIfMounted() {\\n  if (this._rootNodeID) {\\n    // DOM component is still mounted; update\\n    ReactDOMInput.updateWrapper(this);\\n  }\\n}\\n\\n/**\\n * Implements an <input> native component that allows setting these optional\\n * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.\\n *\\n * If `checked` or `value` are not supplied (or null/undefined), user actions\\n * that affect the checked state or value will trigger updates to the element.\\n *\\n * If they are supplied (and not null/undefined), the rendered element will not\\n * trigger updates to the element. Instead, the props must change in order for\\n * the rendered element to be updated.\\n *\\n * The rendered element will be initialized as unchecked (or `defaultChecked`)\\n * with an empty value (or `defaultValue`).\\n *\\n * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html\\n */\\nvar ReactDOMInput = {\\n  getNativeProps: function (inst, props, context) {\\n    var value = LinkedValueUtils.getValue(props);\\n    var checked = LinkedValueUtils.getChecked(props);\\n\\n    var nativeProps = assign({}, props, {\\n      defaultChecked: undefined,\\n      defaultValue: undefined,\\n      value: value != null ? value : inst._wrapperState.initialValue,\\n      checked: checked != null ? checked : inst._wrapperState.initialChecked,\\n      onChange: inst._wrapperState.onChange\\n    });\\n\\n    return nativeProps;\\n  },\\n\\n  mountWrapper: function (inst, props) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);\\n    }\\n\\n    var defaultValue = props.defaultValue;\\n    inst._wrapperState = {\\n      initialChecked: props.defaultChecked || false,\\n      initialValue: defaultValue != null ? defaultValue : null,\\n      onChange: _handleChange.bind(inst)\\n    };\\n  },\\n\\n  mountReadyWrapper: function (inst) {\\n    // Can't be in mountWrapper or else server rendering leaks.\\n    instancesByReactID[inst._rootNodeID] = inst;\\n  },\\n\\n  unmountWrapper: function (inst) {\\n    delete instancesByReactID[inst._rootNodeID];\\n  },\\n\\n  updateWrapper: function (inst) {\\n    var props = inst._currentElement.props;\\n\\n    // TODO: Shouldn't this be getChecked(props)?\\n    var checked = props.checked;\\n    if (checked != null) {\\n      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'checked', checked || false);\\n    }\\n\\n    var value = LinkedValueUtils.getValue(props);\\n    if (value != null) {\\n      // Cast `value` to a string to ensure the value is set correctly. While\\n      // browsers typically do this as necessary, jsdom doesn't.\\n      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);\\n    }\\n  }\\n};\\n\\nfunction _handleChange(event) {\\n  var props = this._currentElement.props;\\n\\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\\n\\n  // Here we use asap to wait until all updates have propagated, which\\n  // is important when using controlled components within layers:\\n  // https://github.com/facebook/react/issues/1698\\n  ReactUpdates.asap(forceUpdateIfMounted, this);\\n\\n  var name = props.name;\\n  if (props.type === 'radio' && name != null) {\\n    var rootNode = ReactMount.getNode(this._rootNodeID);\\n    var queryRoot = rootNode;\\n\\n    while (queryRoot.parentNode) {\\n      queryRoot = queryRoot.parentNode;\\n    }\\n\\n    // If `rootNode.form` was non-null, then we could try `form.elements`,\\n    // but that sometimes behaves strangely in IE8. We could also try using\\n    // `form.getElementsByName`, but that will only return direct children\\n    // and won't include inputs that use the HTML5 `form=` attribute. Since\\n    // the input might not even be in a form, let's just use the global\\n    // `querySelectorAll` to ensure we don't miss anything.\\n    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type=\\\"radio\\\"]');\\n\\n    for (var i = 0; i < group.length; i++) {\\n      var otherNode = group[i];\\n      if (otherNode === rootNode || otherNode.form !== rootNode.form) {\\n        continue;\\n      }\\n      // This will throw if radio buttons rendered by different copies of React\\n      // and the same name are rendered into the same form (same as #1939).\\n      // That's probably okay; we don't support it just as we don't support\\n      // mixing React with non-React.\\n      var otherID = ReactMount.getID(otherNode);\\n      !otherID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the ' + 'same `name` is not supported.') : invariant(false) : undefined;\\n      var otherInstance = instancesByReactID[otherID];\\n      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Unknown radio button ID %s.', otherID) : invariant(false) : undefined;\\n      // If this is a controlled radio button group, forcing the input that\\n      // was previously checked to update will cause it to be come re-checked\\n      // as appropriate.\\n      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);\\n    }\\n  }\\n\\n  return returnValue;\\n}\\n\\nmodule.exports = ReactDOMInput;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDOMOption\\n */\\n\\n'use strict';\\n\\nvar ReactChildren = require('./ReactChildren');\\nvar ReactDOMSelect = require('./ReactDOMSelect');\\n\\nvar assign = require('./Object.assign');\\nvar warning = require('fbjs/lib/warning');\\n\\nvar valueContextKey = ReactDOMSelect.valueContextKey;\\n\\n/**\\n * Implements an <option> native component that warns when `selected` is set.\\n */\\nvar ReactDOMOption = {\\n  mountWrapper: function (inst, props, context) {\\n    // TODO (yungsters): Remove support for `selected` in <option>.\\n    if (process.env.NODE_ENV !== 'production') {\\n      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;\\n    }\\n\\n    // Look up whether this option is 'selected' via context\\n    var selectValue = context[valueContextKey];\\n\\n    // If context key is null (e.g., no specified value or after initial mount)\\n    // or missing (e.g., for <datalist>), we don't change props.selected\\n    var selected = null;\\n    if (selectValue != null) {\\n      selected = false;\\n      if (Array.isArray(selectValue)) {\\n        // multiple\\n        for (var i = 0; i < selectValue.length; i++) {\\n          if ('' + selectValue[i] === '' + props.value) {\\n            selected = true;\\n            break;\\n          }\\n        }\\n      } else {\\n        selected = '' + selectValue === '' + props.value;\\n      }\\n    }\\n\\n    inst._wrapperState = { selected: selected };\\n  },\\n\\n  getNativeProps: function (inst, props, context) {\\n    var nativeProps = assign({ selected: undefined, children: undefined }, props);\\n\\n    // Read state only from initial mount because <select> updates value\\n    // manually; we need the initial state only for server rendering\\n    if (inst._wrapperState.selected != null) {\\n      nativeProps.selected = inst._wrapperState.selected;\\n    }\\n\\n    var content = '';\\n\\n    // Flatten children and warn if they aren't strings or numbers;\\n    // invalid types are ignored.\\n    ReactChildren.forEach(props.children, function (child) {\\n      if (child == null) {\\n        return;\\n      }\\n      if (typeof child === 'string' || typeof child === 'number') {\\n        content += child;\\n      } else {\\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;\\n      }\\n    });\\n\\n    nativeProps.children = content;\\n    return nativeProps;\\n  }\\n\\n};\\n\\nmodule.exports = ReactDOMOption;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDOMSelection\\n */\\n\\n'use strict';\\n\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\n\\nvar getNodeForCharacterOffset = require('./getNodeForCharacterOffset');\\nvar getTextContentAccessor = require('./getTextContentAccessor');\\n\\n/**\\n * While `isCollapsed` is available on the Selection object and `collapsed`\\n * is available on the Range object, IE11 sometimes gets them wrong.\\n * If the anchor/focus nodes and offsets are the same, the range is collapsed.\\n */\\nfunction isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {\\n  return anchorNode === focusNode && anchorOffset === focusOffset;\\n}\\n\\n/**\\n * Get the appropriate anchor and focus node/offset pairs for IE.\\n *\\n * The catch here is that IE's selection API doesn't provide information\\n * about whether the selection is forward or backward, so we have to\\n * behave as though it's always forward.\\n *\\n * IE text differs from modern selection in that it behaves as though\\n * block elements end with a new line. This means character offsets will\\n * differ between the two APIs.\\n *\\n * @param {DOMElement} node\\n * @return {object}\\n */\\nfunction getIEOffsets(node) {\\n  var selection = document.selection;\\n  var selectedRange = selection.createRange();\\n  var selectedLength = selectedRange.text.length;\\n\\n  // Duplicate selection so we can move range without breaking user selection.\\n  var fromStart = selectedRange.duplicate();\\n  fromStart.moveToElementText(node);\\n  fromStart.setEndPoint('EndToStart', selectedRange);\\n\\n  var startOffset = fromStart.text.length;\\n  var endOffset = startOffset + selectedLength;\\n\\n  return {\\n    start: startOffset,\\n    end: endOffset\\n  };\\n}\\n\\n/**\\n * @param {DOMElement} node\\n * @return {?object}\\n */\\nfunction getModernOffsets(node) {\\n  var selection = window.getSelection && window.getSelection();\\n\\n  if (!selection || selection.rangeCount === 0) {\\n    return null;\\n  }\\n\\n  var anchorNode = selection.anchorNode;\\n  var anchorOffset = selection.anchorOffset;\\n  var focusNode = selection.focusNode;\\n  var focusOffset = selection.focusOffset;\\n\\n  var currentRange = selection.getRangeAt(0);\\n\\n  // In Firefox, range.startContainer and range.endContainer can be \\\"anonymous\\n  // divs\\\", e.g. the up/down buttons on an <input type=\\\"number\\\">. Anonymous\\n  // divs do not seem to expose properties, triggering a \\\"Permission denied\\n  // error\\\" if any of its properties are accessed. The only seemingly possible\\n  // way to avoid erroring is to access a property that typically works for\\n  // non-anonymous divs and catch any error that may otherwise arise. See\\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427\\n  try {\\n    /* eslint-disable no-unused-expressions */\\n    currentRange.startContainer.nodeType;\\n    currentRange.endContainer.nodeType;\\n    /* eslint-enable no-unused-expressions */\\n  } catch (e) {\\n    return null;\\n  }\\n\\n  // If the node and offset values are the same, the selection is collapsed.\\n  // `Selection.isCollapsed` is available natively, but IE sometimes gets\\n  // this value wrong.\\n  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\\n\\n  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;\\n\\n  var tempRange = currentRange.cloneRange();\\n  tempRange.selectNodeContents(node);\\n  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);\\n\\n  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);\\n\\n  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;\\n  var end = start + rangeLength;\\n\\n  // Detect whether the selection is backward.\\n  var detectionRange = document.createRange();\\n  detectionRange.setStart(anchorNode, anchorOffset);\\n  detectionRange.setEnd(focusNode, focusOffset);\\n  var isBackward = detectionRange.collapsed;\\n\\n  return {\\n    start: isBackward ? end : start,\\n    end: isBackward ? start : end\\n  };\\n}\\n\\n/**\\n * @param {DOMElement|DOMTextNode} node\\n * @param {object} offsets\\n */\\nfunction setIEOffsets(node, offsets) {\\n  var range = document.selection.createRange().duplicate();\\n  var start, end;\\n\\n  if (typeof offsets.end === 'undefined') {\\n    start = offsets.start;\\n    end = start;\\n  } else if (offsets.start > offsets.end) {\\n    start = offsets.end;\\n    end = offsets.start;\\n  } else {\\n    start = offsets.start;\\n    end = offsets.end;\\n  }\\n\\n  range.moveToElementText(node);\\n  range.moveStart('character', start);\\n  range.setEndPoint('EndToStart', range);\\n  range.moveEnd('character', end - start);\\n  range.select();\\n}\\n\\n/**\\n * In modern non-IE browsers, we can support both forward and backward\\n * selections.\\n *\\n * Note: IE10+ supports the Selection object, but it does not support\\n * the `extend` method, which means that even in modern IE, it's not possible\\n * to programatically create a backward selection. Thus, for all IE\\n * versions, we use the old IE API to create our selections.\\n *\\n * @param {DOMElement|DOMTextNode} node\\n * @param {object} offsets\\n */\\nfunction setModernOffsets(node, offsets) {\\n  if (!window.getSelection) {\\n    return;\\n  }\\n\\n  var selection = window.getSelection();\\n  var length = node[getTextContentAccessor()].length;\\n  var start = Math.min(offsets.start, length);\\n  var end = typeof offsets.end === 'undefined' ? start : Math.min(offsets.end, length);\\n\\n  // IE 11 uses modern selection, but doesn't support the extend method.\\n  // Flip backward selections, so we can set with a single range.\\n  if (!selection.extend && start > end) {\\n    var temp = end;\\n    end = start;\\n    start = temp;\\n  }\\n\\n  var startMarker = getNodeForCharacterOffset(node, start);\\n  var endMarker = getNodeForCharacterOffset(node, end);\\n\\n  if (startMarker && endMarker) {\\n    var range = document.createRange();\\n    range.setStart(startMarker.node, startMarker.offset);\\n    selection.removeAllRanges();\\n\\n    if (start > end) {\\n      selection.addRange(range);\\n      selection.extend(endMarker.node, endMarker.offset);\\n    } else {\\n      range.setEnd(endMarker.node, endMarker.offset);\\n      selection.addRange(range);\\n    }\\n  }\\n}\\n\\nvar useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);\\n\\nvar ReactDOMSelection = {\\n  /**\\n   * @param {DOMElement} node\\n   */\\n  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,\\n\\n  /**\\n   * @param {DOMElement|DOMTextNode} node\\n   * @param {object} offsets\\n   */\\n  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets\\n};\\n\\nmodule.exports = ReactDOMSelection;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDOMSelect\\n */\\n\\n'use strict';\\n\\nvar LinkedValueUtils = require('./LinkedValueUtils');\\nvar ReactMount = require('./ReactMount');\\nvar ReactUpdates = require('./ReactUpdates');\\n\\nvar assign = require('./Object.assign');\\nvar warning = require('fbjs/lib/warning');\\n\\nvar valueContextKey = '__ReactDOMSelect_value$' + Math.random().toString(36).slice(2);\\n\\nfunction updateOptionsIfPendingUpdateAndMounted() {\\n  if (this._rootNodeID && this._wrapperState.pendingUpdate) {\\n    this._wrapperState.pendingUpdate = false;\\n\\n    var props = this._currentElement.props;\\n    var value = LinkedValueUtils.getValue(props);\\n\\n    if (value != null) {\\n      updateOptions(this, props, value);\\n    }\\n  }\\n}\\n\\nfunction getDeclarationErrorAddendum(owner) {\\n  if (owner) {\\n    var name = owner.getName();\\n    if (name) {\\n      return ' Check the render method of `' + name + '`.';\\n    }\\n  }\\n  return '';\\n}\\n\\nvar valuePropNames = ['value', 'defaultValue'];\\n\\n/**\\n * Validation function for `value` and `defaultValue`.\\n * @private\\n */\\nfunction checkSelectPropTypes(inst, props) {\\n  var owner = inst._currentElement._owner;\\n  LinkedValueUtils.checkPropTypes('select', props, owner);\\n\\n  for (var i = 0; i < valuePropNames.length; i++) {\\n    var propName = valuePropNames[i];\\n    if (props[propName] == null) {\\n      continue;\\n    }\\n    if (props.multiple) {\\n      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;\\n    } else {\\n      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : undefined;\\n    }\\n  }\\n}\\n\\n/**\\n * @param {ReactDOMComponent} inst\\n * @param {boolean} multiple\\n * @param {*} propValue A stringable (with `multiple`, a list of stringables).\\n * @private\\n */\\nfunction updateOptions(inst, multiple, propValue) {\\n  var selectedValue, i;\\n  var options = ReactMount.getNode(inst._rootNodeID).options;\\n\\n  if (multiple) {\\n    selectedValue = {};\\n    for (i = 0; i < propValue.length; i++) {\\n      selectedValue['' + propValue[i]] = true;\\n    }\\n    for (i = 0; i < options.length; i++) {\\n      var selected = selectedValue.hasOwnProperty(options[i].value);\\n      if (options[i].selected !== selected) {\\n        options[i].selected = selected;\\n      }\\n    }\\n  } else {\\n    // Do not set `select.value` as exact behavior isn't consistent across all\\n    // browsers for all cases.\\n    selectedValue = '' + propValue;\\n    for (i = 0; i < options.length; i++) {\\n      if (options[i].value === selectedValue) {\\n        options[i].selected = true;\\n        return;\\n      }\\n    }\\n    if (options.length) {\\n      options[0].selected = true;\\n    }\\n  }\\n}\\n\\n/**\\n * Implements a <select> native component that allows optionally setting the\\n * props `value` and `defaultValue`. If `multiple` is false, the prop must be a\\n * stringable. If `multiple` is true, the prop must be an array of stringables.\\n *\\n * If `value` is not supplied (or null/undefined), user actions that change the\\n * selected option will trigger updates to the rendered options.\\n *\\n * If it is supplied (and not null/undefined), the rendered options will not\\n * update in response to user actions. Instead, the `value` prop must change in\\n * order for the rendered options to update.\\n *\\n * If `defaultValue` is provided, any options with the supplied values will be\\n * selected.\\n */\\nvar ReactDOMSelect = {\\n  valueContextKey: valueContextKey,\\n\\n  getNativeProps: function (inst, props, context) {\\n    return assign({}, props, {\\n      onChange: inst._wrapperState.onChange,\\n      value: undefined\\n    });\\n  },\\n\\n  mountWrapper: function (inst, props) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      checkSelectPropTypes(inst, props);\\n    }\\n\\n    var value = LinkedValueUtils.getValue(props);\\n    inst._wrapperState = {\\n      pendingUpdate: false,\\n      initialValue: value != null ? value : props.defaultValue,\\n      onChange: _handleChange.bind(inst),\\n      wasMultiple: Boolean(props.multiple)\\n    };\\n  },\\n\\n  processChildContext: function (inst, props, context) {\\n    // Pass down initial value so initial generated markup has correct\\n    // `selected` attributes\\n    var childContext = assign({}, context);\\n    childContext[valueContextKey] = inst._wrapperState.initialValue;\\n    return childContext;\\n  },\\n\\n  postUpdateWrapper: function (inst) {\\n    var props = inst._currentElement.props;\\n\\n    // After the initial mount, we control selected-ness manually so don't pass\\n    // the context value down\\n    inst._wrapperState.initialValue = undefined;\\n\\n    var wasMultiple = inst._wrapperState.wasMultiple;\\n    inst._wrapperState.wasMultiple = Boolean(props.multiple);\\n\\n    var value = LinkedValueUtils.getValue(props);\\n    if (value != null) {\\n      inst._wrapperState.pendingUpdate = false;\\n      updateOptions(inst, Boolean(props.multiple), value);\\n    } else if (wasMultiple !== Boolean(props.multiple)) {\\n      // For simplicity, reapply `defaultValue` if `multiple` is toggled.\\n      if (props.defaultValue != null) {\\n        updateOptions(inst, Boolean(props.multiple), props.defaultValue);\\n      } else {\\n        // Revert the select back to its default unselected state.\\n        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');\\n      }\\n    }\\n  }\\n};\\n\\nfunction _handleChange(event) {\\n  var props = this._currentElement.props;\\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\\n\\n  this._wrapperState.pendingUpdate = true;\\n  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);\\n  return returnValue;\\n}\\n\\nmodule.exports = ReactDOMSelect;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDOMServer\\n */\\n\\n'use strict';\\n\\nvar ReactDefaultInjection = require('./ReactDefaultInjection');\\nvar ReactServerRendering = require('./ReactServerRendering');\\nvar ReactVersion = require('./ReactVersion');\\n\\nReactDefaultInjection.inject();\\n\\nvar ReactDOMServer = {\\n  renderToString: ReactServerRendering.renderToString,\\n  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,\\n  version: ReactVersion\\n};\\n\\nmodule.exports = ReactDOMServer;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDOMTextComponent\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar DOMChildrenOperations = require('./DOMChildrenOperations');\\nvar DOMPropertyOperations = require('./DOMPropertyOperations');\\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\\nvar ReactMount = require('./ReactMount');\\n\\nvar assign = require('./Object.assign');\\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\\nvar setTextContent = require('./setTextContent');\\nvar validateDOMNesting = require('./validateDOMNesting');\\n\\n/**\\n * Text nodes violate a couple assumptions that React makes about components:\\n *\\n *  - When mounting text into the DOM, adjacent text nodes are merged.\\n *  - Text nodes cannot be assigned a React root ID.\\n *\\n * This component is used to wrap strings in elements so that they can undergo\\n * the same reconciliation that is applied to elements.\\n *\\n * TODO: Investigate representing React components in the DOM with text nodes.\\n *\\n * @class ReactDOMTextComponent\\n * @extends ReactComponent\\n * @internal\\n */\\nvar ReactDOMTextComponent = function (props) {\\n  // This constructor and its argument is currently used by mocks.\\n};\\n\\nassign(ReactDOMTextComponent.prototype, {\\n\\n  /**\\n   * @param {ReactText} text\\n   * @internal\\n   */\\n  construct: function (text) {\\n    // TODO: This is really a ReactText (ReactNode), not a ReactElement\\n    this._currentElement = text;\\n    this._stringText = '' + text;\\n\\n    // Properties\\n    this._rootNodeID = null;\\n    this._mountIndex = 0;\\n  },\\n\\n  /**\\n   * Creates the markup for this text node. This node is not intended to have\\n   * any features besides containing text content.\\n   *\\n   * @param {string} rootID DOM ID of the root node.\\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\\n   * @return {string} Markup for this text node.\\n   * @internal\\n   */\\n  mountComponent: function (rootID, transaction, context) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      if (context[validateDOMNesting.ancestorInfoContextKey]) {\\n        validateDOMNesting('span', null, context[validateDOMNesting.ancestorInfoContextKey]);\\n      }\\n    }\\n\\n    this._rootNodeID = rootID;\\n    if (transaction.useCreateElement) {\\n      var ownerDocument = context[ReactMount.ownerDocumentContextKey];\\n      var el = ownerDocument.createElement('span');\\n      DOMPropertyOperations.setAttributeForID(el, rootID);\\n      // Populate node cache\\n      ReactMount.getID(el);\\n      setTextContent(el, this._stringText);\\n      return el;\\n    } else {\\n      var escapedText = escapeTextContentForBrowser(this._stringText);\\n\\n      if (transaction.renderToStaticMarkup) {\\n        // Normally we'd wrap this in a `span` for the reasons stated above, but\\n        // since this is a situation where React won't take over (static pages),\\n        // we can simply return the text as it is.\\n        return escapedText;\\n      }\\n\\n      return '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' + escapedText + '</span>';\\n    }\\n  },\\n\\n  /**\\n   * Updates this component by updating the text content.\\n   *\\n   * @param {ReactText} nextText The next text content\\n   * @param {ReactReconcileTransaction} transaction\\n   * @internal\\n   */\\n  receiveComponent: function (nextText, transaction) {\\n    if (nextText !== this._currentElement) {\\n      this._currentElement = nextText;\\n      var nextStringText = '' + nextText;\\n      if (nextStringText !== this._stringText) {\\n        // TODO: Save this as pending props and use performUpdateIfNecessary\\n        // and/or updateComponent to do the actual update for consistency with\\n        // other component types?\\n        this._stringText = nextStringText;\\n        var node = ReactMount.getNode(this._rootNodeID);\\n        DOMChildrenOperations.updateTextContent(node, nextStringText);\\n      }\\n    }\\n  },\\n\\n  unmountComponent: function () {\\n    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);\\n  }\\n\\n});\\n\\nmodule.exports = ReactDOMTextComponent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDOMTextarea\\n */\\n\\n'use strict';\\n\\nvar LinkedValueUtils = require('./LinkedValueUtils');\\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\\nvar ReactUpdates = require('./ReactUpdates');\\n\\nvar assign = require('./Object.assign');\\nvar invariant = require('fbjs/lib/invariant');\\nvar warning = require('fbjs/lib/warning');\\n\\nfunction forceUpdateIfMounted() {\\n  if (this._rootNodeID) {\\n    // DOM component is still mounted; update\\n    ReactDOMTextarea.updateWrapper(this);\\n  }\\n}\\n\\n/**\\n * Implements a <textarea> native component that allows setting `value`, and\\n * `defaultValue`. This differs from the traditional DOM API because value is\\n * usually set as PCDATA children.\\n *\\n * If `value` is not supplied (or null/undefined), user actions that affect the\\n * value will trigger updates to the element.\\n *\\n * If `value` is supplied (and not null/undefined), the rendered element will\\n * not trigger updates to the element. Instead, the `value` prop must change in\\n * order for the rendered element to be updated.\\n *\\n * The rendered element will be initialized with an empty value, the prop\\n * `defaultValue` if specified, or the children content (deprecated).\\n */\\nvar ReactDOMTextarea = {\\n  getNativeProps: function (inst, props, context) {\\n    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : invariant(false) : undefined;\\n\\n    // Always set children to the same thing. In IE9, the selection range will\\n    // get reset if `textContent` is mutated.\\n    var nativeProps = assign({}, props, {\\n      defaultValue: undefined,\\n      value: undefined,\\n      children: inst._wrapperState.initialValue,\\n      onChange: inst._wrapperState.onChange\\n    });\\n\\n    return nativeProps;\\n  },\\n\\n  mountWrapper: function (inst, props) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);\\n    }\\n\\n    var defaultValue = props.defaultValue;\\n    // TODO (yungsters): Remove support for children content in <textarea>.\\n    var children = props.children;\\n    if (children != null) {\\n      if (process.env.NODE_ENV !== 'production') {\\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : undefined;\\n      }\\n      !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : invariant(false) : undefined;\\n      if (Array.isArray(children)) {\\n        !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : invariant(false) : undefined;\\n        children = children[0];\\n      }\\n\\n      defaultValue = '' + children;\\n    }\\n    if (defaultValue == null) {\\n      defaultValue = '';\\n    }\\n    var value = LinkedValueUtils.getValue(props);\\n\\n    inst._wrapperState = {\\n      // We save the initial value so that `ReactDOMComponent` doesn't update\\n      // `textContent` (unnecessary since we update value).\\n      // The initial value can be a boolean or object so that's why it's\\n      // forced to be a string.\\n      initialValue: '' + (value != null ? value : defaultValue),\\n      onChange: _handleChange.bind(inst)\\n    };\\n  },\\n\\n  updateWrapper: function (inst) {\\n    var props = inst._currentElement.props;\\n    var value = LinkedValueUtils.getValue(props);\\n    if (value != null) {\\n      // Cast `value` to a string to ensure the value is set correctly. While\\n      // browsers typically do this as necessary, jsdom doesn't.\\n      ReactDOMIDOperations.updatePropertyByID(inst._rootNodeID, 'value', '' + value);\\n    }\\n  }\\n};\\n\\nfunction _handleChange(event) {\\n  var props = this._currentElement.props;\\n  var returnValue = LinkedValueUtils.executeOnChange(props, event);\\n  ReactUpdates.asap(forceUpdateIfMounted, this);\\n  return returnValue;\\n}\\n\\nmodule.exports = ReactDOMTextarea;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDOM\\n */\\n\\n/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/\\n\\n'use strict';\\n\\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\\nvar ReactDefaultInjection = require('./ReactDefaultInjection');\\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\\nvar ReactMount = require('./ReactMount');\\nvar ReactPerf = require('./ReactPerf');\\nvar ReactReconciler = require('./ReactReconciler');\\nvar ReactUpdates = require('./ReactUpdates');\\nvar ReactVersion = require('./ReactVersion');\\n\\nvar findDOMNode = require('./findDOMNode');\\nvar renderSubtreeIntoContainer = require('./renderSubtreeIntoContainer');\\nvar warning = require('fbjs/lib/warning');\\n\\nReactDefaultInjection.inject();\\n\\nvar render = ReactPerf.measure('React', 'render', ReactMount.render);\\n\\nvar React = {\\n  findDOMNode: findDOMNode,\\n  render: render,\\n  unmountComponentAtNode: ReactMount.unmountComponentAtNode,\\n  version: ReactVersion,\\n\\n  /* eslint-disable camelcase */\\n  unstable_batchedUpdates: ReactUpdates.batchedUpdates,\\n  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer\\n};\\n\\n// Inject the runtime into a devtools global hook regardless of browser.\\n// Allows for debugging when the hook is injected on the page.\\n/* eslint-enable camelcase */\\nif (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {\\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({\\n    CurrentOwner: ReactCurrentOwner,\\n    InstanceHandles: ReactInstanceHandles,\\n    Mount: ReactMount,\\n    Reconciler: ReactReconciler,\\n    TextComponent: ReactDOMTextComponent\\n  });\\n}\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  var ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\n  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {\\n\\n    // First check if devtools is not installed\\n    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\\n      // If we're in Chrome or Firefox, provide a download link if not installed.\\n      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {\\n        console.debug('Download the React DevTools for a better development experience: ' + 'https://fb.me/react-devtools');\\n      }\\n    }\\n\\n    // If we're in IE8, check to see if we are in compatibility mode and provide\\n    // information on preventing compatibility mode\\n    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;\\n\\n    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" />') : undefined;\\n\\n    var expectedFeatures = [\\n    // shims\\n    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim,\\n\\n    // shams\\n    Object_create, Object_freeze];\\n\\n    for (var i = 0; i < expectedFeatures.length; i++) {\\n      if (!expectedFeatures[i]) {\\n        console.error('One or more ES5 shims expected by React are not available: ' + 'Add the es5-shim package with `meteor add es5-shim`');\\n        break;\\n      }\\n    }\\n  }\\n}\\n\\nmodule.exports = React;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDefaultBatchingStrategy\\n */\\n\\n'use strict';\\n\\nvar ReactUpdates = require('./ReactUpdates');\\nvar Transaction = require('./Transaction');\\n\\nvar assign = require('./Object.assign');\\nvar emptyFunction = require('fbjs/lib/emptyFunction');\\n\\nvar RESET_BATCHED_UPDATES = {\\n  initialize: emptyFunction,\\n  close: function () {\\n    ReactDefaultBatchingStrategy.isBatchingUpdates = false;\\n  }\\n};\\n\\nvar FLUSH_BATCHED_UPDATES = {\\n  initialize: emptyFunction,\\n  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)\\n};\\n\\nvar TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];\\n\\nfunction ReactDefaultBatchingStrategyTransaction() {\\n  this.reinitializeTransaction();\\n}\\n\\nassign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {\\n  getTransactionWrappers: function () {\\n    return TRANSACTION_WRAPPERS;\\n  }\\n});\\n\\nvar transaction = new ReactDefaultBatchingStrategyTransaction();\\n\\nvar ReactDefaultBatchingStrategy = {\\n  isBatchingUpdates: false,\\n\\n  /**\\n   * Call the provided function in a context within which calls to `setState`\\n   * and friends are batched such that components aren't updated unnecessarily.\\n   */\\n  batchedUpdates: function (callback, a, b, c, d, e) {\\n    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;\\n\\n    ReactDefaultBatchingStrategy.isBatchingUpdates = true;\\n\\n    // The code is written this way to avoid extra allocations\\n    if (alreadyBatchingUpdates) {\\n      callback(a, b, c, d, e);\\n    } else {\\n      transaction.perform(callback, null, a, b, c, d, e);\\n    }\\n  }\\n};\\n\\nmodule.exports = ReactDefaultBatchingStrategy;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDefaultInjection\\n */\\n\\n'use strict';\\n\\nvar BeforeInputEventPlugin = require('./BeforeInputEventPlugin');\\nvar ChangeEventPlugin = require('./ChangeEventPlugin');\\nvar ClientReactRootIndex = require('./ClientReactRootIndex');\\nvar DefaultEventPluginOrder = require('./DefaultEventPluginOrder');\\nvar EnterLeaveEventPlugin = require('./EnterLeaveEventPlugin');\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\nvar HTMLDOMPropertyConfig = require('./HTMLDOMPropertyConfig');\\nvar ReactBrowserComponentMixin = require('./ReactBrowserComponentMixin');\\nvar ReactComponentBrowserEnvironment = require('./ReactComponentBrowserEnvironment');\\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\\nvar ReactDOMComponent = require('./ReactDOMComponent');\\nvar ReactDOMTextComponent = require('./ReactDOMTextComponent');\\nvar ReactEventListener = require('./ReactEventListener');\\nvar ReactInjection = require('./ReactInjection');\\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\\nvar ReactMount = require('./ReactMount');\\nvar ReactReconcileTransaction = require('./ReactReconcileTransaction');\\nvar SelectEventPlugin = require('./SelectEventPlugin');\\nvar ServerReactRootIndex = require('./ServerReactRootIndex');\\nvar SimpleEventPlugin = require('./SimpleEventPlugin');\\nvar SVGDOMPropertyConfig = require('./SVGDOMPropertyConfig');\\n\\nvar alreadyInjected = false;\\n\\nfunction inject() {\\n  if (alreadyInjected) {\\n    // TODO: This is currently true because these injections are shared between\\n    // the client and the server package. They should be built independently\\n    // and not share any injection state. Then this problem will be solved.\\n    return;\\n  }\\n  alreadyInjected = true;\\n\\n  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);\\n\\n  /**\\n   * Inject modules for resolving DOM hierarchy and plugin ordering.\\n   */\\n  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);\\n  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);\\n  ReactInjection.EventPluginHub.injectMount(ReactMount);\\n\\n  /**\\n   * Some important event plugins included by default (without having to require\\n   * them).\\n   */\\n  ReactInjection.EventPluginHub.injectEventPluginsByName({\\n    SimpleEventPlugin: SimpleEventPlugin,\\n    EnterLeaveEventPlugin: EnterLeaveEventPlugin,\\n    ChangeEventPlugin: ChangeEventPlugin,\\n    SelectEventPlugin: SelectEventPlugin,\\n    BeforeInputEventPlugin: BeforeInputEventPlugin\\n  });\\n\\n  ReactInjection.NativeComponent.injectGenericComponentClass(ReactDOMComponent);\\n\\n  ReactInjection.NativeComponent.injectTextComponentClass(ReactDOMTextComponent);\\n\\n  ReactInjection.Class.injectMixin(ReactBrowserComponentMixin);\\n\\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);\\n  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);\\n\\n  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');\\n\\n  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);\\n  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);\\n\\n  ReactInjection.RootIndex.injectCreateReactRootIndex(ExecutionEnvironment.canUseDOM ? ClientReactRootIndex.createReactRootIndex : ServerReactRootIndex.createReactRootIndex);\\n\\n  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);\\n\\n  if (process.env.NODE_ENV !== 'production') {\\n    var url = ExecutionEnvironment.canUseDOM && window.location.href || '';\\n    if (/[?&]react_perf\\\\b/.test(url)) {\\n      var ReactDefaultPerf = require('./ReactDefaultPerf');\\n      ReactDefaultPerf.start();\\n    }\\n  }\\n}\\n\\nmodule.exports = {\\n  inject: inject\\n};\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDefaultPerfAnalysis\\n */\\n\\n'use strict';\\n\\nvar assign = require('./Object.assign');\\n\\n// Don't try to save users less than 1.2ms (a number I made up)\\nvar DONT_CARE_THRESHOLD = 1.2;\\nvar DOM_OPERATION_TYPES = {\\n  '_mountImageIntoNode': 'set innerHTML',\\n  INSERT_MARKUP: 'set innerHTML',\\n  MOVE_EXISTING: 'move',\\n  REMOVE_NODE: 'remove',\\n  SET_MARKUP: 'set innerHTML',\\n  TEXT_CONTENT: 'set textContent',\\n  'setValueForProperty': 'update attribute',\\n  'setValueForAttribute': 'update attribute',\\n  'deleteValueForProperty': 'remove attribute',\\n  'dangerouslyReplaceNodeWithMarkupByID': 'replace'\\n};\\n\\nfunction getTotalTime(measurements) {\\n  // TODO: return number of DOM ops? could be misleading.\\n  // TODO: measure dropped frames after reconcile?\\n  // TODO: log total time of each reconcile and the top-level component\\n  // class that triggered it.\\n  var totalTime = 0;\\n  for (var i = 0; i < measurements.length; i++) {\\n    var measurement = measurements[i];\\n    totalTime += measurement.totalTime;\\n  }\\n  return totalTime;\\n}\\n\\nfunction getDOMSummary(measurements) {\\n  var items = [];\\n  measurements.forEach(function (measurement) {\\n    Object.keys(measurement.writes).forEach(function (id) {\\n      measurement.writes[id].forEach(function (write) {\\n        items.push({\\n          id: id,\\n          type: DOM_OPERATION_TYPES[write.type] || write.type,\\n          args: write.args\\n        });\\n      });\\n    });\\n  });\\n  return items;\\n}\\n\\nfunction getExclusiveSummary(measurements) {\\n  var candidates = {};\\n  var displayName;\\n\\n  for (var i = 0; i < measurements.length; i++) {\\n    var measurement = measurements[i];\\n    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\\n\\n    for (var id in allIDs) {\\n      displayName = measurement.displayNames[id].current;\\n\\n      candidates[displayName] = candidates[displayName] || {\\n        componentName: displayName,\\n        inclusive: 0,\\n        exclusive: 0,\\n        render: 0,\\n        count: 0\\n      };\\n      if (measurement.render[id]) {\\n        candidates[displayName].render += measurement.render[id];\\n      }\\n      if (measurement.exclusive[id]) {\\n        candidates[displayName].exclusive += measurement.exclusive[id];\\n      }\\n      if (measurement.inclusive[id]) {\\n        candidates[displayName].inclusive += measurement.inclusive[id];\\n      }\\n      if (measurement.counts[id]) {\\n        candidates[displayName].count += measurement.counts[id];\\n      }\\n    }\\n  }\\n\\n  // Now make a sorted array with the results.\\n  var arr = [];\\n  for (displayName in candidates) {\\n    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {\\n      arr.push(candidates[displayName]);\\n    }\\n  }\\n\\n  arr.sort(function (a, b) {\\n    return b.exclusive - a.exclusive;\\n  });\\n\\n  return arr;\\n}\\n\\nfunction getInclusiveSummary(measurements, onlyClean) {\\n  var candidates = {};\\n  var inclusiveKey;\\n\\n  for (var i = 0; i < measurements.length; i++) {\\n    var measurement = measurements[i];\\n    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\\n    var cleanComponents;\\n\\n    if (onlyClean) {\\n      cleanComponents = getUnchangedComponents(measurement);\\n    }\\n\\n    for (var id in allIDs) {\\n      if (onlyClean && !cleanComponents[id]) {\\n        continue;\\n      }\\n\\n      var displayName = measurement.displayNames[id];\\n\\n      // Inclusive time is not useful for many components without knowing where\\n      // they are instantiated. So we aggregate inclusive time with both the\\n      // owner and current displayName as the key.\\n      inclusiveKey = displayName.owner + ' > ' + displayName.current;\\n\\n      candidates[inclusiveKey] = candidates[inclusiveKey] || {\\n        componentName: inclusiveKey,\\n        time: 0,\\n        count: 0\\n      };\\n\\n      if (measurement.inclusive[id]) {\\n        candidates[inclusiveKey].time += measurement.inclusive[id];\\n      }\\n      if (measurement.counts[id]) {\\n        candidates[inclusiveKey].count += measurement.counts[id];\\n      }\\n    }\\n  }\\n\\n  // Now make a sorted array with the results.\\n  var arr = [];\\n  for (inclusiveKey in candidates) {\\n    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {\\n      arr.push(candidates[inclusiveKey]);\\n    }\\n  }\\n\\n  arr.sort(function (a, b) {\\n    return b.time - a.time;\\n  });\\n\\n  return arr;\\n}\\n\\nfunction getUnchangedComponents(measurement) {\\n  // For a given reconcile, look at which components did not actually\\n  // render anything to the DOM and return a mapping of their ID to\\n  // the amount of time it took to render the entire subtree.\\n  var cleanComponents = {};\\n  var dirtyLeafIDs = Object.keys(measurement.writes);\\n  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\\n\\n  for (var id in allIDs) {\\n    var isDirty = false;\\n    // For each component that rendered, see if a component that triggered\\n    // a DOM op is in its subtree.\\n    for (var i = 0; i < dirtyLeafIDs.length; i++) {\\n      if (dirtyLeafIDs[i].indexOf(id) === 0) {\\n        isDirty = true;\\n        break;\\n      }\\n    }\\n    // check if component newly created\\n    if (measurement.created[id]) {\\n      isDirty = true;\\n    }\\n    if (!isDirty && measurement.counts[id] > 0) {\\n      cleanComponents[id] = true;\\n    }\\n  }\\n  return cleanComponents;\\n}\\n\\nvar ReactDefaultPerfAnalysis = {\\n  getExclusiveSummary: getExclusiveSummary,\\n  getInclusiveSummary: getInclusiveSummary,\\n  getDOMSummary: getDOMSummary,\\n  getTotalTime: getTotalTime\\n};\\n\\nmodule.exports = ReactDefaultPerfAnalysis;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactDefaultPerf\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar DOMProperty = require('./DOMProperty');\\nvar ReactDefaultPerfAnalysis = require('./ReactDefaultPerfAnalysis');\\nvar ReactMount = require('./ReactMount');\\nvar ReactPerf = require('./ReactPerf');\\n\\nvar performanceNow = require('fbjs/lib/performanceNow');\\n\\nfunction roundFloat(val) {\\n  return Math.floor(val * 100) / 100;\\n}\\n\\nfunction addValue(obj, key, val) {\\n  obj[key] = (obj[key] || 0) + val;\\n}\\n\\nvar ReactDefaultPerf = {\\n  _allMeasurements: [], // last item in the list is the current one\\n  _mountStack: [0],\\n  _injected: false,\\n\\n  start: function () {\\n    if (!ReactDefaultPerf._injected) {\\n      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);\\n    }\\n\\n    ReactDefaultPerf._allMeasurements.length = 0;\\n    ReactPerf.enableMeasure = true;\\n  },\\n\\n  stop: function () {\\n    ReactPerf.enableMeasure = false;\\n  },\\n\\n  getLastMeasurements: function () {\\n    return ReactDefaultPerf._allMeasurements;\\n  },\\n\\n  printExclusive: function (measurements) {\\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\\n    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);\\n    console.table(summary.map(function (item) {\\n      return {\\n        'Component class name': item.componentName,\\n        'Total inclusive time (ms)': roundFloat(item.inclusive),\\n        'Exclusive mount time (ms)': roundFloat(item.exclusive),\\n        'Exclusive render time (ms)': roundFloat(item.render),\\n        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),\\n        'Render time per instance (ms)': roundFloat(item.render / item.count),\\n        'Instances': item.count\\n      };\\n    }));\\n    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct\\n    // number.\\n  },\\n\\n  printInclusive: function (measurements) {\\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);\\n    console.table(summary.map(function (item) {\\n      return {\\n        'Owner > component': item.componentName,\\n        'Inclusive time (ms)': roundFloat(item.time),\\n        'Instances': item.count\\n      };\\n    }));\\n    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');\\n  },\\n\\n  getMeasurementsSummaryMap: function (measurements) {\\n    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements, true);\\n    return summary.map(function (item) {\\n      return {\\n        'Owner > component': item.componentName,\\n        'Wasted time (ms)': item.time,\\n        'Instances': item.count\\n      };\\n    });\\n  },\\n\\n  printWasted: function (measurements) {\\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\\n    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));\\n    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');\\n  },\\n\\n  printDOM: function (measurements) {\\n    measurements = measurements || ReactDefaultPerf._allMeasurements;\\n    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);\\n    console.table(summary.map(function (item) {\\n      var result = {};\\n      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;\\n      result.type = item.type;\\n      result.args = JSON.stringify(item.args);\\n      return result;\\n    }));\\n    console.log('Total time:', ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms');\\n  },\\n\\n  _recordWrite: function (id, fnName, totalTime, args) {\\n    // TODO: totalTime isn't that useful since it doesn't count paints/reflows\\n    var writes = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].writes;\\n    writes[id] = writes[id] || [];\\n    writes[id].push({\\n      type: fnName,\\n      time: totalTime,\\n      args: args\\n    });\\n  },\\n\\n  measure: function (moduleName, fnName, func) {\\n    return function () {\\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\\n        args[_key] = arguments[_key];\\n      }\\n\\n      var totalTime;\\n      var rv;\\n      var start;\\n\\n      if (fnName === '_renderNewRootComponent' || fnName === 'flushBatchedUpdates') {\\n        // A \\\"measurement\\\" is a set of metrics recorded for each flush. We want\\n        // to group the metrics for a given flush together so we can look at the\\n        // components that rendered and the DOM operations that actually\\n        // happened to determine the amount of \\\"wasted work\\\" performed.\\n        ReactDefaultPerf._allMeasurements.push({\\n          exclusive: {},\\n          inclusive: {},\\n          render: {},\\n          counts: {},\\n          writes: {},\\n          displayNames: {},\\n          totalTime: 0,\\n          created: {}\\n        });\\n        start = performanceNow();\\n        rv = func.apply(this, args);\\n        ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1].totalTime = performanceNow() - start;\\n        return rv;\\n      } else if (fnName === '_mountImageIntoNode' || moduleName === 'ReactBrowserEventEmitter' || moduleName === 'ReactDOMIDOperations' || moduleName === 'CSSPropertyOperations' || moduleName === 'DOMChildrenOperations' || moduleName === 'DOMPropertyOperations') {\\n        start = performanceNow();\\n        rv = func.apply(this, args);\\n        totalTime = performanceNow() - start;\\n\\n        if (fnName === '_mountImageIntoNode') {\\n          var mountID = ReactMount.getID(args[1]);\\n          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);\\n        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {\\n          // special format\\n          args[0].forEach(function (update) {\\n            var writeArgs = {};\\n            if (update.fromIndex !== null) {\\n              writeArgs.fromIndex = update.fromIndex;\\n            }\\n            if (update.toIndex !== null) {\\n              writeArgs.toIndex = update.toIndex;\\n            }\\n            if (update.textContent !== null) {\\n              writeArgs.textContent = update.textContent;\\n            }\\n            if (update.markupIndex !== null) {\\n              writeArgs.markup = args[1][update.markupIndex];\\n            }\\n            ReactDefaultPerf._recordWrite(update.parentID, update.type, totalTime, writeArgs);\\n          });\\n        } else {\\n          // basic format\\n          var id = args[0];\\n          if (typeof id === 'object') {\\n            id = ReactMount.getID(args[0]);\\n          }\\n          ReactDefaultPerf._recordWrite(id, fnName, totalTime, Array.prototype.slice.call(args, 1));\\n        }\\n        return rv;\\n      } else if (moduleName === 'ReactCompositeComponent' && (fnName === 'mountComponent' || fnName === 'updateComponent' || // TODO: receiveComponent()?\\n      fnName === '_renderValidatedComponent')) {\\n\\n        if (this._currentElement.type === ReactMount.TopLevelWrapper) {\\n          return func.apply(this, args);\\n        }\\n\\n        var rootNodeID = fnName === 'mountComponent' ? args[0] : this._rootNodeID;\\n        var isRender = fnName === '_renderValidatedComponent';\\n        var isMount = fnName === 'mountComponent';\\n\\n        var mountStack = ReactDefaultPerf._mountStack;\\n        var entry = ReactDefaultPerf._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1];\\n\\n        if (isRender) {\\n          addValue(entry.counts, rootNodeID, 1);\\n        } else if (isMount) {\\n          entry.created[rootNodeID] = true;\\n          mountStack.push(0);\\n        }\\n\\n        start = performanceNow();\\n        rv = func.apply(this, args);\\n        totalTime = performanceNow() - start;\\n\\n        if (isRender) {\\n          addValue(entry.render, rootNodeID, totalTime);\\n        } else if (isMount) {\\n          var subMountTime = mountStack.pop();\\n          mountStack[mountStack.length - 1] += totalTime;\\n          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);\\n          addValue(entry.inclusive, rootNodeID, totalTime);\\n        } else {\\n          addValue(entry.inclusive, rootNodeID, totalTime);\\n        }\\n\\n        entry.displayNames[rootNodeID] = {\\n          current: this.getName(),\\n          owner: this._currentElement._owner ? this._currentElement._owner.getName() : '<root>'\\n        };\\n\\n        return rv;\\n      } else {\\n        return func.apply(this, args);\\n      }\\n    };\\n  }\\n};\\n\\nmodule.exports = ReactDefaultPerf;\",\n    \"/**\\n * Copyright 2014-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactElementValidator\\n */\\n\\n/**\\n * ReactElementValidator provides a wrapper around a element factory\\n * which validates the props passed to the element. This is intended to be\\n * used only in DEV and could be replaced by a static type checker for languages\\n * that support it.\\n */\\n\\n'use strict';\\n\\nvar ReactElement = require('./ReactElement');\\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\\n\\nvar canDefineProperty = require('./canDefineProperty');\\nvar getIteratorFn = require('./getIteratorFn');\\nvar invariant = require('fbjs/lib/invariant');\\nvar warning = require('fbjs/lib/warning');\\n\\nfunction getDeclarationErrorAddendum() {\\n  if (ReactCurrentOwner.current) {\\n    var name = ReactCurrentOwner.current.getName();\\n    if (name) {\\n      return ' Check the render method of `' + name + '`.';\\n    }\\n  }\\n  return '';\\n}\\n\\n/**\\n * Warn if there's no key explicitly set on dynamic arrays of children or\\n * object keys are not valid. This allows us to keep track of children between\\n * updates.\\n */\\nvar ownerHasKeyUseWarning = {};\\n\\nvar loggedTypeFailures = {};\\n\\n/**\\n * Warn if the element doesn't have an explicit key assigned to it.\\n * This element is in an array. The array could grow and shrink or be\\n * reordered. All children that haven't already been validated are required to\\n * have a \\\"key\\\" property assigned to it.\\n *\\n * @internal\\n * @param {ReactElement} element Element that requires a key.\\n * @param {*} parentType element's parent's type.\\n */\\nfunction validateExplicitKey(element, parentType) {\\n  if (!element._store || element._store.validated || element.key != null) {\\n    return;\\n  }\\n  element._store.validated = true;\\n\\n  var addenda = getAddendaForKeyUse('uniqueKey', element, parentType);\\n  if (addenda === null) {\\n    // we already showed the warning\\n    return;\\n  }\\n  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique \\\"key\\\" prop.' + '%s%s%s', addenda.parentOrOwner || '', addenda.childOwner || '', addenda.url || '') : undefined;\\n}\\n\\n/**\\n * Shared warning and monitoring code for the key warnings.\\n *\\n * @internal\\n * @param {string} messageType A key used for de-duping warnings.\\n * @param {ReactElement} element Component that requires a key.\\n * @param {*} parentType element's parent's type.\\n * @returns {?object} A set of addenda to use in the warning message, or null\\n * if the warning has already been shown before (and shouldn't be shown again).\\n */\\nfunction getAddendaForKeyUse(messageType, element, parentType) {\\n  var addendum = getDeclarationErrorAddendum();\\n  if (!addendum) {\\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\\n    if (parentName) {\\n      addendum = ' Check the top-level render call using <' + parentName + '>.';\\n    }\\n  }\\n\\n  var memoizer = ownerHasKeyUseWarning[messageType] || (ownerHasKeyUseWarning[messageType] = {});\\n  if (memoizer[addendum]) {\\n    return null;\\n  }\\n  memoizer[addendum] = true;\\n\\n  var addenda = {\\n    parentOrOwner: addendum,\\n    url: ' See https://fb.me/react-warning-keys for more information.',\\n    childOwner: null\\n  };\\n\\n  // Usually the current owner is the offender, but if it accepts children as a\\n  // property, it may be the creator of the child that's responsible for\\n  // assigning it a key.\\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\\n    // Give the component that originally created this child.\\n    addenda.childOwner = ' It was passed a child from ' + element._owner.getName() + '.';\\n  }\\n\\n  return addenda;\\n}\\n\\n/**\\n * Ensure that every element either is passed in a static location, in an\\n * array with an explicit keys property defined, or in an object literal\\n * with valid key property.\\n *\\n * @internal\\n * @param {ReactNode} node Statically passed child of any type.\\n * @param {*} parentType node's parent's type.\\n */\\nfunction validateChildKeys(node, parentType) {\\n  if (typeof node !== 'object') {\\n    return;\\n  }\\n  if (Array.isArray(node)) {\\n    for (var i = 0; i < node.length; i++) {\\n      var child = node[i];\\n      if (ReactElement.isValidElement(child)) {\\n        validateExplicitKey(child, parentType);\\n      }\\n    }\\n  } else if (ReactElement.isValidElement(node)) {\\n    // This element was passed in a valid location.\\n    if (node._store) {\\n      node._store.validated = true;\\n    }\\n  } else if (node) {\\n    var iteratorFn = getIteratorFn(node);\\n    // Entry iterators provide implicit keys.\\n    if (iteratorFn) {\\n      if (iteratorFn !== node.entries) {\\n        var iterator = iteratorFn.call(node);\\n        var step;\\n        while (!(step = iterator.next()).done) {\\n          if (ReactElement.isValidElement(step.value)) {\\n            validateExplicitKey(step.value, parentType);\\n          }\\n        }\\n      }\\n    }\\n  }\\n}\\n\\n/**\\n * Assert that the props are valid\\n *\\n * @param {string} componentName Name of the component for error messages.\\n * @param {object} propTypes Map of prop name to a ReactPropType\\n * @param {object} props\\n * @param {string} location e.g. \\\"prop\\\", \\\"context\\\", \\\"child context\\\"\\n * @private\\n */\\nfunction checkPropTypes(componentName, propTypes, props, location) {\\n  for (var propName in propTypes) {\\n    if (propTypes.hasOwnProperty(propName)) {\\n      var error;\\n      // Prop type validation may throw. In case they do, we don't want to\\n      // fail the render phase where it didn't fail before. So we log it.\\n      // After these have been cleaned up, we'll let them throw.\\n      try {\\n        // This is intentionally an invariant that gets caught. It's the same\\n        // behavior as without this statement except with a better message.\\n        !(typeof propTypes[propName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], propName) : invariant(false) : undefined;\\n        error = propTypes[propName](props, propName, componentName, location);\\n      } catch (ex) {\\n        error = ex;\\n      }\\n      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], propName, typeof error) : undefined;\\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\\n        // Only monitor this failure once because there tends to be a lot of the\\n        // same error.\\n        loggedTypeFailures[error.message] = true;\\n\\n        var addendum = getDeclarationErrorAddendum();\\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed propType: %s%s', error.message, addendum) : undefined;\\n      }\\n    }\\n  }\\n}\\n\\n/**\\n * Given an element, validate that its props follow the propTypes definition,\\n * provided by the type.\\n *\\n * @param {ReactElement} element\\n */\\nfunction validatePropTypes(element) {\\n  var componentClass = element.type;\\n  if (typeof componentClass !== 'function') {\\n    return;\\n  }\\n  var name = componentClass.displayName || componentClass.name;\\n  if (componentClass.propTypes) {\\n    checkPropTypes(name, componentClass.propTypes, element.props, ReactPropTypeLocations.prop);\\n  }\\n  if (typeof componentClass.getDefaultProps === 'function') {\\n    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : undefined;\\n  }\\n}\\n\\nvar ReactElementValidator = {\\n\\n  createElement: function (type, props, children) {\\n    var validType = typeof type === 'string' || typeof type === 'function';\\n    // We warn in this case but don't throw. We expect the element creation to\\n    // succeed and there will likely be errors in render.\\n    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : undefined;\\n\\n    var element = ReactElement.createElement.apply(this, arguments);\\n\\n    // The result can be nullish if a mock or a custom function is used.\\n    // TODO: Drop this when these are no longer allowed as the type argument.\\n    if (element == null) {\\n      return element;\\n    }\\n\\n    // Skip key warning if the type isn't valid since our key validation logic\\n    // doesn't expect a non-string/function type and can throw confusing errors.\\n    // We don't want exception behavior to differ between dev and prod.\\n    // (Rendering will throw with a helpful message and as soon as the type is\\n    // fixed, the key warnings will appear.)\\n    if (validType) {\\n      for (var i = 2; i < arguments.length; i++) {\\n        validateChildKeys(arguments[i], type);\\n      }\\n    }\\n\\n    validatePropTypes(element);\\n\\n    return element;\\n  },\\n\\n  createFactory: function (type) {\\n    var validatedFactory = ReactElementValidator.createElement.bind(null, type);\\n    // Legacy hook TODO: Warn if this is accessed\\n    validatedFactory.type = type;\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      if (canDefineProperty) {\\n        Object.defineProperty(validatedFactory, 'type', {\\n          enumerable: false,\\n          get: function () {\\n            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : undefined;\\n            Object.defineProperty(this, 'type', {\\n              value: type\\n            });\\n            return type;\\n          }\\n        });\\n      }\\n    }\\n\\n    return validatedFactory;\\n  },\\n\\n  cloneElement: function (element, props, children) {\\n    var newElement = ReactElement.cloneElement.apply(this, arguments);\\n    for (var i = 2; i < arguments.length; i++) {\\n      validateChildKeys(arguments[i], newElement.type);\\n    }\\n    validatePropTypes(newElement);\\n    return newElement;\\n  }\\n\\n};\\n\\nmodule.exports = ReactElementValidator;\",\n    \"/**\\n * Copyright 2014-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactElement\\n */\\n\\n'use strict';\\n\\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\\n\\nvar assign = require('./Object.assign');\\nvar canDefineProperty = require('./canDefineProperty');\\n\\n// The Symbol used to tag the ReactElement type. If there is no native Symbol\\n// nor polyfill, then a plain number is used for performance.\\nvar REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;\\n\\nvar RESERVED_PROPS = {\\n  key: true,\\n  ref: true,\\n  __self: true,\\n  __source: true\\n};\\n\\n/**\\n * Base constructor for all React elements. This is only used to make this\\n * work with a dynamic instanceof check. Nothing should live on this prototype.\\n *\\n * @param {*} type\\n * @param {*} key\\n * @param {string|object} ref\\n * @param {*} self A *temporary* helper to detect places where `this` is\\n * different from the `owner` when React.createElement is called, so that we\\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\\n * functions, and as long as `this` and owner are the same, there will be no\\n * change in behavior.\\n * @param {*} source An annotation object (added by a transpiler or otherwise)\\n * indicating filename, line number, and/or other information.\\n * @param {*} owner\\n * @param {*} props\\n * @internal\\n */\\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\\n  var element = {\\n    // This tag allow us to uniquely identify this as a React Element\\n    $$typeof: REACT_ELEMENT_TYPE,\\n\\n    // Built-in properties that belong on the element\\n    type: type,\\n    key: key,\\n    ref: ref,\\n    props: props,\\n\\n    // Record the component responsible for creating this element.\\n    _owner: owner\\n  };\\n\\n  if (process.env.NODE_ENV !== 'production') {\\n    // The validation flag is currently mutative. We put it on\\n    // an external backing store so that we can freeze the whole object.\\n    // This can be replaced with a WeakMap once they are implemented in\\n    // commonly used development environments.\\n    element._store = {};\\n\\n    // To make comparing ReactElements easier for testing purposes, we make\\n    // the validation flag non-enumerable (where possible, which should\\n    // include every environment we run tests in), so the test framework\\n    // ignores it.\\n    if (canDefineProperty) {\\n      Object.defineProperty(element._store, 'validated', {\\n        configurable: false,\\n        enumerable: false,\\n        writable: true,\\n        value: false\\n      });\\n      // self and source are DEV only properties.\\n      Object.defineProperty(element, '_self', {\\n        configurable: false,\\n        enumerable: false,\\n        writable: false,\\n        value: self\\n      });\\n      // Two elements created in two different places should be considered\\n      // equal for testing purposes and therefore we hide it from enumeration.\\n      Object.defineProperty(element, '_source', {\\n        configurable: false,\\n        enumerable: false,\\n        writable: false,\\n        value: source\\n      });\\n    } else {\\n      element._store.validated = false;\\n      element._self = self;\\n      element._source = source;\\n    }\\n    Object_freeze(element.props);\\n    Object_freeze(element);\\n  }\\n\\n  return element;\\n};\\n\\nReactElement.createElement = function (type, config, children) {\\n  var propName;\\n\\n  // Reserved names are extracted\\n  var props = {};\\n\\n  var key = null;\\n  var ref = null;\\n  var self = null;\\n  var source = null;\\n\\n  if (config != null) {\\n    ref = config.ref === undefined ? null : config.ref;\\n    key = config.key === undefined ? null : '' + config.key;\\n    self = config.__self === undefined ? null : config.__self;\\n    source = config.__source === undefined ? null : config.__source;\\n    // Remaining properties are added to a new props object\\n    for (propName in config) {\\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\\n        props[propName] = config[propName];\\n      }\\n    }\\n  }\\n\\n  // Children can be more than one argument, and those are transferred onto\\n  // the newly allocated props object.\\n  var childrenLength = arguments.length - 2;\\n  if (childrenLength === 1) {\\n    props.children = children;\\n  } else if (childrenLength > 1) {\\n    var childArray = Array(childrenLength);\\n    for (var i = 0; i < childrenLength; i++) {\\n      childArray[i] = arguments[i + 2];\\n    }\\n    props.children = childArray;\\n  }\\n\\n  // Resolve default props\\n  if (type && type.defaultProps) {\\n    var defaultProps = type.defaultProps;\\n    for (propName in defaultProps) {\\n      if (typeof props[propName] === 'undefined') {\\n        props[propName] = defaultProps[propName];\\n      }\\n    }\\n  }\\n\\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\\n};\\n\\nReactElement.createFactory = function (type) {\\n  var factory = ReactElement.createElement.bind(null, type);\\n  // Expose the type on the factory and the prototype so that it can be\\n  // easily accessed on elements. E.g. `<Foo />.type === Foo`.\\n  // This should not be named `constructor` since this may not be the function\\n  // that created the element, and it may not even be a constructor.\\n  // Legacy hook TODO: Warn if this is accessed\\n  factory.type = type;\\n  return factory;\\n};\\n\\nReactElement.cloneAndReplaceKey = function (oldElement, newKey) {\\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\\n\\n  return newElement;\\n};\\n\\nReactElement.cloneAndReplaceProps = function (oldElement, newProps) {\\n  var newElement = ReactElement(oldElement.type, oldElement.key, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, newProps);\\n\\n  if (process.env.NODE_ENV !== 'production') {\\n    // If the key on the original is valid, then the clone is valid\\n    newElement._store.validated = oldElement._store.validated;\\n  }\\n\\n  return newElement;\\n};\\n\\nReactElement.cloneElement = function (element, config, children) {\\n  var propName;\\n\\n  // Original props are copied\\n  var props = assign({}, element.props);\\n\\n  // Reserved names are extracted\\n  var key = element.key;\\n  var ref = element.ref;\\n  // Self is preserved since the owner is preserved.\\n  var self = element._self;\\n  // Source is preserved since cloneElement is unlikely to be targeted by a\\n  // transpiler, and the original source is probably a better indicator of the\\n  // true owner.\\n  var source = element._source;\\n\\n  // Owner will be preserved, unless ref is overridden\\n  var owner = element._owner;\\n\\n  if (config != null) {\\n    if (config.ref !== undefined) {\\n      // Silently steal the ref from the parent.\\n      ref = config.ref;\\n      owner = ReactCurrentOwner.current;\\n    }\\n    if (config.key !== undefined) {\\n      key = '' + config.key;\\n    }\\n    // Remaining properties override existing props\\n    for (propName in config) {\\n      if (config.hasOwnProperty(propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\\n        props[propName] = config[propName];\\n      }\\n    }\\n  }\\n\\n  // Children can be more than one argument, and those are transferred onto\\n  // the newly allocated props object.\\n  var childrenLength = arguments.length - 2;\\n  if (childrenLength === 1) {\\n    props.children = children;\\n  } else if (childrenLength > 1) {\\n    var childArray = Array(childrenLength);\\n    for (var i = 0; i < childrenLength; i++) {\\n      childArray[i] = arguments[i + 2];\\n    }\\n    props.children = childArray;\\n  }\\n\\n  return ReactElement(element.type, key, ref, self, source, owner, props);\\n};\\n\\n/**\\n * @param {?object} object\\n * @return {boolean} True if `object` is a valid component.\\n * @final\\n */\\nReactElement.isValidElement = function (object) {\\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\\n};\\n\\nmodule.exports = ReactElement;\",\n    \"/**\\n * Copyright 2014-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactEmptyComponentRegistry\\n */\\n\\n'use strict';\\n\\n// This registry keeps track of the React IDs of the components that rendered to\\n// `null` (in reality a placeholder such as `noscript`)\\nvar nullComponentIDsRegistry = {};\\n\\n/**\\n * @param {string} id Component's `_rootNodeID`.\\n * @return {boolean} True if the component is rendered to null.\\n */\\nfunction isNullComponentID(id) {\\n  return !!nullComponentIDsRegistry[id];\\n}\\n\\n/**\\n * Mark the component as having rendered to null.\\n * @param {string} id Component's `_rootNodeID`.\\n */\\nfunction registerNullComponentID(id) {\\n  nullComponentIDsRegistry[id] = true;\\n}\\n\\n/**\\n * Unmark the component as having rendered to null: it renders to something now.\\n * @param {string} id Component's `_rootNodeID`.\\n */\\nfunction deregisterNullComponentID(id) {\\n  delete nullComponentIDsRegistry[id];\\n}\\n\\nvar ReactEmptyComponentRegistry = {\\n  isNullComponentID: isNullComponentID,\\n  registerNullComponentID: registerNullComponentID,\\n  deregisterNullComponentID: deregisterNullComponentID\\n};\\n\\nmodule.exports = ReactEmptyComponentRegistry;\",\n    \"/**\\n * Copyright 2014-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactEmptyComponent\\n */\\n\\n'use strict';\\n\\nvar ReactElement = require('./ReactElement');\\nvar ReactEmptyComponentRegistry = require('./ReactEmptyComponentRegistry');\\nvar ReactReconciler = require('./ReactReconciler');\\n\\nvar assign = require('./Object.assign');\\n\\nvar placeholderElement;\\n\\nvar ReactEmptyComponentInjection = {\\n  injectEmptyComponent: function (component) {\\n    placeholderElement = ReactElement.createElement(component);\\n  }\\n};\\n\\nvar ReactEmptyComponent = function (instantiate) {\\n  this._currentElement = null;\\n  this._rootNodeID = null;\\n  this._renderedComponent = instantiate(placeholderElement);\\n};\\nassign(ReactEmptyComponent.prototype, {\\n  construct: function (element) {},\\n  mountComponent: function (rootID, transaction, context) {\\n    ReactEmptyComponentRegistry.registerNullComponentID(rootID);\\n    this._rootNodeID = rootID;\\n    return ReactReconciler.mountComponent(this._renderedComponent, rootID, transaction, context);\\n  },\\n  receiveComponent: function () {},\\n  unmountComponent: function (rootID, transaction, context) {\\n    ReactReconciler.unmountComponent(this._renderedComponent);\\n    ReactEmptyComponentRegistry.deregisterNullComponentID(this._rootNodeID);\\n    this._rootNodeID = null;\\n    this._renderedComponent = null;\\n  }\\n});\\n\\nReactEmptyComponent.injection = ReactEmptyComponentInjection;\\n\\nmodule.exports = ReactEmptyComponent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactErrorUtils\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar caughtError = null;\\n\\n/**\\n * Call a function while guarding against errors that happens within it.\\n *\\n * @param {?String} name of the guard to use for logging or debugging\\n * @param {Function} func The function to invoke\\n * @param {*} a First argument\\n * @param {*} b Second argument\\n */\\nfunction invokeGuardedCallback(name, func, a, b) {\\n  try {\\n    return func(a, b);\\n  } catch (x) {\\n    if (caughtError === null) {\\n      caughtError = x;\\n    }\\n    return undefined;\\n  }\\n}\\n\\nvar ReactErrorUtils = {\\n  invokeGuardedCallback: invokeGuardedCallback,\\n\\n  /**\\n   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event\\n   * handler are sure to be rethrown by rethrowCaughtError.\\n   */\\n  invokeGuardedCallbackWithCatch: invokeGuardedCallback,\\n\\n  /**\\n   * During execution of guarded functions we will capture the first error which\\n   * we will rethrow to be handled by the top level error handler.\\n   */\\n  rethrowCaughtError: function () {\\n    if (caughtError) {\\n      var error = caughtError;\\n      caughtError = null;\\n      throw error;\\n    }\\n  }\\n};\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  /**\\n   * To help development we can get better devtools integration by simulating a\\n   * real browser event.\\n   */\\n  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {\\n    var fakeNode = document.createElement('react');\\n    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {\\n      var boundFunc = func.bind(null, a, b);\\n      var evtType = 'react-' + name;\\n      fakeNode.addEventListener(evtType, boundFunc, false);\\n      var evt = document.createEvent('Event');\\n      evt.initEvent(evtType, false, false);\\n      fakeNode.dispatchEvent(evt);\\n      fakeNode.removeEventListener(evtType, boundFunc, false);\\n    };\\n  }\\n}\\n\\nmodule.exports = ReactErrorUtils;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactEventEmitterMixin\\n */\\n\\n'use strict';\\n\\nvar EventPluginHub = require('./EventPluginHub');\\n\\nfunction runEventQueueInBatch(events) {\\n  EventPluginHub.enqueueEvents(events);\\n  EventPluginHub.processEventQueue(false);\\n}\\n\\nvar ReactEventEmitterMixin = {\\n\\n  /**\\n   * Streams a fired top-level event to `EventPluginHub` where plugins have the\\n   * opportunity to create `ReactEvent`s to be dispatched.\\n   *\\n   * @param {string} topLevelType Record from `EventConstants`.\\n   * @param {object} topLevelTarget The listening component root node.\\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\\n   * @param {object} nativeEvent Native environment event.\\n   */\\n  handleTopLevel: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\\n    var events = EventPluginHub.extractEvents(topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget);\\n    runEventQueueInBatch(events);\\n  }\\n};\\n\\nmodule.exports = ReactEventEmitterMixin;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactEventListener\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar EventListener = require('fbjs/lib/EventListener');\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\nvar PooledClass = require('./PooledClass');\\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\\nvar ReactMount = require('./ReactMount');\\nvar ReactUpdates = require('./ReactUpdates');\\n\\nvar assign = require('./Object.assign');\\nvar getEventTarget = require('./getEventTarget');\\nvar getUnboundedScrollPosition = require('fbjs/lib/getUnboundedScrollPosition');\\n\\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\\n\\n/**\\n * Finds the parent React component of `node`.\\n *\\n * @param {*} node\\n * @return {?DOMEventTarget} Parent container, or `null` if the specified node\\n *                           is not nested.\\n */\\nfunction findParent(node) {\\n  // TODO: It may be a good idea to cache this to prevent unnecessary DOM\\n  // traversal, but caching is difficult to do correctly without using a\\n  // mutation observer to listen for all DOM changes.\\n  var nodeID = ReactMount.getID(node);\\n  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\\n  var container = ReactMount.findReactContainerForID(rootID);\\n  var parent = ReactMount.getFirstReactDOM(container);\\n  return parent;\\n}\\n\\n// Used to store ancestor hierarchy in top level callback\\nfunction TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {\\n  this.topLevelType = topLevelType;\\n  this.nativeEvent = nativeEvent;\\n  this.ancestors = [];\\n}\\nassign(TopLevelCallbackBookKeeping.prototype, {\\n  destructor: function () {\\n    this.topLevelType = null;\\n    this.nativeEvent = null;\\n    this.ancestors.length = 0;\\n  }\\n});\\nPooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);\\n\\nfunction handleTopLevelImpl(bookKeeping) {\\n  // TODO: Re-enable event.path handling\\n  //\\n  // if (bookKeeping.nativeEvent.path && bookKeeping.nativeEvent.path.length > 1) {\\n  //   // New browsers have a path attribute on native events\\n  //   handleTopLevelWithPath(bookKeeping);\\n  // } else {\\n  //   // Legacy browsers don't have a path attribute on native events\\n  //   handleTopLevelWithoutPath(bookKeeping);\\n  // }\\n\\n  void handleTopLevelWithPath; // temporarily unused\\n  handleTopLevelWithoutPath(bookKeeping);\\n}\\n\\n// Legacy browsers don't have a path attribute on native events\\nfunction handleTopLevelWithoutPath(bookKeeping) {\\n  var topLevelTarget = ReactMount.getFirstReactDOM(getEventTarget(bookKeeping.nativeEvent)) || window;\\n\\n  // Loop through the hierarchy, in case there's any nested components.\\n  // It's important that we build the array of ancestors before calling any\\n  // event handlers, because event handlers can modify the DOM, leading to\\n  // inconsistencies with ReactMount's node cache. See #1105.\\n  var ancestor = topLevelTarget;\\n  while (ancestor) {\\n    bookKeeping.ancestors.push(ancestor);\\n    ancestor = findParent(ancestor);\\n  }\\n\\n  for (var i = 0; i < bookKeeping.ancestors.length; i++) {\\n    topLevelTarget = bookKeeping.ancestors[i];\\n    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';\\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, topLevelTarget, topLevelTargetID, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\\n  }\\n}\\n\\n// New browsers have a path attribute on native events\\nfunction handleTopLevelWithPath(bookKeeping) {\\n  var path = bookKeeping.nativeEvent.path;\\n  var currentNativeTarget = path[0];\\n  var eventsFired = 0;\\n  for (var i = 0; i < path.length; i++) {\\n    var currentPathElement = path[i];\\n    if (currentPathElement.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE) {\\n      currentNativeTarget = path[i + 1];\\n    }\\n    // TODO: slow\\n    var reactParent = ReactMount.getFirstReactDOM(currentPathElement);\\n    if (reactParent === currentPathElement) {\\n      var currentPathElementID = ReactMount.getID(currentPathElement);\\n      var newRootID = ReactInstanceHandles.getReactRootIDFromNodeID(currentPathElementID);\\n      bookKeeping.ancestors.push(currentPathElement);\\n\\n      var topLevelTargetID = ReactMount.getID(currentPathElement) || '';\\n      eventsFired++;\\n      ReactEventListener._handleTopLevel(bookKeeping.topLevelType, currentPathElement, topLevelTargetID, bookKeeping.nativeEvent, currentNativeTarget);\\n\\n      // Jump to the root of this React render tree\\n      while (currentPathElementID !== newRootID) {\\n        i++;\\n        currentPathElement = path[i];\\n        currentPathElementID = ReactMount.getID(currentPathElement);\\n      }\\n    }\\n  }\\n  if (eventsFired === 0) {\\n    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, window, '', bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));\\n  }\\n}\\n\\nfunction scrollValueMonitor(cb) {\\n  var scrollPosition = getUnboundedScrollPosition(window);\\n  cb(scrollPosition);\\n}\\n\\nvar ReactEventListener = {\\n  _enabled: true,\\n  _handleTopLevel: null,\\n\\n  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,\\n\\n  setHandleTopLevel: function (handleTopLevel) {\\n    ReactEventListener._handleTopLevel = handleTopLevel;\\n  },\\n\\n  setEnabled: function (enabled) {\\n    ReactEventListener._enabled = !!enabled;\\n  },\\n\\n  isEnabled: function () {\\n    return ReactEventListener._enabled;\\n  },\\n\\n  /**\\n   * Traps top-level events by using event bubbling.\\n   *\\n   * @param {string} topLevelType Record from `EventConstants`.\\n   * @param {string} handlerBaseName Event name (e.g. \\\"click\\\").\\n   * @param {object} handle Element on which to attach listener.\\n   * @return {?object} An object with a remove function which will forcefully\\n   *                  remove the listener.\\n   * @internal\\n   */\\n  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {\\n    var element = handle;\\n    if (!element) {\\n      return null;\\n    }\\n    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\\n  },\\n\\n  /**\\n   * Traps a top-level event by using event capturing.\\n   *\\n   * @param {string} topLevelType Record from `EventConstants`.\\n   * @param {string} handlerBaseName Event name (e.g. \\\"click\\\").\\n   * @param {object} handle Element on which to attach listener.\\n   * @return {?object} An object with a remove function which will forcefully\\n   *                  remove the listener.\\n   * @internal\\n   */\\n  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {\\n    var element = handle;\\n    if (!element) {\\n      return null;\\n    }\\n    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));\\n  },\\n\\n  monitorScrollValue: function (refresh) {\\n    var callback = scrollValueMonitor.bind(null, refresh);\\n    EventListener.listen(window, 'scroll', callback);\\n  },\\n\\n  dispatchEvent: function (topLevelType, nativeEvent) {\\n    if (!ReactEventListener._enabled) {\\n      return;\\n    }\\n\\n    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);\\n    try {\\n      // Event queue being processed in the same cycle allows\\n      // `preventDefault`.\\n      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);\\n    } finally {\\n      TopLevelCallbackBookKeeping.release(bookKeeping);\\n    }\\n  }\\n};\\n\\nmodule.exports = ReactEventListener;\",\n    \"/**\\n * Copyright 2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactFragment\\n */\\n\\n'use strict';\\n\\nvar ReactChildren = require('./ReactChildren');\\nvar ReactElement = require('./ReactElement');\\n\\nvar emptyFunction = require('fbjs/lib/emptyFunction');\\nvar invariant = require('fbjs/lib/invariant');\\nvar warning = require('fbjs/lib/warning');\\n\\n/**\\n * We used to allow keyed objects to serve as a collection of ReactElements,\\n * or nested sets. This allowed us a way to explicitly key a set a fragment of\\n * components. This is now being replaced with an opaque data structure.\\n * The upgrade path is to call React.addons.createFragment({ key: value }) to\\n * create a keyed fragment. The resulting data structure is an array.\\n */\\n\\nvar numericPropertyRegex = /^\\\\d+$/;\\n\\nvar warnedAboutNumeric = false;\\n\\nvar ReactFragment = {\\n  // Wrap a keyed object in an opaque proxy that warns you if you access any\\n  // of its properties.\\n  create: function (object) {\\n    if (typeof object !== 'object' || !object || Array.isArray(object)) {\\n      process.env.NODE_ENV !== 'production' ? warning(false, 'React.addons.createFragment only accepts a single object. Got: %s', object) : undefined;\\n      return object;\\n    }\\n    if (ReactElement.isValidElement(object)) {\\n      process.env.NODE_ENV !== 'production' ? warning(false, 'React.addons.createFragment does not accept a ReactElement ' + 'without a wrapper object.') : undefined;\\n      return object;\\n    }\\n\\n    !(object.nodeType !== 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.addons.createFragment(...): Encountered an invalid child; DOM ' + 'elements are not valid children of React components.') : invariant(false) : undefined;\\n\\n    var result = [];\\n\\n    for (var key in object) {\\n      if (process.env.NODE_ENV !== 'production') {\\n        if (!warnedAboutNumeric && numericPropertyRegex.test(key)) {\\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React.addons.createFragment(...): Child objects should have ' + 'non-numeric keys so ordering is preserved.') : undefined;\\n          warnedAboutNumeric = true;\\n        }\\n      }\\n      ReactChildren.mapIntoWithKeyPrefixInternal(object[key], result, key, emptyFunction.thatReturnsArgument);\\n    }\\n\\n    return result;\\n  }\\n};\\n\\nmodule.exports = ReactFragment;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactInjection\\n */\\n\\n'use strict';\\n\\nvar DOMProperty = require('./DOMProperty');\\nvar EventPluginHub = require('./EventPluginHub');\\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\\nvar ReactClass = require('./ReactClass');\\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\\nvar ReactNativeComponent = require('./ReactNativeComponent');\\nvar ReactPerf = require('./ReactPerf');\\nvar ReactRootIndex = require('./ReactRootIndex');\\nvar ReactUpdates = require('./ReactUpdates');\\n\\nvar ReactInjection = {\\n  Component: ReactComponentEnvironment.injection,\\n  Class: ReactClass.injection,\\n  DOMProperty: DOMProperty.injection,\\n  EmptyComponent: ReactEmptyComponent.injection,\\n  EventPluginHub: EventPluginHub.injection,\\n  EventEmitter: ReactBrowserEventEmitter.injection,\\n  NativeComponent: ReactNativeComponent.injection,\\n  Perf: ReactPerf.injection,\\n  RootIndex: ReactRootIndex.injection,\\n  Updates: ReactUpdates.injection\\n};\\n\\nmodule.exports = ReactInjection;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactInputSelection\\n */\\n\\n'use strict';\\n\\nvar ReactDOMSelection = require('./ReactDOMSelection');\\n\\nvar containsNode = require('fbjs/lib/containsNode');\\nvar focusNode = require('fbjs/lib/focusNode');\\nvar getActiveElement = require('fbjs/lib/getActiveElement');\\n\\nfunction isInDocument(node) {\\n  return containsNode(document.documentElement, node);\\n}\\n\\n/**\\n * @ReactInputSelection: React input selection module. Based on Selection.js,\\n * but modified to be suitable for react and has a couple of bug fixes (doesn't\\n * assume buttons have range selections allowed).\\n * Input selection module for React.\\n */\\nvar ReactInputSelection = {\\n\\n  hasSelectionCapabilities: function (elem) {\\n    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\\n    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');\\n  },\\n\\n  getSelectionInformation: function () {\\n    var focusedElem = getActiveElement();\\n    return {\\n      focusedElem: focusedElem,\\n      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null\\n    };\\n  },\\n\\n  /**\\n   * @restoreSelection: If any selection information was potentially lost,\\n   * restore it. This is useful when performing operations that could remove dom\\n   * nodes and place them back in, resulting in focus being lost.\\n   */\\n  restoreSelection: function (priorSelectionInformation) {\\n    var curFocusedElem = getActiveElement();\\n    var priorFocusedElem = priorSelectionInformation.focusedElem;\\n    var priorSelectionRange = priorSelectionInformation.selectionRange;\\n    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {\\n      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {\\n        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);\\n      }\\n      focusNode(priorFocusedElem);\\n    }\\n  },\\n\\n  /**\\n   * @getSelection: Gets the selection bounds of a focused textarea, input or\\n   * contentEditable node.\\n   * -@input: Look up selection bounds of this input\\n   * -@return {start: selectionStart, end: selectionEnd}\\n   */\\n  getSelection: function (input) {\\n    var selection;\\n\\n    if ('selectionStart' in input) {\\n      // Modern browser with input or textarea.\\n      selection = {\\n        start: input.selectionStart,\\n        end: input.selectionEnd\\n      };\\n    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {\\n      // IE8 input.\\n      var range = document.selection.createRange();\\n      // There can only be one selection per document in IE, so it must\\n      // be in our element.\\n      if (range.parentElement() === input) {\\n        selection = {\\n          start: -range.moveStart('character', -input.value.length),\\n          end: -range.moveEnd('character', -input.value.length)\\n        };\\n      }\\n    } else {\\n      // Content editable or old IE textarea.\\n      selection = ReactDOMSelection.getOffsets(input);\\n    }\\n\\n    return selection || { start: 0, end: 0 };\\n  },\\n\\n  /**\\n   * @setSelection: Sets the selection bounds of a textarea or input and focuses\\n   * the input.\\n   * -@input     Set selection bounds of this input or textarea\\n   * -@offsets   Object of same form that is returned from get*\\n   */\\n  setSelection: function (input, offsets) {\\n    var start = offsets.start;\\n    var end = offsets.end;\\n    if (typeof end === 'undefined') {\\n      end = start;\\n    }\\n\\n    if ('selectionStart' in input) {\\n      input.selectionStart = start;\\n      input.selectionEnd = Math.min(end, input.value.length);\\n    } else if (document.selection && (input.nodeName && input.nodeName.toLowerCase() === 'input')) {\\n      var range = input.createTextRange();\\n      range.collapse(true);\\n      range.moveStart('character', start);\\n      range.moveEnd('character', end - start);\\n      range.select();\\n    } else {\\n      ReactDOMSelection.setOffsets(input, offsets);\\n    }\\n  }\\n};\\n\\nmodule.exports = ReactInputSelection;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactInstanceHandles\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar ReactRootIndex = require('./ReactRootIndex');\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\nvar SEPARATOR = '.';\\nvar SEPARATOR_LENGTH = SEPARATOR.length;\\n\\n/**\\n * Maximum depth of traversals before we consider the possibility of a bad ID.\\n */\\nvar MAX_TREE_DEPTH = 10000;\\n\\n/**\\n * Creates a DOM ID prefix to use when mounting React components.\\n *\\n * @param {number} index A unique integer\\n * @return {string} React root ID.\\n * @internal\\n */\\nfunction getReactRootIDString(index) {\\n  return SEPARATOR + index.toString(36);\\n}\\n\\n/**\\n * Checks if a character in the supplied ID is a separator or the end.\\n *\\n * @param {string} id A React DOM ID.\\n * @param {number} index Index of the character to check.\\n * @return {boolean} True if the character is a separator or end of the ID.\\n * @private\\n */\\nfunction isBoundary(id, index) {\\n  return id.charAt(index) === SEPARATOR || index === id.length;\\n}\\n\\n/**\\n * Checks if the supplied string is a valid React DOM ID.\\n *\\n * @param {string} id A React DOM ID, maybe.\\n * @return {boolean} True if the string is a valid React DOM ID.\\n * @private\\n */\\nfunction isValidID(id) {\\n  return id === '' || id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR;\\n}\\n\\n/**\\n * Checks if the first ID is an ancestor of or equal to the second ID.\\n *\\n * @param {string} ancestorID\\n * @param {string} descendantID\\n * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.\\n * @internal\\n */\\nfunction isAncestorIDOf(ancestorID, descendantID) {\\n  return descendantID.indexOf(ancestorID) === 0 && isBoundary(descendantID, ancestorID.length);\\n}\\n\\n/**\\n * Gets the parent ID of the supplied React DOM ID, `id`.\\n *\\n * @param {string} id ID of a component.\\n * @return {string} ID of the parent, or an empty string.\\n * @private\\n */\\nfunction getParentID(id) {\\n  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';\\n}\\n\\n/**\\n * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the\\n * supplied `destinationID`. If they are equal, the ID is returned.\\n *\\n * @param {string} ancestorID ID of an ancestor node of `destinationID`.\\n * @param {string} destinationID ID of the destination node.\\n * @return {string} Next ID on the path from `ancestorID` to `destinationID`.\\n * @private\\n */\\nfunction getNextDescendantID(ancestorID, destinationID) {\\n  !(isValidID(ancestorID) && isValidID(destinationID)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(%s, %s): Received an invalid React DOM ID.', ancestorID, destinationID) : invariant(false) : undefined;\\n  !isAncestorIDOf(ancestorID, destinationID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNextDescendantID(...): React has made an invalid assumption about ' + 'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.', ancestorID, destinationID) : invariant(false) : undefined;\\n  if (ancestorID === destinationID) {\\n    return ancestorID;\\n  }\\n  // Skip over the ancestor and the immediate separator. Traverse until we hit\\n  // another separator or we reach the end of `destinationID`.\\n  var start = ancestorID.length + SEPARATOR_LENGTH;\\n  var i;\\n  for (i = start; i < destinationID.length; i++) {\\n    if (isBoundary(destinationID, i)) {\\n      break;\\n    }\\n  }\\n  return destinationID.substr(0, i);\\n}\\n\\n/**\\n * Gets the nearest common ancestor ID of two IDs.\\n *\\n * Using this ID scheme, the nearest common ancestor ID is the longest common\\n * prefix of the two IDs that immediately preceded a \\\"marker\\\" in both strings.\\n *\\n * @param {string} oneID\\n * @param {string} twoID\\n * @return {string} Nearest common ancestor ID, or the empty string if none.\\n * @private\\n */\\nfunction getFirstCommonAncestorID(oneID, twoID) {\\n  var minLength = Math.min(oneID.length, twoID.length);\\n  if (minLength === 0) {\\n    return '';\\n  }\\n  var lastCommonMarkerIndex = 0;\\n  // Use `<=` to traverse until the \\\"EOL\\\" of the shorter string.\\n  for (var i = 0; i <= minLength; i++) {\\n    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {\\n      lastCommonMarkerIndex = i;\\n    } else if (oneID.charAt(i) !== twoID.charAt(i)) {\\n      break;\\n    }\\n  }\\n  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);\\n  !isValidID(longestCommonID) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s', oneID, twoID, longestCommonID) : invariant(false) : undefined;\\n  return longestCommonID;\\n}\\n\\n/**\\n * Traverses the parent path between two IDs (either up or down). The IDs must\\n * not be the same, and there must exist a parent path between them. If the\\n * callback returns `false`, traversal is stopped.\\n *\\n * @param {?string} start ID at which to start traversal.\\n * @param {?string} stop ID at which to end traversal.\\n * @param {function} cb Callback to invoke each ID with.\\n * @param {*} arg Argument to invoke the callback with.\\n * @param {?boolean} skipFirst Whether or not to skip the first node.\\n * @param {?boolean} skipLast Whether or not to skip the last node.\\n * @private\\n */\\nfunction traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {\\n  start = start || '';\\n  stop = stop || '';\\n  !(start !== stop) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.', start) : invariant(false) : undefined;\\n  var traverseUp = isAncestorIDOf(stop, start);\\n  !(traverseUp || isAncestorIDOf(start, stop)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' + 'not have a parent path.', start, stop) : invariant(false) : undefined;\\n  // Traverse from `start` to `stop` one depth at a time.\\n  var depth = 0;\\n  var traverse = traverseUp ? getParentID : getNextDescendantID;\\n  for (var id = start;; /* until break */id = traverse(id, stop)) {\\n    var ret;\\n    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {\\n      ret = cb(id, traverseUp, arg);\\n    }\\n    if (ret === false || id === stop) {\\n      // Only break //after// visiting `stop`.\\n      break;\\n    }\\n    !(depth++ < MAX_TREE_DEPTH) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' + 'traversing the React DOM ID tree. This may be due to malformed IDs: %s', start, stop, id) : invariant(false) : undefined;\\n  }\\n}\\n\\n/**\\n * Manages the IDs assigned to DOM representations of React components. This\\n * uses a specific scheme in order to traverse the DOM efficiently (e.g. in\\n * order to simulate events).\\n *\\n * @internal\\n */\\nvar ReactInstanceHandles = {\\n\\n  /**\\n   * Constructs a React root ID\\n   * @return {string} A React root ID.\\n   */\\n  createReactRootID: function () {\\n    return getReactRootIDString(ReactRootIndex.createReactRootIndex());\\n  },\\n\\n  /**\\n   * Constructs a React ID by joining a root ID with a name.\\n   *\\n   * @param {string} rootID Root ID of a parent component.\\n   * @param {string} name A component's name (as flattened children).\\n   * @return {string} A React ID.\\n   * @internal\\n   */\\n  createReactID: function (rootID, name) {\\n    return rootID + name;\\n  },\\n\\n  /**\\n   * Gets the DOM ID of the React component that is the root of the tree that\\n   * contains the React component with the supplied DOM ID.\\n   *\\n   * @param {string} id DOM ID of a React component.\\n   * @return {?string} DOM ID of the React component that is the root.\\n   * @internal\\n   */\\n  getReactRootIDFromNodeID: function (id) {\\n    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {\\n      var index = id.indexOf(SEPARATOR, 1);\\n      return index > -1 ? id.substr(0, index) : id;\\n    }\\n    return null;\\n  },\\n\\n  /**\\n   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that\\n   * should would receive a `mouseEnter` or `mouseLeave` event.\\n   *\\n   * NOTE: Does not invoke the callback on the nearest common ancestor because\\n   * nothing \\\"entered\\\" or \\\"left\\\" that element.\\n   *\\n   * @param {string} leaveID ID being left.\\n   * @param {string} enterID ID being entered.\\n   * @param {function} cb Callback to invoke on each entered/left ID.\\n   * @param {*} upArg Argument to invoke the callback with on left IDs.\\n   * @param {*} downArg Argument to invoke the callback with on entered IDs.\\n   * @internal\\n   */\\n  traverseEnterLeave: function (leaveID, enterID, cb, upArg, downArg) {\\n    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);\\n    if (ancestorID !== leaveID) {\\n      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);\\n    }\\n    if (ancestorID !== enterID) {\\n      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);\\n    }\\n  },\\n\\n  /**\\n   * Simulates the traversal of a two-phase, capture/bubble event dispatch.\\n   *\\n   * NOTE: This traversal happens on IDs without touching the DOM.\\n   *\\n   * @param {string} targetID ID of the target node.\\n   * @param {function} cb Callback to invoke.\\n   * @param {*} arg Argument to invoke the callback with.\\n   * @internal\\n   */\\n  traverseTwoPhase: function (targetID, cb, arg) {\\n    if (targetID) {\\n      traverseParentPath('', targetID, cb, arg, true, false);\\n      traverseParentPath(targetID, '', cb, arg, false, true);\\n    }\\n  },\\n\\n  /**\\n   * Same as `traverseTwoPhase` but skips the `targetID`.\\n   */\\n  traverseTwoPhaseSkipTarget: function (targetID, cb, arg) {\\n    if (targetID) {\\n      traverseParentPath('', targetID, cb, arg, true, true);\\n      traverseParentPath(targetID, '', cb, arg, true, true);\\n    }\\n  },\\n\\n  /**\\n   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For\\n   * example, passing `.0.$row-0.1` would result in `cb` getting called\\n   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.\\n   *\\n   * NOTE: This traversal happens on IDs without touching the DOM.\\n   *\\n   * @param {string} targetID ID of the target node.\\n   * @param {function} cb Callback to invoke.\\n   * @param {*} arg Argument to invoke the callback with.\\n   * @internal\\n   */\\n  traverseAncestors: function (targetID, cb, arg) {\\n    traverseParentPath('', targetID, cb, arg, true, false);\\n  },\\n\\n  getFirstCommonAncestorID: getFirstCommonAncestorID,\\n\\n  /**\\n   * Exposed for unit testing.\\n   * @private\\n   */\\n  _getNextDescendantID: getNextDescendantID,\\n\\n  isAncestorIDOf: isAncestorIDOf,\\n\\n  SEPARATOR: SEPARATOR\\n\\n};\\n\\nmodule.exports = ReactInstanceHandles;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactInstanceMap\\n */\\n\\n'use strict';\\n\\n/**\\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\\n * instance (key) and the internal representation (value). This allows public\\n * methods to accept the user facing instance as an argument and map them back\\n * to internal methods.\\n */\\n\\n// TODO: Replace this with ES6: var ReactInstanceMap = new Map();\\nvar ReactInstanceMap = {\\n\\n  /**\\n   * This API should be called `delete` but we'd have to make sure to always\\n   * transform these to strings for IE support. When this transform is fully\\n   * supported we can rename it.\\n   */\\n  remove: function (key) {\\n    key._reactInternalInstance = undefined;\\n  },\\n\\n  get: function (key) {\\n    return key._reactInternalInstance;\\n  },\\n\\n  has: function (key) {\\n    return key._reactInternalInstance !== undefined;\\n  },\\n\\n  set: function (key, value) {\\n    key._reactInternalInstance = value;\\n  }\\n\\n};\\n\\nmodule.exports = ReactInstanceMap;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactIsomorphic\\n */\\n\\n'use strict';\\n\\nvar ReactChildren = require('./ReactChildren');\\nvar ReactComponent = require('./ReactComponent');\\nvar ReactClass = require('./ReactClass');\\nvar ReactDOMFactories = require('./ReactDOMFactories');\\nvar ReactElement = require('./ReactElement');\\nvar ReactElementValidator = require('./ReactElementValidator');\\nvar ReactPropTypes = require('./ReactPropTypes');\\nvar ReactVersion = require('./ReactVersion');\\n\\nvar assign = require('./Object.assign');\\nvar onlyChild = require('./onlyChild');\\n\\nvar createElement = ReactElement.createElement;\\nvar createFactory = ReactElement.createFactory;\\nvar cloneElement = ReactElement.cloneElement;\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  createElement = ReactElementValidator.createElement;\\n  createFactory = ReactElementValidator.createFactory;\\n  cloneElement = ReactElementValidator.cloneElement;\\n}\\n\\nvar React = {\\n\\n  // Modern\\n\\n  Children: {\\n    map: ReactChildren.map,\\n    forEach: ReactChildren.forEach,\\n    count: ReactChildren.count,\\n    toArray: ReactChildren.toArray,\\n    only: onlyChild\\n  },\\n\\n  Component: ReactComponent,\\n\\n  createElement: createElement,\\n  cloneElement: cloneElement,\\n  isValidElement: ReactElement.isValidElement,\\n\\n  // Classic\\n\\n  PropTypes: ReactPropTypes,\\n  createClass: ReactClass.createClass,\\n  createFactory: createFactory,\\n  createMixin: function (mixin) {\\n    // Currently a noop. Will be used to validate and trace mixins.\\n    return mixin;\\n  },\\n\\n  // This looks DOM specific but these are actually isomorphic helpers\\n  // since they are just generating DOM strings.\\n  DOM: ReactDOMFactories,\\n\\n  version: ReactVersion,\\n\\n  // Hook for JSX spread, don't use this for anything else.\\n  __spread: assign\\n};\\n\\nmodule.exports = React;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactLink\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\n/**\\n * ReactLink encapsulates a common pattern in which a component wants to modify\\n * a prop received from its parent. ReactLink allows the parent to pass down a\\n * value coupled with a callback that, when invoked, expresses an intent to\\n * modify that value. For example:\\n *\\n * React.createClass({\\n *   getInitialState: function() {\\n *     return {value: ''};\\n *   },\\n *   render: function() {\\n *     var valueLink = new ReactLink(this.state.value, this._handleValueChange);\\n *     return <input valueLink={valueLink} />;\\n *   },\\n *   _handleValueChange: function(newValue) {\\n *     this.setState({value: newValue});\\n *   }\\n * });\\n *\\n * We have provided some sugary mixins to make the creation and\\n * consumption of ReactLink easier; see LinkedValueUtils and LinkedStateMixin.\\n */\\n\\nvar React = require('./React');\\n\\n/**\\n * @param {*} value current value of the link\\n * @param {function} requestChange callback to request a change\\n */\\nfunction ReactLink(value, requestChange) {\\n  this.value = value;\\n  this.requestChange = requestChange;\\n}\\n\\n/**\\n * Creates a PropType that enforces the ReactLink API and optionally checks the\\n * type of the value being passed inside the link. Example:\\n *\\n * MyComponent.propTypes = {\\n *   tabIndexLink: ReactLink.PropTypes.link(React.PropTypes.number)\\n * }\\n */\\nfunction createLinkTypeChecker(linkType) {\\n  var shapes = {\\n    value: typeof linkType === 'undefined' ? React.PropTypes.any.isRequired : linkType.isRequired,\\n    requestChange: React.PropTypes.func.isRequired\\n  };\\n  return React.PropTypes.shape(shapes);\\n}\\n\\nReactLink.PropTypes = {\\n  link: createLinkTypeChecker\\n};\\n\\nmodule.exports = ReactLink;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactMarkupChecksum\\n */\\n\\n'use strict';\\n\\nvar adler32 = require('./adler32');\\n\\nvar TAG_END = /\\\\/?>/;\\n\\nvar ReactMarkupChecksum = {\\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\\n\\n  /**\\n   * @param {string} markup Markup string\\n   * @return {string} Markup string with checksum attribute attached\\n   */\\n  addChecksumToMarkup: function (markup) {\\n    var checksum = adler32(markup);\\n\\n    // Add checksum (handle both parent tags and self-closing tags)\\n    return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\\\"' + checksum + '\\\"$&');\\n  },\\n\\n  /**\\n   * @param {string} markup to use\\n   * @param {DOMElement} element root React element\\n   * @returns {boolean} whether or not the markup is the same\\n   */\\n  canReuseMarkup: function (markup, element) {\\n    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\\n    var markupChecksum = adler32(markup);\\n    return markupChecksum === existingChecksum;\\n  }\\n};\\n\\nmodule.exports = ReactMarkupChecksum;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactMount\\n */\\n\\n'use strict';\\n\\nvar DOMProperty = require('./DOMProperty');\\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\\nvar ReactElement = require('./ReactElement');\\nvar ReactEmptyComponentRegistry = require('./ReactEmptyComponentRegistry');\\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\\nvar ReactInstanceMap = require('./ReactInstanceMap');\\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\\nvar ReactPerf = require('./ReactPerf');\\nvar ReactReconciler = require('./ReactReconciler');\\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\\nvar ReactUpdates = require('./ReactUpdates');\\n\\nvar assign = require('./Object.assign');\\nvar emptyObject = require('fbjs/lib/emptyObject');\\nvar containsNode = require('fbjs/lib/containsNode');\\nvar instantiateReactComponent = require('./instantiateReactComponent');\\nvar invariant = require('fbjs/lib/invariant');\\nvar setInnerHTML = require('./setInnerHTML');\\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\\nvar validateDOMNesting = require('./validateDOMNesting');\\nvar warning = require('fbjs/lib/warning');\\n\\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\\nvar nodeCache = {};\\n\\nvar ELEMENT_NODE_TYPE = 1;\\nvar DOC_NODE_TYPE = 9;\\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\\n\\nvar ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);\\n\\n/** Mapping from reactRootID to React component instance. */\\nvar instancesByReactRootID = {};\\n\\n/** Mapping from reactRootID to `container` nodes. */\\nvar containersByReactRootID = {};\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  /** __DEV__-only mapping from reactRootID to root elements. */\\n  var rootElementsByReactRootID = {};\\n}\\n\\n// Used to store breadth-first search state in findComponentRoot.\\nvar findComponentRootReusableArray = [];\\n\\n/**\\n * Finds the index of the first character\\n * that's not common between the two given strings.\\n *\\n * @return {number} the index of the character where the strings diverge\\n */\\nfunction firstDifferenceIndex(string1, string2) {\\n  var minLen = Math.min(string1.length, string2.length);\\n  for (var i = 0; i < minLen; i++) {\\n    if (string1.charAt(i) !== string2.charAt(i)) {\\n      return i;\\n    }\\n  }\\n  return string1.length === string2.length ? -1 : minLen;\\n}\\n\\n/**\\n * @param {DOMElement|DOMDocument} container DOM element that may contain\\n * a React component\\n * @return {?*} DOM element that may have the reactRoot ID, or null.\\n */\\nfunction getReactRootElementInContainer(container) {\\n  if (!container) {\\n    return null;\\n  }\\n\\n  if (container.nodeType === DOC_NODE_TYPE) {\\n    return container.documentElement;\\n  } else {\\n    return container.firstChild;\\n  }\\n}\\n\\n/**\\n * @param {DOMElement} container DOM element that may contain a React component.\\n * @return {?string} A \\\"reactRoot\\\" ID, if a React component is rendered.\\n */\\nfunction getReactRootID(container) {\\n  var rootElement = getReactRootElementInContainer(container);\\n  return rootElement && ReactMount.getID(rootElement);\\n}\\n\\n/**\\n * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form\\n * element can return its control whose name or ID equals ATTR_NAME. All\\n * DOM nodes support `getAttributeNode` but this can also get called on\\n * other objects so just return '' if we're given something other than a\\n * DOM node (such as window).\\n *\\n * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.\\n * @return {string} ID of the supplied `domNode`.\\n */\\nfunction getID(node) {\\n  var id = internalGetID(node);\\n  if (id) {\\n    if (nodeCache.hasOwnProperty(id)) {\\n      var cached = nodeCache[id];\\n      if (cached !== node) {\\n        !!isValid(cached, id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;\\n\\n        nodeCache[id] = node;\\n      }\\n    } else {\\n      nodeCache[id] = node;\\n    }\\n  }\\n\\n  return id;\\n}\\n\\nfunction internalGetID(node) {\\n  // If node is something like a window, document, or text node, none of\\n  // which support attributes or a .getAttribute method, gracefully return\\n  // the empty string, as if the attribute were missing.\\n  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';\\n}\\n\\n/**\\n * Sets the React-specific ID of the given node.\\n *\\n * @param {DOMElement} node The DOM node whose ID will be set.\\n * @param {string} id The value of the ID attribute.\\n */\\nfunction setID(node, id) {\\n  var oldID = internalGetID(node);\\n  if (oldID !== id) {\\n    delete nodeCache[oldID];\\n  }\\n  node.setAttribute(ATTR_NAME, id);\\n  nodeCache[id] = node;\\n}\\n\\n/**\\n * Finds the node with the supplied React-generated DOM ID.\\n *\\n * @param {string} id A React-generated DOM ID.\\n * @return {DOMElement} DOM node with the suppled `id`.\\n * @internal\\n */\\nfunction getNode(id) {\\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\\n  }\\n  return nodeCache[id];\\n}\\n\\n/**\\n * Finds the node with the supplied public React instance.\\n *\\n * @param {*} instance A public React instance.\\n * @return {?DOMElement} DOM node with the suppled `id`.\\n * @internal\\n */\\nfunction getNodeFromInstance(instance) {\\n  var id = ReactInstanceMap.get(instance)._rootNodeID;\\n  if (ReactEmptyComponentRegistry.isNullComponentID(id)) {\\n    return null;\\n  }\\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\\n  }\\n  return nodeCache[id];\\n}\\n\\n/**\\n * A node is \\\"valid\\\" if it is contained by a currently mounted container.\\n *\\n * This means that the node does not have to be contained by a document in\\n * order to be considered valid.\\n *\\n * @param {?DOMElement} node The candidate DOM node.\\n * @param {string} id The expected ID of the node.\\n * @return {boolean} Whether the node is contained by a mounted container.\\n */\\nfunction isValid(node, id) {\\n  if (node) {\\n    !(internalGetID(node) === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;\\n\\n    var container = ReactMount.findReactContainerForID(id);\\n    if (container && containsNode(container, node)) {\\n      return true;\\n    }\\n  }\\n\\n  return false;\\n}\\n\\n/**\\n * Causes the cache to forget about one React-specific ID.\\n *\\n * @param {string} id The ID to forget.\\n */\\nfunction purgeID(id) {\\n  delete nodeCache[id];\\n}\\n\\nvar deepestNodeSoFar = null;\\nfunction findDeepestCachedAncestorImpl(ancestorID) {\\n  var ancestor = nodeCache[ancestorID];\\n  if (ancestor && isValid(ancestor, ancestorID)) {\\n    deepestNodeSoFar = ancestor;\\n  } else {\\n    // This node isn't populated in the cache, so presumably none of its\\n    // descendants are. Break out of the loop.\\n    return false;\\n  }\\n}\\n\\n/**\\n * Return the deepest cached node whose ID is a prefix of `targetID`.\\n */\\nfunction findDeepestCachedAncestor(targetID) {\\n  deepestNodeSoFar = null;\\n  ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);\\n\\n  var foundNode = deepestNodeSoFar;\\n  deepestNodeSoFar = null;\\n  return foundNode;\\n}\\n\\n/**\\n * Mounts this component and inserts it into the DOM.\\n *\\n * @param {ReactComponent} componentInstance The instance to mount.\\n * @param {string} rootID DOM ID of the root node.\\n * @param {DOMElement} container DOM element to mount into.\\n * @param {ReactReconcileTransaction} transaction\\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\\n */\\nfunction mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {\\n  if (ReactDOMFeatureFlags.useCreateElement) {\\n    context = assign({}, context);\\n    if (container.nodeType === DOC_NODE_TYPE) {\\n      context[ownerDocumentContextKey] = container;\\n    } else {\\n      context[ownerDocumentContextKey] = container.ownerDocument;\\n    }\\n  }\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (context === emptyObject) {\\n      context = {};\\n    }\\n    var tag = container.nodeName.toLowerCase();\\n    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);\\n  }\\n  var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);\\n  componentInstance._renderedComponent._topLevelWrapper = componentInstance;\\n  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);\\n}\\n\\n/**\\n * Batched mount.\\n *\\n * @param {ReactComponent} componentInstance The instance to mount.\\n * @param {string} rootID DOM ID of the root node.\\n * @param {DOMElement} container DOM element to mount into.\\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\\n */\\nfunction batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {\\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\\n  /* forceHTML */shouldReuseMarkup);\\n  transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);\\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\\n}\\n\\n/**\\n * Unmounts a component and removes it from the DOM.\\n *\\n * @param {ReactComponent} instance React component instance.\\n * @param {DOMElement} container DOM element to unmount from.\\n * @final\\n * @internal\\n * @see {ReactMount.unmountComponentAtNode}\\n */\\nfunction unmountComponentFromNode(instance, container) {\\n  ReactReconciler.unmountComponent(instance);\\n\\n  if (container.nodeType === DOC_NODE_TYPE) {\\n    container = container.documentElement;\\n  }\\n\\n  // http://jsperf.com/emptying-a-node\\n  while (container.lastChild) {\\n    container.removeChild(container.lastChild);\\n  }\\n}\\n\\n/**\\n * True if the supplied DOM node has a direct React-rendered child that is\\n * not a React root element. Useful for warning in `render`,\\n * `unmountComponentAtNode`, etc.\\n *\\n * @param {?DOMElement} node The candidate DOM node.\\n * @return {boolean} True if the DOM element contains a direct child that was\\n * rendered by React but is not a root element.\\n * @internal\\n */\\nfunction hasNonRootReactChild(node) {\\n  var reactRootID = getReactRootID(node);\\n  return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;\\n}\\n\\n/**\\n * Returns the first (deepest) ancestor of a node which is rendered by this copy\\n * of React.\\n */\\nfunction findFirstReactDOMImpl(node) {\\n  // This node might be from another React instance, so we make sure not to\\n  // examine the node cache here\\n  for (; node && node.parentNode !== node; node = node.parentNode) {\\n    if (node.nodeType !== 1) {\\n      // Not a DOMElement, therefore not a React component\\n      continue;\\n    }\\n    var nodeID = internalGetID(node);\\n    if (!nodeID) {\\n      continue;\\n    }\\n    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\\n\\n    // If containersByReactRootID contains the container we find by crawling up\\n    // the tree, we know that this instance of React rendered the node.\\n    // nb. isValid's strategy (with containsNode) does not work because render\\n    // trees may be nested and we don't want a false positive in that case.\\n    var current = node;\\n    var lastID;\\n    do {\\n      lastID = internalGetID(current);\\n      current = current.parentNode;\\n      if (current == null) {\\n        // The passed-in node has been detached from the container it was\\n        // originally rendered into.\\n        return null;\\n      }\\n    } while (lastID !== reactRootID);\\n\\n    if (current === containersByReactRootID[reactRootID]) {\\n      return node;\\n    }\\n  }\\n  return null;\\n}\\n\\n/**\\n * Temporary (?) hack so that we can store all top-level pending updates on\\n * composites instead of having to worry about different types of components\\n * here.\\n */\\nvar TopLevelWrapper = function () {};\\nTopLevelWrapper.prototype.isReactComponent = {};\\nif (process.env.NODE_ENV !== 'production') {\\n  TopLevelWrapper.displayName = 'TopLevelWrapper';\\n}\\nTopLevelWrapper.prototype.render = function () {\\n  // this.props is actually a ReactElement\\n  return this.props;\\n};\\n\\n/**\\n * Mounting is the process of initializing a React component by creating its\\n * representative DOM elements and inserting them into a supplied `container`.\\n * Any prior content inside `container` is destroyed in the process.\\n *\\n *   ReactMount.render(\\n *     component,\\n *     document.getElementById('container')\\n *   );\\n *\\n *   <div id=\\\"container\\\">                   <-- Supplied `container`.\\n *     <div data-reactid=\\\".3\\\">              <-- Rendered reactRoot of React\\n *       // ...                                 component.\\n *     </div>\\n *   </div>\\n *\\n * Inside of `container`, the first element rendered is the \\\"reactRoot\\\".\\n */\\nvar ReactMount = {\\n\\n  TopLevelWrapper: TopLevelWrapper,\\n\\n  /** Exposed for debugging purposes **/\\n  _instancesByReactRootID: instancesByReactRootID,\\n\\n  /**\\n   * This is a hook provided to support rendering React components while\\n   * ensuring that the apparent scroll position of its `container` does not\\n   * change.\\n   *\\n   * @param {DOMElement} container The `container` being rendered into.\\n   * @param {function} renderCallback This must be called once to do the render.\\n   */\\n  scrollMonitor: function (container, renderCallback) {\\n    renderCallback();\\n  },\\n\\n  /**\\n   * Take a component that's already mounted into the DOM and replace its props\\n   * @param {ReactComponent} prevComponent component instance already in the DOM\\n   * @param {ReactElement} nextElement component instance to render\\n   * @param {DOMElement} container container to render into\\n   * @param {?function} callback function triggered on completion\\n   */\\n  _updateRootComponent: function (prevComponent, nextElement, container, callback) {\\n    ReactMount.scrollMonitor(container, function () {\\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);\\n      if (callback) {\\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\\n      }\\n    });\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      // Record the root element in case it later gets transplanted.\\n      rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);\\n    }\\n\\n    return prevComponent;\\n  },\\n\\n  /**\\n   * Register a component into the instance map and starts scroll value\\n   * monitoring\\n   * @param {ReactComponent} nextComponent component instance to render\\n   * @param {DOMElement} container container to render into\\n   * @return {string} reactRoot ID prefix\\n   */\\n  _registerComponent: function (nextComponent, container) {\\n    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;\\n\\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\\n\\n    var reactRootID = ReactMount.registerContainer(container);\\n    instancesByReactRootID[reactRootID] = nextComponent;\\n    return reactRootID;\\n  },\\n\\n  /**\\n   * Render a new component into the DOM.\\n   * @param {ReactElement} nextElement element to render\\n   * @param {DOMElement} container container to render into\\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\\n   * @return {ReactComponent} nextComponent\\n   */\\n  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\\n    // Various parts of our code (such as ReactCompositeComponent's\\n    // _renderValidatedComponent) assume that calls to render aren't nested;\\n    // verify that that's the case.\\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;\\n\\n    var componentInstance = instantiateReactComponent(nextElement, null);\\n    var reactRootID = ReactMount._registerComponent(componentInstance, container);\\n\\n    // The initial render is synchronous but any updates that happen during\\n    // rendering, in componentWillMount or componentDidMount, will be batched\\n    // according to the current batching strategy.\\n\\n    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      // Record the root element in case it later gets transplanted.\\n      rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);\\n    }\\n\\n    return componentInstance;\\n  },\\n\\n  /**\\n   * Renders a React component into the DOM in the supplied `container`.\\n   *\\n   * If the React component was previously rendered into `container`, this will\\n   * perform an update on it and only mutate the DOM as necessary to reflect the\\n   * latest React component.\\n   *\\n   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\\n   * @param {ReactElement} nextElement Component element to render.\\n   * @param {DOMElement} container DOM element to render into.\\n   * @param {?function} callback function triggered on completion\\n   * @return {ReactComponent} Component instance rendered in `container`.\\n   */\\n  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\\n    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;\\n    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\\n  },\\n\\n  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\\n    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :\\n    // Check if it quacks like an element\\n    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;\\n\\n    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;\\n\\n    var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);\\n\\n    var prevComponent = instancesByReactRootID[getReactRootID(container)];\\n\\n    if (prevComponent) {\\n      var prevWrappedElement = prevComponent._currentElement;\\n      var prevElement = prevWrappedElement.props;\\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\\n        var publicInst = prevComponent._renderedComponent.getPublicInstance();\\n        var updatedCallback = callback && function () {\\n          callback.call(publicInst);\\n        };\\n        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);\\n        return publicInst;\\n      } else {\\n        ReactMount.unmountComponentAtNode(container);\\n      }\\n    }\\n\\n    var reactRootElement = getReactRootElementInContainer(container);\\n    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\\n    var containerHasNonRootReactChild = hasNonRootReactChild(container);\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;\\n\\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\\n        var rootElementSibling = reactRootElement;\\n        while (rootElementSibling) {\\n          if (internalGetID(rootElementSibling)) {\\n            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;\\n            break;\\n          }\\n          rootElementSibling = rootElementSibling.nextSibling;\\n        }\\n      }\\n    }\\n\\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\\n    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();\\n    if (callback) {\\n      callback.call(component);\\n    }\\n    return component;\\n  },\\n\\n  /**\\n   * Renders a React component into the DOM in the supplied `container`.\\n   *\\n   * If the React component was previously rendered into `container`, this will\\n   * perform an update on it and only mutate the DOM as necessary to reflect the\\n   * latest React component.\\n   *\\n   * @param {ReactElement} nextElement Component element to render.\\n   * @param {DOMElement} container DOM element to render into.\\n   * @param {?function} callback function triggered on completion\\n   * @return {ReactComponent} Component instance rendered in `container`.\\n   */\\n  render: function (nextElement, container, callback) {\\n    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\\n  },\\n\\n  /**\\n   * Registers a container node into which React components will be rendered.\\n   * This also creates the \\\"reactRoot\\\" ID that will be assigned to the element\\n   * rendered within.\\n   *\\n   * @param {DOMElement} container DOM element to register as a container.\\n   * @return {string} The \\\"reactRoot\\\" ID of elements rendered within.\\n   */\\n  registerContainer: function (container) {\\n    var reactRootID = getReactRootID(container);\\n    if (reactRootID) {\\n      // If one exists, make sure it is a valid \\\"reactRoot\\\" ID.\\n      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);\\n    }\\n    if (!reactRootID) {\\n      // No valid \\\"reactRoot\\\" ID found, create one.\\n      reactRootID = ReactInstanceHandles.createReactRootID();\\n    }\\n    containersByReactRootID[reactRootID] = container;\\n    return reactRootID;\\n  },\\n\\n  /**\\n   * Unmounts and destroys the React component rendered in the `container`.\\n   *\\n   * @param {DOMElement} container DOM element containing a React component.\\n   * @return {boolean} True if a component was found in and unmounted from\\n   *                   `container`\\n   */\\n  unmountComponentAtNode: function (container) {\\n    // Various parts of our code (such as ReactCompositeComponent's\\n    // _renderValidatedComponent) assume that calls to render aren't nested;\\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\\n    // render but we still don't expect to be in a render call here.)\\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;\\n\\n    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;\\n\\n    var reactRootID = getReactRootID(container);\\n    var component = instancesByReactRootID[reactRootID];\\n    if (!component) {\\n      // Check if the node being unmounted was rendered by React, but isn't a\\n      // root node.\\n      var containerHasNonRootReactChild = hasNonRootReactChild(container);\\n\\n      // Check if the container itself is a React root node.\\n      var containerID = internalGetID(container);\\n      var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);\\n\\n      if (process.env.NODE_ENV !== 'production') {\\n        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\\\\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;\\n      }\\n\\n      return false;\\n    }\\n    ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);\\n    delete instancesByReactRootID[reactRootID];\\n    delete containersByReactRootID[reactRootID];\\n    if (process.env.NODE_ENV !== 'production') {\\n      delete rootElementsByReactRootID[reactRootID];\\n    }\\n    return true;\\n  },\\n\\n  /**\\n   * Finds the container DOM element that contains React component to which the\\n   * supplied DOM `id` belongs.\\n   *\\n   * @param {string} id The ID of an element rendered by a React component.\\n   * @return {?DOMElement} DOM element that contains the `id`.\\n   */\\n  findReactContainerForID: function (id) {\\n    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);\\n    var container = containersByReactRootID[reactRootID];\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      var rootElement = rootElementsByReactRootID[reactRootID];\\n      if (rootElement && rootElement.parentNode !== container) {\\n        process.env.NODE_ENV !== 'production' ? warning(\\n        // Call internalGetID here because getID calls isValid which calls\\n        // findReactContainerForID (this function).\\n        internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;\\n        var containerChild = container.firstChild;\\n        if (containerChild && reactRootID === internalGetID(containerChild)) {\\n          // If the container has a new child with the same ID as the old\\n          // root element, then rootElementsByReactRootID[reactRootID] is\\n          // just stale and needs to be updated. The case that deserves a\\n          // warning is when the container is empty.\\n          rootElementsByReactRootID[reactRootID] = containerChild;\\n        } else {\\n          process.env.NODE_ENV !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;\\n        }\\n      }\\n    }\\n\\n    return container;\\n  },\\n\\n  /**\\n   * Finds an element rendered by React with the supplied ID.\\n   *\\n   * @param {string} id ID of a DOM node in the React component.\\n   * @return {DOMElement} Root DOM node of the React component.\\n   */\\n  findReactNodeByID: function (id) {\\n    var reactRoot = ReactMount.findReactContainerForID(id);\\n    return ReactMount.findComponentRoot(reactRoot, id);\\n  },\\n\\n  /**\\n   * Traverses up the ancestors of the supplied node to find a node that is a\\n   * DOM representation of a React component rendered by this copy of React.\\n   *\\n   * @param {*} node\\n   * @return {?DOMEventTarget}\\n   * @internal\\n   */\\n  getFirstReactDOM: function (node) {\\n    return findFirstReactDOMImpl(node);\\n  },\\n\\n  /**\\n   * Finds a node with the supplied `targetID` inside of the supplied\\n   * `ancestorNode`.  Exploits the ID naming scheme to perform the search\\n   * quickly.\\n   *\\n   * @param {DOMEventTarget} ancestorNode Search from this root.\\n   * @pararm {string} targetID ID of the DOM representation of the component.\\n   * @return {DOMEventTarget} DOM node with the supplied `targetID`.\\n   * @internal\\n   */\\n  findComponentRoot: function (ancestorNode, targetID) {\\n    var firstChildren = findComponentRootReusableArray;\\n    var childIndex = 0;\\n\\n    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      // This will throw on the next line; give an early warning\\n      process.env.NODE_ENV !== 'production' ? warning(deepestAncestor != null, 'React can\\\\'t find the root component node for data-reactid value ' + '`%s`. If you\\\\'re seeing this message, it probably means that ' + 'you\\\\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;\\n    }\\n\\n    firstChildren[0] = deepestAncestor.firstChild;\\n    firstChildren.length = 1;\\n\\n    while (childIndex < firstChildren.length) {\\n      var child = firstChildren[childIndex++];\\n      var targetChild;\\n\\n      while (child) {\\n        var childID = ReactMount.getID(child);\\n        if (childID) {\\n          // Even if we find the node we're looking for, we finish looping\\n          // through its siblings to ensure they're cached so that we don't have\\n          // to revisit this node again. Otherwise, we make n^2 calls to getID\\n          // when visiting the many children of a single node in order.\\n\\n          if (targetID === childID) {\\n            targetChild = child;\\n          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {\\n            // If we find a child whose ID is an ancestor of the given ID,\\n            // then we can be sure that we only want to search the subtree\\n            // rooted at this child, so we can throw out the rest of the\\n            // search state.\\n            firstChildren.length = childIndex = 0;\\n            firstChildren.push(child.firstChild);\\n          }\\n        } else {\\n          // If this child had no ID, then there's a chance that it was\\n          // injected automatically by the browser, as when a `<table>`\\n          // element sprouts an extra `<tbody>` child as a side effect of\\n          // `.innerHTML` parsing. Optimistically continue down this\\n          // branch, but not before examining the other siblings.\\n          firstChildren.push(child.firstChild);\\n        }\\n\\n        child = child.nextSibling;\\n      }\\n\\n      if (targetChild) {\\n        // Emptying firstChildren/findComponentRootReusableArray is\\n        // not necessary for correctness, but it helps the GC reclaim\\n        // any nodes that were left at the end of the search.\\n        firstChildren.length = 0;\\n\\n        return targetChild;\\n      }\\n    }\\n\\n    firstChildren.length = 0;\\n\\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;\\n  },\\n\\n  _mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {\\n    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;\\n\\n    if (shouldReuseMarkup) {\\n      var rootElement = getReactRootElementInContainer(container);\\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\\n        return;\\n      } else {\\n        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\\n\\n        var rootMarkup = rootElement.outerHTML;\\n        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\\n\\n        var normalizedMarkup = markup;\\n        if (process.env.NODE_ENV !== 'production') {\\n          // because rootMarkup is retrieved from the DOM, various normalizations\\n          // will have occurred which will not be present in `markup`. Here,\\n          // insert markup into a <div> or <iframe> depending on the container\\n          // type to perform the same normalizations before comparing.\\n          var normalizer;\\n          if (container.nodeType === ELEMENT_NODE_TYPE) {\\n            normalizer = document.createElement('div');\\n            normalizer.innerHTML = markup;\\n            normalizedMarkup = normalizer.innerHTML;\\n          } else {\\n            normalizer = document.createElement('iframe');\\n            document.body.appendChild(normalizer);\\n            normalizer.contentDocument.write(markup);\\n            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\\n            document.body.removeChild(normalizer);\\n          }\\n        }\\n\\n        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\\n        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\\n\\n        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\\\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\\\\n%s', difference) : invariant(false) : undefined;\\n\\n        if (process.env.NODE_ENV !== 'production') {\\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\\\n%s', difference) : undefined;\\n        }\\n      }\\n    }\\n\\n    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\\\'re trying to render a component to the document but ' + 'you didn\\\\'t use server rendering. We can\\\\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;\\n\\n    if (transaction.useCreateElement) {\\n      while (container.lastChild) {\\n        container.removeChild(container.lastChild);\\n      }\\n      container.appendChild(markup);\\n    } else {\\n      setInnerHTML(container, markup);\\n    }\\n  },\\n\\n  ownerDocumentContextKey: ownerDocumentContextKey,\\n\\n  /**\\n   * React ID utilities.\\n   */\\n\\n  getReactRootID: getReactRootID,\\n\\n  getID: getID,\\n\\n  setID: setID,\\n\\n  getNode: getNode,\\n\\n  getNodeFromInstance: getNodeFromInstance,\\n\\n  isValid: isValid,\\n\\n  purgeID: purgeID\\n};\\n\\nReactPerf.measureMethods(ReactMount, 'ReactMount', {\\n  _renderNewRootComponent: '_renderNewRootComponent',\\n  _mountImageIntoNode: '_mountImageIntoNode'\\n});\\n\\nmodule.exports = ReactMount;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactMultiChildUpdateTypes\\n */\\n\\n'use strict';\\n\\nvar keyMirror = require('fbjs/lib/keyMirror');\\n\\n/**\\n * When a component's children are updated, a series of update configuration\\n * objects are created in order to batch and serialize the required changes.\\n *\\n * Enumerates all the possible types of update configurations.\\n *\\n * @internal\\n */\\nvar ReactMultiChildUpdateTypes = keyMirror({\\n  INSERT_MARKUP: null,\\n  MOVE_EXISTING: null,\\n  REMOVE_NODE: null,\\n  SET_MARKUP: null,\\n  TEXT_CONTENT: null\\n});\\n\\nmodule.exports = ReactMultiChildUpdateTypes;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactMultiChild\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar ReactComponentEnvironment = require('./ReactComponentEnvironment');\\nvar ReactMultiChildUpdateTypes = require('./ReactMultiChildUpdateTypes');\\n\\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\\nvar ReactReconciler = require('./ReactReconciler');\\nvar ReactChildReconciler = require('./ReactChildReconciler');\\n\\nvar flattenChildren = require('./flattenChildren');\\n\\n/**\\n * Updating children of a component may trigger recursive updates. The depth is\\n * used to batch recursive updates to render markup more efficiently.\\n *\\n * @type {number}\\n * @private\\n */\\nvar updateDepth = 0;\\n\\n/**\\n * Queue of update configuration objects.\\n *\\n * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.\\n *\\n * @type {array<object>}\\n * @private\\n */\\nvar updateQueue = [];\\n\\n/**\\n * Queue of markup to be rendered.\\n *\\n * @type {array<string>}\\n * @private\\n */\\nvar markupQueue = [];\\n\\n/**\\n * Enqueues markup to be rendered and inserted at a supplied index.\\n *\\n * @param {string} parentID ID of the parent component.\\n * @param {string} markup Markup that renders into an element.\\n * @param {number} toIndex Destination index.\\n * @private\\n */\\nfunction enqueueInsertMarkup(parentID, markup, toIndex) {\\n  // NOTE: Null values reduce hidden classes.\\n  updateQueue.push({\\n    parentID: parentID,\\n    parentNode: null,\\n    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,\\n    markupIndex: markupQueue.push(markup) - 1,\\n    content: null,\\n    fromIndex: null,\\n    toIndex: toIndex\\n  });\\n}\\n\\n/**\\n * Enqueues moving an existing element to another index.\\n *\\n * @param {string} parentID ID of the parent component.\\n * @param {number} fromIndex Source index of the existing element.\\n * @param {number} toIndex Destination index of the element.\\n * @private\\n */\\nfunction enqueueMove(parentID, fromIndex, toIndex) {\\n  // NOTE: Null values reduce hidden classes.\\n  updateQueue.push({\\n    parentID: parentID,\\n    parentNode: null,\\n    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,\\n    markupIndex: null,\\n    content: null,\\n    fromIndex: fromIndex,\\n    toIndex: toIndex\\n  });\\n}\\n\\n/**\\n * Enqueues removing an element at an index.\\n *\\n * @param {string} parentID ID of the parent component.\\n * @param {number} fromIndex Index of the element to remove.\\n * @private\\n */\\nfunction enqueueRemove(parentID, fromIndex) {\\n  // NOTE: Null values reduce hidden classes.\\n  updateQueue.push({\\n    parentID: parentID,\\n    parentNode: null,\\n    type: ReactMultiChildUpdateTypes.REMOVE_NODE,\\n    markupIndex: null,\\n    content: null,\\n    fromIndex: fromIndex,\\n    toIndex: null\\n  });\\n}\\n\\n/**\\n * Enqueues setting the markup of a node.\\n *\\n * @param {string} parentID ID of the parent component.\\n * @param {string} markup Markup that renders into an element.\\n * @private\\n */\\nfunction enqueueSetMarkup(parentID, markup) {\\n  // NOTE: Null values reduce hidden classes.\\n  updateQueue.push({\\n    parentID: parentID,\\n    parentNode: null,\\n    type: ReactMultiChildUpdateTypes.SET_MARKUP,\\n    markupIndex: null,\\n    content: markup,\\n    fromIndex: null,\\n    toIndex: null\\n  });\\n}\\n\\n/**\\n * Enqueues setting the text content.\\n *\\n * @param {string} parentID ID of the parent component.\\n * @param {string} textContent Text content to set.\\n * @private\\n */\\nfunction enqueueTextContent(parentID, textContent) {\\n  // NOTE: Null values reduce hidden classes.\\n  updateQueue.push({\\n    parentID: parentID,\\n    parentNode: null,\\n    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,\\n    markupIndex: null,\\n    content: textContent,\\n    fromIndex: null,\\n    toIndex: null\\n  });\\n}\\n\\n/**\\n * Processes any enqueued updates.\\n *\\n * @private\\n */\\nfunction processQueue() {\\n  if (updateQueue.length) {\\n    ReactComponentEnvironment.processChildrenUpdates(updateQueue, markupQueue);\\n    clearQueue();\\n  }\\n}\\n\\n/**\\n * Clears any enqueued updates.\\n *\\n * @private\\n */\\nfunction clearQueue() {\\n  updateQueue.length = 0;\\n  markupQueue.length = 0;\\n}\\n\\n/**\\n * ReactMultiChild are capable of reconciling multiple children.\\n *\\n * @class ReactMultiChild\\n * @internal\\n */\\nvar ReactMultiChild = {\\n\\n  /**\\n   * Provides common functionality for components that must reconcile multiple\\n   * children. This is used by `ReactDOMComponent` to mount, update, and\\n   * unmount child components.\\n   *\\n   * @lends {ReactMultiChild.prototype}\\n   */\\n  Mixin: {\\n\\n    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {\\n      if (process.env.NODE_ENV !== 'production') {\\n        if (this._currentElement) {\\n          try {\\n            ReactCurrentOwner.current = this._currentElement._owner;\\n            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\\n          } finally {\\n            ReactCurrentOwner.current = null;\\n          }\\n        }\\n      }\\n      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);\\n    },\\n\\n    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, transaction, context) {\\n      var nextChildren;\\n      if (process.env.NODE_ENV !== 'production') {\\n        if (this._currentElement) {\\n          try {\\n            ReactCurrentOwner.current = this._currentElement._owner;\\n            nextChildren = flattenChildren(nextNestedChildrenElements);\\n          } finally {\\n            ReactCurrentOwner.current = null;\\n          }\\n          return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);\\n        }\\n      }\\n      nextChildren = flattenChildren(nextNestedChildrenElements);\\n      return ReactChildReconciler.updateChildren(prevChildren, nextChildren, transaction, context);\\n    },\\n\\n    /**\\n     * Generates a \\\"mount image\\\" for each of the supplied children. In the case\\n     * of `ReactDOMComponent`, a mount image is a string of markup.\\n     *\\n     * @param {?object} nestedChildren Nested child maps.\\n     * @return {array} An array of mounted representations.\\n     * @internal\\n     */\\n    mountChildren: function (nestedChildren, transaction, context) {\\n      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);\\n      this._renderedChildren = children;\\n      var mountImages = [];\\n      var index = 0;\\n      for (var name in children) {\\n        if (children.hasOwnProperty(name)) {\\n          var child = children[name];\\n          // Inlined for performance, see `ReactInstanceHandles.createReactID`.\\n          var rootID = this._rootNodeID + name;\\n          var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);\\n          child._mountIndex = index++;\\n          mountImages.push(mountImage);\\n        }\\n      }\\n      return mountImages;\\n    },\\n\\n    /**\\n     * Replaces any rendered children with a text content string.\\n     *\\n     * @param {string} nextContent String of content.\\n     * @internal\\n     */\\n    updateTextContent: function (nextContent) {\\n      updateDepth++;\\n      var errorThrown = true;\\n      try {\\n        var prevChildren = this._renderedChildren;\\n        // Remove any rendered children.\\n        ReactChildReconciler.unmountChildren(prevChildren);\\n        // TODO: The setTextContent operation should be enough\\n        for (var name in prevChildren) {\\n          if (prevChildren.hasOwnProperty(name)) {\\n            this._unmountChild(prevChildren[name]);\\n          }\\n        }\\n        // Set new text content.\\n        this.setTextContent(nextContent);\\n        errorThrown = false;\\n      } finally {\\n        updateDepth--;\\n        if (!updateDepth) {\\n          if (errorThrown) {\\n            clearQueue();\\n          } else {\\n            processQueue();\\n          }\\n        }\\n      }\\n    },\\n\\n    /**\\n     * Replaces any rendered children with a markup string.\\n     *\\n     * @param {string} nextMarkup String of markup.\\n     * @internal\\n     */\\n    updateMarkup: function (nextMarkup) {\\n      updateDepth++;\\n      var errorThrown = true;\\n      try {\\n        var prevChildren = this._renderedChildren;\\n        // Remove any rendered children.\\n        ReactChildReconciler.unmountChildren(prevChildren);\\n        for (var name in prevChildren) {\\n          if (prevChildren.hasOwnProperty(name)) {\\n            this._unmountChildByName(prevChildren[name], name);\\n          }\\n        }\\n        this.setMarkup(nextMarkup);\\n        errorThrown = false;\\n      } finally {\\n        updateDepth--;\\n        if (!updateDepth) {\\n          if (errorThrown) {\\n            clearQueue();\\n          } else {\\n            processQueue();\\n          }\\n        }\\n      }\\n    },\\n\\n    /**\\n     * Updates the rendered children with new children.\\n     *\\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\\n     * @param {ReactReconcileTransaction} transaction\\n     * @internal\\n     */\\n    updateChildren: function (nextNestedChildrenElements, transaction, context) {\\n      updateDepth++;\\n      var errorThrown = true;\\n      try {\\n        this._updateChildren(nextNestedChildrenElements, transaction, context);\\n        errorThrown = false;\\n      } finally {\\n        updateDepth--;\\n        if (!updateDepth) {\\n          if (errorThrown) {\\n            clearQueue();\\n          } else {\\n            processQueue();\\n          }\\n        }\\n      }\\n    },\\n\\n    /**\\n     * Improve performance by isolating this hot code path from the try/catch\\n     * block in `updateChildren`.\\n     *\\n     * @param {?object} nextNestedChildrenElements Nested child element maps.\\n     * @param {ReactReconcileTransaction} transaction\\n     * @final\\n     * @protected\\n     */\\n    _updateChildren: function (nextNestedChildrenElements, transaction, context) {\\n      var prevChildren = this._renderedChildren;\\n      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, transaction, context);\\n      this._renderedChildren = nextChildren;\\n      if (!nextChildren && !prevChildren) {\\n        return;\\n      }\\n      var name;\\n      // `nextIndex` will increment for each child in `nextChildren`, but\\n      // `lastIndex` will be the last index visited in `prevChildren`.\\n      var lastIndex = 0;\\n      var nextIndex = 0;\\n      for (name in nextChildren) {\\n        if (!nextChildren.hasOwnProperty(name)) {\\n          continue;\\n        }\\n        var prevChild = prevChildren && prevChildren[name];\\n        var nextChild = nextChildren[name];\\n        if (prevChild === nextChild) {\\n          this.moveChild(prevChild, nextIndex, lastIndex);\\n          lastIndex = Math.max(prevChild._mountIndex, lastIndex);\\n          prevChild._mountIndex = nextIndex;\\n        } else {\\n          if (prevChild) {\\n            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.\\n            lastIndex = Math.max(prevChild._mountIndex, lastIndex);\\n            this._unmountChild(prevChild);\\n          }\\n          // The child must be instantiated before it's mounted.\\n          this._mountChildByNameAtIndex(nextChild, name, nextIndex, transaction, context);\\n        }\\n        nextIndex++;\\n      }\\n      // Remove children that are no longer present.\\n      for (name in prevChildren) {\\n        if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {\\n          this._unmountChild(prevChildren[name]);\\n        }\\n      }\\n    },\\n\\n    /**\\n     * Unmounts all rendered children. This should be used to clean up children\\n     * when this component is unmounted.\\n     *\\n     * @internal\\n     */\\n    unmountChildren: function () {\\n      var renderedChildren = this._renderedChildren;\\n      ReactChildReconciler.unmountChildren(renderedChildren);\\n      this._renderedChildren = null;\\n    },\\n\\n    /**\\n     * Moves a child component to the supplied index.\\n     *\\n     * @param {ReactComponent} child Component to move.\\n     * @param {number} toIndex Destination index of the element.\\n     * @param {number} lastIndex Last index visited of the siblings of `child`.\\n     * @protected\\n     */\\n    moveChild: function (child, toIndex, lastIndex) {\\n      // If the index of `child` is less than `lastIndex`, then it needs to\\n      // be moved. Otherwise, we do not need to move it because a child will be\\n      // inserted or moved before `child`.\\n      if (child._mountIndex < lastIndex) {\\n        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);\\n      }\\n    },\\n\\n    /**\\n     * Creates a child component.\\n     *\\n     * @param {ReactComponent} child Component to create.\\n     * @param {string} mountImage Markup to insert.\\n     * @protected\\n     */\\n    createChild: function (child, mountImage) {\\n      enqueueInsertMarkup(this._rootNodeID, mountImage, child._mountIndex);\\n    },\\n\\n    /**\\n     * Removes a child component.\\n     *\\n     * @param {ReactComponent} child Child to remove.\\n     * @protected\\n     */\\n    removeChild: function (child) {\\n      enqueueRemove(this._rootNodeID, child._mountIndex);\\n    },\\n\\n    /**\\n     * Sets this text content string.\\n     *\\n     * @param {string} textContent Text content to set.\\n     * @protected\\n     */\\n    setTextContent: function (textContent) {\\n      enqueueTextContent(this._rootNodeID, textContent);\\n    },\\n\\n    /**\\n     * Sets this markup string.\\n     *\\n     * @param {string} markup Markup to set.\\n     * @protected\\n     */\\n    setMarkup: function (markup) {\\n      enqueueSetMarkup(this._rootNodeID, markup);\\n    },\\n\\n    /**\\n     * Mounts a child with the supplied name.\\n     *\\n     * NOTE: This is part of `updateChildren` and is here for readability.\\n     *\\n     * @param {ReactComponent} child Component to mount.\\n     * @param {string} name Name of the child.\\n     * @param {number} index Index at which to insert the child.\\n     * @param {ReactReconcileTransaction} transaction\\n     * @private\\n     */\\n    _mountChildByNameAtIndex: function (child, name, index, transaction, context) {\\n      // Inlined for performance, see `ReactInstanceHandles.createReactID`.\\n      var rootID = this._rootNodeID + name;\\n      var mountImage = ReactReconciler.mountComponent(child, rootID, transaction, context);\\n      child._mountIndex = index;\\n      this.createChild(child, mountImage);\\n    },\\n\\n    /**\\n     * Unmounts a rendered child.\\n     *\\n     * NOTE: This is part of `updateChildren` and is here for readability.\\n     *\\n     * @param {ReactComponent} child Component to unmount.\\n     * @private\\n     */\\n    _unmountChild: function (child) {\\n      this.removeChild(child);\\n      child._mountIndex = null;\\n    }\\n\\n  }\\n\\n};\\n\\nmodule.exports = ReactMultiChild;\",\n    \"/**\\n * Copyright 2014-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactNativeComponent\\n */\\n\\n'use strict';\\n\\nvar assign = require('./Object.assign');\\nvar invariant = require('fbjs/lib/invariant');\\n\\nvar autoGenerateWrapperClass = null;\\nvar genericComponentClass = null;\\n// This registry keeps track of wrapper classes around native tags.\\nvar tagToComponentClass = {};\\nvar textComponentClass = null;\\n\\nvar ReactNativeComponentInjection = {\\n  // This accepts a class that receives the tag string. This is a catch all\\n  // that can render any kind of tag.\\n  injectGenericComponentClass: function (componentClass) {\\n    genericComponentClass = componentClass;\\n  },\\n  // This accepts a text component class that takes the text string to be\\n  // rendered as props.\\n  injectTextComponentClass: function (componentClass) {\\n    textComponentClass = componentClass;\\n  },\\n  // This accepts a keyed object with classes as values. Each key represents a\\n  // tag. That particular tag will use this class instead of the generic one.\\n  injectComponentClasses: function (componentClasses) {\\n    assign(tagToComponentClass, componentClasses);\\n  }\\n};\\n\\n/**\\n * Get a composite component wrapper class for a specific tag.\\n *\\n * @param {ReactElement} element The tag for which to get the class.\\n * @return {function} The React class constructor function.\\n */\\nfunction getComponentClassForElement(element) {\\n  if (typeof element.type === 'function') {\\n    return element.type;\\n  }\\n  var tag = element.type;\\n  var componentClass = tagToComponentClass[tag];\\n  if (componentClass == null) {\\n    tagToComponentClass[tag] = componentClass = autoGenerateWrapperClass(tag);\\n  }\\n  return componentClass;\\n}\\n\\n/**\\n * Get a native internal component class for a specific tag.\\n *\\n * @param {ReactElement} element The element to create.\\n * @return {function} The internal class constructor function.\\n */\\nfunction createInternalComponent(element) {\\n  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : invariant(false) : undefined;\\n  return new genericComponentClass(element.type, element.props);\\n}\\n\\n/**\\n * @param {ReactText} text\\n * @return {ReactComponent}\\n */\\nfunction createInstanceForText(text) {\\n  return new textComponentClass(text);\\n}\\n\\n/**\\n * @param {ReactComponent} component\\n * @return {boolean}\\n */\\nfunction isTextComponent(component) {\\n  return component instanceof textComponentClass;\\n}\\n\\nvar ReactNativeComponent = {\\n  getComponentClassForElement: getComponentClassForElement,\\n  createInternalComponent: createInternalComponent,\\n  createInstanceForText: createInstanceForText,\\n  isTextComponent: isTextComponent,\\n  injection: ReactNativeComponentInjection\\n};\\n\\nmodule.exports = ReactNativeComponent;\",\n    \"/**\\n * Copyright 2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactNoopUpdateQueue\\n */\\n\\n'use strict';\\n\\nvar warning = require('fbjs/lib/warning');\\n\\nfunction warnTDZ(publicInstance, callerName) {\\n  if (process.env.NODE_ENV !== 'production') {\\n    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor && publicInstance.constructor.displayName || '') : undefined;\\n  }\\n}\\n\\n/**\\n * This is the abstract API for an update queue.\\n */\\nvar ReactNoopUpdateQueue = {\\n\\n  /**\\n   * Checks whether or not this composite component is mounted.\\n   * @param {ReactClass} publicInstance The instance we want to test.\\n   * @return {boolean} True if mounted, false otherwise.\\n   * @protected\\n   * @final\\n   */\\n  isMounted: function (publicInstance) {\\n    return false;\\n  },\\n\\n  /**\\n   * Enqueue a callback that will be executed after all the pending updates\\n   * have processed.\\n   *\\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\\n   * @param {?function} callback Called after state is updated.\\n   * @internal\\n   */\\n  enqueueCallback: function (publicInstance, callback) {},\\n\\n  /**\\n   * Forces an update. This should only be invoked when it is known with\\n   * certainty that we are **not** in a DOM transaction.\\n   *\\n   * You may want to call this when you know that some deeper aspect of the\\n   * component's state has changed but `setState` was not called.\\n   *\\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\\n   * `componentWillUpdate` and `componentDidUpdate`.\\n   *\\n   * @param {ReactClass} publicInstance The instance that should rerender.\\n   * @internal\\n   */\\n  enqueueForceUpdate: function (publicInstance) {\\n    warnTDZ(publicInstance, 'forceUpdate');\\n  },\\n\\n  /**\\n   * Replaces all of the state. Always use this or `setState` to mutate state.\\n   * You should treat `this.state` as immutable.\\n   *\\n   * There is no guarantee that `this.state` will be immediately updated, so\\n   * accessing `this.state` after calling this method may return the old value.\\n   *\\n   * @param {ReactClass} publicInstance The instance that should rerender.\\n   * @param {object} completeState Next state.\\n   * @internal\\n   */\\n  enqueueReplaceState: function (publicInstance, completeState) {\\n    warnTDZ(publicInstance, 'replaceState');\\n  },\\n\\n  /**\\n   * Sets a subset of the state. This only exists because _pendingState is\\n   * internal. This provides a merging strategy that is not available to deep\\n   * properties which is confusing. TODO: Expose pendingState or don't use it\\n   * during the merge.\\n   *\\n   * @param {ReactClass} publicInstance The instance that should rerender.\\n   * @param {object} partialState Next partial state to be merged with state.\\n   * @internal\\n   */\\n  enqueueSetState: function (publicInstance, partialState) {\\n    warnTDZ(publicInstance, 'setState');\\n  },\\n\\n  /**\\n   * Sets a subset of the props.\\n   *\\n   * @param {ReactClass} publicInstance The instance that should rerender.\\n   * @param {object} partialProps Subset of the next props.\\n   * @internal\\n   */\\n  enqueueSetProps: function (publicInstance, partialProps) {\\n    warnTDZ(publicInstance, 'setProps');\\n  },\\n\\n  /**\\n   * Replaces all of the props.\\n   *\\n   * @param {ReactClass} publicInstance The instance that should rerender.\\n   * @param {object} props New props.\\n   * @internal\\n   */\\n  enqueueReplaceProps: function (publicInstance, props) {\\n    warnTDZ(publicInstance, 'replaceProps');\\n  }\\n\\n};\\n\\nmodule.exports = ReactNoopUpdateQueue;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactOwner\\n */\\n\\n'use strict';\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\n/**\\n * ReactOwners are capable of storing references to owned components.\\n *\\n * All components are capable of //being// referenced by owner components, but\\n * only ReactOwner components are capable of //referencing// owned components.\\n * The named reference is known as a \\\"ref\\\".\\n *\\n * Refs are available when mounted and updated during reconciliation.\\n *\\n *   var MyComponent = React.createClass({\\n *     render: function() {\\n *       return (\\n *         <div onClick={this.handleClick}>\\n *           <CustomComponent ref=\\\"custom\\\" />\\n *         </div>\\n *       );\\n *     },\\n *     handleClick: function() {\\n *       this.refs.custom.handleClick();\\n *     },\\n *     componentDidMount: function() {\\n *       this.refs.custom.initialize();\\n *     }\\n *   });\\n *\\n * Refs should rarely be used. When refs are used, they should only be done to\\n * control data that is not handled by React's data flow.\\n *\\n * @class ReactOwner\\n */\\nvar ReactOwner = {\\n\\n  /**\\n   * @param {?object} object\\n   * @return {boolean} True if `object` is a valid owner.\\n   * @final\\n   */\\n  isValidOwner: function (object) {\\n    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');\\n  },\\n\\n  /**\\n   * Adds a component by ref to an owner component.\\n   *\\n   * @param {ReactComponent} component Component to reference.\\n   * @param {string} ref Name by which to refer to the component.\\n   * @param {ReactOwner} owner Component on which to record the ref.\\n   * @final\\n   * @internal\\n   */\\n  addComponentAsRefTo: function (component, ref, owner) {\\n    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might ' + 'be adding a ref to a component that was not created inside a component\\\\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;\\n    owner.attachRef(ref, component);\\n  },\\n\\n  /**\\n   * Removes a component by ref from an owner component.\\n   *\\n   * @param {ReactComponent} component Component to dereference.\\n   * @param {string} ref Name of the ref to remove.\\n   * @param {ReactOwner} owner Component on which the ref is recorded.\\n   * @final\\n   * @internal\\n   */\\n  removeComponentAsRefFrom: function (component, ref, owner) {\\n    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might ' + 'be removing a ref to a component that was not created inside a component\\\\'s ' + '`render` method, or you have multiple copies of React loaded ' + '(details: https://fb.me/react-refs-must-have-owner).') : invariant(false) : undefined;\\n    // Check that `component` is still the current ref because we do not want to\\n    // detach the ref if another component stole it.\\n    if (owner.getPublicInstance().refs[ref] === component.getPublicInstance()) {\\n      owner.detachRef(ref);\\n    }\\n  }\\n\\n};\\n\\nmodule.exports = ReactOwner;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactPerf\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\n/**\\n * ReactPerf is a general AOP system designed to measure performance. This\\n * module only has the hooks: see ReactDefaultPerf for the analysis tool.\\n */\\nvar ReactPerf = {\\n  /**\\n   * Boolean to enable/disable measurement. Set to false by default to prevent\\n   * accidental logging and perf loss.\\n   */\\n  enableMeasure: false,\\n\\n  /**\\n   * Holds onto the measure function in use. By default, don't measure\\n   * anything, but we'll override this if we inject a measure function.\\n   */\\n  storedMeasure: _noMeasure,\\n\\n  /**\\n   * @param {object} object\\n   * @param {string} objectName\\n   * @param {object<string>} methodNames\\n   */\\n  measureMethods: function (object, objectName, methodNames) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      for (var key in methodNames) {\\n        if (!methodNames.hasOwnProperty(key)) {\\n          continue;\\n        }\\n        object[key] = ReactPerf.measure(objectName, methodNames[key], object[key]);\\n      }\\n    }\\n  },\\n\\n  /**\\n   * Use this to wrap methods you want to measure. Zero overhead in production.\\n   *\\n   * @param {string} objName\\n   * @param {string} fnName\\n   * @param {function} func\\n   * @return {function}\\n   */\\n  measure: function (objName, fnName, func) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      var measuredFunc = null;\\n      var wrapper = function () {\\n        if (ReactPerf.enableMeasure) {\\n          if (!measuredFunc) {\\n            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);\\n          }\\n          return measuredFunc.apply(this, arguments);\\n        }\\n        return func.apply(this, arguments);\\n      };\\n      wrapper.displayName = objName + '_' + fnName;\\n      return wrapper;\\n    }\\n    return func;\\n  },\\n\\n  injection: {\\n    /**\\n     * @param {function} measure\\n     */\\n    injectMeasure: function (measure) {\\n      ReactPerf.storedMeasure = measure;\\n    }\\n  }\\n};\\n\\n/**\\n * Simply passes through the measured function, without measuring it.\\n *\\n * @param {string} objName\\n * @param {string} fnName\\n * @param {function} func\\n * @return {function}\\n */\\nfunction _noMeasure(objName, fnName, func) {\\n  return func;\\n}\\n\\nmodule.exports = ReactPerf;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactPropTransferer\\n */\\n\\n'use strict';\\n\\nvar assign = require('./Object.assign');\\nvar emptyFunction = require('fbjs/lib/emptyFunction');\\nvar joinClasses = require('fbjs/lib/joinClasses');\\n\\n/**\\n * Creates a transfer strategy that will merge prop values using the supplied\\n * `mergeStrategy`. If a prop was previously unset, this just sets it.\\n *\\n * @param {function} mergeStrategy\\n * @return {function}\\n */\\nfunction createTransferStrategy(mergeStrategy) {\\n  return function (props, key, value) {\\n    if (!props.hasOwnProperty(key)) {\\n      props[key] = value;\\n    } else {\\n      props[key] = mergeStrategy(props[key], value);\\n    }\\n  };\\n}\\n\\nvar transferStrategyMerge = createTransferStrategy(function (a, b) {\\n  // `merge` overrides the first object's (`props[key]` above) keys using the\\n  // second object's (`value`) keys. An object's style's existing `propA` would\\n  // get overridden. Flip the order here.\\n  return assign({}, b, a);\\n});\\n\\n/**\\n * Transfer strategies dictate how props are transferred by `transferPropsTo`.\\n * NOTE: if you add any more exceptions to this list you should be sure to\\n * update `cloneWithProps()` accordingly.\\n */\\nvar TransferStrategies = {\\n  /**\\n   * Never transfer `children`.\\n   */\\n  children: emptyFunction,\\n  /**\\n   * Transfer the `className` prop by merging them.\\n   */\\n  className: createTransferStrategy(joinClasses),\\n  /**\\n   * Transfer the `style` prop (which is an object) by merging them.\\n   */\\n  style: transferStrategyMerge\\n};\\n\\n/**\\n * Mutates the first argument by transferring the properties from the second\\n * argument.\\n *\\n * @param {object} props\\n * @param {object} newProps\\n * @return {object}\\n */\\nfunction transferInto(props, newProps) {\\n  for (var thisKey in newProps) {\\n    if (!newProps.hasOwnProperty(thisKey)) {\\n      continue;\\n    }\\n\\n    var transferStrategy = TransferStrategies[thisKey];\\n\\n    if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {\\n      transferStrategy(props, thisKey, newProps[thisKey]);\\n    } else if (!props.hasOwnProperty(thisKey)) {\\n      props[thisKey] = newProps[thisKey];\\n    }\\n  }\\n  return props;\\n}\\n\\n/**\\n * ReactPropTransferer are capable of transferring props to another component\\n * using a `transferPropsTo` method.\\n *\\n * @class ReactPropTransferer\\n */\\nvar ReactPropTransferer = {\\n\\n  /**\\n   * Merge two props objects using TransferStrategies.\\n   *\\n   * @param {object} oldProps original props (they take precedence)\\n   * @param {object} newProps new props to merge in\\n   * @return {object} a new object containing both sets of props merged.\\n   */\\n  mergeProps: function (oldProps, newProps) {\\n    return transferInto(assign({}, oldProps), newProps);\\n  }\\n\\n};\\n\\nmodule.exports = ReactPropTransferer;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactPropTypeLocationNames\\n */\\n\\n'use strict';\\n\\nvar ReactPropTypeLocationNames = {};\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  ReactPropTypeLocationNames = {\\n    prop: 'prop',\\n    context: 'context',\\n    childContext: 'child context'\\n  };\\n}\\n\\nmodule.exports = ReactPropTypeLocationNames;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactPropTypeLocations\\n */\\n\\n'use strict';\\n\\nvar keyMirror = require('fbjs/lib/keyMirror');\\n\\nvar ReactPropTypeLocations = keyMirror({\\n  prop: null,\\n  context: null,\\n  childContext: null\\n});\\n\\nmodule.exports = ReactPropTypeLocations;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactPropTypes\\n */\\n\\n'use strict';\\n\\nvar ReactElement = require('./ReactElement');\\nvar ReactPropTypeLocationNames = require('./ReactPropTypeLocationNames');\\n\\nvar emptyFunction = require('fbjs/lib/emptyFunction');\\nvar getIteratorFn = require('./getIteratorFn');\\n\\n/**\\n * Collection of methods that allow declaration and validation of props that are\\n * supplied to React components. Example usage:\\n *\\n *   var Props = require('ReactPropTypes');\\n *   var MyArticle = React.createClass({\\n *     propTypes: {\\n *       // An optional string prop named \\\"description\\\".\\n *       description: Props.string,\\n *\\n *       // A required enum prop named \\\"category\\\".\\n *       category: Props.oneOf(['News','Photos']).isRequired,\\n *\\n *       // A prop named \\\"dialog\\\" that requires an instance of Dialog.\\n *       dialog: Props.instanceOf(Dialog).isRequired\\n *     },\\n *     render: function() { ... }\\n *   });\\n *\\n * A more formal specification of how these methods are used:\\n *\\n *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\\n *   decl := ReactPropTypes.{type}(.isRequired)?\\n *\\n * Each and every declaration produces a function with the same signature. This\\n * allows the creation of custom validation functions. For example:\\n *\\n *  var MyLink = React.createClass({\\n *    propTypes: {\\n *      // An optional string or URI prop named \\\"href\\\".\\n *      href: function(props, propName, componentName) {\\n *        var propValue = props[propName];\\n *        if (propValue != null && typeof propValue !== 'string' &&\\n *            !(propValue instanceof URI)) {\\n *          return new Error(\\n *            'Expected a string or an URI for ' + propName + ' in ' +\\n *            componentName\\n *          );\\n *        }\\n *      }\\n *    },\\n *    render: function() {...}\\n *  });\\n *\\n * @internal\\n */\\n\\nvar ANONYMOUS = '<<anonymous>>';\\n\\nvar ReactPropTypes = {\\n  array: createPrimitiveTypeChecker('array'),\\n  bool: createPrimitiveTypeChecker('boolean'),\\n  func: createPrimitiveTypeChecker('function'),\\n  number: createPrimitiveTypeChecker('number'),\\n  object: createPrimitiveTypeChecker('object'),\\n  string: createPrimitiveTypeChecker('string'),\\n\\n  any: createAnyTypeChecker(),\\n  arrayOf: createArrayOfTypeChecker,\\n  element: createElementTypeChecker(),\\n  instanceOf: createInstanceTypeChecker,\\n  node: createNodeChecker(),\\n  objectOf: createObjectOfTypeChecker,\\n  oneOf: createEnumTypeChecker,\\n  oneOfType: createUnionTypeChecker,\\n  shape: createShapeTypeChecker\\n};\\n\\nfunction createChainableTypeChecker(validate) {\\n  function checkType(isRequired, props, propName, componentName, location, propFullName) {\\n    componentName = componentName || ANONYMOUS;\\n    propFullName = propFullName || propName;\\n    if (props[propName] == null) {\\n      var locationName = ReactPropTypeLocationNames[location];\\n      if (isRequired) {\\n        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));\\n      }\\n      return null;\\n    } else {\\n      return validate(props, propName, componentName, location, propFullName);\\n    }\\n  }\\n\\n  var chainedCheckType = checkType.bind(null, false);\\n  chainedCheckType.isRequired = checkType.bind(null, true);\\n\\n  return chainedCheckType;\\n}\\n\\nfunction createPrimitiveTypeChecker(expectedType) {\\n  function validate(props, propName, componentName, location, propFullName) {\\n    var propValue = props[propName];\\n    var propType = getPropType(propValue);\\n    if (propType !== expectedType) {\\n      var locationName = ReactPropTypeLocationNames[location];\\n      // `propValue` being instance of, say, date/regexp, pass the 'object'\\n      // check, but we can offer a more precise error message here rather than\\n      // 'of type `object`'.\\n      var preciseType = getPreciseType(propValue);\\n\\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\\n    }\\n    return null;\\n  }\\n  return createChainableTypeChecker(validate);\\n}\\n\\nfunction createAnyTypeChecker() {\\n  return createChainableTypeChecker(emptyFunction.thatReturns(null));\\n}\\n\\nfunction createArrayOfTypeChecker(typeChecker) {\\n  function validate(props, propName, componentName, location, propFullName) {\\n    var propValue = props[propName];\\n    if (!Array.isArray(propValue)) {\\n      var locationName = ReactPropTypeLocationNames[location];\\n      var propType = getPropType(propValue);\\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\\n    }\\n    for (var i = 0; i < propValue.length; i++) {\\n      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');\\n      if (error instanceof Error) {\\n        return error;\\n      }\\n    }\\n    return null;\\n  }\\n  return createChainableTypeChecker(validate);\\n}\\n\\nfunction createElementTypeChecker() {\\n  function validate(props, propName, componentName, location, propFullName) {\\n    if (!ReactElement.isValidElement(props[propName])) {\\n      var locationName = ReactPropTypeLocationNames[location];\\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));\\n    }\\n    return null;\\n  }\\n  return createChainableTypeChecker(validate);\\n}\\n\\nfunction createInstanceTypeChecker(expectedClass) {\\n  function validate(props, propName, componentName, location, propFullName) {\\n    if (!(props[propName] instanceof expectedClass)) {\\n      var locationName = ReactPropTypeLocationNames[location];\\n      var expectedClassName = expectedClass.name || ANONYMOUS;\\n      var actualClassName = getClassName(props[propName]);\\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\\n    }\\n    return null;\\n  }\\n  return createChainableTypeChecker(validate);\\n}\\n\\nfunction createEnumTypeChecker(expectedValues) {\\n  if (!Array.isArray(expectedValues)) {\\n    return createChainableTypeChecker(function () {\\n      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');\\n    });\\n  }\\n\\n  function validate(props, propName, componentName, location, propFullName) {\\n    var propValue = props[propName];\\n    for (var i = 0; i < expectedValues.length; i++) {\\n      if (propValue === expectedValues[i]) {\\n        return null;\\n      }\\n    }\\n\\n    var locationName = ReactPropTypeLocationNames[location];\\n    var valuesString = JSON.stringify(expectedValues);\\n    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\\n  }\\n  return createChainableTypeChecker(validate);\\n}\\n\\nfunction createObjectOfTypeChecker(typeChecker) {\\n  function validate(props, propName, componentName, location, propFullName) {\\n    var propValue = props[propName];\\n    var propType = getPropType(propValue);\\n    if (propType !== 'object') {\\n      var locationName = ReactPropTypeLocationNames[location];\\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\\n    }\\n    for (var key in propValue) {\\n      if (propValue.hasOwnProperty(key)) {\\n        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);\\n        if (error instanceof Error) {\\n          return error;\\n        }\\n      }\\n    }\\n    return null;\\n  }\\n  return createChainableTypeChecker(validate);\\n}\\n\\nfunction createUnionTypeChecker(arrayOfTypeCheckers) {\\n  if (!Array.isArray(arrayOfTypeCheckers)) {\\n    return createChainableTypeChecker(function () {\\n      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');\\n    });\\n  }\\n\\n  function validate(props, propName, componentName, location, propFullName) {\\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\\n      var checker = arrayOfTypeCheckers[i];\\n      if (checker(props, propName, componentName, location, propFullName) == null) {\\n        return null;\\n      }\\n    }\\n\\n    var locationName = ReactPropTypeLocationNames[location];\\n    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\\n  }\\n  return createChainableTypeChecker(validate);\\n}\\n\\nfunction createNodeChecker() {\\n  function validate(props, propName, componentName, location, propFullName) {\\n    if (!isNode(props[propName])) {\\n      var locationName = ReactPropTypeLocationNames[location];\\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\\n    }\\n    return null;\\n  }\\n  return createChainableTypeChecker(validate);\\n}\\n\\nfunction createShapeTypeChecker(shapeTypes) {\\n  function validate(props, propName, componentName, location, propFullName) {\\n    var propValue = props[propName];\\n    var propType = getPropType(propValue);\\n    if (propType !== 'object') {\\n      var locationName = ReactPropTypeLocationNames[location];\\n      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\\n    }\\n    for (var key in shapeTypes) {\\n      var checker = shapeTypes[key];\\n      if (!checker) {\\n        continue;\\n      }\\n      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);\\n      if (error) {\\n        return error;\\n      }\\n    }\\n    return null;\\n  }\\n  return createChainableTypeChecker(validate);\\n}\\n\\nfunction isNode(propValue) {\\n  switch (typeof propValue) {\\n    case 'number':\\n    case 'string':\\n    case 'undefined':\\n      return true;\\n    case 'boolean':\\n      return !propValue;\\n    case 'object':\\n      if (Array.isArray(propValue)) {\\n        return propValue.every(isNode);\\n      }\\n      if (propValue === null || ReactElement.isValidElement(propValue)) {\\n        return true;\\n      }\\n\\n      var iteratorFn = getIteratorFn(propValue);\\n      if (iteratorFn) {\\n        var iterator = iteratorFn.call(propValue);\\n        var step;\\n        if (iteratorFn !== propValue.entries) {\\n          while (!(step = iterator.next()).done) {\\n            if (!isNode(step.value)) {\\n              return false;\\n            }\\n          }\\n        } else {\\n          // Iterator will provide entry [k,v] tuples rather than values.\\n          while (!(step = iterator.next()).done) {\\n            var entry = step.value;\\n            if (entry) {\\n              if (!isNode(entry[1])) {\\n                return false;\\n              }\\n            }\\n          }\\n        }\\n      } else {\\n        return false;\\n      }\\n\\n      return true;\\n    default:\\n      return false;\\n  }\\n}\\n\\n// Equivalent of `typeof` but with special handling for array and regexp.\\nfunction getPropType(propValue) {\\n  var propType = typeof propValue;\\n  if (Array.isArray(propValue)) {\\n    return 'array';\\n  }\\n  if (propValue instanceof RegExp) {\\n    // Old webkits (at least until Android 4.0) return 'function' rather than\\n    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\\n    // passes PropTypes.object.\\n    return 'object';\\n  }\\n  return propType;\\n}\\n\\n// This handles more types than `getPropType`. Only used for error messages.\\n// See `createPrimitiveTypeChecker`.\\nfunction getPreciseType(propValue) {\\n  var propType = getPropType(propValue);\\n  if (propType === 'object') {\\n    if (propValue instanceof Date) {\\n      return 'date';\\n    } else if (propValue instanceof RegExp) {\\n      return 'regexp';\\n    }\\n  }\\n  return propType;\\n}\\n\\n// Returns class name of the object, if any.\\nfunction getClassName(propValue) {\\n  if (!propValue.constructor || !propValue.constructor.name) {\\n    return '<<anonymous>>';\\n  }\\n  return propValue.constructor.name;\\n}\\n\\nmodule.exports = ReactPropTypes;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactReconcileTransaction\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar CallbackQueue = require('./CallbackQueue');\\nvar PooledClass = require('./PooledClass');\\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\\nvar ReactInputSelection = require('./ReactInputSelection');\\nvar Transaction = require('./Transaction');\\n\\nvar assign = require('./Object.assign');\\n\\n/**\\n * Ensures that, when possible, the selection range (currently selected text\\n * input) is not disturbed by performing the transaction.\\n */\\nvar SELECTION_RESTORATION = {\\n  /**\\n   * @return {Selection} Selection information.\\n   */\\n  initialize: ReactInputSelection.getSelectionInformation,\\n  /**\\n   * @param {Selection} sel Selection information returned from `initialize`.\\n   */\\n  close: ReactInputSelection.restoreSelection\\n};\\n\\n/**\\n * Suppresses events (blur/focus) that could be inadvertently dispatched due to\\n * high level DOM manipulations (like temporarily removing a text input from the\\n * DOM).\\n */\\nvar EVENT_SUPPRESSION = {\\n  /**\\n   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before\\n   * the reconciliation.\\n   */\\n  initialize: function () {\\n    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();\\n    ReactBrowserEventEmitter.setEnabled(false);\\n    return currentlyEnabled;\\n  },\\n\\n  /**\\n   * @param {boolean} previouslyEnabled Enabled status of\\n   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`\\n   *   restores the previous value.\\n   */\\n  close: function (previouslyEnabled) {\\n    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);\\n  }\\n};\\n\\n/**\\n * Provides a queue for collecting `componentDidMount` and\\n * `componentDidUpdate` callbacks during the the transaction.\\n */\\nvar ON_DOM_READY_QUEUEING = {\\n  /**\\n   * Initializes the internal `onDOMReady` queue.\\n   */\\n  initialize: function () {\\n    this.reactMountReady.reset();\\n  },\\n\\n  /**\\n   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.\\n   */\\n  close: function () {\\n    this.reactMountReady.notifyAll();\\n  }\\n};\\n\\n/**\\n * Executed within the scope of the `Transaction` instance. Consider these as\\n * being member methods, but with an implied ordering while being isolated from\\n * each other.\\n */\\nvar TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];\\n\\n/**\\n * Currently:\\n * - The order that these are listed in the transaction is critical:\\n * - Suppresses events.\\n * - Restores selection range.\\n *\\n * Future:\\n * - Restore document/overflow scroll positions that were unintentionally\\n *   modified via DOM insertions above the top viewport boundary.\\n * - Implement/integrate with customized constraint based layout system and keep\\n *   track of which dimensions must be remeasured.\\n *\\n * @class ReactReconcileTransaction\\n */\\nfunction ReactReconcileTransaction(forceHTML) {\\n  this.reinitializeTransaction();\\n  // Only server-side rendering really needs this option (see\\n  // `ReactServerRendering`), but server-side uses\\n  // `ReactServerRenderingTransaction` instead. This option is here so that it's\\n  // accessible and defaults to false when `ReactDOMComponent` and\\n  // `ReactTextComponent` checks it in `mountComponent`.`\\n  this.renderToStaticMarkup = false;\\n  this.reactMountReady = CallbackQueue.getPooled(null);\\n  this.useCreateElement = !forceHTML && ReactDOMFeatureFlags.useCreateElement;\\n}\\n\\nvar Mixin = {\\n  /**\\n   * @see Transaction\\n   * @abstract\\n   * @final\\n   * @return {array<object>} List of operation wrap procedures.\\n   *   TODO: convert to array<TransactionWrapper>\\n   */\\n  getTransactionWrappers: function () {\\n    return TRANSACTION_WRAPPERS;\\n  },\\n\\n  /**\\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\\n   */\\n  getReactMountReady: function () {\\n    return this.reactMountReady;\\n  },\\n\\n  /**\\n   * `PooledClass` looks for this, and will invoke this before allowing this\\n   * instance to be reused.\\n   */\\n  destructor: function () {\\n    CallbackQueue.release(this.reactMountReady);\\n    this.reactMountReady = null;\\n  }\\n};\\n\\nassign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);\\n\\nPooledClass.addPoolingTo(ReactReconcileTransaction);\\n\\nmodule.exports = ReactReconcileTransaction;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactReconciler\\n */\\n\\n'use strict';\\n\\nvar ReactRef = require('./ReactRef');\\n\\n/**\\n * Helper to call ReactRef.attachRefs with this composite component, split out\\n * to avoid allocations in the transaction mount-ready queue.\\n */\\nfunction attachRefs() {\\n  ReactRef.attachRefs(this, this._currentElement);\\n}\\n\\nvar ReactReconciler = {\\n\\n  /**\\n   * Initializes the component, renders markup, and registers event listeners.\\n   *\\n   * @param {ReactComponent} internalInstance\\n   * @param {string} rootID DOM ID of the root node.\\n   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction\\n   * @return {?string} Rendered markup to be inserted into the DOM.\\n   * @final\\n   * @internal\\n   */\\n  mountComponent: function (internalInstance, rootID, transaction, context) {\\n    var markup = internalInstance.mountComponent(rootID, transaction, context);\\n    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {\\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\\n    }\\n    return markup;\\n  },\\n\\n  /**\\n   * Releases any resources allocated by `mountComponent`.\\n   *\\n   * @final\\n   * @internal\\n   */\\n  unmountComponent: function (internalInstance) {\\n    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);\\n    internalInstance.unmountComponent();\\n  },\\n\\n  /**\\n   * Update a component using a new element.\\n   *\\n   * @param {ReactComponent} internalInstance\\n   * @param {ReactElement} nextElement\\n   * @param {ReactReconcileTransaction} transaction\\n   * @param {object} context\\n   * @internal\\n   */\\n  receiveComponent: function (internalInstance, nextElement, transaction, context) {\\n    var prevElement = internalInstance._currentElement;\\n\\n    if (nextElement === prevElement && context === internalInstance._context) {\\n      // Since elements are immutable after the owner is rendered,\\n      // we can do a cheap identity compare here to determine if this is a\\n      // superfluous reconcile. It's possible for state to be mutable but such\\n      // change should trigger an update of the owner which would recreate\\n      // the element. We explicitly check for the existence of an owner since\\n      // it's possible for an element created outside a composite to be\\n      // deeply mutated and reused.\\n\\n      // TODO: Bailing out early is just a perf optimization right?\\n      // TODO: Removing the return statement should affect correctness?\\n      return;\\n    }\\n\\n    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);\\n\\n    if (refsChanged) {\\n      ReactRef.detachRefs(internalInstance, prevElement);\\n    }\\n\\n    internalInstance.receiveComponent(nextElement, transaction, context);\\n\\n    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {\\n      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);\\n    }\\n  },\\n\\n  /**\\n   * Flush any dirty changes in a component.\\n   *\\n   * @param {ReactComponent} internalInstance\\n   * @param {ReactReconcileTransaction} transaction\\n   * @internal\\n   */\\n  performUpdateIfNecessary: function (internalInstance, transaction) {\\n    internalInstance.performUpdateIfNecessary(transaction);\\n  }\\n\\n};\\n\\nmodule.exports = ReactReconciler;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactRef\\n */\\n\\n'use strict';\\n\\nvar ReactOwner = require('./ReactOwner');\\n\\nvar ReactRef = {};\\n\\nfunction attachRef(ref, component, owner) {\\n  if (typeof ref === 'function') {\\n    ref(component.getPublicInstance());\\n  } else {\\n    // Legacy ref\\n    ReactOwner.addComponentAsRefTo(component, ref, owner);\\n  }\\n}\\n\\nfunction detachRef(ref, component, owner) {\\n  if (typeof ref === 'function') {\\n    ref(null);\\n  } else {\\n    // Legacy ref\\n    ReactOwner.removeComponentAsRefFrom(component, ref, owner);\\n  }\\n}\\n\\nReactRef.attachRefs = function (instance, element) {\\n  if (element === null || element === false) {\\n    return;\\n  }\\n  var ref = element.ref;\\n  if (ref != null) {\\n    attachRef(ref, instance, element._owner);\\n  }\\n};\\n\\nReactRef.shouldUpdateRefs = function (prevElement, nextElement) {\\n  // If either the owner or a `ref` has changed, make sure the newest owner\\n  // has stored a reference to `this`, and the previous owner (if different)\\n  // has forgotten the reference to `this`. We use the element instead\\n  // of the public this.props because the post processing cannot determine\\n  // a ref. The ref conceptually lives on the element.\\n\\n  // TODO: Should this even be possible? The owner cannot change because\\n  // it's forbidden by shouldUpdateReactComponent. The ref can change\\n  // if you swap the keys of but not the refs. Reconsider where this check\\n  // is made. It probably belongs where the key checking and\\n  // instantiateReactComponent is done.\\n\\n  var prevEmpty = prevElement === null || prevElement === false;\\n  var nextEmpty = nextElement === null || nextElement === false;\\n\\n  return(\\n    // This has a few false positives w/r/t empty components.\\n    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref\\n  );\\n};\\n\\nReactRef.detachRefs = function (instance, element) {\\n  if (element === null || element === false) {\\n    return;\\n  }\\n  var ref = element.ref;\\n  if (ref != null) {\\n    detachRef(ref, instance, element._owner);\\n  }\\n};\\n\\nmodule.exports = ReactRef;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactRootIndex\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar ReactRootIndexInjection = {\\n  /**\\n   * @param {function} _createReactRootIndex\\n   */\\n  injectCreateReactRootIndex: function (_createReactRootIndex) {\\n    ReactRootIndex.createReactRootIndex = _createReactRootIndex;\\n  }\\n};\\n\\nvar ReactRootIndex = {\\n  createReactRootIndex: null,\\n  injection: ReactRootIndexInjection\\n};\\n\\nmodule.exports = ReactRootIndex;\",\n    \"/**\\n * Copyright 2014-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactServerBatchingStrategy\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar ReactServerBatchingStrategy = {\\n  isBatchingUpdates: false,\\n  batchedUpdates: function (callback) {\\n    // Don't do anything here. During the server rendering we don't want to\\n    // schedule any updates. We will simply ignore them.\\n  }\\n};\\n\\nmodule.exports = ReactServerBatchingStrategy;\",\n    \"/**\\n * Copyright 2014-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactServerRenderingTransaction\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar PooledClass = require('./PooledClass');\\nvar CallbackQueue = require('./CallbackQueue');\\nvar Transaction = require('./Transaction');\\n\\nvar assign = require('./Object.assign');\\nvar emptyFunction = require('fbjs/lib/emptyFunction');\\n\\n/**\\n * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks\\n * during the performing of the transaction.\\n */\\nvar ON_DOM_READY_QUEUEING = {\\n  /**\\n   * Initializes the internal `onDOMReady` queue.\\n   */\\n  initialize: function () {\\n    this.reactMountReady.reset();\\n  },\\n\\n  close: emptyFunction\\n};\\n\\n/**\\n * Executed within the scope of the `Transaction` instance. Consider these as\\n * being member methods, but with an implied ordering while being isolated from\\n * each other.\\n */\\nvar TRANSACTION_WRAPPERS = [ON_DOM_READY_QUEUEING];\\n\\n/**\\n * @class ReactServerRenderingTransaction\\n * @param {boolean} renderToStaticMarkup\\n */\\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\\n  this.reinitializeTransaction();\\n  this.renderToStaticMarkup = renderToStaticMarkup;\\n  this.reactMountReady = CallbackQueue.getPooled(null);\\n  this.useCreateElement = false;\\n}\\n\\nvar Mixin = {\\n  /**\\n   * @see Transaction\\n   * @abstract\\n   * @final\\n   * @return {array} Empty list of operation wrap procedures.\\n   */\\n  getTransactionWrappers: function () {\\n    return TRANSACTION_WRAPPERS;\\n  },\\n\\n  /**\\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\\n   */\\n  getReactMountReady: function () {\\n    return this.reactMountReady;\\n  },\\n\\n  /**\\n   * `PooledClass` looks for this, and will invoke this before allowing this\\n   * instance to be reused.\\n   */\\n  destructor: function () {\\n    CallbackQueue.release(this.reactMountReady);\\n    this.reactMountReady = null;\\n  }\\n};\\n\\nassign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);\\n\\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\\n\\nmodule.exports = ReactServerRenderingTransaction;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @typechecks static-only\\n * @providesModule ReactServerRendering\\n */\\n'use strict';\\n\\nvar ReactDefaultBatchingStrategy = require('./ReactDefaultBatchingStrategy');\\nvar ReactElement = require('./ReactElement');\\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\\nvar ReactServerBatchingStrategy = require('./ReactServerBatchingStrategy');\\nvar ReactServerRenderingTransaction = require('./ReactServerRenderingTransaction');\\nvar ReactUpdates = require('./ReactUpdates');\\n\\nvar emptyObject = require('fbjs/lib/emptyObject');\\nvar instantiateReactComponent = require('./instantiateReactComponent');\\nvar invariant = require('fbjs/lib/invariant');\\n\\n/**\\n * @param {ReactElement} element\\n * @return {string} the HTML markup\\n */\\nfunction renderToString(element) {\\n  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToString(): You must pass a valid ReactElement.') : invariant(false) : undefined;\\n\\n  var transaction;\\n  try {\\n    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);\\n\\n    var id = ReactInstanceHandles.createReactRootID();\\n    transaction = ReactServerRenderingTransaction.getPooled(false);\\n\\n    return transaction.perform(function () {\\n      var componentInstance = instantiateReactComponent(element, null);\\n      var markup = componentInstance.mountComponent(id, transaction, emptyObject);\\n      return ReactMarkupChecksum.addChecksumToMarkup(markup);\\n    }, null);\\n  } finally {\\n    ReactServerRenderingTransaction.release(transaction);\\n    // Revert to the DOM batching strategy since these two renderers\\n    // currently share these stateful modules.\\n    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);\\n  }\\n}\\n\\n/**\\n * @param {ReactElement} element\\n * @return {string} the HTML markup, without the extra React ID and checksum\\n * (for generating static pages)\\n */\\nfunction renderToStaticMarkup(element) {\\n  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'renderToStaticMarkup(): You must pass a valid ReactElement.') : invariant(false) : undefined;\\n\\n  var transaction;\\n  try {\\n    ReactUpdates.injection.injectBatchingStrategy(ReactServerBatchingStrategy);\\n\\n    var id = ReactInstanceHandles.createReactRootID();\\n    transaction = ReactServerRenderingTransaction.getPooled(true);\\n\\n    return transaction.perform(function () {\\n      var componentInstance = instantiateReactComponent(element, null);\\n      return componentInstance.mountComponent(id, transaction, emptyObject);\\n    }, null);\\n  } finally {\\n    ReactServerRenderingTransaction.release(transaction);\\n    // Revert to the DOM batching strategy since these two renderers\\n    // currently share these stateful modules.\\n    ReactUpdates.injection.injectBatchingStrategy(ReactDefaultBatchingStrategy);\\n  }\\n}\\n\\nmodule.exports = {\\n  renderToString: renderToString,\\n  renderToStaticMarkup: renderToStaticMarkup\\n};\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactStateSetters\\n */\\n\\n'use strict';\\n\\nvar ReactStateSetters = {\\n  /**\\n   * Returns a function that calls the provided function, and uses the result\\n   * of that to set the component's state.\\n   *\\n   * @param {ReactCompositeComponent} component\\n   * @param {function} funcReturningState Returned callback uses this to\\n   *                                      determine how to update state.\\n   * @return {function} callback that when invoked uses funcReturningState to\\n   *                    determined the object literal to setState.\\n   */\\n  createStateSetter: function (component, funcReturningState) {\\n    return function (a, b, c, d, e, f) {\\n      var partialState = funcReturningState.call(component, a, b, c, d, e, f);\\n      if (partialState) {\\n        component.setState(partialState);\\n      }\\n    };\\n  },\\n\\n  /**\\n   * Returns a single-argument callback that can be used to update a single\\n   * key in the component's state.\\n   *\\n   * Note: this is memoized function, which makes it inexpensive to call.\\n   *\\n   * @param {ReactCompositeComponent} component\\n   * @param {string} key The key in the state that you should update.\\n   * @return {function} callback of 1 argument which calls setState() with\\n   *                    the provided keyName and callback argument.\\n   */\\n  createStateKeySetter: function (component, key) {\\n    // Memoize the setters.\\n    var cache = component.__keySetters || (component.__keySetters = {});\\n    return cache[key] || (cache[key] = createStateKeySetter(component, key));\\n  }\\n};\\n\\nfunction createStateKeySetter(component, key) {\\n  // Partial state is allocated outside of the function closure so it can be\\n  // reused with every call, avoiding memory allocation when this function\\n  // is called.\\n  var partialState = {};\\n  return function stateKeySetter(value) {\\n    partialState[key] = value;\\n    component.setState(partialState);\\n  };\\n}\\n\\nReactStateSetters.Mixin = {\\n  /**\\n   * Returns a function that calls the provided function, and uses the result\\n   * of that to set the component's state.\\n   *\\n   * For example, these statements are equivalent:\\n   *\\n   *   this.setState({x: 1});\\n   *   this.createStateSetter(function(xValue) {\\n   *     return {x: xValue};\\n   *   })(1);\\n   *\\n   * @param {function} funcReturningState Returned callback uses this to\\n   *                                      determine how to update state.\\n   * @return {function} callback that when invoked uses funcReturningState to\\n   *                    determined the object literal to setState.\\n   */\\n  createStateSetter: function (funcReturningState) {\\n    return ReactStateSetters.createStateSetter(this, funcReturningState);\\n  },\\n\\n  /**\\n   * Returns a single-argument callback that can be used to update a single\\n   * key in the component's state.\\n   *\\n   * For example, these statements are equivalent:\\n   *\\n   *   this.setState({x: 1});\\n   *   this.createStateKeySetter('x')(1);\\n   *\\n   * Note: this is memoized function, which makes it inexpensive to call.\\n   *\\n   * @param {string} key The key in the state that you should update.\\n   * @return {function} callback of 1 argument which calls setState() with\\n   *                    the provided keyName and callback argument.\\n   */\\n  createStateKeySetter: function (key) {\\n    return ReactStateSetters.createStateKeySetter(this, key);\\n  }\\n};\\n\\nmodule.exports = ReactStateSetters;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactTestUtils\\n */\\n\\n'use strict';\\n\\nvar EventConstants = require('./EventConstants');\\nvar EventPluginHub = require('./EventPluginHub');\\nvar EventPropagators = require('./EventPropagators');\\nvar React = require('./React');\\nvar ReactDOM = require('./ReactDOM');\\nvar ReactElement = require('./ReactElement');\\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\\nvar ReactCompositeComponent = require('./ReactCompositeComponent');\\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\\nvar ReactInstanceMap = require('./ReactInstanceMap');\\nvar ReactMount = require('./ReactMount');\\nvar ReactUpdates = require('./ReactUpdates');\\nvar SyntheticEvent = require('./SyntheticEvent');\\n\\nvar assign = require('./Object.assign');\\nvar emptyObject = require('fbjs/lib/emptyObject');\\nvar findDOMNode = require('./findDOMNode');\\nvar invariant = require('fbjs/lib/invariant');\\n\\nvar topLevelTypes = EventConstants.topLevelTypes;\\n\\nfunction Event(suffix) {}\\n\\n/**\\n * @class ReactTestUtils\\n */\\n\\nfunction findAllInRenderedTreeInternal(inst, test) {\\n  if (!inst || !inst.getPublicInstance) {\\n    return [];\\n  }\\n  var publicInst = inst.getPublicInstance();\\n  var ret = test(publicInst) ? [publicInst] : [];\\n  var currentElement = inst._currentElement;\\n  if (ReactTestUtils.isDOMComponent(publicInst)) {\\n    var renderedChildren = inst._renderedChildren;\\n    var key;\\n    for (key in renderedChildren) {\\n      if (!renderedChildren.hasOwnProperty(key)) {\\n        continue;\\n      }\\n      ret = ret.concat(findAllInRenderedTreeInternal(renderedChildren[key], test));\\n    }\\n  } else if (ReactElement.isValidElement(currentElement) && typeof currentElement.type === 'function') {\\n    ret = ret.concat(findAllInRenderedTreeInternal(inst._renderedComponent, test));\\n  }\\n  return ret;\\n}\\n\\n/**\\n * Todo: Support the entire DOM.scry query syntax. For now, these simple\\n * utilities will suffice for testing purposes.\\n * @lends ReactTestUtils\\n */\\nvar ReactTestUtils = {\\n  renderIntoDocument: function (instance) {\\n    var div = document.createElement('div');\\n    // None of our tests actually require attaching the container to the\\n    // DOM, and doing so creates a mess that we rely on test isolation to\\n    // clean up, so we're going to stop honoring the name of this method\\n    // (and probably rename it eventually) if no problems arise.\\n    // document.documentElement.appendChild(div);\\n    return ReactDOM.render(instance, div);\\n  },\\n\\n  isElement: function (element) {\\n    return ReactElement.isValidElement(element);\\n  },\\n\\n  isElementOfType: function (inst, convenienceConstructor) {\\n    return ReactElement.isValidElement(inst) && inst.type === convenienceConstructor;\\n  },\\n\\n  isDOMComponent: function (inst) {\\n    return !!(inst && inst.nodeType === 1 && inst.tagName);\\n  },\\n\\n  isDOMComponentElement: function (inst) {\\n    return !!(inst && ReactElement.isValidElement(inst) && !!inst.tagName);\\n  },\\n\\n  isCompositeComponent: function (inst) {\\n    if (ReactTestUtils.isDOMComponent(inst)) {\\n      // Accessing inst.setState warns; just return false as that'll be what\\n      // this returns when we have DOM nodes as refs directly\\n      return false;\\n    }\\n    return inst != null && typeof inst.render === 'function' && typeof inst.setState === 'function';\\n  },\\n\\n  isCompositeComponentWithType: function (inst, type) {\\n    if (!ReactTestUtils.isCompositeComponent(inst)) {\\n      return false;\\n    }\\n    var internalInstance = ReactInstanceMap.get(inst);\\n    var constructor = internalInstance._currentElement.type;\\n\\n    return constructor === type;\\n  },\\n\\n  isCompositeComponentElement: function (inst) {\\n    if (!ReactElement.isValidElement(inst)) {\\n      return false;\\n    }\\n    // We check the prototype of the type that will get mounted, not the\\n    // instance itself. This is a future proof way of duck typing.\\n    var prototype = inst.type.prototype;\\n    return typeof prototype.render === 'function' && typeof prototype.setState === 'function';\\n  },\\n\\n  isCompositeComponentElementWithType: function (inst, type) {\\n    var internalInstance = ReactInstanceMap.get(inst);\\n    var constructor = internalInstance._currentElement.type;\\n\\n    return !!(ReactTestUtils.isCompositeComponentElement(inst) && constructor === type);\\n  },\\n\\n  getRenderedChildOfCompositeComponent: function (inst) {\\n    if (!ReactTestUtils.isCompositeComponent(inst)) {\\n      return null;\\n    }\\n    var internalInstance = ReactInstanceMap.get(inst);\\n    return internalInstance._renderedComponent.getPublicInstance();\\n  },\\n\\n  findAllInRenderedTree: function (inst, test) {\\n    if (!inst) {\\n      return [];\\n    }\\n    !ReactTestUtils.isCompositeComponent(inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findAllInRenderedTree(...): instance must be a composite component') : invariant(false) : undefined;\\n    return findAllInRenderedTreeInternal(ReactInstanceMap.get(inst), test);\\n  },\\n\\n  /**\\n   * Finds all instance of components in the rendered tree that are DOM\\n   * components with the class name matching `className`.\\n   * @return {array} an array of all the matches.\\n   */\\n  scryRenderedDOMComponentsWithClass: function (root, classNames) {\\n    if (!Array.isArray(classNames)) {\\n      classNames = classNames.split(/\\\\s+/);\\n    }\\n    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {\\n      if (ReactTestUtils.isDOMComponent(inst)) {\\n        var className = inst.className;\\n        if (typeof className !== 'string') {\\n          // SVG, probably.\\n          className = inst.getAttribute('class') || '';\\n        }\\n        var classList = className.split(/\\\\s+/);\\n        return classNames.every(function (name) {\\n          return classList.indexOf(name) !== -1;\\n        });\\n      }\\n      return false;\\n    });\\n  },\\n\\n  /**\\n   * Like scryRenderedDOMComponentsWithClass but expects there to be one result,\\n   * and returns that one result, or throws exception if there is any other\\n   * number of matches besides one.\\n   * @return {!ReactDOMComponent} The one match.\\n   */\\n  findRenderedDOMComponentWithClass: function (root, className) {\\n    var all = ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);\\n    if (all.length !== 1) {\\n      throw new Error('Did not find exactly one match ' + '(found: ' + all.length + ') for class:' + className);\\n    }\\n    return all[0];\\n  },\\n\\n  /**\\n   * Finds all instance of components in the rendered tree that are DOM\\n   * components with the tag name matching `tagName`.\\n   * @return {array} an array of all the matches.\\n   */\\n  scryRenderedDOMComponentsWithTag: function (root, tagName) {\\n    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {\\n      return ReactTestUtils.isDOMComponent(inst) && inst.tagName.toUpperCase() === tagName.toUpperCase();\\n    });\\n  },\\n\\n  /**\\n   * Like scryRenderedDOMComponentsWithTag but expects there to be one result,\\n   * and returns that one result, or throws exception if there is any other\\n   * number of matches besides one.\\n   * @return {!ReactDOMComponent} The one match.\\n   */\\n  findRenderedDOMComponentWithTag: function (root, tagName) {\\n    var all = ReactTestUtils.scryRenderedDOMComponentsWithTag(root, tagName);\\n    if (all.length !== 1) {\\n      throw new Error('Did not find exactly one match for tag:' + tagName);\\n    }\\n    return all[0];\\n  },\\n\\n  /**\\n   * Finds all instances of components with type equal to `componentType`.\\n   * @return {array} an array of all the matches.\\n   */\\n  scryRenderedComponentsWithType: function (root, componentType) {\\n    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {\\n      return ReactTestUtils.isCompositeComponentWithType(inst, componentType);\\n    });\\n  },\\n\\n  /**\\n   * Same as `scryRenderedComponentsWithType` but expects there to be one result\\n   * and returns that one result, or throws exception if there is any other\\n   * number of matches besides one.\\n   * @return {!ReactComponent} The one match.\\n   */\\n  findRenderedComponentWithType: function (root, componentType) {\\n    var all = ReactTestUtils.scryRenderedComponentsWithType(root, componentType);\\n    if (all.length !== 1) {\\n      throw new Error('Did not find exactly one match for componentType:' + componentType + ' (found ' + all.length + ')');\\n    }\\n    return all[0];\\n  },\\n\\n  /**\\n   * Pass a mocked component module to this method to augment it with\\n   * useful methods that allow it to be used as a dummy React component.\\n   * Instead of rendering as usual, the component will become a simple\\n   * <div> containing any provided children.\\n   *\\n   * @param {object} module the mock function object exported from a\\n   *                        module that defines the component to be mocked\\n   * @param {?string} mockTagName optional dummy root tag name to return\\n   *                              from render method (overrides\\n   *                              module.mockTagName if provided)\\n   * @return {object} the ReactTestUtils object (for chaining)\\n   */\\n  mockComponent: function (module, mockTagName) {\\n    mockTagName = mockTagName || module.mockTagName || 'div';\\n\\n    module.prototype.render.mockImplementation(function () {\\n      return React.createElement(mockTagName, null, this.props.children);\\n    });\\n\\n    return this;\\n  },\\n\\n  /**\\n   * Simulates a top level event being dispatched from a raw event that occurred\\n   * on an `Element` node.\\n   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`\\n   * @param {!Element} node The dom to simulate an event occurring on.\\n   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.\\n   */\\n  simulateNativeEventOnNode: function (topLevelType, node, fakeNativeEvent) {\\n    fakeNativeEvent.target = node;\\n    ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(topLevelType, fakeNativeEvent);\\n  },\\n\\n  /**\\n   * Simulates a top level event being dispatched from a raw event that occurred\\n   * on the `ReactDOMComponent` `comp`.\\n   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`.\\n   * @param {!ReactDOMComponent} comp\\n   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.\\n   */\\n  simulateNativeEventOnDOMComponent: function (topLevelType, comp, fakeNativeEvent) {\\n    ReactTestUtils.simulateNativeEventOnNode(topLevelType, findDOMNode(comp), fakeNativeEvent);\\n  },\\n\\n  nativeTouchData: function (x, y) {\\n    return {\\n      touches: [{ pageX: x, pageY: y }]\\n    };\\n  },\\n\\n  createRenderer: function () {\\n    return new ReactShallowRenderer();\\n  },\\n\\n  Simulate: null,\\n  SimulateNative: {}\\n};\\n\\n/**\\n * @class ReactShallowRenderer\\n */\\nvar ReactShallowRenderer = function () {\\n  this._instance = null;\\n};\\n\\nReactShallowRenderer.prototype.getRenderOutput = function () {\\n  return this._instance && this._instance._renderedComponent && this._instance._renderedComponent._renderedOutput || null;\\n};\\n\\nvar NoopInternalComponent = function (element) {\\n  this._renderedOutput = element;\\n  this._currentElement = element;\\n};\\n\\nNoopInternalComponent.prototype = {\\n\\n  mountComponent: function () {},\\n\\n  receiveComponent: function (element) {\\n    this._renderedOutput = element;\\n    this._currentElement = element;\\n  },\\n\\n  unmountComponent: function () {},\\n\\n  getPublicInstance: function () {\\n    return null;\\n  }\\n};\\n\\nvar ShallowComponentWrapper = function () {};\\nassign(ShallowComponentWrapper.prototype, ReactCompositeComponent.Mixin, {\\n  _instantiateReactComponent: function (element) {\\n    return new NoopInternalComponent(element);\\n  },\\n  _replaceNodeWithMarkupByID: function () {},\\n  _renderValidatedComponent: ReactCompositeComponent.Mixin._renderValidatedComponentWithoutOwnerOrContext\\n});\\n\\nReactShallowRenderer.prototype.render = function (element, context) {\\n  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactShallowRenderer render(): Invalid component element.%s', typeof element === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' : '') : invariant(false) : undefined;\\n  !(typeof element.type !== 'string') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactShallowRenderer render(): Shallow rendering works only with custom ' + 'components, not primitives (%s). Instead of calling `.render(el)` and ' + 'inspecting the rendered output, look at `el.props` directly instead.', element.type) : invariant(false) : undefined;\\n\\n  if (!context) {\\n    context = emptyObject;\\n  }\\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(false);\\n  this._render(element, transaction, context);\\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\\n};\\n\\nReactShallowRenderer.prototype.unmount = function () {\\n  if (this._instance) {\\n    this._instance.unmountComponent();\\n  }\\n};\\n\\nReactShallowRenderer.prototype._render = function (element, transaction, context) {\\n  if (this._instance) {\\n    this._instance.receiveComponent(element, transaction, context);\\n  } else {\\n    var rootID = ReactInstanceHandles.createReactRootID();\\n    var instance = new ShallowComponentWrapper(element.type);\\n    instance.construct(element);\\n\\n    instance.mountComponent(rootID, transaction, context);\\n\\n    this._instance = instance;\\n  }\\n};\\n\\n/**\\n * Exports:\\n *\\n * - `ReactTestUtils.Simulate.click(Element/ReactDOMComponent)`\\n * - `ReactTestUtils.Simulate.mouseMove(Element/ReactDOMComponent)`\\n * - `ReactTestUtils.Simulate.change(Element/ReactDOMComponent)`\\n * - ... (All keys from event plugin `eventTypes` objects)\\n */\\nfunction makeSimulator(eventType) {\\n  return function (domComponentOrNode, eventData) {\\n    var node;\\n    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {\\n      node = findDOMNode(domComponentOrNode);\\n    } else if (domComponentOrNode.tagName) {\\n      node = domComponentOrNode;\\n    }\\n\\n    var dispatchConfig = ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType];\\n\\n    var fakeNativeEvent = new Event();\\n    fakeNativeEvent.target = node;\\n    // We don't use SyntheticEvent.getPooled in order to not have to worry about\\n    // properly destroying any properties assigned from `eventData` upon release\\n    var event = new SyntheticEvent(dispatchConfig, ReactMount.getID(node), fakeNativeEvent, node);\\n    assign(event, eventData);\\n\\n    if (dispatchConfig.phasedRegistrationNames) {\\n      EventPropagators.accumulateTwoPhaseDispatches(event);\\n    } else {\\n      EventPropagators.accumulateDirectDispatches(event);\\n    }\\n\\n    ReactUpdates.batchedUpdates(function () {\\n      EventPluginHub.enqueueEvents(event);\\n      EventPluginHub.processEventQueue(true);\\n    });\\n  };\\n}\\n\\nfunction buildSimulators() {\\n  ReactTestUtils.Simulate = {};\\n\\n  var eventType;\\n  for (eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {\\n    /**\\n     * @param {!Element|ReactDOMComponent} domComponentOrNode\\n     * @param {?object} eventData Fake event data to use in SyntheticEvent.\\n     */\\n    ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);\\n  }\\n}\\n\\n// Rebuild ReactTestUtils.Simulate whenever event plugins are injected\\nvar oldInjectEventPluginOrder = EventPluginHub.injection.injectEventPluginOrder;\\nEventPluginHub.injection.injectEventPluginOrder = function () {\\n  oldInjectEventPluginOrder.apply(this, arguments);\\n  buildSimulators();\\n};\\nvar oldInjectEventPlugins = EventPluginHub.injection.injectEventPluginsByName;\\nEventPluginHub.injection.injectEventPluginsByName = function () {\\n  oldInjectEventPlugins.apply(this, arguments);\\n  buildSimulators();\\n};\\n\\nbuildSimulators();\\n\\n/**\\n * Exports:\\n *\\n * - `ReactTestUtils.SimulateNative.click(Element/ReactDOMComponent)`\\n * - `ReactTestUtils.SimulateNative.mouseMove(Element/ReactDOMComponent)`\\n * - `ReactTestUtils.SimulateNative.mouseIn/ReactDOMComponent)`\\n * - `ReactTestUtils.SimulateNative.mouseOut(Element/ReactDOMComponent)`\\n * - ... (All keys from `EventConstants.topLevelTypes`)\\n *\\n * Note: Top level event types are a subset of the entire set of handler types\\n * (which include a broader set of \\\"synthetic\\\" events). For example, onDragDone\\n * is a synthetic event. Except when testing an event plugin or React's event\\n * handling code specifically, you probably want to use ReactTestUtils.Simulate\\n * to dispatch synthetic events.\\n */\\n\\nfunction makeNativeSimulator(eventType) {\\n  return function (domComponentOrNode, nativeEventData) {\\n    var fakeNativeEvent = new Event(eventType);\\n    assign(fakeNativeEvent, nativeEventData);\\n    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {\\n      ReactTestUtils.simulateNativeEventOnDOMComponent(eventType, domComponentOrNode, fakeNativeEvent);\\n    } else if (domComponentOrNode.tagName) {\\n      // Will allow on actual dom nodes.\\n      ReactTestUtils.simulateNativeEventOnNode(eventType, domComponentOrNode, fakeNativeEvent);\\n    }\\n  };\\n}\\n\\nObject.keys(topLevelTypes).forEach(function (eventType) {\\n  // Event type is stored as 'topClick' - we transform that to 'click'\\n  var convenienceName = eventType.indexOf('top') === 0 ? eventType.charAt(3).toLowerCase() + eventType.substr(4) : eventType;\\n  /**\\n   * @param {!Element|ReactDOMComponent} domComponentOrNode\\n   * @param {?Event} nativeEventData Fake native event to use in SyntheticEvent.\\n   */\\n  ReactTestUtils.SimulateNative[convenienceName] = makeNativeSimulator(eventType);\\n});\\n\\nmodule.exports = ReactTestUtils;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @typechecks static-only\\n * @providesModule ReactTransitionChildMapping\\n */\\n\\n'use strict';\\n\\nvar flattenChildren = require('./flattenChildren');\\n\\nvar ReactTransitionChildMapping = {\\n  /**\\n   * Given `this.props.children`, return an object mapping key to child. Just\\n   * simple syntactic sugar around flattenChildren().\\n   *\\n   * @param {*} children `this.props.children`\\n   * @return {object} Mapping of key to child\\n   */\\n  getChildMapping: function (children) {\\n    if (!children) {\\n      return children;\\n    }\\n    return flattenChildren(children);\\n  },\\n\\n  /**\\n   * When you're adding or removing children some may be added or removed in the\\n   * same render pass. We want to show *both* since we want to simultaneously\\n   * animate elements in and out. This function takes a previous set of keys\\n   * and a new set of keys and merges them with its best guess of the correct\\n   * ordering. In the future we may expose some of the utilities in\\n   * ReactMultiChild to make this easy, but for now React itself does not\\n   * directly have this concept of the union of prevChildren and nextChildren\\n   * so we implement it here.\\n   *\\n   * @param {object} prev prev children as returned from\\n   * `ReactTransitionChildMapping.getChildMapping()`.\\n   * @param {object} next next children as returned from\\n   * `ReactTransitionChildMapping.getChildMapping()`.\\n   * @return {object} a key set that contains all keys in `prev` and all keys\\n   * in `next` in a reasonable order.\\n   */\\n  mergeChildMappings: function (prev, next) {\\n    prev = prev || {};\\n    next = next || {};\\n\\n    function getValueForKey(key) {\\n      if (next.hasOwnProperty(key)) {\\n        return next[key];\\n      } else {\\n        return prev[key];\\n      }\\n    }\\n\\n    // For each key of `next`, the list of keys to insert before that key in\\n    // the combined list\\n    var nextKeysPending = {};\\n\\n    var pendingKeys = [];\\n    for (var prevKey in prev) {\\n      if (next.hasOwnProperty(prevKey)) {\\n        if (pendingKeys.length) {\\n          nextKeysPending[prevKey] = pendingKeys;\\n          pendingKeys = [];\\n        }\\n      } else {\\n        pendingKeys.push(prevKey);\\n      }\\n    }\\n\\n    var i;\\n    var childMapping = {};\\n    for (var nextKey in next) {\\n      if (nextKeysPending.hasOwnProperty(nextKey)) {\\n        for (i = 0; i < nextKeysPending[nextKey].length; i++) {\\n          var pendingNextKey = nextKeysPending[nextKey][i];\\n          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\\n        }\\n      }\\n      childMapping[nextKey] = getValueForKey(nextKey);\\n    }\\n\\n    // Finally, add the keys which didn't appear before any key in `next`\\n    for (i = 0; i < pendingKeys.length; i++) {\\n      childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\\n    }\\n\\n    return childMapping;\\n  }\\n};\\n\\nmodule.exports = ReactTransitionChildMapping;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactTransitionEvents\\n */\\n\\n'use strict';\\n\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\n\\n/**\\n * EVENT_NAME_MAP is used to determine which event fired when a\\n * transition/animation ends, based on the style property used to\\n * define that event.\\n */\\nvar EVENT_NAME_MAP = {\\n  transitionend: {\\n    'transition': 'transitionend',\\n    'WebkitTransition': 'webkitTransitionEnd',\\n    'MozTransition': 'mozTransitionEnd',\\n    'OTransition': 'oTransitionEnd',\\n    'msTransition': 'MSTransitionEnd'\\n  },\\n\\n  animationend: {\\n    'animation': 'animationend',\\n    'WebkitAnimation': 'webkitAnimationEnd',\\n    'MozAnimation': 'mozAnimationEnd',\\n    'OAnimation': 'oAnimationEnd',\\n    'msAnimation': 'MSAnimationEnd'\\n  }\\n};\\n\\nvar endEvents = [];\\n\\nfunction detectEvents() {\\n  var testEl = document.createElement('div');\\n  var style = testEl.style;\\n\\n  // On some platforms, in particular some releases of Android 4.x,\\n  // the un-prefixed \\\"animation\\\" and \\\"transition\\\" properties are defined on the\\n  // style object but the events that fire will still be prefixed, so we need\\n  // to check if the un-prefixed events are useable, and if not remove them\\n  // from the map\\n  if (!('AnimationEvent' in window)) {\\n    delete EVENT_NAME_MAP.animationend.animation;\\n  }\\n\\n  if (!('TransitionEvent' in window)) {\\n    delete EVENT_NAME_MAP.transitionend.transition;\\n  }\\n\\n  for (var baseEventName in EVENT_NAME_MAP) {\\n    var baseEvents = EVENT_NAME_MAP[baseEventName];\\n    for (var styleName in baseEvents) {\\n      if (styleName in style) {\\n        endEvents.push(baseEvents[styleName]);\\n        break;\\n      }\\n    }\\n  }\\n}\\n\\nif (ExecutionEnvironment.canUseDOM) {\\n  detectEvents();\\n}\\n\\n// We use the raw {add|remove}EventListener() call because EventListener\\n// does not know how to remove event listeners and we really should\\n// clean up. Also, these events are not triggered in older browsers\\n// so we should be A-OK here.\\n\\nfunction addEventListener(node, eventName, eventListener) {\\n  node.addEventListener(eventName, eventListener, false);\\n}\\n\\nfunction removeEventListener(node, eventName, eventListener) {\\n  node.removeEventListener(eventName, eventListener, false);\\n}\\n\\nvar ReactTransitionEvents = {\\n  addEndEventListener: function (node, eventListener) {\\n    if (endEvents.length === 0) {\\n      // If CSS transitions are not supported, trigger an \\\"end animation\\\"\\n      // event immediately.\\n      window.setTimeout(eventListener, 0);\\n      return;\\n    }\\n    endEvents.forEach(function (endEvent) {\\n      addEventListener(node, endEvent, eventListener);\\n    });\\n  },\\n\\n  removeEndEventListener: function (node, eventListener) {\\n    if (endEvents.length === 0) {\\n      return;\\n    }\\n    endEvents.forEach(function (endEvent) {\\n      removeEventListener(node, endEvent, eventListener);\\n    });\\n  }\\n};\\n\\nmodule.exports = ReactTransitionEvents;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactTransitionGroup\\n */\\n\\n'use strict';\\n\\nvar React = require('./React');\\nvar ReactTransitionChildMapping = require('./ReactTransitionChildMapping');\\n\\nvar assign = require('./Object.assign');\\nvar emptyFunction = require('fbjs/lib/emptyFunction');\\n\\nvar ReactTransitionGroup = React.createClass({\\n  displayName: 'ReactTransitionGroup',\\n\\n  propTypes: {\\n    component: React.PropTypes.any,\\n    childFactory: React.PropTypes.func\\n  },\\n\\n  getDefaultProps: function () {\\n    return {\\n      component: 'span',\\n      childFactory: emptyFunction.thatReturnsArgument\\n    };\\n  },\\n\\n  getInitialState: function () {\\n    return {\\n      children: ReactTransitionChildMapping.getChildMapping(this.props.children)\\n    };\\n  },\\n\\n  componentWillMount: function () {\\n    this.currentlyTransitioningKeys = {};\\n    this.keysToEnter = [];\\n    this.keysToLeave = [];\\n  },\\n\\n  componentDidMount: function () {\\n    var initialChildMapping = this.state.children;\\n    for (var key in initialChildMapping) {\\n      if (initialChildMapping[key]) {\\n        this.performAppear(key);\\n      }\\n    }\\n  },\\n\\n  componentWillReceiveProps: function (nextProps) {\\n    var nextChildMapping = ReactTransitionChildMapping.getChildMapping(nextProps.children);\\n    var prevChildMapping = this.state.children;\\n\\n    this.setState({\\n      children: ReactTransitionChildMapping.mergeChildMappings(prevChildMapping, nextChildMapping)\\n    });\\n\\n    var key;\\n\\n    for (key in nextChildMapping) {\\n      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);\\n      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {\\n        this.keysToEnter.push(key);\\n      }\\n    }\\n\\n    for (key in prevChildMapping) {\\n      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);\\n      if (prevChildMapping[key] && !hasNext && !this.currentlyTransitioningKeys[key]) {\\n        this.keysToLeave.push(key);\\n      }\\n    }\\n\\n    // If we want to someday check for reordering, we could do it here.\\n  },\\n\\n  componentDidUpdate: function () {\\n    var keysToEnter = this.keysToEnter;\\n    this.keysToEnter = [];\\n    keysToEnter.forEach(this.performEnter);\\n\\n    var keysToLeave = this.keysToLeave;\\n    this.keysToLeave = [];\\n    keysToLeave.forEach(this.performLeave);\\n  },\\n\\n  performAppear: function (key) {\\n    this.currentlyTransitioningKeys[key] = true;\\n\\n    var component = this.refs[key];\\n\\n    if (component.componentWillAppear) {\\n      component.componentWillAppear(this._handleDoneAppearing.bind(this, key));\\n    } else {\\n      this._handleDoneAppearing(key);\\n    }\\n  },\\n\\n  _handleDoneAppearing: function (key) {\\n    var component = this.refs[key];\\n    if (component.componentDidAppear) {\\n      component.componentDidAppear();\\n    }\\n\\n    delete this.currentlyTransitioningKeys[key];\\n\\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);\\n\\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\\n      // This was removed before it had fully appeared. Remove it.\\n      this.performLeave(key);\\n    }\\n  },\\n\\n  performEnter: function (key) {\\n    this.currentlyTransitioningKeys[key] = true;\\n\\n    var component = this.refs[key];\\n\\n    if (component.componentWillEnter) {\\n      component.componentWillEnter(this._handleDoneEntering.bind(this, key));\\n    } else {\\n      this._handleDoneEntering(key);\\n    }\\n  },\\n\\n  _handleDoneEntering: function (key) {\\n    var component = this.refs[key];\\n    if (component.componentDidEnter) {\\n      component.componentDidEnter();\\n    }\\n\\n    delete this.currentlyTransitioningKeys[key];\\n\\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);\\n\\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\\n      // This was removed before it had fully entered. Remove it.\\n      this.performLeave(key);\\n    }\\n  },\\n\\n  performLeave: function (key) {\\n    this.currentlyTransitioningKeys[key] = true;\\n\\n    var component = this.refs[key];\\n    if (component.componentWillLeave) {\\n      component.componentWillLeave(this._handleDoneLeaving.bind(this, key));\\n    } else {\\n      // Note that this is somewhat dangerous b/c it calls setState()\\n      // again, effectively mutating the component before all the work\\n      // is done.\\n      this._handleDoneLeaving(key);\\n    }\\n  },\\n\\n  _handleDoneLeaving: function (key) {\\n    var component = this.refs[key];\\n\\n    if (component.componentDidLeave) {\\n      component.componentDidLeave();\\n    }\\n\\n    delete this.currentlyTransitioningKeys[key];\\n\\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);\\n\\n    if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\\n      // This entered again before it fully left. Add it again.\\n      this.performEnter(key);\\n    } else {\\n      this.setState(function (state) {\\n        var newChildren = assign({}, state.children);\\n        delete newChildren[key];\\n        return { children: newChildren };\\n      });\\n    }\\n  },\\n\\n  render: function () {\\n    // TODO: we could get rid of the need for the wrapper node\\n    // by cloning a single child\\n    var childrenToRender = [];\\n    for (var key in this.state.children) {\\n      var child = this.state.children[key];\\n      if (child) {\\n        // You may need to apply reactive updates to a child as it is leaving.\\n        // The normal React way to do it won't work since the child will have\\n        // already been removed. In case you need this behavior you can provide\\n        // a childFactory function to wrap every child, even the ones that are\\n        // leaving.\\n        childrenToRender.push(React.cloneElement(this.props.childFactory(child), { ref: key, key: key }));\\n      }\\n    }\\n    return React.createElement(this.props.component, this.props, childrenToRender);\\n  }\\n});\\n\\nmodule.exports = ReactTransitionGroup;\",\n    \"/**\\n * Copyright 2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactUpdateQueue\\n */\\n\\n'use strict';\\n\\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\\nvar ReactElement = require('./ReactElement');\\nvar ReactInstanceMap = require('./ReactInstanceMap');\\nvar ReactUpdates = require('./ReactUpdates');\\n\\nvar assign = require('./Object.assign');\\nvar invariant = require('fbjs/lib/invariant');\\nvar warning = require('fbjs/lib/warning');\\n\\nfunction enqueueUpdate(internalInstance) {\\n  ReactUpdates.enqueueUpdate(internalInstance);\\n}\\n\\nfunction getInternalInstanceReadyForUpdate(publicInstance, callerName) {\\n  var internalInstance = ReactInstanceMap.get(publicInstance);\\n  if (!internalInstance) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      // Only warn when we have a callerName. Otherwise we should be silent.\\n      // We're probably calling from enqueueCallback. We don't want to warn\\n      // there because we already warned for the corresponding lifecycle method.\\n      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : undefined;\\n    }\\n    return null;\\n  }\\n\\n  if (process.env.NODE_ENV !== 'production') {\\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition ' + '(such as within `render`). Render methods should be a pure function ' + 'of props and state.', callerName) : undefined;\\n  }\\n\\n  return internalInstance;\\n}\\n\\n/**\\n * ReactUpdateQueue allows for state updates to be scheduled into a later\\n * reconciliation step.\\n */\\nvar ReactUpdateQueue = {\\n\\n  /**\\n   * Checks whether or not this composite component is mounted.\\n   * @param {ReactClass} publicInstance The instance we want to test.\\n   * @return {boolean} True if mounted, false otherwise.\\n   * @protected\\n   * @final\\n   */\\n  isMounted: function (publicInstance) {\\n    if (process.env.NODE_ENV !== 'production') {\\n      var owner = ReactCurrentOwner.current;\\n      if (owner !== null) {\\n        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;\\n        owner._warnedAboutRefsInRender = true;\\n      }\\n    }\\n    var internalInstance = ReactInstanceMap.get(publicInstance);\\n    if (internalInstance) {\\n      // During componentWillMount and render this will still be null but after\\n      // that will always render to something. At least for now. So we can use\\n      // this hack.\\n      return !!internalInstance._renderedComponent;\\n    } else {\\n      return false;\\n    }\\n  },\\n\\n  /**\\n   * Enqueue a callback that will be executed after all the pending updates\\n   * have processed.\\n   *\\n   * @param {ReactClass} publicInstance The instance to use as `this` context.\\n   * @param {?function} callback Called after state is updated.\\n   * @internal\\n   */\\n  enqueueCallback: function (publicInstance, callback) {\\n    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\\\\'t callable.') : invariant(false) : undefined;\\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);\\n\\n    // Previously we would throw an error if we didn't have an internal\\n    // instance. Since we want to make it a no-op instead, we mirror the same\\n    // behavior we have in other enqueue* methods.\\n    // We also need to ignore callbacks in componentWillMount. See\\n    // enqueueUpdates.\\n    if (!internalInstance) {\\n      return null;\\n    }\\n\\n    if (internalInstance._pendingCallbacks) {\\n      internalInstance._pendingCallbacks.push(callback);\\n    } else {\\n      internalInstance._pendingCallbacks = [callback];\\n    }\\n    // TODO: The callback here is ignored when setState is called from\\n    // componentWillMount. Either fix it or disallow doing so completely in\\n    // favor of getInitialState. Alternatively, we can disallow\\n    // componentWillMount during server-side rendering.\\n    enqueueUpdate(internalInstance);\\n  },\\n\\n  enqueueCallbackInternal: function (internalInstance, callback) {\\n    !(typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'enqueueCallback(...): You called `setProps`, `replaceProps`, ' + '`setState`, `replaceState`, or `forceUpdate` with a callback that ' + 'isn\\\\'t callable.') : invariant(false) : undefined;\\n    if (internalInstance._pendingCallbacks) {\\n      internalInstance._pendingCallbacks.push(callback);\\n    } else {\\n      internalInstance._pendingCallbacks = [callback];\\n    }\\n    enqueueUpdate(internalInstance);\\n  },\\n\\n  /**\\n   * Forces an update. This should only be invoked when it is known with\\n   * certainty that we are **not** in a DOM transaction.\\n   *\\n   * You may want to call this when you know that some deeper aspect of the\\n   * component's state has changed but `setState` was not called.\\n   *\\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\\n   * `componentWillUpdate` and `componentDidUpdate`.\\n   *\\n   * @param {ReactClass} publicInstance The instance that should rerender.\\n   * @internal\\n   */\\n  enqueueForceUpdate: function (publicInstance) {\\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');\\n\\n    if (!internalInstance) {\\n      return;\\n    }\\n\\n    internalInstance._pendingForceUpdate = true;\\n\\n    enqueueUpdate(internalInstance);\\n  },\\n\\n  /**\\n   * Replaces all of the state. Always use this or `setState` to mutate state.\\n   * You should treat `this.state` as immutable.\\n   *\\n   * There is no guarantee that `this.state` will be immediately updated, so\\n   * accessing `this.state` after calling this method may return the old value.\\n   *\\n   * @param {ReactClass} publicInstance The instance that should rerender.\\n   * @param {object} completeState Next state.\\n   * @internal\\n   */\\n  enqueueReplaceState: function (publicInstance, completeState) {\\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');\\n\\n    if (!internalInstance) {\\n      return;\\n    }\\n\\n    internalInstance._pendingStateQueue = [completeState];\\n    internalInstance._pendingReplaceState = true;\\n\\n    enqueueUpdate(internalInstance);\\n  },\\n\\n  /**\\n   * Sets a subset of the state. This only exists because _pendingState is\\n   * internal. This provides a merging strategy that is not available to deep\\n   * properties which is confusing. TODO: Expose pendingState or don't use it\\n   * during the merge.\\n   *\\n   * @param {ReactClass} publicInstance The instance that should rerender.\\n   * @param {object} partialState Next partial state to be merged with state.\\n   * @internal\\n   */\\n  enqueueSetState: function (publicInstance, partialState) {\\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');\\n\\n    if (!internalInstance) {\\n      return;\\n    }\\n\\n    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);\\n    queue.push(partialState);\\n\\n    enqueueUpdate(internalInstance);\\n  },\\n\\n  /**\\n   * Sets a subset of the props.\\n   *\\n   * @param {ReactClass} publicInstance The instance that should rerender.\\n   * @param {object} partialProps Subset of the next props.\\n   * @internal\\n   */\\n  enqueueSetProps: function (publicInstance, partialProps) {\\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setProps');\\n    if (!internalInstance) {\\n      return;\\n    }\\n    ReactUpdateQueue.enqueueSetPropsInternal(internalInstance, partialProps);\\n  },\\n\\n  enqueueSetPropsInternal: function (internalInstance, partialProps) {\\n    var topLevelWrapper = internalInstance._topLevelWrapper;\\n    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setProps(...): You called `setProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\\\\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;\\n\\n    // Merge with the pending element if it exists, otherwise with existing\\n    // element props.\\n    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;\\n    var element = wrapElement.props;\\n    var props = assign({}, element.props, partialProps);\\n    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));\\n\\n    enqueueUpdate(topLevelWrapper);\\n  },\\n\\n  /**\\n   * Replaces all of the props.\\n   *\\n   * @param {ReactClass} publicInstance The instance that should rerender.\\n   * @param {object} props New props.\\n   * @internal\\n   */\\n  enqueueReplaceProps: function (publicInstance, props) {\\n    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceProps');\\n    if (!internalInstance) {\\n      return;\\n    }\\n    ReactUpdateQueue.enqueueReplacePropsInternal(internalInstance, props);\\n  },\\n\\n  enqueueReplacePropsInternal: function (internalInstance, props) {\\n    var topLevelWrapper = internalInstance._topLevelWrapper;\\n    !topLevelWrapper ? process.env.NODE_ENV !== 'production' ? invariant(false, 'replaceProps(...): You called `replaceProps` on a ' + 'component with a parent. This is an anti-pattern since props will ' + 'get reactively updated when rendered. Instead, change the owner\\\\'s ' + '`render` method to pass the correct value as props to the component ' + 'where it is created.') : invariant(false) : undefined;\\n\\n    // Merge with the pending element if it exists, otherwise with existing\\n    // element props.\\n    var wrapElement = topLevelWrapper._pendingElement || topLevelWrapper._currentElement;\\n    var element = wrapElement.props;\\n    topLevelWrapper._pendingElement = ReactElement.cloneAndReplaceProps(wrapElement, ReactElement.cloneAndReplaceProps(element, props));\\n\\n    enqueueUpdate(topLevelWrapper);\\n  },\\n\\n  enqueueElementInternal: function (internalInstance, newElement) {\\n    internalInstance._pendingElement = newElement;\\n    enqueueUpdate(internalInstance);\\n  }\\n\\n};\\n\\nmodule.exports = ReactUpdateQueue;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactUpdates\\n */\\n\\n'use strict';\\n\\nvar CallbackQueue = require('./CallbackQueue');\\nvar PooledClass = require('./PooledClass');\\nvar ReactPerf = require('./ReactPerf');\\nvar ReactReconciler = require('./ReactReconciler');\\nvar Transaction = require('./Transaction');\\n\\nvar assign = require('./Object.assign');\\nvar invariant = require('fbjs/lib/invariant');\\n\\nvar dirtyComponents = [];\\nvar asapCallbackQueue = CallbackQueue.getPooled();\\nvar asapEnqueued = false;\\n\\nvar batchingStrategy = null;\\n\\nfunction ensureInjected() {\\n  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching ' + 'strategy') : invariant(false) : undefined;\\n}\\n\\nvar NESTED_UPDATES = {\\n  initialize: function () {\\n    this.dirtyComponentsLength = dirtyComponents.length;\\n  },\\n  close: function () {\\n    if (this.dirtyComponentsLength !== dirtyComponents.length) {\\n      // Additional updates were enqueued by componentDidUpdate handlers or\\n      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run\\n      // these new updates so that if A's componentDidUpdate calls setState on\\n      // B, B will update before the callback A's updater provided when calling\\n      // setState.\\n      dirtyComponents.splice(0, this.dirtyComponentsLength);\\n      flushBatchedUpdates();\\n    } else {\\n      dirtyComponents.length = 0;\\n    }\\n  }\\n};\\n\\nvar UPDATE_QUEUEING = {\\n  initialize: function () {\\n    this.callbackQueue.reset();\\n  },\\n  close: function () {\\n    this.callbackQueue.notifyAll();\\n  }\\n};\\n\\nvar TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];\\n\\nfunction ReactUpdatesFlushTransaction() {\\n  this.reinitializeTransaction();\\n  this.dirtyComponentsLength = null;\\n  this.callbackQueue = CallbackQueue.getPooled();\\n  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled( /* forceHTML */false);\\n}\\n\\nassign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {\\n  getTransactionWrappers: function () {\\n    return TRANSACTION_WRAPPERS;\\n  },\\n\\n  destructor: function () {\\n    this.dirtyComponentsLength = null;\\n    CallbackQueue.release(this.callbackQueue);\\n    this.callbackQueue = null;\\n    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);\\n    this.reconcileTransaction = null;\\n  },\\n\\n  perform: function (method, scope, a) {\\n    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`\\n    // with this transaction's wrappers around it.\\n    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);\\n  }\\n});\\n\\nPooledClass.addPoolingTo(ReactUpdatesFlushTransaction);\\n\\nfunction batchedUpdates(callback, a, b, c, d, e) {\\n  ensureInjected();\\n  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);\\n}\\n\\n/**\\n * Array comparator for ReactComponents by mount ordering.\\n *\\n * @param {ReactComponent} c1 first component you're comparing\\n * @param {ReactComponent} c2 second component you're comparing\\n * @return {number} Return value usable by Array.prototype.sort().\\n */\\nfunction mountOrderComparator(c1, c2) {\\n  return c1._mountOrder - c2._mountOrder;\\n}\\n\\nfunction runBatchedUpdates(transaction) {\\n  var len = transaction.dirtyComponentsLength;\\n  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\\\\'s stored dirty-components length (%s) to ' + 'match dirty-components array length (%s).', len, dirtyComponents.length) : invariant(false) : undefined;\\n\\n  // Since reconciling a component higher in the owner hierarchy usually (not\\n  // always -- see shouldComponentUpdate()) will reconcile children, reconcile\\n  // them before their children by sorting the array.\\n  dirtyComponents.sort(mountOrderComparator);\\n\\n  for (var i = 0; i < len; i++) {\\n    // If a component is unmounted before pending changes apply, it will still\\n    // be here, but we assume that it has cleared its _pendingCallbacks and\\n    // that performUpdateIfNecessary is a noop.\\n    var component = dirtyComponents[i];\\n\\n    // If performUpdateIfNecessary happens to enqueue any new updates, we\\n    // shouldn't execute the callbacks until the next render happens, so\\n    // stash the callbacks first\\n    var callbacks = component._pendingCallbacks;\\n    component._pendingCallbacks = null;\\n\\n    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction);\\n\\n    if (callbacks) {\\n      for (var j = 0; j < callbacks.length; j++) {\\n        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());\\n      }\\n    }\\n  }\\n}\\n\\nvar flushBatchedUpdates = function () {\\n  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents\\n  // array and perform any updates enqueued by mount-ready handlers (i.e.,\\n  // componentDidUpdate) but we need to check here too in order to catch\\n  // updates enqueued by setState callbacks and asap calls.\\n  while (dirtyComponents.length || asapEnqueued) {\\n    if (dirtyComponents.length) {\\n      var transaction = ReactUpdatesFlushTransaction.getPooled();\\n      transaction.perform(runBatchedUpdates, null, transaction);\\n      ReactUpdatesFlushTransaction.release(transaction);\\n    }\\n\\n    if (asapEnqueued) {\\n      asapEnqueued = false;\\n      var queue = asapCallbackQueue;\\n      asapCallbackQueue = CallbackQueue.getPooled();\\n      queue.notifyAll();\\n      CallbackQueue.release(queue);\\n    }\\n  }\\n};\\nflushBatchedUpdates = ReactPerf.measure('ReactUpdates', 'flushBatchedUpdates', flushBatchedUpdates);\\n\\n/**\\n * Mark a component as needing a rerender, adding an optional callback to a\\n * list of functions which will be executed once the rerender occurs.\\n */\\nfunction enqueueUpdate(component) {\\n  ensureInjected();\\n\\n  // Various parts of our code (such as ReactCompositeComponent's\\n  // _renderValidatedComponent) assume that calls to render aren't nested;\\n  // verify that that's the case. (This is called by each top-level update\\n  // function, like setProps, setState, forceUpdate, etc.; creation and\\n  // destruction of top-level components is guarded in ReactMount.)\\n\\n  if (!batchingStrategy.isBatchingUpdates) {\\n    batchingStrategy.batchedUpdates(enqueueUpdate, component);\\n    return;\\n  }\\n\\n  dirtyComponents.push(component);\\n}\\n\\n/**\\n * Enqueue a callback to be run at the end of the current batching cycle. Throws\\n * if no updates are currently being performed.\\n */\\nfunction asap(callback, context) {\\n  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\\\\'t enqueue an asap callback in a context where' + 'updates are not being batched.') : invariant(false) : undefined;\\n  asapCallbackQueue.enqueue(callback, context);\\n  asapEnqueued = true;\\n}\\n\\nvar ReactUpdatesInjection = {\\n  injectReconcileTransaction: function (ReconcileTransaction) {\\n    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : invariant(false) : undefined;\\n    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;\\n  },\\n\\n  injectBatchingStrategy: function (_batchingStrategy) {\\n    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : invariant(false) : undefined;\\n    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : invariant(false) : undefined;\\n    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : invariant(false) : undefined;\\n    batchingStrategy = _batchingStrategy;\\n  }\\n};\\n\\nvar ReactUpdates = {\\n  /**\\n   * React references `ReactReconcileTransaction` using this property in order\\n   * to allow dependency injection.\\n   *\\n   * @internal\\n   */\\n  ReactReconcileTransaction: null,\\n\\n  batchedUpdates: batchedUpdates,\\n  enqueueUpdate: enqueueUpdate,\\n  flushBatchedUpdates: flushBatchedUpdates,\\n  injection: ReactUpdatesInjection,\\n  asap: asap\\n};\\n\\nmodule.exports = ReactUpdates;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactVersion\\n */\\n\\n'use strict';\\n\\nmodule.exports = '0.14.3';\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactWithAddons\\n */\\n\\n/**\\n * This module exists purely in the open source project, and is meant as a way\\n * to create a separate standalone build of React. This build has \\\"addons\\\", or\\n * functionality we've built and think might be useful but doesn't have a good\\n * place to live inside React core.\\n */\\n\\n'use strict';\\n\\nvar LinkedStateMixin = require('./LinkedStateMixin');\\nvar React = require('./React');\\nvar ReactComponentWithPureRenderMixin = require('./ReactComponentWithPureRenderMixin');\\nvar ReactCSSTransitionGroup = require('./ReactCSSTransitionGroup');\\nvar ReactFragment = require('./ReactFragment');\\nvar ReactTransitionGroup = require('./ReactTransitionGroup');\\nvar ReactUpdates = require('./ReactUpdates');\\n\\nvar cloneWithProps = require('./cloneWithProps');\\nvar shallowCompare = require('./shallowCompare');\\nvar update = require('./update');\\nvar warning = require('fbjs/lib/warning');\\n\\nvar warnedAboutBatchedUpdates = false;\\n\\nReact.addons = {\\n  CSSTransitionGroup: ReactCSSTransitionGroup,\\n  LinkedStateMixin: LinkedStateMixin,\\n  PureRenderMixin: ReactComponentWithPureRenderMixin,\\n  TransitionGroup: ReactTransitionGroup,\\n\\n  batchedUpdates: function () {\\n    if (process.env.NODE_ENV !== 'production') {\\n      process.env.NODE_ENV !== 'production' ? warning(warnedAboutBatchedUpdates, 'React.addons.batchedUpdates is deprecated. Use ' + 'ReactDOM.unstable_batchedUpdates instead.') : undefined;\\n      warnedAboutBatchedUpdates = true;\\n    }\\n    return ReactUpdates.batchedUpdates.apply(this, arguments);\\n  },\\n  cloneWithProps: cloneWithProps,\\n  createFragment: ReactFragment.create,\\n  shallowCompare: shallowCompare,\\n  update: update\\n};\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  React.addons.Perf = require('./ReactDefaultPerf');\\n  React.addons.TestUtils = require('./ReactTestUtils');\\n}\\n\\nmodule.exports = React;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule React\\n */\\n\\n'use strict';\\n\\nvar ReactDOM = require('./ReactDOM');\\nvar ReactDOMServer = require('./ReactDOMServer');\\nvar ReactIsomorphic = require('./ReactIsomorphic');\\n\\nvar assign = require('./Object.assign');\\nvar deprecated = require('./deprecated');\\n\\n// `version` will be added here by ReactIsomorphic.\\nvar React = {};\\n\\nassign(React, ReactIsomorphic);\\n\\nassign(React, {\\n  // ReactDOM\\n  findDOMNode: deprecated('findDOMNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.findDOMNode),\\n  render: deprecated('render', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.render),\\n  unmountComponentAtNode: deprecated('unmountComponentAtNode', 'ReactDOM', 'react-dom', ReactDOM, ReactDOM.unmountComponentAtNode),\\n\\n  // ReactDOMServer\\n  renderToString: deprecated('renderToString', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToString),\\n  renderToStaticMarkup: deprecated('renderToStaticMarkup', 'ReactDOMServer', 'react-dom/server', ReactDOMServer, ReactDOMServer.renderToStaticMarkup)\\n});\\n\\nReact.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;\\nReact.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOMServer;\\n\\nmodule.exports = React;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ResponderEventPlugin\\n */\\n\\n'use strict';\\n\\nvar EventConstants = require('./EventConstants');\\nvar EventPluginUtils = require('./EventPluginUtils');\\nvar EventPropagators = require('./EventPropagators');\\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\\nvar ResponderSyntheticEvent = require('./ResponderSyntheticEvent');\\nvar ResponderTouchHistoryStore = require('./ResponderTouchHistoryStore');\\n\\nvar accumulate = require('./accumulate');\\nvar invariant = require('fbjs/lib/invariant');\\nvar keyOf = require('fbjs/lib/keyOf');\\n\\nvar isStartish = EventPluginUtils.isStartish;\\nvar isMoveish = EventPluginUtils.isMoveish;\\nvar isEndish = EventPluginUtils.isEndish;\\nvar executeDirectDispatch = EventPluginUtils.executeDirectDispatch;\\nvar hasDispatches = EventPluginUtils.hasDispatches;\\nvar executeDispatchesInOrderStopAtTrue = EventPluginUtils.executeDispatchesInOrderStopAtTrue;\\n\\n/**\\n * ID of element that should respond to touch/move types of interactions, as\\n * indicated explicitly by relevant callbacks.\\n */\\nvar responderID = null;\\n\\n/**\\n * Count of current touches. A textInput should become responder iff the\\n * the selection changes while there is a touch on the screen.\\n */\\nvar trackedTouchCount = 0;\\n\\n/**\\n * Last reported number of active touches.\\n */\\nvar previousActiveTouches = 0;\\n\\nvar changeResponder = function (nextResponderID) {\\n  var oldResponderID = responderID;\\n  responderID = nextResponderID;\\n  if (ResponderEventPlugin.GlobalResponderHandler !== null) {\\n    ResponderEventPlugin.GlobalResponderHandler.onChange(oldResponderID, nextResponderID);\\n  }\\n};\\n\\nvar eventTypes = {\\n  /**\\n   * On a `touchStart`/`mouseDown`, is it desired that this element become the\\n   * responder?\\n   */\\n  startShouldSetResponder: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onStartShouldSetResponder: null }),\\n      captured: keyOf({ onStartShouldSetResponderCapture: null })\\n    }\\n  },\\n\\n  /**\\n   * On a `scroll`, is it desired that this element become the responder? This\\n   * is usually not needed, but should be used to retroactively infer that a\\n   * `touchStart` had occurred during momentum scroll. During a momentum scroll,\\n   * a touch start will be immediately followed by a scroll event if the view is\\n   * currently scrolling.\\n   *\\n   * TODO: This shouldn't bubble.\\n   */\\n  scrollShouldSetResponder: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onScrollShouldSetResponder: null }),\\n      captured: keyOf({ onScrollShouldSetResponderCapture: null })\\n    }\\n  },\\n\\n  /**\\n   * On text selection change, should this element become the responder? This\\n   * is needed for text inputs or other views with native selection, so the\\n   * JS view can claim the responder.\\n   *\\n   * TODO: This shouldn't bubble.\\n   */\\n  selectionChangeShouldSetResponder: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onSelectionChangeShouldSetResponder: null }),\\n      captured: keyOf({ onSelectionChangeShouldSetResponderCapture: null })\\n    }\\n  },\\n\\n  /**\\n   * On a `touchMove`/`mouseMove`, is it desired that this element become the\\n   * responder?\\n   */\\n  moveShouldSetResponder: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onMoveShouldSetResponder: null }),\\n      captured: keyOf({ onMoveShouldSetResponderCapture: null })\\n    }\\n  },\\n\\n  /**\\n   * Direct responder events dispatched directly to responder. Do not bubble.\\n   */\\n  responderStart: { registrationName: keyOf({ onResponderStart: null }) },\\n  responderMove: { registrationName: keyOf({ onResponderMove: null }) },\\n  responderEnd: { registrationName: keyOf({ onResponderEnd: null }) },\\n  responderRelease: { registrationName: keyOf({ onResponderRelease: null }) },\\n  responderTerminationRequest: {\\n    registrationName: keyOf({ onResponderTerminationRequest: null })\\n  },\\n  responderGrant: { registrationName: keyOf({ onResponderGrant: null }) },\\n  responderReject: { registrationName: keyOf({ onResponderReject: null }) },\\n  responderTerminate: { registrationName: keyOf({ onResponderTerminate: null }) }\\n};\\n\\n/**\\n *\\n * Responder System:\\n * ----------------\\n *\\n * - A global, solitary \\\"interaction lock\\\" on a view.\\n * - If a node becomes the responder, it should convey visual feedback\\n *   immediately to indicate so, either by highlighting or moving accordingly.\\n * - To be the responder means, that touches are exclusively important to that\\n *   responder view, and no other view.\\n * - While touches are still occuring, the responder lock can be transfered to\\n *   a new view, but only to increasingly \\\"higher\\\" views (meaning ancestors of\\n *   the current responder).\\n *\\n * Responder being granted:\\n * ------------------------\\n *\\n * - Touch starts, moves, and scrolls can cause an ID to become the responder.\\n * - We capture/bubble `startShouldSetResponder`/`moveShouldSetResponder` to\\n *   the \\\"appropriate place\\\".\\n * - If nothing is currently the responder, the \\\"appropriate place\\\" is the\\n *   initiating event's `targetID`.\\n * - If something *is* already the responder, the \\\"appropriate place\\\" is the\\n *   first common ancestor of the event target and the current `responderID`.\\n * - Some negotiation happens: See the timing diagram below.\\n * - Scrolled views automatically become responder. The reasoning is that a\\n *   platform scroll view that isn't built on top of the responder system has\\n *   began scrolling, and the active responder must now be notified that the\\n *   interaction is no longer locked to it - the system has taken over.\\n *\\n * - Responder being released:\\n *   As soon as no more touches that *started* inside of descendents of the\\n *   *current* responderID, an `onResponderRelease` event is dispatched to the\\n *   current responder, and the responder lock is released.\\n *\\n * TODO:\\n * - on \\\"end\\\", a callback hook for `onResponderEndShouldRemainResponder` that\\n *   determines if the responder lock should remain.\\n * - If a view shouldn't \\\"remain\\\" the responder, any active touches should by\\n *   default be considered \\\"dead\\\" and do not influence future negotiations or\\n *   bubble paths. It should be as if those touches do not exist.\\n * -- For multitouch: Usually a translate-z will choose to \\\"remain\\\" responder\\n *  after one out of many touches ended. For translate-y, usually the view\\n *  doesn't wish to \\\"remain\\\" responder after one of many touches end.\\n * - Consider building this on top of a `stopPropagation` model similar to\\n *   `W3C` events.\\n * - Ensure that `onResponderTerminate` is called on touch cancels, whether or\\n *   not `onResponderTerminationRequest` returns `true` or `false`.\\n *\\n */\\n\\n/*                                             Negotiation Performed\\n                                             +-----------------------+\\n                                            /                         \\\\\\nProcess low level events to    +     Current Responder      +   wantsResponderID\\ndetermine who to perform negot-|   (if any exists at all)   |\\niation/transition              | Otherwise just pass through|\\n-------------------------------+----------------------------+------------------+\\nBubble to find first ID        |                            |\\nto return true:wantsResponderID|                            |\\n                               |                            |\\n     +-------------+           |                            |\\n     | onTouchStart|           |                            |\\n     +------+------+     none  |                            |\\n            |            return|                            |\\n+-----------v-------------+true| +------------------------+ |\\n|onStartShouldSetResponder|----->|onResponderStart (cur)  |<-----------+\\n+-----------+-------------+    | +------------------------+ |          |\\n            |                  |                            | +--------+-------+\\n            | returned true for|       false:REJECT +-------->|onResponderReject\\n            | wantsResponderID |                    |       | +----------------+\\n            | (now attempt     | +------------------+-----+ |\\n            |  handoff)        | |   onResponder          | |\\n            +------------------->|      TerminationRequest| |\\n                               | +------------------+-----+ |\\n                               |                    |       | +----------------+\\n                               |         true:GRANT +-------->|onResponderGrant|\\n                               |                            | +--------+-------+\\n                               | +------------------------+ |          |\\n                               | |   onResponderTerminate |<-----------+\\n                               | +------------------+-----+ |\\n                               |                    |       | +----------------+\\n                               |                    +-------->|onResponderStart|\\n                               |                            | +----------------+\\nBubble to find first ID        |                            |\\nto return true:wantsResponderID|                            |\\n                               |                            |\\n     +-------------+           |                            |\\n     | onTouchMove |           |                            |\\n     +------+------+     none  |                            |\\n            |            return|                            |\\n+-----------v-------------+true| +------------------------+ |\\n|onMoveShouldSetResponder |----->|onResponderMove (cur)   |<-----------+\\n+-----------+-------------+    | +------------------------+ |          |\\n            |                  |                            | +--------+-------+\\n            | returned true for|       false:REJECT +-------->|onResponderRejec|\\n            | wantsResponderID |                    |       | +----------------+\\n            | (now attempt     | +------------------+-----+ |\\n            |  handoff)        | |   onResponder          | |\\n            +------------------->|      TerminationRequest| |\\n                               | +------------------+-----+ |\\n                               |                    |       | +----------------+\\n                               |         true:GRANT +-------->|onResponderGrant|\\n                               |                            | +--------+-------+\\n                               | +------------------------+ |          |\\n                               | |   onResponderTerminate |<-----------+\\n                               | +------------------+-----+ |\\n                               |                    |       | +----------------+\\n                               |                    +-------->|onResponderMove |\\n                               |                            | +----------------+\\n                               |                            |\\n                               |                            |\\n      Some active touch started|                            |\\n      inside current responder | +------------------------+ |\\n      +------------------------->|      onResponderEnd    | |\\n      |                        | +------------------------+ |\\n  +---+---------+              |                            |\\n  | onTouchEnd  |              |                            |\\n  +---+---------+              |                            |\\n      |                        | +------------------------+ |\\n      +------------------------->|     onResponderEnd     | |\\n      No active touches started| +-----------+------------+ |\\n      inside current responder |             |              |\\n                               |             v              |\\n                               | +------------------------+ |\\n                               | |    onResponderRelease  | |\\n                               | +------------------------+ |\\n                               |                            |\\n                               +                            + */\\n\\n/**\\n * A note about event ordering in the `EventPluginHub`.\\n *\\n * Suppose plugins are injected in the following order:\\n *\\n * `[R, S, C]`\\n *\\n * To help illustrate the example, assume `S` is `SimpleEventPlugin` (for\\n * `onClick` etc) and `R` is `ResponderEventPlugin`.\\n *\\n * \\\"Deferred-Dispatched Events\\\":\\n *\\n * - The current event plugin system will traverse the list of injected plugins,\\n *   in order, and extract events by collecting the plugin's return value of\\n *   `extractEvents()`.\\n * - These events that are returned from `extractEvents` are \\\"deferred\\n *   dispatched events\\\".\\n * - When returned from `extractEvents`, deferred-dispatched events contain an\\n *   \\\"accumulation\\\" of deferred dispatches.\\n * - These deferred dispatches are accumulated/collected before they are\\n *   returned, but processed at a later time by the `EventPluginHub` (hence the\\n *   name deferred).\\n *\\n * In the process of returning their deferred-dispatched events, event plugins\\n * themselves can dispatch events on-demand without returning them from\\n * `extractEvents`. Plugins might want to do this, so that they can use event\\n * dispatching as a tool that helps them decide which events should be extracted\\n * in the first place.\\n *\\n * \\\"On-Demand-Dispatched Events\\\":\\n *\\n * - On-demand-dispatched events are not returned from `extractEvents`.\\n * - On-demand-dispatched events are dispatched during the process of returning\\n *   the deferred-dispatched events.\\n * - They should not have side effects.\\n * - They should be avoided, and/or eventually be replaced with another\\n *   abstraction that allows event plugins to perform multiple \\\"rounds\\\" of event\\n *   extraction.\\n *\\n * Therefore, the sequence of event dispatches becomes:\\n *\\n * - `R`s on-demand events (if any)   (dispatched by `R` on-demand)\\n * - `S`s on-demand events (if any)   (dispatched by `S` on-demand)\\n * - `C`s on-demand events (if any)   (dispatched by `C` on-demand)\\n * - `R`s extracted events (if any)   (dispatched by `EventPluginHub`)\\n * - `S`s extracted events (if any)   (dispatched by `EventPluginHub`)\\n * - `C`s extracted events (if any)   (dispatched by `EventPluginHub`)\\n *\\n * In the case of `ResponderEventPlugin`: If the `startShouldSetResponder`\\n * on-demand dispatch returns `true` (and some other details are satisfied) the\\n * `onResponderGrant` deferred dispatched event is returned from\\n * `extractEvents`. The sequence of dispatch executions in this case\\n * will appear as follows:\\n *\\n * - `startShouldSetResponder` (`ResponderEventPlugin` dispatches on-demand)\\n * - `touchStartCapture`       (`EventPluginHub` dispatches as usual)\\n * - `touchStart`              (`EventPluginHub` dispatches as usual)\\n * - `responderGrant/Reject`   (`EventPluginHub` dispatches as usual)\\n *\\n * @param {string} topLevelType Record from `EventConstants`.\\n * @param {string} topLevelTargetID ID of deepest React rendered element.\\n * @param {object} nativeEvent Native browser event.\\n * @return {*} An accumulation of synthetic events.\\n */\\nfunction setResponderAndExtractTransfer(topLevelType, topLevelTargetID, nativeEvent, nativeEventTarget) {\\n  var shouldSetEventType = isStartish(topLevelType) ? eventTypes.startShouldSetResponder : isMoveish(topLevelType) ? eventTypes.moveShouldSetResponder : topLevelType === EventConstants.topLevelTypes.topSelectionChange ? eventTypes.selectionChangeShouldSetResponder : eventTypes.scrollShouldSetResponder;\\n\\n  // TODO: stop one short of the the current responder.\\n  var bubbleShouldSetFrom = !responderID ? topLevelTargetID : ReactInstanceHandles.getFirstCommonAncestorID(responderID, topLevelTargetID);\\n\\n  // When capturing/bubbling the \\\"shouldSet\\\" event, we want to skip the target\\n  // (deepest ID) if it happens to be the current responder. The reasoning:\\n  // It's strange to get an `onMoveShouldSetResponder` when you're *already*\\n  // the responder.\\n  var skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderID;\\n  var shouldSetEvent = ResponderSyntheticEvent.getPooled(shouldSetEventType, bubbleShouldSetFrom, nativeEvent, nativeEventTarget);\\n  shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\\n  if (skipOverBubbleShouldSetFrom) {\\n    EventPropagators.accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);\\n  } else {\\n    EventPropagators.accumulateTwoPhaseDispatches(shouldSetEvent);\\n  }\\n  var wantsResponderID = executeDispatchesInOrderStopAtTrue(shouldSetEvent);\\n  if (!shouldSetEvent.isPersistent()) {\\n    shouldSetEvent.constructor.release(shouldSetEvent);\\n  }\\n\\n  if (!wantsResponderID || wantsResponderID === responderID) {\\n    return null;\\n  }\\n  var extracted;\\n  var grantEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderGrant, wantsResponderID, nativeEvent, nativeEventTarget);\\n  grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\\n\\n  EventPropagators.accumulateDirectDispatches(grantEvent);\\n  if (responderID) {\\n\\n    var terminationRequestEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderTerminationRequest, responderID, nativeEvent, nativeEventTarget);\\n    terminationRequestEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\\n    EventPropagators.accumulateDirectDispatches(terminationRequestEvent);\\n    var shouldSwitch = !hasDispatches(terminationRequestEvent) || executeDirectDispatch(terminationRequestEvent);\\n    if (!terminationRequestEvent.isPersistent()) {\\n      terminationRequestEvent.constructor.release(terminationRequestEvent);\\n    }\\n\\n    if (shouldSwitch) {\\n      var terminateType = eventTypes.responderTerminate;\\n      var terminateEvent = ResponderSyntheticEvent.getPooled(terminateType, responderID, nativeEvent, nativeEventTarget);\\n      terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\\n      EventPropagators.accumulateDirectDispatches(terminateEvent);\\n      extracted = accumulate(extracted, [grantEvent, terminateEvent]);\\n      changeResponder(wantsResponderID);\\n    } else {\\n      var rejectEvent = ResponderSyntheticEvent.getPooled(eventTypes.responderReject, wantsResponderID, nativeEvent, nativeEventTarget);\\n      rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\\n      EventPropagators.accumulateDirectDispatches(rejectEvent);\\n      extracted = accumulate(extracted, rejectEvent);\\n    }\\n  } else {\\n    extracted = accumulate(extracted, grantEvent);\\n    changeResponder(wantsResponderID);\\n  }\\n  return extracted;\\n}\\n\\n/**\\n * A transfer is a negotiation between a currently set responder and the next\\n * element to claim responder status. Any start event could trigger a transfer\\n * of responderID. Any move event could trigger a transfer.\\n *\\n * @param {string} topLevelType Record from `EventConstants`.\\n * @return {boolean} True if a transfer of responder could possibly occur.\\n */\\nfunction canTriggerTransfer(topLevelType, topLevelTargetID) {\\n  return topLevelTargetID && (topLevelType === EventConstants.topLevelTypes.topScroll || trackedTouchCount > 0 && topLevelType === EventConstants.topLevelTypes.topSelectionChange || isStartish(topLevelType) || isMoveish(topLevelType));\\n}\\n\\n/**\\n * Returns whether or not this touch end event makes it such that there are no\\n * longer any touches that started inside of the current `responderID`.\\n *\\n * @param {NativeEvent} nativeEvent Native touch end event.\\n * @return {boolean} Whether or not this touch end event ends the responder.\\n */\\nfunction noResponderTouches(nativeEvent) {\\n  var touches = nativeEvent.touches;\\n  if (!touches || touches.length === 0) {\\n    return true;\\n  }\\n  for (var i = 0; i < touches.length; i++) {\\n    var activeTouch = touches[i];\\n    var target = activeTouch.target;\\n    if (target !== null && target !== undefined && target !== 0) {\\n      // Is the original touch location inside of the current responder?\\n      var isAncestor = ReactInstanceHandles.isAncestorIDOf(responderID, EventPluginUtils.getID(target));\\n      if (isAncestor) {\\n        return false;\\n      }\\n    }\\n  }\\n  return true;\\n}\\n\\nvar ResponderEventPlugin = {\\n\\n  getResponderID: function () {\\n    return responderID;\\n  },\\n\\n  eventTypes: eventTypes,\\n\\n  /**\\n   * We must be resilient to `topLevelTargetID` being `undefined` on\\n   * `touchMove`, or `touchEnd`. On certain platforms, this means that a native\\n   * scroll has assumed control and the original touch targets are destroyed.\\n   *\\n   * @param {string} topLevelType Record from `EventConstants`.\\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\\n   * @param {object} nativeEvent Native browser event.\\n   * @return {*} An accumulation of synthetic events.\\n   * @see {EventPluginHub.extractEvents}\\n   */\\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\\n    if (isStartish(topLevelType)) {\\n      trackedTouchCount += 1;\\n    } else if (isEndish(topLevelType)) {\\n      trackedTouchCount -= 1;\\n      !(trackedTouchCount >= 0) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Ended a touch event which was not counted in trackedTouchCount.') : invariant(false) : undefined;\\n    }\\n\\n    ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent, nativeEventTarget);\\n\\n    var extracted = canTriggerTransfer(topLevelType, topLevelTargetID) ? setResponderAndExtractTransfer(topLevelType, topLevelTargetID, nativeEvent, nativeEventTarget) : null;\\n    // Responder may or may not have transfered on a new touch start/move.\\n    // Regardless, whoever is the responder after any potential transfer, we\\n    // direct all touch start/move/ends to them in the form of\\n    // `onResponderMove/Start/End`. These will be called for *every* additional\\n    // finger that move/start/end, dispatched directly to whoever is the\\n    // current responder at that moment, until the responder is \\\"released\\\".\\n    //\\n    // These multiple individual change touch events are are always bookended\\n    // by `onResponderGrant`, and one of\\n    // (`onResponderRelease/onResponderTerminate`).\\n    var isResponderTouchStart = responderID && isStartish(topLevelType);\\n    var isResponderTouchMove = responderID && isMoveish(topLevelType);\\n    var isResponderTouchEnd = responderID && isEndish(topLevelType);\\n    var incrementalTouch = isResponderTouchStart ? eventTypes.responderStart : isResponderTouchMove ? eventTypes.responderMove : isResponderTouchEnd ? eventTypes.responderEnd : null;\\n\\n    if (incrementalTouch) {\\n      var gesture = ResponderSyntheticEvent.getPooled(incrementalTouch, responderID, nativeEvent, nativeEventTarget);\\n      gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;\\n      EventPropagators.accumulateDirectDispatches(gesture);\\n      extracted = accumulate(extracted, gesture);\\n    }\\n\\n    var isResponderTerminate = responderID && topLevelType === EventConstants.topLevelTypes.topTouchCancel;\\n    var isResponderRelease = responderID && !isResponderTerminate && isEndish(topLevelType) && noResponderTouches(nativeEvent);\\n    var finalTouch = isResponderTerminate ? eventTypes.responderTerminate : isResponderRelease ? eventTypes.responderRelease : null;\\n    if (finalTouch) {\\n      var finalEvent = ResponderSyntheticEvent.getPooled(finalTouch, responderID, nativeEvent, nativeEventTarget);\\n      finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\\n      EventPropagators.accumulateDirectDispatches(finalEvent);\\n      extracted = accumulate(extracted, finalEvent);\\n      changeResponder(null);\\n    }\\n\\n    var numberActiveTouches = ResponderTouchHistoryStore.touchHistory.numberActiveTouches;\\n    if (ResponderEventPlugin.GlobalInteractionHandler && numberActiveTouches !== previousActiveTouches) {\\n      ResponderEventPlugin.GlobalInteractionHandler.onChange(numberActiveTouches);\\n    }\\n    previousActiveTouches = numberActiveTouches;\\n\\n    return extracted;\\n  },\\n\\n  GlobalResponderHandler: null,\\n  GlobalInteractionHandler: null,\\n\\n  injection: {\\n    /**\\n     * @param {{onChange: (ReactID, ReactID) => void} GlobalResponderHandler\\n     * Object that handles any change in responder. Use this to inject\\n     * integration with an existing touch handling system etc.\\n     */\\n    injectGlobalResponderHandler: function (GlobalResponderHandler) {\\n      ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;\\n    },\\n\\n    /**\\n     * @param {{onChange: (numberActiveTouches) => void} GlobalInteractionHandler\\n     * Object that handles any change in the number of active touches.\\n     */\\n    injectGlobalInteractionHandler: function (GlobalInteractionHandler) {\\n      ResponderEventPlugin.GlobalInteractionHandler = GlobalInteractionHandler;\\n    }\\n  }\\n};\\n\\nmodule.exports = ResponderEventPlugin;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ResponderSyntheticEvent\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar SyntheticEvent = require('./SyntheticEvent');\\n\\n/**\\n * `touchHistory` isn't actually on the native event, but putting it in the\\n * interface will ensure that it is cleaned up when pooled/destroyed. The\\n * `ResponderEventPlugin` will populate it appropriately.\\n */\\nvar ResponderEventInterface = {\\n  touchHistory: function (nativeEvent) {\\n    return null; // Actually doesn't even look at the native event.\\n  }\\n};\\n\\n/**\\n * @param {object} dispatchConfig Configuration used to dispatch this event.\\n * @param {string} dispatchMarker Marker identifying the event target.\\n * @param {object} nativeEvent Native event.\\n * @extends {SyntheticEvent}\\n */\\nfunction ResponderSyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\\n}\\n\\nSyntheticEvent.augmentClass(ResponderSyntheticEvent, ResponderEventInterface);\\n\\nmodule.exports = ResponderSyntheticEvent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ResponderTouchHistoryStore\\n */\\n\\n'use strict';\\n\\nvar EventPluginUtils = require('./EventPluginUtils');\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\nvar isMoveish = EventPluginUtils.isMoveish;\\nvar isStartish = EventPluginUtils.isStartish;\\nvar isEndish = EventPluginUtils.isEndish;\\n\\nvar MAX_TOUCH_BANK = 20;\\n\\n/**\\n * Touch position/time tracking information by touchID. Typically, we'll only\\n * see IDs with a range of 1-20 (they are recycled when touches end and then\\n * start again). This data is commonly needed by many different interaction\\n * logic modules so precomputing it is very helpful to do once.\\n * Each touch object in `touchBank` is of the following form:\\n * { touchActive: boolean,\\n *   startTimeStamp: number,\\n *   startPageX: number,\\n *   startPageY: number,\\n *   currentPageX: number,\\n *   currentPageY: number,\\n *   currentTimeStamp: number\\n * }\\n */\\nvar touchHistory = {\\n  touchBank: [],\\n  numberActiveTouches: 0,\\n  // If there is only one active touch, we remember its location. This prevents\\n  // us having to loop through all of the touches all the time in the most\\n  // common case.\\n  indexOfSingleActiveTouch: -1,\\n  mostRecentTimeStamp: 0\\n};\\n\\nvar timestampForTouch = function (touch) {\\n  // The legacy internal implementation provides \\\"timeStamp\\\", which has been\\n  // renamed to \\\"timestamp\\\". Let both work for now while we iron it out\\n  // TODO (evv): rename timeStamp to timestamp in internal code\\n  return touch.timeStamp || touch.timestamp;\\n};\\n\\n/**\\n * TODO: Instead of making gestures recompute filtered velocity, we could\\n * include a built in velocity computation that can be reused globally.\\n * @param {Touch} touch Native touch object.\\n */\\nvar initializeTouchData = function (touch) {\\n  return {\\n    touchActive: true,\\n    startTimeStamp: timestampForTouch(touch),\\n    startPageX: touch.pageX,\\n    startPageY: touch.pageY,\\n    currentPageX: touch.pageX,\\n    currentPageY: touch.pageY,\\n    currentTimeStamp: timestampForTouch(touch),\\n    previousPageX: touch.pageX,\\n    previousPageY: touch.pageY,\\n    previousTimeStamp: timestampForTouch(touch)\\n  };\\n};\\n\\nvar reinitializeTouchTrack = function (touchTrack, touch) {\\n  touchTrack.touchActive = true;\\n  touchTrack.startTimeStamp = timestampForTouch(touch);\\n  touchTrack.startPageX = touch.pageX;\\n  touchTrack.startPageY = touch.pageY;\\n  touchTrack.currentPageX = touch.pageX;\\n  touchTrack.currentPageY = touch.pageY;\\n  touchTrack.currentTimeStamp = timestampForTouch(touch);\\n  touchTrack.previousPageX = touch.pageX;\\n  touchTrack.previousPageY = touch.pageY;\\n  touchTrack.previousTimeStamp = timestampForTouch(touch);\\n};\\n\\nvar validateTouch = function (touch) {\\n  var identifier = touch.identifier;\\n  !(identifier != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Touch object is missing identifier') : invariant(false) : undefined;\\n  if (identifier > MAX_TOUCH_BANK) {\\n    console.warn('Touch identifier ' + identifier + ' is greater than maximum ' + 'supported ' + MAX_TOUCH_BANK + ' which causes performance issues ' + 'backfilling array locations for all of the indices.');\\n  }\\n};\\n\\nvar recordStartTouchData = function (touch) {\\n  var touchBank = touchHistory.touchBank;\\n  var identifier = touch.identifier;\\n  var touchTrack = touchBank[identifier];\\n  if (process.env.NODE_ENV !== 'production') {\\n    validateTouch(touch);\\n  }\\n  if (touchTrack) {\\n    reinitializeTouchTrack(touchTrack, touch);\\n  } else {\\n    touchBank[touch.identifier] = initializeTouchData(touch);\\n  }\\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\\n};\\n\\nvar recordMoveTouchData = function (touch) {\\n  var touchBank = touchHistory.touchBank;\\n  var touchTrack = touchBank[touch.identifier];\\n  if (process.env.NODE_ENV !== 'production') {\\n    validateTouch(touch);\\n    !touchTrack ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Touch data should have been recorded on start') : invariant(false) : undefined;\\n  }\\n  touchTrack.touchActive = true;\\n  touchTrack.previousPageX = touchTrack.currentPageX;\\n  touchTrack.previousPageY = touchTrack.currentPageY;\\n  touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;\\n  touchTrack.currentPageX = touch.pageX;\\n  touchTrack.currentPageY = touch.pageY;\\n  touchTrack.currentTimeStamp = timestampForTouch(touch);\\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\\n};\\n\\nvar recordEndTouchData = function (touch) {\\n  var touchBank = touchHistory.touchBank;\\n  var touchTrack = touchBank[touch.identifier];\\n  if (process.env.NODE_ENV !== 'production') {\\n    validateTouch(touch);\\n    !touchTrack ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Touch data should have been recorded on start') : invariant(false) : undefined;\\n  }\\n  touchTrack.previousPageX = touchTrack.currentPageX;\\n  touchTrack.previousPageY = touchTrack.currentPageY;\\n  touchTrack.previousTimeStamp = touchTrack.currentTimeStamp;\\n  touchTrack.currentPageX = touch.pageX;\\n  touchTrack.currentPageY = touch.pageY;\\n  touchTrack.currentTimeStamp = timestampForTouch(touch);\\n  touchTrack.touchActive = false;\\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\\n};\\n\\nvar ResponderTouchHistoryStore = {\\n  recordTouchTrack: function (topLevelType, nativeEvent) {\\n    var touchBank = touchHistory.touchBank;\\n    if (isMoveish(topLevelType)) {\\n      nativeEvent.changedTouches.forEach(recordMoveTouchData);\\n    } else if (isStartish(topLevelType)) {\\n      nativeEvent.changedTouches.forEach(recordStartTouchData);\\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\\n      if (touchHistory.numberActiveTouches === 1) {\\n        touchHistory.indexOfSingleActiveTouch = nativeEvent.touches[0].identifier;\\n      }\\n    } else if (isEndish(topLevelType)) {\\n      nativeEvent.changedTouches.forEach(recordEndTouchData);\\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\\n      if (touchHistory.numberActiveTouches === 1) {\\n        for (var i = 0; i < touchBank.length; i++) {\\n          var touchTrackToCheck = touchBank[i];\\n          if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\\n            touchHistory.indexOfSingleActiveTouch = i;\\n            break;\\n          }\\n        }\\n        if (process.env.NODE_ENV !== 'production') {\\n          var activeTouchData = touchBank[touchHistory.indexOfSingleActiveTouch];\\n          var foundActive = activeTouchData != null && !!activeTouchData.touchActive;\\n          !foundActive ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot find single active touch') : invariant(false) : undefined;\\n        }\\n      }\\n    }\\n  },\\n\\n  touchHistory: touchHistory\\n};\\n\\nmodule.exports = ResponderTouchHistoryStore;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SVGDOMPropertyConfig\\n */\\n\\n'use strict';\\n\\nvar DOMProperty = require('./DOMProperty');\\n\\nvar MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;\\n\\nvar NS = {\\n  xlink: 'http://www.w3.org/1999/xlink',\\n  xml: 'http://www.w3.org/XML/1998/namespace'\\n};\\n\\nvar SVGDOMPropertyConfig = {\\n  Properties: {\\n    clipPath: MUST_USE_ATTRIBUTE,\\n    cx: MUST_USE_ATTRIBUTE,\\n    cy: MUST_USE_ATTRIBUTE,\\n    d: MUST_USE_ATTRIBUTE,\\n    dx: MUST_USE_ATTRIBUTE,\\n    dy: MUST_USE_ATTRIBUTE,\\n    fill: MUST_USE_ATTRIBUTE,\\n    fillOpacity: MUST_USE_ATTRIBUTE,\\n    fontFamily: MUST_USE_ATTRIBUTE,\\n    fontSize: MUST_USE_ATTRIBUTE,\\n    fx: MUST_USE_ATTRIBUTE,\\n    fy: MUST_USE_ATTRIBUTE,\\n    gradientTransform: MUST_USE_ATTRIBUTE,\\n    gradientUnits: MUST_USE_ATTRIBUTE,\\n    markerEnd: MUST_USE_ATTRIBUTE,\\n    markerMid: MUST_USE_ATTRIBUTE,\\n    markerStart: MUST_USE_ATTRIBUTE,\\n    offset: MUST_USE_ATTRIBUTE,\\n    opacity: MUST_USE_ATTRIBUTE,\\n    patternContentUnits: MUST_USE_ATTRIBUTE,\\n    patternUnits: MUST_USE_ATTRIBUTE,\\n    points: MUST_USE_ATTRIBUTE,\\n    preserveAspectRatio: MUST_USE_ATTRIBUTE,\\n    r: MUST_USE_ATTRIBUTE,\\n    rx: MUST_USE_ATTRIBUTE,\\n    ry: MUST_USE_ATTRIBUTE,\\n    spreadMethod: MUST_USE_ATTRIBUTE,\\n    stopColor: MUST_USE_ATTRIBUTE,\\n    stopOpacity: MUST_USE_ATTRIBUTE,\\n    stroke: MUST_USE_ATTRIBUTE,\\n    strokeDasharray: MUST_USE_ATTRIBUTE,\\n    strokeLinecap: MUST_USE_ATTRIBUTE,\\n    strokeOpacity: MUST_USE_ATTRIBUTE,\\n    strokeWidth: MUST_USE_ATTRIBUTE,\\n    textAnchor: MUST_USE_ATTRIBUTE,\\n    transform: MUST_USE_ATTRIBUTE,\\n    version: MUST_USE_ATTRIBUTE,\\n    viewBox: MUST_USE_ATTRIBUTE,\\n    x1: MUST_USE_ATTRIBUTE,\\n    x2: MUST_USE_ATTRIBUTE,\\n    x: MUST_USE_ATTRIBUTE,\\n    xlinkActuate: MUST_USE_ATTRIBUTE,\\n    xlinkArcrole: MUST_USE_ATTRIBUTE,\\n    xlinkHref: MUST_USE_ATTRIBUTE,\\n    xlinkRole: MUST_USE_ATTRIBUTE,\\n    xlinkShow: MUST_USE_ATTRIBUTE,\\n    xlinkTitle: MUST_USE_ATTRIBUTE,\\n    xlinkType: MUST_USE_ATTRIBUTE,\\n    xmlBase: MUST_USE_ATTRIBUTE,\\n    xmlLang: MUST_USE_ATTRIBUTE,\\n    xmlSpace: MUST_USE_ATTRIBUTE,\\n    y1: MUST_USE_ATTRIBUTE,\\n    y2: MUST_USE_ATTRIBUTE,\\n    y: MUST_USE_ATTRIBUTE\\n  },\\n  DOMAttributeNamespaces: {\\n    xlinkActuate: NS.xlink,\\n    xlinkArcrole: NS.xlink,\\n    xlinkHref: NS.xlink,\\n    xlinkRole: NS.xlink,\\n    xlinkShow: NS.xlink,\\n    xlinkTitle: NS.xlink,\\n    xlinkType: NS.xlink,\\n    xmlBase: NS.xml,\\n    xmlLang: NS.xml,\\n    xmlSpace: NS.xml\\n  },\\n  DOMAttributeNames: {\\n    clipPath: 'clip-path',\\n    fillOpacity: 'fill-opacity',\\n    fontFamily: 'font-family',\\n    fontSize: 'font-size',\\n    gradientTransform: 'gradientTransform',\\n    gradientUnits: 'gradientUnits',\\n    markerEnd: 'marker-end',\\n    markerMid: 'marker-mid',\\n    markerStart: 'marker-start',\\n    patternContentUnits: 'patternContentUnits',\\n    patternUnits: 'patternUnits',\\n    preserveAspectRatio: 'preserveAspectRatio',\\n    spreadMethod: 'spreadMethod',\\n    stopColor: 'stop-color',\\n    stopOpacity: 'stop-opacity',\\n    strokeDasharray: 'stroke-dasharray',\\n    strokeLinecap: 'stroke-linecap',\\n    strokeOpacity: 'stroke-opacity',\\n    strokeWidth: 'stroke-width',\\n    textAnchor: 'text-anchor',\\n    viewBox: 'viewBox',\\n    xlinkActuate: 'xlink:actuate',\\n    xlinkArcrole: 'xlink:arcrole',\\n    xlinkHref: 'xlink:href',\\n    xlinkRole: 'xlink:role',\\n    xlinkShow: 'xlink:show',\\n    xlinkTitle: 'xlink:title',\\n    xlinkType: 'xlink:type',\\n    xmlBase: 'xml:base',\\n    xmlLang: 'xml:lang',\\n    xmlSpace: 'xml:space'\\n  }\\n};\\n\\nmodule.exports = SVGDOMPropertyConfig;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SelectEventPlugin\\n */\\n\\n'use strict';\\n\\nvar EventConstants = require('./EventConstants');\\nvar EventPropagators = require('./EventPropagators');\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\nvar ReactInputSelection = require('./ReactInputSelection');\\nvar SyntheticEvent = require('./SyntheticEvent');\\n\\nvar getActiveElement = require('fbjs/lib/getActiveElement');\\nvar isTextInputElement = require('./isTextInputElement');\\nvar keyOf = require('fbjs/lib/keyOf');\\nvar shallowEqual = require('fbjs/lib/shallowEqual');\\n\\nvar topLevelTypes = EventConstants.topLevelTypes;\\n\\nvar skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;\\n\\nvar eventTypes = {\\n  select: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onSelect: null }),\\n      captured: keyOf({ onSelectCapture: null })\\n    },\\n    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]\\n  }\\n};\\n\\nvar activeElement = null;\\nvar activeElementID = null;\\nvar lastSelection = null;\\nvar mouseDown = false;\\n\\n// Track whether a listener exists for this plugin. If none exist, we do\\n// not extract events.\\nvar hasListener = false;\\nvar ON_SELECT_KEY = keyOf({ onSelect: null });\\n\\n/**\\n * Get an object which is a unique representation of the current selection.\\n *\\n * The return value will not be consistent across nodes or browsers, but\\n * two identical selections on the same node will return identical objects.\\n *\\n * @param {DOMElement} node\\n * @return {object}\\n */\\nfunction getSelection(node) {\\n  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {\\n    return {\\n      start: node.selectionStart,\\n      end: node.selectionEnd\\n    };\\n  } else if (window.getSelection) {\\n    var selection = window.getSelection();\\n    return {\\n      anchorNode: selection.anchorNode,\\n      anchorOffset: selection.anchorOffset,\\n      focusNode: selection.focusNode,\\n      focusOffset: selection.focusOffset\\n    };\\n  } else if (document.selection) {\\n    var range = document.selection.createRange();\\n    return {\\n      parentElement: range.parentElement(),\\n      text: range.text,\\n      top: range.boundingTop,\\n      left: range.boundingLeft\\n    };\\n  }\\n}\\n\\n/**\\n * Poll selection to see whether it's changed.\\n *\\n * @param {object} nativeEvent\\n * @return {?SyntheticEvent}\\n */\\nfunction constructSelectEvent(nativeEvent, nativeEventTarget) {\\n  // Ensure we have the right element, and that the user is not dragging a\\n  // selection (this matches native `select` event behavior). In HTML5, select\\n  // fires only on input and textarea thus if there's no focused element we\\n  // won't dispatch.\\n  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {\\n    return null;\\n  }\\n\\n  // Only fire when selection has actually changed.\\n  var currentSelection = getSelection(activeElement);\\n  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {\\n    lastSelection = currentSelection;\\n\\n    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementID, nativeEvent, nativeEventTarget);\\n\\n    syntheticEvent.type = 'select';\\n    syntheticEvent.target = activeElement;\\n\\n    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);\\n\\n    return syntheticEvent;\\n  }\\n\\n  return null;\\n}\\n\\n/**\\n * This plugin creates an `onSelect` event that normalizes select events\\n * across form elements.\\n *\\n * Supported elements are:\\n * - input (see `isTextInputElement`)\\n * - textarea\\n * - contentEditable\\n *\\n * This differs from native browser implementations in the following ways:\\n * - Fires on contentEditable fields as well as inputs.\\n * - Fires for collapsed selection.\\n * - Fires after user input.\\n */\\nvar SelectEventPlugin = {\\n\\n  eventTypes: eventTypes,\\n\\n  /**\\n   * @param {string} topLevelType Record from `EventConstants`.\\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\\n   * @param {object} nativeEvent Native browser event.\\n   * @return {*} An accumulation of synthetic events.\\n   * @see {EventPluginHub.extractEvents}\\n   */\\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\\n    if (!hasListener) {\\n      return null;\\n    }\\n\\n    switch (topLevelType) {\\n      // Track the input node that has focus.\\n      case topLevelTypes.topFocus:\\n        if (isTextInputElement(topLevelTarget) || topLevelTarget.contentEditable === 'true') {\\n          activeElement = topLevelTarget;\\n          activeElementID = topLevelTargetID;\\n          lastSelection = null;\\n        }\\n        break;\\n      case topLevelTypes.topBlur:\\n        activeElement = null;\\n        activeElementID = null;\\n        lastSelection = null;\\n        break;\\n\\n      // Don't fire the event while the user is dragging. This matches the\\n      // semantics of the native select event.\\n      case topLevelTypes.topMouseDown:\\n        mouseDown = true;\\n        break;\\n      case topLevelTypes.topContextMenu:\\n      case topLevelTypes.topMouseUp:\\n        mouseDown = false;\\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\\n\\n      // Chrome and IE fire non-standard event when selection is changed (and\\n      // sometimes when it hasn't). IE's event fires out of order with respect\\n      // to key and input events on deletion, so we discard it.\\n      //\\n      // Firefox doesn't support selectionchange, so check selection status\\n      // after each key entry. The selection changes after keydown and before\\n      // keyup, but we check on keydown as well in the case of holding down a\\n      // key, when multiple keydown events are fired but only one keyup is.\\n      // This is also our approach for IE handling, for the reason above.\\n      case topLevelTypes.topSelectionChange:\\n        if (skipSelectionChangeEvent) {\\n          break;\\n        }\\n      // falls through\\n      case topLevelTypes.topKeyDown:\\n      case topLevelTypes.topKeyUp:\\n        return constructSelectEvent(nativeEvent, nativeEventTarget);\\n    }\\n\\n    return null;\\n  },\\n\\n  didPutListener: function (id, registrationName, listener) {\\n    if (registrationName === ON_SELECT_KEY) {\\n      hasListener = true;\\n    }\\n  }\\n};\\n\\nmodule.exports = SelectEventPlugin;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ServerReactRootIndex\\n * @typechecks\\n */\\n\\n'use strict';\\n\\n/**\\n * Size of the reactRoot ID space. We generate random numbers for React root\\n * IDs and if there's a collision the events and DOM update system will\\n * get confused. In the future we need a way to generate GUIDs but for\\n * now this will work on a smaller scale.\\n */\\nvar GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);\\n\\nvar ServerReactRootIndex = {\\n  createReactRootIndex: function () {\\n    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);\\n  }\\n};\\n\\nmodule.exports = ServerReactRootIndex;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SimpleEventPlugin\\n */\\n\\n'use strict';\\n\\nvar EventConstants = require('./EventConstants');\\nvar EventListener = require('fbjs/lib/EventListener');\\nvar EventPropagators = require('./EventPropagators');\\nvar ReactMount = require('./ReactMount');\\nvar SyntheticClipboardEvent = require('./SyntheticClipboardEvent');\\nvar SyntheticEvent = require('./SyntheticEvent');\\nvar SyntheticFocusEvent = require('./SyntheticFocusEvent');\\nvar SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');\\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\\nvar SyntheticDragEvent = require('./SyntheticDragEvent');\\nvar SyntheticTouchEvent = require('./SyntheticTouchEvent');\\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\\nvar SyntheticWheelEvent = require('./SyntheticWheelEvent');\\n\\nvar emptyFunction = require('fbjs/lib/emptyFunction');\\nvar getEventCharCode = require('./getEventCharCode');\\nvar invariant = require('fbjs/lib/invariant');\\nvar keyOf = require('fbjs/lib/keyOf');\\n\\nvar topLevelTypes = EventConstants.topLevelTypes;\\n\\nvar eventTypes = {\\n  abort: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onAbort: true }),\\n      captured: keyOf({ onAbortCapture: true })\\n    }\\n  },\\n  blur: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onBlur: true }),\\n      captured: keyOf({ onBlurCapture: true })\\n    }\\n  },\\n  canPlay: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onCanPlay: true }),\\n      captured: keyOf({ onCanPlayCapture: true })\\n    }\\n  },\\n  canPlayThrough: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onCanPlayThrough: true }),\\n      captured: keyOf({ onCanPlayThroughCapture: true })\\n    }\\n  },\\n  click: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onClick: true }),\\n      captured: keyOf({ onClickCapture: true })\\n    }\\n  },\\n  contextMenu: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onContextMenu: true }),\\n      captured: keyOf({ onContextMenuCapture: true })\\n    }\\n  },\\n  copy: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onCopy: true }),\\n      captured: keyOf({ onCopyCapture: true })\\n    }\\n  },\\n  cut: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onCut: true }),\\n      captured: keyOf({ onCutCapture: true })\\n    }\\n  },\\n  doubleClick: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onDoubleClick: true }),\\n      captured: keyOf({ onDoubleClickCapture: true })\\n    }\\n  },\\n  drag: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onDrag: true }),\\n      captured: keyOf({ onDragCapture: true })\\n    }\\n  },\\n  dragEnd: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onDragEnd: true }),\\n      captured: keyOf({ onDragEndCapture: true })\\n    }\\n  },\\n  dragEnter: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onDragEnter: true }),\\n      captured: keyOf({ onDragEnterCapture: true })\\n    }\\n  },\\n  dragExit: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onDragExit: true }),\\n      captured: keyOf({ onDragExitCapture: true })\\n    }\\n  },\\n  dragLeave: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onDragLeave: true }),\\n      captured: keyOf({ onDragLeaveCapture: true })\\n    }\\n  },\\n  dragOver: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onDragOver: true }),\\n      captured: keyOf({ onDragOverCapture: true })\\n    }\\n  },\\n  dragStart: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onDragStart: true }),\\n      captured: keyOf({ onDragStartCapture: true })\\n    }\\n  },\\n  drop: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onDrop: true }),\\n      captured: keyOf({ onDropCapture: true })\\n    }\\n  },\\n  durationChange: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onDurationChange: true }),\\n      captured: keyOf({ onDurationChangeCapture: true })\\n    }\\n  },\\n  emptied: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onEmptied: true }),\\n      captured: keyOf({ onEmptiedCapture: true })\\n    }\\n  },\\n  encrypted: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onEncrypted: true }),\\n      captured: keyOf({ onEncryptedCapture: true })\\n    }\\n  },\\n  ended: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onEnded: true }),\\n      captured: keyOf({ onEndedCapture: true })\\n    }\\n  },\\n  error: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onError: true }),\\n      captured: keyOf({ onErrorCapture: true })\\n    }\\n  },\\n  focus: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onFocus: true }),\\n      captured: keyOf({ onFocusCapture: true })\\n    }\\n  },\\n  input: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onInput: true }),\\n      captured: keyOf({ onInputCapture: true })\\n    }\\n  },\\n  keyDown: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onKeyDown: true }),\\n      captured: keyOf({ onKeyDownCapture: true })\\n    }\\n  },\\n  keyPress: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onKeyPress: true }),\\n      captured: keyOf({ onKeyPressCapture: true })\\n    }\\n  },\\n  keyUp: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onKeyUp: true }),\\n      captured: keyOf({ onKeyUpCapture: true })\\n    }\\n  },\\n  load: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onLoad: true }),\\n      captured: keyOf({ onLoadCapture: true })\\n    }\\n  },\\n  loadedData: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onLoadedData: true }),\\n      captured: keyOf({ onLoadedDataCapture: true })\\n    }\\n  },\\n  loadedMetadata: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onLoadedMetadata: true }),\\n      captured: keyOf({ onLoadedMetadataCapture: true })\\n    }\\n  },\\n  loadStart: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onLoadStart: true }),\\n      captured: keyOf({ onLoadStartCapture: true })\\n    }\\n  },\\n  // Note: We do not allow listening to mouseOver events. Instead, use the\\n  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.\\n  mouseDown: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onMouseDown: true }),\\n      captured: keyOf({ onMouseDownCapture: true })\\n    }\\n  },\\n  mouseMove: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onMouseMove: true }),\\n      captured: keyOf({ onMouseMoveCapture: true })\\n    }\\n  },\\n  mouseOut: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onMouseOut: true }),\\n      captured: keyOf({ onMouseOutCapture: true })\\n    }\\n  },\\n  mouseOver: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onMouseOver: true }),\\n      captured: keyOf({ onMouseOverCapture: true })\\n    }\\n  },\\n  mouseUp: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onMouseUp: true }),\\n      captured: keyOf({ onMouseUpCapture: true })\\n    }\\n  },\\n  paste: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onPaste: true }),\\n      captured: keyOf({ onPasteCapture: true })\\n    }\\n  },\\n  pause: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onPause: true }),\\n      captured: keyOf({ onPauseCapture: true })\\n    }\\n  },\\n  play: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onPlay: true }),\\n      captured: keyOf({ onPlayCapture: true })\\n    }\\n  },\\n  playing: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onPlaying: true }),\\n      captured: keyOf({ onPlayingCapture: true })\\n    }\\n  },\\n  progress: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onProgress: true }),\\n      captured: keyOf({ onProgressCapture: true })\\n    }\\n  },\\n  rateChange: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onRateChange: true }),\\n      captured: keyOf({ onRateChangeCapture: true })\\n    }\\n  },\\n  reset: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onReset: true }),\\n      captured: keyOf({ onResetCapture: true })\\n    }\\n  },\\n  scroll: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onScroll: true }),\\n      captured: keyOf({ onScrollCapture: true })\\n    }\\n  },\\n  seeked: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onSeeked: true }),\\n      captured: keyOf({ onSeekedCapture: true })\\n    }\\n  },\\n  seeking: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onSeeking: true }),\\n      captured: keyOf({ onSeekingCapture: true })\\n    }\\n  },\\n  stalled: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onStalled: true }),\\n      captured: keyOf({ onStalledCapture: true })\\n    }\\n  },\\n  submit: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onSubmit: true }),\\n      captured: keyOf({ onSubmitCapture: true })\\n    }\\n  },\\n  suspend: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onSuspend: true }),\\n      captured: keyOf({ onSuspendCapture: true })\\n    }\\n  },\\n  timeUpdate: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onTimeUpdate: true }),\\n      captured: keyOf({ onTimeUpdateCapture: true })\\n    }\\n  },\\n  touchCancel: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onTouchCancel: true }),\\n      captured: keyOf({ onTouchCancelCapture: true })\\n    }\\n  },\\n  touchEnd: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onTouchEnd: true }),\\n      captured: keyOf({ onTouchEndCapture: true })\\n    }\\n  },\\n  touchMove: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onTouchMove: true }),\\n      captured: keyOf({ onTouchMoveCapture: true })\\n    }\\n  },\\n  touchStart: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onTouchStart: true }),\\n      captured: keyOf({ onTouchStartCapture: true })\\n    }\\n  },\\n  volumeChange: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onVolumeChange: true }),\\n      captured: keyOf({ onVolumeChangeCapture: true })\\n    }\\n  },\\n  waiting: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onWaiting: true }),\\n      captured: keyOf({ onWaitingCapture: true })\\n    }\\n  },\\n  wheel: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onWheel: true }),\\n      captured: keyOf({ onWheelCapture: true })\\n    }\\n  }\\n};\\n\\nvar topLevelEventsToDispatchConfig = {\\n  topAbort: eventTypes.abort,\\n  topBlur: eventTypes.blur,\\n  topCanPlay: eventTypes.canPlay,\\n  topCanPlayThrough: eventTypes.canPlayThrough,\\n  topClick: eventTypes.click,\\n  topContextMenu: eventTypes.contextMenu,\\n  topCopy: eventTypes.copy,\\n  topCut: eventTypes.cut,\\n  topDoubleClick: eventTypes.doubleClick,\\n  topDrag: eventTypes.drag,\\n  topDragEnd: eventTypes.dragEnd,\\n  topDragEnter: eventTypes.dragEnter,\\n  topDragExit: eventTypes.dragExit,\\n  topDragLeave: eventTypes.dragLeave,\\n  topDragOver: eventTypes.dragOver,\\n  topDragStart: eventTypes.dragStart,\\n  topDrop: eventTypes.drop,\\n  topDurationChange: eventTypes.durationChange,\\n  topEmptied: eventTypes.emptied,\\n  topEncrypted: eventTypes.encrypted,\\n  topEnded: eventTypes.ended,\\n  topError: eventTypes.error,\\n  topFocus: eventTypes.focus,\\n  topInput: eventTypes.input,\\n  topKeyDown: eventTypes.keyDown,\\n  topKeyPress: eventTypes.keyPress,\\n  topKeyUp: eventTypes.keyUp,\\n  topLoad: eventTypes.load,\\n  topLoadedData: eventTypes.loadedData,\\n  topLoadedMetadata: eventTypes.loadedMetadata,\\n  topLoadStart: eventTypes.loadStart,\\n  topMouseDown: eventTypes.mouseDown,\\n  topMouseMove: eventTypes.mouseMove,\\n  topMouseOut: eventTypes.mouseOut,\\n  topMouseOver: eventTypes.mouseOver,\\n  topMouseUp: eventTypes.mouseUp,\\n  topPaste: eventTypes.paste,\\n  topPause: eventTypes.pause,\\n  topPlay: eventTypes.play,\\n  topPlaying: eventTypes.playing,\\n  topProgress: eventTypes.progress,\\n  topRateChange: eventTypes.rateChange,\\n  topReset: eventTypes.reset,\\n  topScroll: eventTypes.scroll,\\n  topSeeked: eventTypes.seeked,\\n  topSeeking: eventTypes.seeking,\\n  topStalled: eventTypes.stalled,\\n  topSubmit: eventTypes.submit,\\n  topSuspend: eventTypes.suspend,\\n  topTimeUpdate: eventTypes.timeUpdate,\\n  topTouchCancel: eventTypes.touchCancel,\\n  topTouchEnd: eventTypes.touchEnd,\\n  topTouchMove: eventTypes.touchMove,\\n  topTouchStart: eventTypes.touchStart,\\n  topVolumeChange: eventTypes.volumeChange,\\n  topWaiting: eventTypes.waiting,\\n  topWheel: eventTypes.wheel\\n};\\n\\nfor (var type in topLevelEventsToDispatchConfig) {\\n  topLevelEventsToDispatchConfig[type].dependencies = [type];\\n}\\n\\nvar ON_CLICK_KEY = keyOf({ onClick: null });\\nvar onClickListeners = {};\\n\\nvar SimpleEventPlugin = {\\n\\n  eventTypes: eventTypes,\\n\\n  /**\\n   * @param {string} topLevelType Record from `EventConstants`.\\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\\n   * @param {object} nativeEvent Native browser event.\\n   * @return {*} An accumulation of synthetic events.\\n   * @see {EventPluginHub.extractEvents}\\n   */\\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\\n    if (!dispatchConfig) {\\n      return null;\\n    }\\n    var EventConstructor;\\n    switch (topLevelType) {\\n      case topLevelTypes.topAbort:\\n      case topLevelTypes.topCanPlay:\\n      case topLevelTypes.topCanPlayThrough:\\n      case topLevelTypes.topDurationChange:\\n      case topLevelTypes.topEmptied:\\n      case topLevelTypes.topEncrypted:\\n      case topLevelTypes.topEnded:\\n      case topLevelTypes.topError:\\n      case topLevelTypes.topInput:\\n      case topLevelTypes.topLoad:\\n      case topLevelTypes.topLoadedData:\\n      case topLevelTypes.topLoadedMetadata:\\n      case topLevelTypes.topLoadStart:\\n      case topLevelTypes.topPause:\\n      case topLevelTypes.topPlay:\\n      case topLevelTypes.topPlaying:\\n      case topLevelTypes.topProgress:\\n      case topLevelTypes.topRateChange:\\n      case topLevelTypes.topReset:\\n      case topLevelTypes.topSeeked:\\n      case topLevelTypes.topSeeking:\\n      case topLevelTypes.topStalled:\\n      case topLevelTypes.topSubmit:\\n      case topLevelTypes.topSuspend:\\n      case topLevelTypes.topTimeUpdate:\\n      case topLevelTypes.topVolumeChange:\\n      case topLevelTypes.topWaiting:\\n        // HTML Events\\n        // @see http://www.w3.org/TR/html5/index.html#events-0\\n        EventConstructor = SyntheticEvent;\\n        break;\\n      case topLevelTypes.topKeyPress:\\n        // FireFox creates a keypress event for function keys too. This removes\\n        // the unwanted keypress events. Enter is however both printable and\\n        // non-printable. One would expect Tab to be as well (but it isn't).\\n        if (getEventCharCode(nativeEvent) === 0) {\\n          return null;\\n        }\\n      /* falls through */\\n      case topLevelTypes.topKeyDown:\\n      case topLevelTypes.topKeyUp:\\n        EventConstructor = SyntheticKeyboardEvent;\\n        break;\\n      case topLevelTypes.topBlur:\\n      case topLevelTypes.topFocus:\\n        EventConstructor = SyntheticFocusEvent;\\n        break;\\n      case topLevelTypes.topClick:\\n        // Firefox creates a click event on right mouse clicks. This removes the\\n        // unwanted click events.\\n        if (nativeEvent.button === 2) {\\n          return null;\\n        }\\n      /* falls through */\\n      case topLevelTypes.topContextMenu:\\n      case topLevelTypes.topDoubleClick:\\n      case topLevelTypes.topMouseDown:\\n      case topLevelTypes.topMouseMove:\\n      case topLevelTypes.topMouseOut:\\n      case topLevelTypes.topMouseOver:\\n      case topLevelTypes.topMouseUp:\\n        EventConstructor = SyntheticMouseEvent;\\n        break;\\n      case topLevelTypes.topDrag:\\n      case topLevelTypes.topDragEnd:\\n      case topLevelTypes.topDragEnter:\\n      case topLevelTypes.topDragExit:\\n      case topLevelTypes.topDragLeave:\\n      case topLevelTypes.topDragOver:\\n      case topLevelTypes.topDragStart:\\n      case topLevelTypes.topDrop:\\n        EventConstructor = SyntheticDragEvent;\\n        break;\\n      case topLevelTypes.topTouchCancel:\\n      case topLevelTypes.topTouchEnd:\\n      case topLevelTypes.topTouchMove:\\n      case topLevelTypes.topTouchStart:\\n        EventConstructor = SyntheticTouchEvent;\\n        break;\\n      case topLevelTypes.topScroll:\\n        EventConstructor = SyntheticUIEvent;\\n        break;\\n      case topLevelTypes.topWheel:\\n        EventConstructor = SyntheticWheelEvent;\\n        break;\\n      case topLevelTypes.topCopy:\\n      case topLevelTypes.topCut:\\n      case topLevelTypes.topPaste:\\n        EventConstructor = SyntheticClipboardEvent;\\n        break;\\n    }\\n    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : invariant(false) : undefined;\\n    var event = EventConstructor.getPooled(dispatchConfig, topLevelTargetID, nativeEvent, nativeEventTarget);\\n    EventPropagators.accumulateTwoPhaseDispatches(event);\\n    return event;\\n  },\\n\\n  didPutListener: function (id, registrationName, listener) {\\n    // Mobile Safari does not fire properly bubble click events on\\n    // non-interactive elements, which means delegated click listeners do not\\n    // fire. The workaround for this bug involves attaching an empty click\\n    // listener on the target node.\\n    if (registrationName === ON_CLICK_KEY) {\\n      var node = ReactMount.getNode(id);\\n      if (!onClickListeners[id]) {\\n        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);\\n      }\\n    }\\n  },\\n\\n  willDeleteListener: function (id, registrationName) {\\n    if (registrationName === ON_CLICK_KEY) {\\n      onClickListeners[id].remove();\\n      delete onClickListeners[id];\\n    }\\n  }\\n\\n};\\n\\nmodule.exports = SimpleEventPlugin;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SyntheticClipboardEvent\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar SyntheticEvent = require('./SyntheticEvent');\\n\\n/**\\n * @interface Event\\n * @see http://www.w3.org/TR/clipboard-apis/\\n */\\nvar ClipboardEventInterface = {\\n  clipboardData: function (event) {\\n    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;\\n  }\\n};\\n\\n/**\\n * @param {object} dispatchConfig Configuration used to dispatch this event.\\n * @param {string} dispatchMarker Marker identifying the event target.\\n * @param {object} nativeEvent Native browser event.\\n * @extends {SyntheticUIEvent}\\n */\\nfunction SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\\n}\\n\\nSyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);\\n\\nmodule.exports = SyntheticClipboardEvent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SyntheticCompositionEvent\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar SyntheticEvent = require('./SyntheticEvent');\\n\\n/**\\n * @interface Event\\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents\\n */\\nvar CompositionEventInterface = {\\n  data: null\\n};\\n\\n/**\\n * @param {object} dispatchConfig Configuration used to dispatch this event.\\n * @param {string} dispatchMarker Marker identifying the event target.\\n * @param {object} nativeEvent Native browser event.\\n * @extends {SyntheticUIEvent}\\n */\\nfunction SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\\n}\\n\\nSyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);\\n\\nmodule.exports = SyntheticCompositionEvent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SyntheticDragEvent\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\\n\\n/**\\n * @interface DragEvent\\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\\n */\\nvar DragEventInterface = {\\n  dataTransfer: null\\n};\\n\\n/**\\n * @param {object} dispatchConfig Configuration used to dispatch this event.\\n * @param {string} dispatchMarker Marker identifying the event target.\\n * @param {object} nativeEvent Native browser event.\\n * @extends {SyntheticUIEvent}\\n */\\nfunction SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\\n}\\n\\nSyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);\\n\\nmodule.exports = SyntheticDragEvent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SyntheticEvent\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar PooledClass = require('./PooledClass');\\n\\nvar assign = require('./Object.assign');\\nvar emptyFunction = require('fbjs/lib/emptyFunction');\\nvar warning = require('fbjs/lib/warning');\\n\\n/**\\n * @interface Event\\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\\n */\\nvar EventInterface = {\\n  type: null,\\n  // currentTarget is set when dispatching; no use in copying it here\\n  currentTarget: emptyFunction.thatReturnsNull,\\n  eventPhase: null,\\n  bubbles: null,\\n  cancelable: null,\\n  timeStamp: function (event) {\\n    return event.timeStamp || Date.now();\\n  },\\n  defaultPrevented: null,\\n  isTrusted: null\\n};\\n\\n/**\\n * Synthetic events are dispatched by event plugins, typically in response to a\\n * top-level event delegation handler.\\n *\\n * These systems should generally use pooling to reduce the frequency of garbage\\n * collection. The system should check `isPersistent` to determine whether the\\n * event should be released into the pool after being dispatched. Users that\\n * need a persisted event should invoke `persist`.\\n *\\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\\n * DOM interface; custom application-specific events can also subclass this.\\n *\\n * @param {object} dispatchConfig Configuration used to dispatch this event.\\n * @param {string} dispatchMarker Marker identifying the event target.\\n * @param {object} nativeEvent Native browser event.\\n */\\nfunction SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\\n  this.dispatchConfig = dispatchConfig;\\n  this.dispatchMarker = dispatchMarker;\\n  this.nativeEvent = nativeEvent;\\n  this.target = nativeEventTarget;\\n  this.currentTarget = nativeEventTarget;\\n\\n  var Interface = this.constructor.Interface;\\n  for (var propName in Interface) {\\n    if (!Interface.hasOwnProperty(propName)) {\\n      continue;\\n    }\\n    var normalize = Interface[propName];\\n    if (normalize) {\\n      this[propName] = normalize(nativeEvent);\\n    } else {\\n      this[propName] = nativeEvent[propName];\\n    }\\n  }\\n\\n  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;\\n  if (defaultPrevented) {\\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\\n  } else {\\n    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;\\n  }\\n  this.isPropagationStopped = emptyFunction.thatReturnsFalse;\\n}\\n\\nassign(SyntheticEvent.prototype, {\\n\\n  preventDefault: function () {\\n    this.defaultPrevented = true;\\n    var event = this.nativeEvent;\\n    if (process.env.NODE_ENV !== 'production') {\\n      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\\\\'re ' + 'seeing this, you\\\\'re calling `preventDefault` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;\\n    }\\n    if (!event) {\\n      return;\\n    }\\n\\n    if (event.preventDefault) {\\n      event.preventDefault();\\n    } else {\\n      event.returnValue = false;\\n    }\\n    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;\\n  },\\n\\n  stopPropagation: function () {\\n    var event = this.nativeEvent;\\n    if (process.env.NODE_ENV !== 'production') {\\n      process.env.NODE_ENV !== 'production' ? warning(event, 'This synthetic event is reused for performance reasons. If you\\\\'re ' + 'seeing this, you\\\\'re calling `stopPropagation` on a ' + 'released/nullified synthetic event. This is a no-op. See ' + 'https://fb.me/react-event-pooling for more information.') : undefined;\\n    }\\n    if (!event) {\\n      return;\\n    }\\n\\n    if (event.stopPropagation) {\\n      event.stopPropagation();\\n    } else {\\n      event.cancelBubble = true;\\n    }\\n    this.isPropagationStopped = emptyFunction.thatReturnsTrue;\\n  },\\n\\n  /**\\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\\n   * them back into the pool. This allows a way to hold onto a reference that\\n   * won't be added back into the pool.\\n   */\\n  persist: function () {\\n    this.isPersistent = emptyFunction.thatReturnsTrue;\\n  },\\n\\n  /**\\n   * Checks if this event should be released back into the pool.\\n   *\\n   * @return {boolean} True if this should not be released, false otherwise.\\n   */\\n  isPersistent: emptyFunction.thatReturnsFalse,\\n\\n  /**\\n   * `PooledClass` looks for `destructor` on each instance it releases.\\n   */\\n  destructor: function () {\\n    var Interface = this.constructor.Interface;\\n    for (var propName in Interface) {\\n      this[propName] = null;\\n    }\\n    this.dispatchConfig = null;\\n    this.dispatchMarker = null;\\n    this.nativeEvent = null;\\n  }\\n\\n});\\n\\nSyntheticEvent.Interface = EventInterface;\\n\\n/**\\n * Helper to reduce boilerplate when creating subclasses.\\n *\\n * @param {function} Class\\n * @param {?object} Interface\\n */\\nSyntheticEvent.augmentClass = function (Class, Interface) {\\n  var Super = this;\\n\\n  var prototype = Object_create(Super.prototype);\\n  assign(prototype, Class.prototype);\\n  Class.prototype = prototype;\\n  Class.prototype.constructor = Class;\\n\\n  Class.Interface = assign({}, Super.Interface, Interface);\\n  Class.augmentClass = Super.augmentClass;\\n\\n  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);\\n};\\n\\nPooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);\\n\\nmodule.exports = SyntheticEvent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SyntheticFocusEvent\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\\n\\n/**\\n * @interface FocusEvent\\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\\n */\\nvar FocusEventInterface = {\\n  relatedTarget: null\\n};\\n\\n/**\\n * @param {object} dispatchConfig Configuration used to dispatch this event.\\n * @param {string} dispatchMarker Marker identifying the event target.\\n * @param {object} nativeEvent Native browser event.\\n * @extends {SyntheticUIEvent}\\n */\\nfunction SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\\n}\\n\\nSyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);\\n\\nmodule.exports = SyntheticFocusEvent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SyntheticInputEvent\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar SyntheticEvent = require('./SyntheticEvent');\\n\\n/**\\n * @interface Event\\n * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105\\n *      /#events-inputevents\\n */\\nvar InputEventInterface = {\\n  data: null\\n};\\n\\n/**\\n * @param {object} dispatchConfig Configuration used to dispatch this event.\\n * @param {string} dispatchMarker Marker identifying the event target.\\n * @param {object} nativeEvent Native browser event.\\n * @extends {SyntheticUIEvent}\\n */\\nfunction SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\\n}\\n\\nSyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);\\n\\nmodule.exports = SyntheticInputEvent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SyntheticKeyboardEvent\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\\n\\nvar getEventCharCode = require('./getEventCharCode');\\nvar getEventKey = require('./getEventKey');\\nvar getEventModifierState = require('./getEventModifierState');\\n\\n/**\\n * @interface KeyboardEvent\\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\\n */\\nvar KeyboardEventInterface = {\\n  key: getEventKey,\\n  location: null,\\n  ctrlKey: null,\\n  shiftKey: null,\\n  altKey: null,\\n  metaKey: null,\\n  repeat: null,\\n  locale: null,\\n  getModifierState: getEventModifierState,\\n  // Legacy Interface\\n  charCode: function (event) {\\n    // `charCode` is the result of a KeyPress event and represents the value of\\n    // the actual printable character.\\n\\n    // KeyPress is deprecated, but its replacement is not yet final and not\\n    // implemented in any major browser. Only KeyPress has charCode.\\n    if (event.type === 'keypress') {\\n      return getEventCharCode(event);\\n    }\\n    return 0;\\n  },\\n  keyCode: function (event) {\\n    // `keyCode` is the result of a KeyDown/Up event and represents the value of\\n    // physical keyboard key.\\n\\n    // The actual meaning of the value depends on the users' keyboard layout\\n    // which cannot be detected. Assuming that it is a US keyboard layout\\n    // provides a surprisingly accurate mapping for US and European users.\\n    // Due to this, it is left to the user to implement at this time.\\n    if (event.type === 'keydown' || event.type === 'keyup') {\\n      return event.keyCode;\\n    }\\n    return 0;\\n  },\\n  which: function (event) {\\n    // `which` is an alias for either `keyCode` or `charCode` depending on the\\n    // type of the event.\\n    if (event.type === 'keypress') {\\n      return getEventCharCode(event);\\n    }\\n    if (event.type === 'keydown' || event.type === 'keyup') {\\n      return event.keyCode;\\n    }\\n    return 0;\\n  }\\n};\\n\\n/**\\n * @param {object} dispatchConfig Configuration used to dispatch this event.\\n * @param {string} dispatchMarker Marker identifying the event target.\\n * @param {object} nativeEvent Native browser event.\\n * @extends {SyntheticUIEvent}\\n */\\nfunction SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\\n}\\n\\nSyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);\\n\\nmodule.exports = SyntheticKeyboardEvent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SyntheticMouseEvent\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\\nvar ViewportMetrics = require('./ViewportMetrics');\\n\\nvar getEventModifierState = require('./getEventModifierState');\\n\\n/**\\n * @interface MouseEvent\\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\\n */\\nvar MouseEventInterface = {\\n  screenX: null,\\n  screenY: null,\\n  clientX: null,\\n  clientY: null,\\n  ctrlKey: null,\\n  shiftKey: null,\\n  altKey: null,\\n  metaKey: null,\\n  getModifierState: getEventModifierState,\\n  button: function (event) {\\n    // Webkit, Firefox, IE9+\\n    // which:  1 2 3\\n    // button: 0 1 2 (standard)\\n    var button = event.button;\\n    if ('which' in event) {\\n      return button;\\n    }\\n    // IE<9\\n    // which:  undefined\\n    // button: 0 0 0\\n    // button: 1 4 2 (onmouseup)\\n    return button === 2 ? 2 : button === 4 ? 1 : 0;\\n  },\\n  buttons: null,\\n  relatedTarget: function (event) {\\n    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);\\n  },\\n  // \\\"Proprietary\\\" Interface.\\n  pageX: function (event) {\\n    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;\\n  },\\n  pageY: function (event) {\\n    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;\\n  }\\n};\\n\\n/**\\n * @param {object} dispatchConfig Configuration used to dispatch this event.\\n * @param {string} dispatchMarker Marker identifying the event target.\\n * @param {object} nativeEvent Native browser event.\\n * @extends {SyntheticUIEvent}\\n */\\nfunction SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\\n}\\n\\nSyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);\\n\\nmodule.exports = SyntheticMouseEvent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SyntheticTouchEvent\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\\n\\nvar getEventModifierState = require('./getEventModifierState');\\n\\n/**\\n * @interface TouchEvent\\n * @see http://www.w3.org/TR/touch-events/\\n */\\nvar TouchEventInterface = {\\n  touches: null,\\n  targetTouches: null,\\n  changedTouches: null,\\n  altKey: null,\\n  metaKey: null,\\n  ctrlKey: null,\\n  shiftKey: null,\\n  getModifierState: getEventModifierState\\n};\\n\\n/**\\n * @param {object} dispatchConfig Configuration used to dispatch this event.\\n * @param {string} dispatchMarker Marker identifying the event target.\\n * @param {object} nativeEvent Native browser event.\\n * @extends {SyntheticUIEvent}\\n */\\nfunction SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\\n  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\\n}\\n\\nSyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);\\n\\nmodule.exports = SyntheticTouchEvent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SyntheticUIEvent\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar SyntheticEvent = require('./SyntheticEvent');\\n\\nvar getEventTarget = require('./getEventTarget');\\n\\n/**\\n * @interface UIEvent\\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\\n */\\nvar UIEventInterface = {\\n  view: function (event) {\\n    if (event.view) {\\n      return event.view;\\n    }\\n\\n    var target = getEventTarget(event);\\n    if (target != null && target.window === target) {\\n      // target is a window object\\n      return target;\\n    }\\n\\n    var doc = target.ownerDocument;\\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\\n    if (doc) {\\n      return doc.defaultView || doc.parentWindow;\\n    } else {\\n      return window;\\n    }\\n  },\\n  detail: function (event) {\\n    return event.detail || 0;\\n  }\\n};\\n\\n/**\\n * @param {object} dispatchConfig Configuration used to dispatch this event.\\n * @param {string} dispatchMarker Marker identifying the event target.\\n * @param {object} nativeEvent Native browser event.\\n * @extends {SyntheticEvent}\\n */\\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\\n  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\\n}\\n\\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\\n\\nmodule.exports = SyntheticUIEvent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule SyntheticWheelEvent\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\\n\\n/**\\n * @interface WheelEvent\\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\\n */\\nvar WheelEventInterface = {\\n  deltaX: function (event) {\\n    return 'deltaX' in event ? event.deltaX :\\n    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).\\n    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;\\n  },\\n  deltaY: function (event) {\\n    return 'deltaY' in event ? event.deltaY :\\n    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).\\n    'wheelDeltaY' in event ? -event.wheelDeltaY :\\n    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).\\n    'wheelDelta' in event ? -event.wheelDelta : 0;\\n  },\\n  deltaZ: null,\\n\\n  // Browsers without \\\"deltaMode\\\" is reporting in raw wheel delta where one\\n  // notch on the scroll is always +/- 120, roughly equivalent to pixels.\\n  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or\\n  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.\\n  deltaMode: null\\n};\\n\\n/**\\n * @param {object} dispatchConfig Configuration used to dispatch this event.\\n * @param {string} dispatchMarker Marker identifying the event target.\\n * @param {object} nativeEvent Native browser event.\\n * @extends {SyntheticMouseEvent}\\n */\\nfunction SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\\n  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\\n}\\n\\nSyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);\\n\\nmodule.exports = SyntheticWheelEvent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule TapEventPlugin\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar EventConstants = require('./EventConstants');\\nvar EventPluginUtils = require('./EventPluginUtils');\\nvar EventPropagators = require('./EventPropagators');\\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\\nvar TouchEventUtils = require('fbjs/lib/TouchEventUtils');\\nvar ViewportMetrics = require('./ViewportMetrics');\\n\\nvar keyOf = require('fbjs/lib/keyOf');\\nvar topLevelTypes = EventConstants.topLevelTypes;\\n\\nvar isStartish = EventPluginUtils.isStartish;\\nvar isEndish = EventPluginUtils.isEndish;\\n\\n/**\\n * Number of pixels that are tolerated in between a `touchStart` and `touchEnd`\\n * in order to still be considered a 'tap' event.\\n */\\nvar tapMoveThreshold = 10;\\nvar startCoords = { x: null, y: null };\\n\\nvar Axis = {\\n  x: { page: 'pageX', client: 'clientX', envScroll: 'currentPageScrollLeft' },\\n  y: { page: 'pageY', client: 'clientY', envScroll: 'currentPageScrollTop' }\\n};\\n\\nfunction getAxisCoordOfEvent(axis, nativeEvent) {\\n  var singleTouch = TouchEventUtils.extractSingleTouch(nativeEvent);\\n  if (singleTouch) {\\n    return singleTouch[axis.page];\\n  }\\n  return axis.page in nativeEvent ? nativeEvent[axis.page] : nativeEvent[axis.client] + ViewportMetrics[axis.envScroll];\\n}\\n\\nfunction getDistance(coords, nativeEvent) {\\n  var pageX = getAxisCoordOfEvent(Axis.x, nativeEvent);\\n  var pageY = getAxisCoordOfEvent(Axis.y, nativeEvent);\\n  return Math.pow(Math.pow(pageX - coords.x, 2) + Math.pow(pageY - coords.y, 2), 0.5);\\n}\\n\\nvar touchEvents = [topLevelTypes.topTouchStart, topLevelTypes.topTouchCancel, topLevelTypes.topTouchEnd, topLevelTypes.topTouchMove];\\n\\nvar dependencies = [topLevelTypes.topMouseDown, topLevelTypes.topMouseMove, topLevelTypes.topMouseUp].concat(touchEvents);\\n\\nvar eventTypes = {\\n  touchTap: {\\n    phasedRegistrationNames: {\\n      bubbled: keyOf({ onTouchTap: null }),\\n      captured: keyOf({ onTouchTapCapture: null })\\n    },\\n    dependencies: dependencies\\n  }\\n};\\n\\nvar usedTouch = false;\\nvar usedTouchTime = 0;\\nvar TOUCH_DELAY = 1000;\\n\\nvar TapEventPlugin = {\\n\\n  tapMoveThreshold: tapMoveThreshold,\\n\\n  eventTypes: eventTypes,\\n\\n  /**\\n   * @param {string} topLevelType Record from `EventConstants`.\\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\\n   * @param {object} nativeEvent Native browser event.\\n   * @return {*} An accumulation of synthetic events.\\n   * @see {EventPluginHub.extractEvents}\\n   */\\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\\n    if (!isStartish(topLevelType) && !isEndish(topLevelType)) {\\n      return null;\\n    }\\n    // on ios, there is a delay after touch event and synthetic\\n    // mouse events, so that user can perform double tap\\n    // solution: ignore mouse events following touchevent within small timeframe\\n    if (touchEvents.indexOf(topLevelType) !== -1) {\\n      usedTouch = true;\\n      usedTouchTime = Date.now();\\n    } else {\\n      if (usedTouch && Date.now() - usedTouchTime < TOUCH_DELAY) {\\n        return null;\\n      }\\n    }\\n    var event = null;\\n    var distance = getDistance(startCoords, nativeEvent);\\n    if (isEndish(topLevelType) && distance < tapMoveThreshold) {\\n      event = SyntheticUIEvent.getPooled(eventTypes.touchTap, topLevelTargetID, nativeEvent, nativeEventTarget);\\n    }\\n    if (isStartish(topLevelType)) {\\n      startCoords.x = getAxisCoordOfEvent(Axis.x, nativeEvent);\\n      startCoords.y = getAxisCoordOfEvent(Axis.y, nativeEvent);\\n    } else if (isEndish(topLevelType)) {\\n      startCoords.x = 0;\\n      startCoords.y = 0;\\n    }\\n    EventPropagators.accumulateTwoPhaseDispatches(event);\\n    return event;\\n  }\\n\\n};\\n\\nmodule.exports = TapEventPlugin;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule Transaction\\n */\\n\\n'use strict';\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\n/**\\n * `Transaction` creates a black box that is able to wrap any method such that\\n * certain invariants are maintained before and after the method is invoked\\n * (Even if an exception is thrown while invoking the wrapped method). Whoever\\n * instantiates a transaction can provide enforcers of the invariants at\\n * creation time. The `Transaction` class itself will supply one additional\\n * automatic invariant for you - the invariant that any transaction instance\\n * should not be run while it is already being run. You would typically create a\\n * single instance of a `Transaction` for reuse multiple times, that potentially\\n * is used to wrap several different methods. Wrappers are extremely simple -\\n * they only require implementing two methods.\\n *\\n * <pre>\\n *                       wrappers (injected at creation time)\\n *                                      +        +\\n *                                      |        |\\n *                    +-----------------|--------|--------------+\\n *                    |                 v        |              |\\n *                    |      +---------------+   |              |\\n *                    |   +--|    wrapper1   |---|----+         |\\n *                    |   |  +---------------+   v    |         |\\n *                    |   |          +-------------+  |         |\\n *                    |   |     +----|   wrapper2  |--------+   |\\n *                    |   |     |    +-------------+  |     |   |\\n *                    |   |     |                     |     |   |\\n *                    |   v     v                     v     v   | wrapper\\n *                    | +---+ +---+   +---------+   +---+ +---+ | invariants\\n * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained\\n * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->\\n *                    | |   | |   |   |         |   |   | |   | |\\n *                    | |   | |   |   |         |   |   | |   | |\\n *                    | |   | |   |   |         |   |   | |   | |\\n *                    | +---+ +---+   +---------+   +---+ +---+ |\\n *                    |  initialize                    close    |\\n *                    +-----------------------------------------+\\n * </pre>\\n *\\n * Use cases:\\n * - Preserving the input selection ranges before/after reconciliation.\\n *   Restoring selection even in the event of an unexpected error.\\n * - Deactivating events while rearranging the DOM, preventing blurs/focuses,\\n *   while guaranteeing that afterwards, the event system is reactivated.\\n * - Flushing a queue of collected DOM mutations to the main UI thread after a\\n *   reconciliation takes place in a worker thread.\\n * - Invoking any collected `componentDidUpdate` callbacks after rendering new\\n *   content.\\n * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue\\n *   to preserve the `scrollTop` (an automatic scroll aware DOM).\\n * - (Future use case): Layout calculations before and after DOM updates.\\n *\\n * Transactional plugin API:\\n * - A module that has an `initialize` method that returns any precomputation.\\n * - and a `close` method that accepts the precomputation. `close` is invoked\\n *   when the wrapped process is completed, or has failed.\\n *\\n * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules\\n * that implement `initialize` and `close`.\\n * @return {Transaction} Single transaction for reuse in thread.\\n *\\n * @class Transaction\\n */\\nvar Mixin = {\\n  /**\\n   * Sets up this instance so that it is prepared for collecting metrics. Does\\n   * so such that this setup method may be used on an instance that is already\\n   * initialized, in a way that does not consume additional memory upon reuse.\\n   * That can be useful if you decide to make your subclass of this mixin a\\n   * \\\"PooledClass\\\".\\n   */\\n  reinitializeTransaction: function () {\\n    this.transactionWrappers = this.getTransactionWrappers();\\n    if (this.wrapperInitData) {\\n      this.wrapperInitData.length = 0;\\n    } else {\\n      this.wrapperInitData = [];\\n    }\\n    this._isInTransaction = false;\\n  },\\n\\n  _isInTransaction: false,\\n\\n  /**\\n   * @abstract\\n   * @return {Array<TransactionWrapper>} Array of transaction wrappers.\\n   */\\n  getTransactionWrappers: null,\\n\\n  isInTransaction: function () {\\n    return !!this._isInTransaction;\\n  },\\n\\n  /**\\n   * Executes the function within a safety window. Use this for the top level\\n   * methods that result in large amounts of computation/mutations that would\\n   * need to be safety checked. The optional arguments helps prevent the need\\n   * to bind in many cases.\\n   *\\n   * @param {function} method Member of scope to call.\\n   * @param {Object} scope Scope to invoke from.\\n   * @param {Object?=} a Argument to pass to the method.\\n   * @param {Object?=} b Argument to pass to the method.\\n   * @param {Object?=} c Argument to pass to the method.\\n   * @param {Object?=} d Argument to pass to the method.\\n   * @param {Object?=} e Argument to pass to the method.\\n   * @param {Object?=} f Argument to pass to the method.\\n   *\\n   * @return {*} Return value from `method`.\\n   */\\n  perform: function (method, scope, a, b, c, d, e, f) {\\n    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there ' + 'is already an outstanding transaction.') : invariant(false) : undefined;\\n    var errorThrown;\\n    var ret;\\n    try {\\n      this._isInTransaction = true;\\n      // Catching errors makes debugging more difficult, so we start with\\n      // errorThrown set to true before setting it to false after calling\\n      // close -- if it's still set to true in the finally block, it means\\n      // one of these calls threw.\\n      errorThrown = true;\\n      this.initializeAll(0);\\n      ret = method.call(scope, a, b, c, d, e, f);\\n      errorThrown = false;\\n    } finally {\\n      try {\\n        if (errorThrown) {\\n          // If `method` throws, prefer to show that stack trace over any thrown\\n          // by invoking `closeAll`.\\n          try {\\n            this.closeAll(0);\\n          } catch (err) {}\\n        } else {\\n          // Since `method` didn't throw, we don't want to silence the exception\\n          // here.\\n          this.closeAll(0);\\n        }\\n      } finally {\\n        this._isInTransaction = false;\\n      }\\n    }\\n    return ret;\\n  },\\n\\n  initializeAll: function (startIndex) {\\n    var transactionWrappers = this.transactionWrappers;\\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\\n      var wrapper = transactionWrappers[i];\\n      try {\\n        // Catching errors makes debugging more difficult, so we start with the\\n        // OBSERVED_ERROR state before overwriting it with the real return value\\n        // of initialize -- if it's still set to OBSERVED_ERROR in the finally\\n        // block, it means wrapper.initialize threw.\\n        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;\\n        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;\\n      } finally {\\n        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {\\n          // The initializer for wrapper i threw an error; initialize the\\n          // remaining wrappers but silence any exceptions from them to ensure\\n          // that the first error is the one to bubble up.\\n          try {\\n            this.initializeAll(i + 1);\\n          } catch (err) {}\\n        }\\n      }\\n    }\\n  },\\n\\n  /**\\n   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into\\n   * them the respective return values of `this.transactionWrappers.init[i]`\\n   * (`close`rs that correspond to initializers that failed will not be\\n   * invoked).\\n   */\\n  closeAll: function (startIndex) {\\n    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : invariant(false) : undefined;\\n    var transactionWrappers = this.transactionWrappers;\\n    for (var i = startIndex; i < transactionWrappers.length; i++) {\\n      var wrapper = transactionWrappers[i];\\n      var initData = this.wrapperInitData[i];\\n      var errorThrown;\\n      try {\\n        // Catching errors makes debugging more difficult, so we start with\\n        // errorThrown set to true before setting it to false after calling\\n        // close -- if it's still set to true in the finally block, it means\\n        // wrapper.close threw.\\n        errorThrown = true;\\n        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {\\n          wrapper.close.call(this, initData);\\n        }\\n        errorThrown = false;\\n      } finally {\\n        if (errorThrown) {\\n          // The closer for wrapper i threw an error; close the remaining\\n          // wrappers but silence any exceptions from them to ensure that the\\n          // first error is the one to bubble up.\\n          try {\\n            this.closeAll(i + 1);\\n          } catch (e) {}\\n        }\\n      }\\n    }\\n    this.wrapperInitData.length = 0;\\n  }\\n};\\n\\nvar Transaction = {\\n\\n  Mixin: Mixin,\\n\\n  /**\\n   * Token to look for to determine if an error occurred.\\n   */\\n  OBSERVED_ERROR: {}\\n\\n};\\n\\nmodule.exports = Transaction;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ViewportMetrics\\n */\\n\\n'use strict';\\n\\nvar ViewportMetrics = {\\n\\n  currentScrollLeft: 0,\\n\\n  currentScrollTop: 0,\\n\\n  refreshScrollValues: function (scrollPosition) {\\n    ViewportMetrics.currentScrollLeft = scrollPosition.x;\\n    ViewportMetrics.currentScrollTop = scrollPosition.y;\\n  }\\n\\n};\\n\\nmodule.exports = ViewportMetrics;\",\n    \"/**\\n * Copyright 2014-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule accumulateInto\\n */\\n\\n'use strict';\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\n/**\\n *\\n * Accumulates items that must not be null or undefined into the first one. This\\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\\n * API cleanness. Since `current` can be null before being passed in and not\\n * null after this function, make sure to assign it back to `current`:\\n *\\n * `a = accumulateInto(a, b);`\\n *\\n * This API should be sparingly used. Try `accumulate` for something cleaner.\\n *\\n * @return {*|array<*>} An accumulation of items.\\n */\\n\\nfunction accumulateInto(current, next) {\\n  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : invariant(false) : undefined;\\n  if (current == null) {\\n    return next;\\n  }\\n\\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\\n  // certain that x is an Array (x could be a string with concat method).\\n  var currentIsArray = Array.isArray(current);\\n  var nextIsArray = Array.isArray(next);\\n\\n  if (currentIsArray && nextIsArray) {\\n    current.push.apply(current, next);\\n    return current;\\n  }\\n\\n  if (currentIsArray) {\\n    current.push(next);\\n    return current;\\n  }\\n\\n  if (nextIsArray) {\\n    // A bit too dangerous to mutate `next`.\\n    return [current].concat(next);\\n  }\\n\\n  return [current, next];\\n}\\n\\nmodule.exports = accumulateInto;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule accumulate\\n */\\n\\n'use strict';\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\n/**\\n * Accumulates items that must not be null or undefined.\\n *\\n * This is used to conserve memory by avoiding array allocations.\\n *\\n * @return {*|array<*>} An accumulation of items.\\n */\\nfunction accumulate(current, next) {\\n  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulate(...): Accumulated items must be not be null or undefined.') : invariant(false) : undefined;\\n  if (current == null) {\\n    return next;\\n  } else {\\n    // Both are not empty. Warning: Never call x.concat(y) when you are not\\n    // certain that x is an Array (x could be a string with concat method).\\n    var currentIsArray = Array.isArray(current);\\n    var nextIsArray = Array.isArray(next);\\n    if (currentIsArray) {\\n      return current.concat(next);\\n    } else {\\n      if (nextIsArray) {\\n        return [current].concat(next);\\n      } else {\\n        return [current, next];\\n      }\\n    }\\n  }\\n}\\n\\nmodule.exports = accumulate;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule adler32\\n */\\n\\n'use strict';\\n\\nvar MOD = 65521;\\n\\n// adler32 is not cryptographically strong, and is only used to sanity check that\\n// markup generated on the server matches the markup generated on the client.\\n// This implementation (a modified version of the SheetJS version) has been optimized\\n// for our use case, at the expense of conforming to the adler32 specification\\n// for non-ascii inputs.\\nfunction adler32(data) {\\n  var a = 1;\\n  var b = 0;\\n  var i = 0;\\n  var l = data.length;\\n  var m = l & ~0x3;\\n  while (i < m) {\\n    for (; i < Math.min(i + 4096, m); i += 4) {\\n      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));\\n    }\\n    a %= MOD;\\n    b %= MOD;\\n  }\\n  for (; i < l; i++) {\\n    b += a += data.charCodeAt(i);\\n  }\\n  a %= MOD;\\n  b %= MOD;\\n  return a | b << 16;\\n}\\n\\nmodule.exports = adler32;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @typechecks static-only\\n * @providesModule cloneWithProps\\n */\\n\\n'use strict';\\n\\nvar ReactElement = require('./ReactElement');\\nvar ReactPropTransferer = require('./ReactPropTransferer');\\n\\nvar keyOf = require('fbjs/lib/keyOf');\\nvar warning = require('fbjs/lib/warning');\\n\\nvar CHILDREN_PROP = keyOf({ children: null });\\n\\nvar didDeprecatedWarn = false;\\n\\n/**\\n * Sometimes you want to change the props of a child passed to you. Usually\\n * this is to add a CSS class.\\n *\\n * @param {ReactElement} child child element you'd like to clone\\n * @param {object} props props you'd like to modify. className and style will be\\n * merged automatically.\\n * @return {ReactElement} a clone of child with props merged in.\\n * @deprecated\\n */\\nfunction cloneWithProps(child, props) {\\n  if (process.env.NODE_ENV !== 'production') {\\n    process.env.NODE_ENV !== 'production' ? warning(didDeprecatedWarn, 'cloneWithProps(...) is deprecated. ' + 'Please use React.cloneElement instead.') : undefined;\\n    didDeprecatedWarn = true;\\n    process.env.NODE_ENV !== 'production' ? warning(!child.ref, 'You are calling cloneWithProps() on a child with a ref. This is ' + 'dangerous because you\\\\'re creating a new child which will not be ' + 'added as a ref to its parent.') : undefined;\\n  }\\n\\n  var newProps = ReactPropTransferer.mergeProps(props, child.props);\\n\\n  // Use `child.props.children` if it is provided.\\n  if (!newProps.hasOwnProperty(CHILDREN_PROP) && child.props.hasOwnProperty(CHILDREN_PROP)) {\\n    newProps.children = child.props.children;\\n  }\\n\\n  // The current API doesn't retain _owner, which is why this\\n  // doesn't use ReactElement.cloneAndReplaceProps.\\n  return ReactElement.createElement(child.type, newProps);\\n}\\n\\nmodule.exports = cloneWithProps;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule createHierarchyRenderer\\n */\\n\\n'use strict';\\n\\nvar React = require('./React');\\n\\n/**\\n * Creates a render method that makes it easier to create, render, and inspect a\\n * hierarchy of mock React component classes.\\n *\\n * A component class is created for each of the supplied render methods. Each\\n * render method is invoked with the classes created using the render methods\\n * that come after it in the supplied list of render methods.\\n *\\n *   var renderHierarchy = createHierarchyRenderer(\\n *     function ComponentA(ComponentB, ComponentC) {...},\\n *     function ComponentB(ComponentC) {...},\\n *     function ComponentC() {...}\\n *   );\\n *\\n * When the hierarchy is invoked, a two-dimensional array is returned. Each\\n * array corresponds to a supplied render method and contains the instances\\n * returned by that render method in the order it was invoked.\\n *\\n *   var instances = renderHierarchy(\\n *     function(ComponentA[, ComponentB, ComponentC]) {\\n *       ReactDOM.render(<ComponentA />, ...);\\n *     })\\n *   );\\n *   instances[0][0]; // First return value of first render method.\\n *   instances[1][0]; // First return value of second render method.\\n *   instances[1][1]; // Second return value of second render method.\\n *\\n * Refs should be used to reference components that are not the return value of\\n * render methods.\\n *\\n *   expect(instances[0][0].refs.X).toBe(...);\\n *\\n * NOTE: The component classes created for each render method are re-used for\\n * each invocation of the hierarchy renderer. If new classes are needed, you\\n * should re-execute `createHierarchyRenderer` with the same arguments.\\n *\\n * @param {array<function>} ...renderMethods\\n * @return {function}\\n */\\nfunction createHierarchyRenderer() {\\n  for (var _len = arguments.length, renderMethods = Array(_len), _key = 0; _key < _len; _key++) {\\n    renderMethods[_key] = arguments[_key];\\n  }\\n\\n  var instances;\\n  var Components = renderMethods.reduceRight(function (ComponentsAccumulator, renderMethod, depth) {\\n    var Component = React.createClass({\\n      displayName: renderMethod.name,\\n      render: function () {\\n        instances[depth].push(this);\\n        return renderMethod.apply(this, ComponentsAccumulator);\\n      }\\n    });\\n    return [Component].concat(ComponentsAccumulator);\\n  }, []);\\n  /**\\n   * @param {function} renderComponent\\n   * @return {array<array<*>>}\\n   */\\n  function renderHierarchy(renderComponent) {\\n    instances = renderMethods.map(function () {\\n      return [];\\n    });\\n    renderComponent.apply(null, Components);\\n    return instances;\\n  }\\n  return renderHierarchy;\\n}\\n\\nmodule.exports = createHierarchyRenderer;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule dangerousStyleValue\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar CSSProperty = require('./CSSProperty');\\n\\nvar isUnitlessNumber = CSSProperty.isUnitlessNumber;\\n\\n/**\\n * Convert a value into the proper css writable value. The style name `name`\\n * should be logical (no hyphens), as specified\\n * in `CSSProperty.isUnitlessNumber`.\\n *\\n * @param {string} name CSS property name such as `topMargin`.\\n * @param {*} value CSS property value such as `10px`.\\n * @return {string} Normalized style value with dimensions applied.\\n */\\nfunction dangerousStyleValue(name, value) {\\n  // Note that we've removed escapeTextForBrowser() calls here since the\\n  // whole string will be escaped when the attribute is injected into\\n  // the markup. If you provide unsafe user data here they can inject\\n  // arbitrary CSS which may be problematic (I couldn't repro this):\\n  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet\\n  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/\\n  // This is not an XSS hole but instead a potential CSS injection issue\\n  // which has lead to a greater discussion about how we're going to\\n  // trust URLs moving forward. See #2115901\\n\\n  var isEmpty = value == null || typeof value === 'boolean' || value === '';\\n  if (isEmpty) {\\n    return '';\\n  }\\n\\n  var isNonNumeric = isNaN(value);\\n  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {\\n    return '' + value; // cast to string\\n  }\\n\\n  if (typeof value === 'string') {\\n    value = value.trim();\\n  }\\n  return value + 'px';\\n}\\n\\nmodule.exports = dangerousStyleValue;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule deprecated\\n */\\n\\n'use strict';\\n\\nvar assign = require('./Object.assign');\\nvar warning = require('fbjs/lib/warning');\\n\\n/**\\n * This will log a single deprecation notice per function and forward the call\\n * on to the new API.\\n *\\n * @param {string} fnName The name of the function\\n * @param {string} newModule The module that fn will exist in\\n * @param {string} newPackage The module that fn will exist in\\n * @param {*} ctx The context this forwarded call should run in\\n * @param {function} fn The function to forward on to\\n * @return {function} The function that will warn once and then call fn\\n */\\nfunction deprecated(fnName, newModule, newPackage, ctx, fn) {\\n  var warned = false;\\n  if (process.env.NODE_ENV !== 'production') {\\n    var newFn = function () {\\n      process.env.NODE_ENV !== 'production' ? warning(warned,\\n      // Require examples in this string must be split to prevent React's\\n      // build tools from mistaking them for real requires.\\n      // Otherwise the build tools will attempt to build a '%s' module.\\n      'React.%s is deprecated. Please use %s.%s from require' + '(\\\\'%s\\\\') ' + 'instead.', fnName, newModule, fnName, newPackage) : undefined;\\n      warned = true;\\n      return fn.apply(ctx, arguments);\\n    };\\n    // We need to make sure all properties of the original fn are copied over.\\n    // In particular, this is needed to support PropTypes\\n    return assign(newFn, fn);\\n  }\\n\\n  return fn;\\n}\\n\\nmodule.exports = deprecated;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule escapeTextContentForBrowser\\n */\\n\\n'use strict';\\n\\nvar ESCAPE_LOOKUP = {\\n  '&': '&amp;',\\n  '>': '&gt;',\\n  '<': '&lt;',\\n  '\\\"': '&quot;',\\n  '\\\\'': '&#x27;'\\n};\\n\\nvar ESCAPE_REGEX = /[&><\\\"']/g;\\n\\nfunction escaper(match) {\\n  return ESCAPE_LOOKUP[match];\\n}\\n\\n/**\\n * Escapes text to prevent scripting attacks.\\n *\\n * @param {*} text Text value to escape.\\n * @return {string} An escaped string.\\n */\\nfunction escapeTextContentForBrowser(text) {\\n  return ('' + text).replace(ESCAPE_REGEX, escaper);\\n}\\n\\nmodule.exports = escapeTextContentForBrowser;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule findDOMNode\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\\nvar ReactInstanceMap = require('./ReactInstanceMap');\\nvar ReactMount = require('./ReactMount');\\n\\nvar invariant = require('fbjs/lib/invariant');\\nvar warning = require('fbjs/lib/warning');\\n\\n/**\\n * Returns the DOM node rendered by this element.\\n *\\n * @param {ReactComponent|DOMElement} componentOrElement\\n * @return {?DOMElement} The root node of this element.\\n */\\nfunction findDOMNode(componentOrElement) {\\n  if (process.env.NODE_ENV !== 'production') {\\n    var owner = ReactCurrentOwner.current;\\n    if (owner !== null) {\\n      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing getDOMNode or findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : undefined;\\n      owner._warnedAboutRefsInRender = true;\\n    }\\n  }\\n  if (componentOrElement == null) {\\n    return null;\\n  }\\n  if (componentOrElement.nodeType === 1) {\\n    return componentOrElement;\\n  }\\n  if (ReactInstanceMap.has(componentOrElement)) {\\n    return ReactMount.getNodeFromInstance(componentOrElement);\\n  }\\n  !(componentOrElement.render == null || typeof componentOrElement.render !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : invariant(false) : undefined;\\n  !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : invariant(false) : undefined;\\n}\\n\\nmodule.exports = findDOMNode;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule flattenChildren\\n */\\n\\n'use strict';\\n\\nvar traverseAllChildren = require('./traverseAllChildren');\\nvar warning = require('fbjs/lib/warning');\\n\\n/**\\n * @param {function} traverseContext Context passed through traversal.\\n * @param {?ReactComponent} child React child component.\\n * @param {!string} name String name of key path to child.\\n */\\nfunction flattenSingleChildIntoContext(traverseContext, child, name) {\\n  // We found a component instance.\\n  var result = traverseContext;\\n  var keyUnique = result[name] === undefined;\\n  if (process.env.NODE_ENV !== 'production') {\\n    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.', name) : undefined;\\n  }\\n  if (keyUnique && child != null) {\\n    result[name] = child;\\n  }\\n}\\n\\n/**\\n * Flattens children that are typically specified as `props.children`. Any null\\n * children will not be included in the resulting object.\\n * @return {!object} flattened children keyed by name.\\n */\\nfunction flattenChildren(children) {\\n  if (children == null) {\\n    return children;\\n  }\\n  var result = {};\\n  traverseAllChildren(children, flattenSingleChildIntoContext, result);\\n  return result;\\n}\\n\\nmodule.exports = flattenChildren;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule forEachAccumulated\\n */\\n\\n'use strict';\\n\\n/**\\n * @param {array} arr an \\\"accumulation\\\" of items which is either an Array or\\n * a single item. Useful when paired with the `accumulate` module. This is a\\n * simple utility that allows us to reason about a collection of items, but\\n * handling the case when there is exactly one item (and we do not need to\\n * allocate an array).\\n */\\nvar forEachAccumulated = function (arr, cb, scope) {\\n  if (Array.isArray(arr)) {\\n    arr.forEach(cb, scope);\\n  } else if (arr) {\\n    cb.call(scope, arr);\\n  }\\n};\\n\\nmodule.exports = forEachAccumulated;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getEventCharCode\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\n/**\\n * `charCode` represents the actual \\\"character code\\\" and is safe to use with\\n * `String.fromCharCode`. As such, only keys that correspond to printable\\n * characters produce a valid `charCode`, the only exception to this is Enter.\\n * The Tab-key is considered non-printable and does not have a `charCode`,\\n * presumably because it does not produce a tab-character in browsers.\\n *\\n * @param {object} nativeEvent Native browser event.\\n * @return {number} Normalized `charCode` property.\\n */\\nfunction getEventCharCode(nativeEvent) {\\n  var charCode;\\n  var keyCode = nativeEvent.keyCode;\\n\\n  if ('charCode' in nativeEvent) {\\n    charCode = nativeEvent.charCode;\\n\\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\\n    if (charCode === 0 && keyCode === 13) {\\n      charCode = 13;\\n    }\\n  } else {\\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\\n    charCode = keyCode;\\n  }\\n\\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\\n  // Must not discard the (non-)printable Enter-key.\\n  if (charCode >= 32 || charCode === 13) {\\n    return charCode;\\n  }\\n\\n  return 0;\\n}\\n\\nmodule.exports = getEventCharCode;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getEventKey\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar getEventCharCode = require('./getEventCharCode');\\n\\n/**\\n * Normalization of deprecated HTML5 `key` values\\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\\n */\\nvar normalizeKey = {\\n  'Esc': 'Escape',\\n  'Spacebar': ' ',\\n  'Left': 'ArrowLeft',\\n  'Up': 'ArrowUp',\\n  'Right': 'ArrowRight',\\n  'Down': 'ArrowDown',\\n  'Del': 'Delete',\\n  'Win': 'OS',\\n  'Menu': 'ContextMenu',\\n  'Apps': 'ContextMenu',\\n  'Scroll': 'ScrollLock',\\n  'MozPrintableKey': 'Unidentified'\\n};\\n\\n/**\\n * Translation from legacy `keyCode` to HTML5 `key`\\n * Only special keys supported, all others depend on keyboard layout or browser\\n * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names\\n */\\nvar translateToKey = {\\n  8: 'Backspace',\\n  9: 'Tab',\\n  12: 'Clear',\\n  13: 'Enter',\\n  16: 'Shift',\\n  17: 'Control',\\n  18: 'Alt',\\n  19: 'Pause',\\n  20: 'CapsLock',\\n  27: 'Escape',\\n  32: ' ',\\n  33: 'PageUp',\\n  34: 'PageDown',\\n  35: 'End',\\n  36: 'Home',\\n  37: 'ArrowLeft',\\n  38: 'ArrowUp',\\n  39: 'ArrowRight',\\n  40: 'ArrowDown',\\n  45: 'Insert',\\n  46: 'Delete',\\n  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',\\n  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',\\n  144: 'NumLock',\\n  145: 'ScrollLock',\\n  224: 'Meta'\\n};\\n\\n/**\\n * @param {object} nativeEvent Native browser event.\\n * @return {string} Normalized `key` property.\\n */\\nfunction getEventKey(nativeEvent) {\\n  if (nativeEvent.key) {\\n    // Normalize inconsistent values reported by browsers due to\\n    // implementations of a working draft specification.\\n\\n    // FireFox implements `key` but returns `MozPrintableKey` for all\\n    // printable characters (normalized to `Unidentified`), ignore it.\\n    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;\\n    if (key !== 'Unidentified') {\\n      return key;\\n    }\\n  }\\n\\n  // Browser does not implement `key`, polyfill as much of it as we can.\\n  if (nativeEvent.type === 'keypress') {\\n    var charCode = getEventCharCode(nativeEvent);\\n\\n    // The enter-key is technically both printable and non-printable and can\\n    // thus be captured by `keypress`, no other non-printable key should.\\n    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);\\n  }\\n  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {\\n    // While user keyboard layout determines the actual meaning of each\\n    // `keyCode` value, almost all function keys have a universal value.\\n    return translateToKey[nativeEvent.keyCode] || 'Unidentified';\\n  }\\n  return '';\\n}\\n\\nmodule.exports = getEventKey;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getEventModifierState\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\n/**\\n * Translation from modifier key to the associated property in the event.\\n * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers\\n */\\n\\nvar modifierKeyToProp = {\\n  'Alt': 'altKey',\\n  'Control': 'ctrlKey',\\n  'Meta': 'metaKey',\\n  'Shift': 'shiftKey'\\n};\\n\\n// IE8 does not implement getModifierState so we simply map it to the only\\n// modifier keys exposed by the event itself, does not support Lock-keys.\\n// Currently, all major browsers except Chrome seems to support Lock-keys.\\nfunction modifierStateGetter(keyArg) {\\n  var syntheticEvent = this;\\n  var nativeEvent = syntheticEvent.nativeEvent;\\n  if (nativeEvent.getModifierState) {\\n    return nativeEvent.getModifierState(keyArg);\\n  }\\n  var keyProp = modifierKeyToProp[keyArg];\\n  return keyProp ? !!nativeEvent[keyProp] : false;\\n}\\n\\nfunction getEventModifierState(nativeEvent) {\\n  return modifierStateGetter;\\n}\\n\\nmodule.exports = getEventModifierState;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getEventTarget\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\n/**\\n * Gets the target node from a native browser event by accounting for\\n * inconsistencies in browser DOM APIs.\\n *\\n * @param {object} nativeEvent Native browser event.\\n * @return {DOMEventTarget} Target node.\\n */\\nfunction getEventTarget(nativeEvent) {\\n  var target = nativeEvent.target || nativeEvent.srcElement || window;\\n  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).\\n  // @see http://www.quirksmode.org/js/events_properties.html\\n  return target.nodeType === 3 ? target.parentNode : target;\\n}\\n\\nmodule.exports = getEventTarget;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getIteratorFn\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\n/* global Symbol */\\nvar ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\\nvar FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\\n\\n/**\\n * Returns the iterator method function contained on the iterable object.\\n *\\n * Be sure to invoke the function with the iterable as context:\\n *\\n *     var iteratorFn = getIteratorFn(myIterable);\\n *     if (iteratorFn) {\\n *       var iterator = iteratorFn.call(myIterable);\\n *       ...\\n *     }\\n *\\n * @param {?object} maybeIterable\\n * @return {?function}\\n */\\nfunction getIteratorFn(maybeIterable) {\\n  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\\n  if (typeof iteratorFn === 'function') {\\n    return iteratorFn;\\n  }\\n}\\n\\nmodule.exports = getIteratorFn;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getNodeForCharacterOffset\\n */\\n\\n'use strict';\\n\\n/**\\n * Given any node return the first leaf node without children.\\n *\\n * @param {DOMElement|DOMTextNode} node\\n * @return {DOMElement|DOMTextNode}\\n */\\nfunction getLeafNode(node) {\\n  while (node && node.firstChild) {\\n    node = node.firstChild;\\n  }\\n  return node;\\n}\\n\\n/**\\n * Get the next sibling within a container. This will walk up the\\n * DOM if a node's siblings have been exhausted.\\n *\\n * @param {DOMElement|DOMTextNode} node\\n * @return {?DOMElement|DOMTextNode}\\n */\\nfunction getSiblingNode(node) {\\n  while (node) {\\n    if (node.nextSibling) {\\n      return node.nextSibling;\\n    }\\n    node = node.parentNode;\\n  }\\n}\\n\\n/**\\n * Get object describing the nodes which contain characters at offset.\\n *\\n * @param {DOMElement|DOMTextNode} root\\n * @param {number} offset\\n * @return {?object}\\n */\\nfunction getNodeForCharacterOffset(root, offset) {\\n  var node = getLeafNode(root);\\n  var nodeStart = 0;\\n  var nodeEnd = 0;\\n\\n  while (node) {\\n    if (node.nodeType === 3) {\\n      nodeEnd = nodeStart + node.textContent.length;\\n\\n      if (nodeStart <= offset && nodeEnd >= offset) {\\n        return {\\n          node: node,\\n          offset: offset - nodeStart\\n        };\\n      }\\n\\n      nodeStart = nodeEnd;\\n    }\\n\\n    node = getLeafNode(getSiblingNode(node));\\n  }\\n}\\n\\nmodule.exports = getNodeForCharacterOffset;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getTestDocument\\n */\\n\\n'use strict';\\n\\nfunction getTestDocument(markup) {\\n  document.open();\\n  document.write(markup || '<!doctype html><html><meta charset=utf-8><title>test doc</title>');\\n  document.close();\\n  return document;\\n}\\n\\nmodule.exports = getTestDocument;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getTextContentAccessor\\n */\\n\\n'use strict';\\n\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\n\\nvar contentKey = null;\\n\\n/**\\n * Gets the key used to access text content on a DOM node.\\n *\\n * @return {?string} Key used to access text content.\\n * @internal\\n */\\nfunction getTextContentAccessor() {\\n  if (!contentKey && ExecutionEnvironment.canUseDOM) {\\n    // Prefer textContent to innerText because many browsers support both but\\n    // SVG <text> elements don't support innerText even when <div> does.\\n    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';\\n  }\\n  return contentKey;\\n}\\n\\nmodule.exports = getTextContentAccessor;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule instantiateReactComponent\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\nvar ReactCompositeComponent = require('./ReactCompositeComponent');\\nvar ReactEmptyComponent = require('./ReactEmptyComponent');\\nvar ReactNativeComponent = require('./ReactNativeComponent');\\n\\nvar assign = require('./Object.assign');\\nvar invariant = require('fbjs/lib/invariant');\\nvar warning = require('fbjs/lib/warning');\\n\\n// To avoid a cyclic dependency, we create the final class in this module\\nvar ReactCompositeComponentWrapper = function () {};\\nassign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {\\n  _instantiateReactComponent: instantiateReactComponent\\n});\\n\\nfunction getDeclarationErrorAddendum(owner) {\\n  if (owner) {\\n    var name = owner.getName();\\n    if (name) {\\n      return ' Check the render method of `' + name + '`.';\\n    }\\n  }\\n  return '';\\n}\\n\\n/**\\n * Check if the type reference is a known internal type. I.e. not a user\\n * provided composite type.\\n *\\n * @param {function} type\\n * @return {boolean} Returns true if this is a valid internal type.\\n */\\nfunction isInternalComponentType(type) {\\n  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';\\n}\\n\\n/**\\n * Given a ReactNode, create an instance that will actually be mounted.\\n *\\n * @param {ReactNode} node\\n * @return {object} A new instance of the element's constructor.\\n * @protected\\n */\\nfunction instantiateReactComponent(node) {\\n  var instance;\\n\\n  if (node === null || node === false) {\\n    instance = new ReactEmptyComponent(instantiateReactComponent);\\n  } else if (typeof node === 'object') {\\n    var element = node;\\n    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) ' + 'or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : invariant(false) : undefined;\\n\\n    // Special case string values\\n    if (typeof element.type === 'string') {\\n      instance = ReactNativeComponent.createInternalComponent(element);\\n    } else if (isInternalComponentType(element.type)) {\\n      // This is temporarily available for custom components that are not string\\n      // representations. I.e. ART. Once those are updated to use the string\\n      // representation, we can drop this code path.\\n      instance = new element.type(element);\\n    } else {\\n      instance = new ReactCompositeComponentWrapper();\\n    }\\n  } else if (typeof node === 'string' || typeof node === 'number') {\\n    instance = ReactNativeComponent.createInstanceForText(node);\\n  } else {\\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : invariant(false) : undefined;\\n  }\\n\\n  if (process.env.NODE_ENV !== 'production') {\\n    process.env.NODE_ENV !== 'production' ? warning(typeof instance.construct === 'function' && typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : undefined;\\n  }\\n\\n  // Sets up the instance. This can probably just move into the constructor now.\\n  instance.construct(node);\\n\\n  // These two fields are used by the DOM and ART diffing algorithms\\n  // respectively. Instead of using expandos on components, we should be\\n  // storing the state needed by the diffing algorithms elsewhere.\\n  instance._mountIndex = 0;\\n  instance._mountImage = null;\\n\\n  if (process.env.NODE_ENV !== 'production') {\\n    instance._isOwnerNecessary = false;\\n    instance._warnedAboutRefsInRender = false;\\n  }\\n\\n  // Internal instances should fully constructed at this point, so they should\\n  // not get any new fields added to them at this point.\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (Object.preventExtensions) {\\n      Object.preventExtensions(instance);\\n    }\\n  }\\n\\n  return instance;\\n}\\n\\nmodule.exports = instantiateReactComponent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule isEventSupported\\n */\\n\\n'use strict';\\n\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\n\\nvar useHasFeature;\\nif (ExecutionEnvironment.canUseDOM) {\\n  useHasFeature = document.implementation && document.implementation.hasFeature &&\\n  // always returns true in newer browsers as per the standard.\\n  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\\n  document.implementation.hasFeature('', '') !== true;\\n}\\n\\n/**\\n * Checks if an event is supported in the current execution environment.\\n *\\n * NOTE: This will not work correctly for non-generic events such as `change`,\\n * `reset`, `load`, `error`, and `select`.\\n *\\n * Borrows from Modernizr.\\n *\\n * @param {string} eventNameSuffix Event name, e.g. \\\"click\\\".\\n * @param {?boolean} capture Check if the capture phase is supported.\\n * @return {boolean} True if the event is supported.\\n * @internal\\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\\n */\\nfunction isEventSupported(eventNameSuffix, capture) {\\n  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\\n    return false;\\n  }\\n\\n  var eventName = 'on' + eventNameSuffix;\\n  var isSupported = (eventName in document);\\n\\n  if (!isSupported) {\\n    var element = document.createElement('div');\\n    element.setAttribute(eventName, 'return;');\\n    isSupported = typeof element[eventName] === 'function';\\n  }\\n\\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\\n    // This is the only way to test support for the `wheel` event in IE9+.\\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\\n  }\\n\\n  return isSupported;\\n}\\n\\nmodule.exports = isEventSupported;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule isTextInputElement\\n */\\n\\n'use strict';\\n\\n/**\\n * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\\n */\\nvar supportedInputTypes = {\\n  'color': true,\\n  'date': true,\\n  'datetime': true,\\n  'datetime-local': true,\\n  'email': true,\\n  'month': true,\\n  'number': true,\\n  'password': true,\\n  'range': true,\\n  'search': true,\\n  'tel': true,\\n  'text': true,\\n  'time': true,\\n  'url': true,\\n  'week': true\\n};\\n\\nfunction isTextInputElement(elem) {\\n  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();\\n  return nodeName && (nodeName === 'input' && supportedInputTypes[elem.type] || nodeName === 'textarea');\\n}\\n\\nmodule.exports = isTextInputElement;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule onlyChild\\n */\\n'use strict';\\n\\nvar ReactElement = require('./ReactElement');\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\n/**\\n * Returns the first child in a collection of children and verifies that there\\n * is only one child in the collection. The current implementation of this\\n * function assumes that a single child gets passed without a wrapper, but the\\n * purpose of this helper function is to abstract away the particular structure\\n * of children.\\n *\\n * @param {?object} children Child collection structure.\\n * @return {ReactComponent} The first and only `ReactComponent` contained in the\\n * structure.\\n */\\nfunction onlyChild(children) {\\n  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : invariant(false) : undefined;\\n  return children;\\n}\\n\\nmodule.exports = onlyChild;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule quoteAttributeValueForBrowser\\n */\\n\\n'use strict';\\n\\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\\n\\n/**\\n * Escapes attribute value to prevent scripting attacks.\\n *\\n * @param {*} value Value to escape.\\n * @return {string} An escaped string.\\n */\\nfunction quoteAttributeValueForBrowser(value) {\\n  return '\\\"' + escapeTextContentForBrowser(value) + '\\\"';\\n}\\n\\nmodule.exports = quoteAttributeValueForBrowser;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule reactComponentExpect\\n * @nolint\\n */\\n\\n'use strict';\\n\\nvar ReactInstanceMap = require('./ReactInstanceMap');\\nvar ReactTestUtils = require('./ReactTestUtils');\\n\\nvar assign = require('./Object.assign');\\nvar invariant = require('fbjs/lib/invariant');\\n\\nfunction reactComponentExpect(instance) {\\n  if (instance instanceof reactComponentExpectInternal) {\\n    return instance;\\n  }\\n\\n  if (!(this instanceof reactComponentExpect)) {\\n    return new reactComponentExpect(instance);\\n  }\\n\\n  expect(instance).not.toBeNull();\\n  expect(instance).not.toBeUndefined();\\n\\n  !ReactTestUtils.isCompositeComponent(instance) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'reactComponentExpect(...): instance must be a composite component') : invariant(false) : undefined;\\n  var internalInstance = ReactInstanceMap.get(instance);\\n\\n  expect(typeof internalInstance).toBe('object');\\n  expect(typeof internalInstance.constructor).toBe('function');\\n  expect(ReactTestUtils.isElement(internalInstance)).toBe(false);\\n\\n  return new reactComponentExpectInternal(internalInstance);\\n}\\n\\nfunction reactComponentExpectInternal(internalInstance) {\\n  this._instance = internalInstance;\\n}\\n\\nassign(reactComponentExpectInternal.prototype, {\\n  // Getters -------------------------------------------------------------------\\n\\n  /**\\n   * @instance: Retrieves the backing instance.\\n   */\\n  instance: function () {\\n    return this._instance.getPublicInstance();\\n  },\\n\\n  /**\\n   * There are two types of components in the world.\\n   * - A component created via React.createClass() - Has a single child\\n   *   subComponent - the return value from the .render() function. This\\n   *   function @subComponent expects that this._instance is component created\\n   *   with React.createClass().\\n   * - A primitive DOM component - which has many renderedChildren, each of\\n   *   which may have a name that is unique with respect to its siblings. This\\n   *   method will fail if this._instance is a primitive component.\\n   *\\n   * TL;DR: An instance may have a subComponent (this._renderedComponent) or\\n   * renderedChildren, but never both. Neither will actually show up until you\\n   * render the component (simply instantiating is not enough).\\n   */\\n  expectRenderedChild: function () {\\n    this.toBeCompositeComponent();\\n    var child = this._instance._renderedComponent;\\n    // TODO: Hide ReactEmptyComponent instances here?\\n    return new reactComponentExpectInternal(child);\\n  },\\n\\n  /**\\n   * The nth child of a DOMish component instance that is not falsy.\\n   */\\n  expectRenderedChildAt: function (childIndex) {\\n    // Currently only dom components have arrays of children, but that will\\n    // change soon.\\n    this.toBeDOMComponent();\\n    var renderedChildren = this._instance._renderedChildren || {};\\n    for (var name in renderedChildren) {\\n      if (!renderedChildren.hasOwnProperty(name)) {\\n        continue;\\n      }\\n      if (renderedChildren[name]) {\\n        if (renderedChildren[name]._mountIndex === childIndex) {\\n          return new reactComponentExpectInternal(renderedChildren[name]);\\n        }\\n      }\\n    }\\n    throw new Error('Child:' + childIndex + ' is not found');\\n  },\\n\\n  toBeDOMComponentWithChildCount: function (count) {\\n    this.toBeDOMComponent();\\n    var renderedChildren = this._instance._renderedChildren;\\n    expect(renderedChildren).toBeTruthy();\\n    expect(Object.keys(renderedChildren).length).toBe(count);\\n    return this;\\n  },\\n\\n  toBeDOMComponentWithNoChildren: function () {\\n    this.toBeDOMComponent();\\n    expect(this._instance._renderedChildren).toBeFalsy();\\n    return this;\\n  },\\n\\n  // Matchers ------------------------------------------------------------------\\n\\n  toBeComponentOfType: function (constructor) {\\n    expect(this._instance._currentElement.type === constructor).toBe(true);\\n    return this;\\n  },\\n\\n  /**\\n   * A component that is created with React.createClass. Just duck typing\\n   * here.\\n   */\\n  toBeCompositeComponent: function () {\\n    expect(typeof this.instance() === 'object' && typeof this.instance().render === 'function').toBe(true);\\n    return this;\\n  },\\n\\n  toBeCompositeComponentWithType: function (constructor) {\\n    this.toBeCompositeComponent();\\n    expect(this._instance._currentElement.type === constructor).toBe(true);\\n    return this;\\n  },\\n\\n  toBeTextComponentWithValue: function (val) {\\n    var elementType = typeof this._instance._currentElement;\\n    expect(elementType === 'string' || elementType === 'number').toBe(true);\\n    expect(this._instance._stringText).toBe(val);\\n    return this;\\n  },\\n\\n  toBeEmptyComponent: function () {\\n    var element = this._instance._currentElement;\\n    return element === null || element === false;\\n  },\\n\\n  toBePresent: function () {\\n    expect(this.instance()).toBeTruthy();\\n    return this;\\n  },\\n\\n  /**\\n   * A terminal type of component representing some virtual dom node. Just duck\\n   * typing here.\\n   */\\n  toBeDOMComponent: function () {\\n    expect(ReactTestUtils.isDOMComponent(this.instance())).toBe(true);\\n    return this;\\n  },\\n\\n  /**\\n   * @deprecated\\n   * @see toBeComponentOfType\\n   */\\n  toBeDOMComponentWithTag: function (tag) {\\n    this.toBeDOMComponent();\\n    expect(this.instance().tagName).toBe(tag.toUpperCase());\\n    return this;\\n  },\\n\\n  /**\\n   * Check that internal state values are equal to a state of expected values.\\n   */\\n  scalarStateEqual: function (stateNameToExpectedValue) {\\n    expect(this.instance()).toBeTruthy();\\n    for (var stateName in stateNameToExpectedValue) {\\n      if (!stateNameToExpectedValue.hasOwnProperty(stateName)) {\\n        continue;\\n      }\\n      expect(this.instance().state[stateName]).toEqual(stateNameToExpectedValue[stateName]);\\n    }\\n    return this;\\n  },\\n\\n  /**\\n   * Check a set of props are equal to a set of expected values - only works\\n   * with scalars.\\n   */\\n  scalarPropsEqual: function (propNameToExpectedValue) {\\n    expect(this.instance()).toBeTruthy();\\n    for (var propName in propNameToExpectedValue) {\\n      if (!propNameToExpectedValue.hasOwnProperty(propName)) {\\n        continue;\\n      }\\n      expect(this.instance().props[propName]).toEqual(propNameToExpectedValue[propName]);\\n    }\\n    return this;\\n  },\\n\\n  /**\\n   * Check a set of props are equal to a set of expected values - only works\\n   * with scalars.\\n   */\\n  scalarContextEqual: function (contextNameToExpectedValue) {\\n    expect(this.instance()).toBeTruthy();\\n    for (var contextName in contextNameToExpectedValue) {\\n      if (!contextNameToExpectedValue.hasOwnProperty(contextName)) {\\n        continue;\\n      }\\n      expect(this.instance().context[contextName]).toEqual(contextNameToExpectedValue[contextName]);\\n    }\\n    return this;\\n  }\\n});\\n\\nmodule.exports = reactComponentExpect;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n* @providesModule renderSubtreeIntoContainer\\n*/\\n\\n'use strict';\\n\\nvar ReactMount = require('./ReactMount');\\n\\nmodule.exports = ReactMount.renderSubtreeIntoContainer;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule setInnerHTML\\n */\\n\\n/* globals MSApp */\\n\\n'use strict';\\n\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\n\\nvar WHITESPACE_TEST = /^[ \\\\r\\\\n\\\\t\\\\f]/;\\nvar NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \\\\r\\\\n\\\\t\\\\f\\\\/>]/;\\n\\n/**\\n * Set the innerHTML property of a node, ensuring that whitespace is preserved\\n * even in IE8.\\n *\\n * @param {DOMElement} node\\n * @param {string} html\\n * @internal\\n */\\nvar setInnerHTML = function (node, html) {\\n  node.innerHTML = html;\\n};\\n\\n// Win8 apps: Allow all html to be inserted\\nif (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {\\n  setInnerHTML = function (node, html) {\\n    MSApp.execUnsafeLocalFunction(function () {\\n      node.innerHTML = html;\\n    });\\n  };\\n}\\n\\nif (ExecutionEnvironment.canUseDOM) {\\n  // IE8: When updating a just created node with innerHTML only leading\\n  // whitespace is removed. When updating an existing node with innerHTML\\n  // whitespace in root TextNodes is also collapsed.\\n  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html\\n\\n  // Feature detection; only IE8 is known to behave improperly like this.\\n  var testElement = document.createElement('div');\\n  testElement.innerHTML = ' ';\\n  if (testElement.innerHTML === '') {\\n    setInnerHTML = function (node, html) {\\n      // Magic theory: IE8 supposedly differentiates between added and updated\\n      // nodes when processing innerHTML, innerHTML on updated nodes suffers\\n      // from worse whitespace behavior. Re-adding a node like this triggers\\n      // the initial and more favorable whitespace behavior.\\n      // TODO: What to do on a detached node?\\n      if (node.parentNode) {\\n        node.parentNode.replaceChild(node, node);\\n      }\\n\\n      // We also implement a workaround for non-visible tags disappearing into\\n      // thin air on IE8, this only happens if there is no visible text\\n      // in-front of the non-visible tags. Piggyback on the whitespace fix\\n      // and simply check if any non-visible tags appear in the source.\\n      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {\\n        // Recover leading whitespace by temporarily prepending any character.\\n        // \\\\uFEFF has the potential advantage of being zero-width/invisible.\\n        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode\\n        // in hopes that this is preserved even if \\\"\\\\uFEFF\\\" is transformed to\\n        // the actual Unicode character (by Babel, for example).\\n        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216\\n        node.innerHTML = String.fromCharCode(0xFEFF) + html;\\n\\n        // deleteData leaves an empty `TextNode` which offsets the index of all\\n        // children. Definitely want to avoid this.\\n        var textNode = node.firstChild;\\n        if (textNode.data.length === 1) {\\n          node.removeChild(textNode);\\n        } else {\\n          textNode.deleteData(0, 1);\\n        }\\n      } else {\\n        node.innerHTML = html;\\n      }\\n    };\\n  }\\n}\\n\\nmodule.exports = setInnerHTML;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule setTextContent\\n */\\n\\n'use strict';\\n\\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\\nvar setInnerHTML = require('./setInnerHTML');\\n\\n/**\\n * Set the textContent property of a node, ensuring that whitespace is preserved\\n * even in IE8. innerText is a poor substitute for textContent and, among many\\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\\n * as it should.\\n *\\n * @param {DOMElement} node\\n * @param {string} text\\n * @internal\\n */\\nvar setTextContent = function (node, text) {\\n  node.textContent = text;\\n};\\n\\nif (ExecutionEnvironment.canUseDOM) {\\n  if (!('textContent' in document.documentElement)) {\\n    setTextContent = function (node, text) {\\n      setInnerHTML(node, escapeTextContentForBrowser(text));\\n    };\\n  }\\n}\\n\\nmodule.exports = setTextContent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n* @providesModule shallowCompare\\n*/\\n\\n'use strict';\\n\\nvar shallowEqual = require('fbjs/lib/shallowEqual');\\n\\n/**\\n * Does a shallow comparison for props and state.\\n * See ReactComponentWithPureRenderMixin\\n */\\nfunction shallowCompare(instance, nextProps, nextState) {\\n  return !shallowEqual(instance.props, nextProps) || !shallowEqual(instance.state, nextState);\\n}\\n\\nmodule.exports = shallowCompare;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule shouldUpdateReactComponent\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\n/**\\n * Given a `prevElement` and `nextElement`, determines if the existing\\n * instance should be updated as opposed to being destroyed or replaced by a new\\n * instance. Both arguments are elements. This ensures that this logic can\\n * operate on stateless trees without any backing instance.\\n *\\n * @param {?object} prevElement\\n * @param {?object} nextElement\\n * @return {boolean} True if the existing instance should be updated.\\n * @protected\\n */\\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\\n  var prevEmpty = prevElement === null || prevElement === false;\\n  var nextEmpty = nextElement === null || nextElement === false;\\n  if (prevEmpty || nextEmpty) {\\n    return prevEmpty === nextEmpty;\\n  }\\n\\n  var prevType = typeof prevElement;\\n  var nextType = typeof nextElement;\\n  if (prevType === 'string' || prevType === 'number') {\\n    return nextType === 'string' || nextType === 'number';\\n  } else {\\n    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\\n  }\\n  return false;\\n}\\n\\nmodule.exports = shouldUpdateReactComponent;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule sliceChildren\\n */\\n\\n'use strict';\\n\\nvar ReactChildren = require('./ReactChildren');\\n\\n/**\\n * Slice children that are typically specified as `props.children`. This version\\n * of slice children ignores empty child components.\\n *\\n * @param {*} children The children set to filter.\\n * @param {number} start The first zero-based index to include in the subset.\\n * @param {?number} end The non-inclusive last index of the subset.\\n * @return {object} mirrored array with mapped children\\n */\\nfunction sliceChildren(children, start, end) {\\n  if (children == null) {\\n    return children;\\n  }\\n\\n  var array = ReactChildren.toArray(children);\\n  return array.slice(start, end);\\n}\\n\\nmodule.exports = sliceChildren;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule traverseAllChildren\\n */\\n\\n'use strict';\\n\\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\\nvar ReactElement = require('./ReactElement');\\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\\n\\nvar getIteratorFn = require('./getIteratorFn');\\nvar invariant = require('fbjs/lib/invariant');\\nvar warning = require('fbjs/lib/warning');\\n\\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\\nvar SUBSEPARATOR = ':';\\n\\n/**\\n * TODO: Test that a single child and an array with one item have the same key\\n * pattern.\\n */\\n\\nvar userProvidedKeyEscaperLookup = {\\n  '=': '=0',\\n  '.': '=1',\\n  ':': '=2'\\n};\\n\\nvar userProvidedKeyEscapeRegex = /[=.:]/g;\\n\\nvar didWarnAboutMaps = false;\\n\\nfunction userProvidedKeyEscaper(match) {\\n  return userProvidedKeyEscaperLookup[match];\\n}\\n\\n/**\\n * Generate a key string that identifies a component within a set.\\n *\\n * @param {*} component A component that could contain a manual key.\\n * @param {number} index Index that is used if a manual key is not provided.\\n * @return {string}\\n */\\nfunction getComponentKey(component, index) {\\n  if (component && component.key != null) {\\n    // Explicit key\\n    return wrapUserProvidedKey(component.key);\\n  }\\n  // Implicit key determined by the index in the set\\n  return index.toString(36);\\n}\\n\\n/**\\n * Escape a component key so that it is safe to use in a reactid.\\n *\\n * @param {*} text Component key to be escaped.\\n * @return {string} An escaped string.\\n */\\nfunction escapeUserProvidedKey(text) {\\n  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);\\n}\\n\\n/**\\n * Wrap a `key` value explicitly provided by the user to distinguish it from\\n * implicitly-generated keys generated by a component's index in its parent.\\n *\\n * @param {string} key Value of a user-provided `key` attribute\\n * @return {string}\\n */\\nfunction wrapUserProvidedKey(key) {\\n  return '$' + escapeUserProvidedKey(key);\\n}\\n\\n/**\\n * @param {?*} children Children tree container.\\n * @param {!string} nameSoFar Name of the key path so far.\\n * @param {!function} callback Callback to invoke with each child found.\\n * @param {?*} traverseContext Used to pass information throughout the traversal\\n * process.\\n * @return {!number} The number of children in this subtree.\\n */\\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\\n  var type = typeof children;\\n\\n  if (type === 'undefined' || type === 'boolean') {\\n    // All of the above are perceived as null.\\n    children = null;\\n  }\\n\\n  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {\\n    callback(traverseContext, children,\\n    // If it's the only child, treat the name as if it was wrapped in an array\\n    // so that it's consistent if the number of children grows.\\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\\n    return 1;\\n  }\\n\\n  var child;\\n  var nextName;\\n  var subtreeCount = 0; // Count of children found in the current subtree.\\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\\n\\n  if (Array.isArray(children)) {\\n    for (var i = 0; i < children.length; i++) {\\n      child = children[i];\\n      nextName = nextNamePrefix + getComponentKey(child, i);\\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\\n    }\\n  } else {\\n    var iteratorFn = getIteratorFn(children);\\n    if (iteratorFn) {\\n      var iterator = iteratorFn.call(children);\\n      var step;\\n      if (iteratorFn !== children.entries) {\\n        var ii = 0;\\n        while (!(step = iterator.next()).done) {\\n          child = step.value;\\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\\n        }\\n      } else {\\n        if (process.env.NODE_ENV !== 'production') {\\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;\\n          didWarnAboutMaps = true;\\n        }\\n        // Iterator will provide entry [k,v] tuples rather than values.\\n        while (!(step = iterator.next()).done) {\\n          var entry = step.value;\\n          if (entry) {\\n            child = entry[1];\\n            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\\n          }\\n        }\\n      }\\n    } else if (type === 'object') {\\n      var addendum = '';\\n      if (process.env.NODE_ENV !== 'production') {\\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\\n        if (children._isReactElement) {\\n          addendum = ' It looks like you\\\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\\n        }\\n        if (ReactCurrentOwner.current) {\\n          var name = ReactCurrentOwner.current.getName();\\n          if (name) {\\n            addendum += ' Check the render method of `' + name + '`.';\\n          }\\n        }\\n      }\\n      var childrenString = String(children);\\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;\\n    }\\n  }\\n\\n  return subtreeCount;\\n}\\n\\n/**\\n * Traverses children that are typically specified as `props.children`, but\\n * might also be specified through attributes:\\n *\\n * - `traverseAllChildren(this.props.children, ...)`\\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\\n *\\n * The `traverseContext` is an optional argument that is passed through the\\n * entire traversal. It can be used to store accumulations or anything else that\\n * the callback might find relevant.\\n *\\n * @param {?*} children Children tree object.\\n * @param {!function} callback To invoke upon traversing each child.\\n * @param {?*} traverseContext Context for traversal.\\n * @return {!number} The number of children in this subtree.\\n */\\nfunction traverseAllChildren(children, callback, traverseContext) {\\n  if (children == null) {\\n    return 0;\\n  }\\n\\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\\n}\\n\\nmodule.exports = traverseAllChildren;\",\n    \"/**\\n * Copyright 2013-2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule update\\n */\\n\\n/* global hasOwnProperty:true */\\n\\n'use strict';\\n\\nvar assign = require('./Object.assign');\\nvar keyOf = require('fbjs/lib/keyOf');\\nvar invariant = require('fbjs/lib/invariant');\\nvar hasOwnProperty = ({}).hasOwnProperty;\\n\\nfunction shallowCopy(x) {\\n  if (Array.isArray(x)) {\\n    return x.concat();\\n  } else if (x && typeof x === 'object') {\\n    return assign(new x.constructor(), x);\\n  } else {\\n    return x;\\n  }\\n}\\n\\nvar COMMAND_PUSH = keyOf({ $push: null });\\nvar COMMAND_UNSHIFT = keyOf({ $unshift: null });\\nvar COMMAND_SPLICE = keyOf({ $splice: null });\\nvar COMMAND_SET = keyOf({ $set: null });\\nvar COMMAND_MERGE = keyOf({ $merge: null });\\nvar COMMAND_APPLY = keyOf({ $apply: null });\\n\\nvar ALL_COMMANDS_LIST = [COMMAND_PUSH, COMMAND_UNSHIFT, COMMAND_SPLICE, COMMAND_SET, COMMAND_MERGE, COMMAND_APPLY];\\n\\nvar ALL_COMMANDS_SET = {};\\n\\nALL_COMMANDS_LIST.forEach(function (command) {\\n  ALL_COMMANDS_SET[command] = true;\\n});\\n\\nfunction invariantArrayCase(value, spec, command) {\\n  !Array.isArray(value) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): expected target of %s to be an array; got %s.', command, value) : invariant(false) : undefined;\\n  var specValue = spec[command];\\n  !Array.isArray(specValue) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): expected spec of %s to be an array; got %s. ' + 'Did you forget to wrap your parameter in an array?', command, specValue) : invariant(false) : undefined;\\n}\\n\\nfunction update(value, spec) {\\n  !(typeof spec === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): You provided a key path to update() that did not contain one ' + 'of %s. Did you forget to include {%s: ...}?', ALL_COMMANDS_LIST.join(', '), COMMAND_SET) : invariant(false) : undefined;\\n\\n  if (hasOwnProperty.call(spec, COMMAND_SET)) {\\n    !(Object.keys(spec).length === 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot have more than one key in an object with %s', COMMAND_SET) : invariant(false) : undefined;\\n\\n    return spec[COMMAND_SET];\\n  }\\n\\n  var nextValue = shallowCopy(value);\\n\\n  if (hasOwnProperty.call(spec, COMMAND_MERGE)) {\\n    var mergeObj = spec[COMMAND_MERGE];\\n    !(mergeObj && typeof mergeObj === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): %s expects a spec of type \\\\'object\\\\'; got %s', COMMAND_MERGE, mergeObj) : invariant(false) : undefined;\\n    !(nextValue && typeof nextValue === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): %s expects a target of type \\\\'object\\\\'; got %s', COMMAND_MERGE, nextValue) : invariant(false) : undefined;\\n    assign(nextValue, spec[COMMAND_MERGE]);\\n  }\\n\\n  if (hasOwnProperty.call(spec, COMMAND_PUSH)) {\\n    invariantArrayCase(value, spec, COMMAND_PUSH);\\n    spec[COMMAND_PUSH].forEach(function (item) {\\n      nextValue.push(item);\\n    });\\n  }\\n\\n  if (hasOwnProperty.call(spec, COMMAND_UNSHIFT)) {\\n    invariantArrayCase(value, spec, COMMAND_UNSHIFT);\\n    spec[COMMAND_UNSHIFT].forEach(function (item) {\\n      nextValue.unshift(item);\\n    });\\n  }\\n\\n  if (hasOwnProperty.call(spec, COMMAND_SPLICE)) {\\n    !Array.isArray(value) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s target to be an array; got %s', COMMAND_SPLICE, value) : invariant(false) : undefined;\\n    !Array.isArray(spec[COMMAND_SPLICE]) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): expected spec of %s to be an array of arrays; got %s. ' + 'Did you forget to wrap your parameters in an array?', COMMAND_SPLICE, spec[COMMAND_SPLICE]) : invariant(false) : undefined;\\n    spec[COMMAND_SPLICE].forEach(function (args) {\\n      !Array.isArray(args) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): expected spec of %s to be an array of arrays; got %s. ' + 'Did you forget to wrap your parameters in an array?', COMMAND_SPLICE, spec[COMMAND_SPLICE]) : invariant(false) : undefined;\\n      nextValue.splice.apply(nextValue, args);\\n    });\\n  }\\n\\n  if (hasOwnProperty.call(spec, COMMAND_APPLY)) {\\n    !(typeof spec[COMMAND_APPLY] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'update(): expected spec of %s to be a function; got %s.', COMMAND_APPLY, spec[COMMAND_APPLY]) : invariant(false) : undefined;\\n    nextValue = spec[COMMAND_APPLY](nextValue);\\n  }\\n\\n  for (var k in spec) {\\n    if (!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])) {\\n      nextValue[k] = update(value[k], spec[k]);\\n    }\\n  }\\n\\n  return nextValue;\\n}\\n\\nmodule.exports = update;\",\n    \"/**\\n * Copyright 2015, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule validateDOMNesting\\n */\\n\\n'use strict';\\n\\nvar assign = require('./Object.assign');\\nvar emptyFunction = require('fbjs/lib/emptyFunction');\\nvar warning = require('fbjs/lib/warning');\\n\\nvar validateDOMNesting = emptyFunction;\\n\\nif (process.env.NODE_ENV !== 'production') {\\n  // This validation code was written based on the HTML5 parsing spec:\\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\\n  //\\n  // Note: this does not catch all invalid nesting, nor does it try to (as it's\\n  // not clear what practical benefit doing so provides); instead, we warn only\\n  // for cases where the parser will give a parse tree differing from what React\\n  // intended. For example, <b><div></div></b> is invalid but we don't warn\\n  // because it still parses correctly; we do warn for other cases like nested\\n  // <p> tags where the beginning of the second element implicitly closes the\\n  // first, causing a confusing mess.\\n\\n  // https://html.spec.whatwg.org/multipage/syntax.html#special\\n  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];\\n\\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope\\n  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',\\n\\n  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point\\n  // TODO: Distinguish by namespace here -- for <title>, including it here\\n  // errs on the side of fewer warnings\\n  'foreignObject', 'desc', 'title'];\\n\\n  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope\\n  var buttonScopeTags = inScopeTags.concat(['button']);\\n\\n  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags\\n  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];\\n\\n  var emptyAncestorInfo = {\\n    parentTag: null,\\n\\n    formTag: null,\\n    aTagInScope: null,\\n    buttonTagInScope: null,\\n    nobrTagInScope: null,\\n    pTagInButtonScope: null,\\n\\n    listItemTagAutoclosing: null,\\n    dlItemTagAutoclosing: null\\n  };\\n\\n  var updatedAncestorInfo = function (oldInfo, tag, instance) {\\n    var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);\\n    var info = { tag: tag, instance: instance };\\n\\n    if (inScopeTags.indexOf(tag) !== -1) {\\n      ancestorInfo.aTagInScope = null;\\n      ancestorInfo.buttonTagInScope = null;\\n      ancestorInfo.nobrTagInScope = null;\\n    }\\n    if (buttonScopeTags.indexOf(tag) !== -1) {\\n      ancestorInfo.pTagInButtonScope = null;\\n    }\\n\\n    // See rules for 'li', 'dd', 'dt' start tags in\\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\\n    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {\\n      ancestorInfo.listItemTagAutoclosing = null;\\n      ancestorInfo.dlItemTagAutoclosing = null;\\n    }\\n\\n    ancestorInfo.parentTag = info;\\n\\n    if (tag === 'form') {\\n      ancestorInfo.formTag = info;\\n    }\\n    if (tag === 'a') {\\n      ancestorInfo.aTagInScope = info;\\n    }\\n    if (tag === 'button') {\\n      ancestorInfo.buttonTagInScope = info;\\n    }\\n    if (tag === 'nobr') {\\n      ancestorInfo.nobrTagInScope = info;\\n    }\\n    if (tag === 'p') {\\n      ancestorInfo.pTagInButtonScope = info;\\n    }\\n    if (tag === 'li') {\\n      ancestorInfo.listItemTagAutoclosing = info;\\n    }\\n    if (tag === 'dd' || tag === 'dt') {\\n      ancestorInfo.dlItemTagAutoclosing = info;\\n    }\\n\\n    return ancestorInfo;\\n  };\\n\\n  /**\\n   * Returns whether\\n   */\\n  var isTagValidWithParent = function (tag, parentTag) {\\n    // First, let's check if we're in an unusual parsing mode...\\n    switch (parentTag) {\\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect\\n      case 'select':\\n        return tag === 'option' || tag === 'optgroup' || tag === '#text';\\n      case 'optgroup':\\n        return tag === 'option' || tag === '#text';\\n      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>\\n      // but\\n      case 'option':\\n        return tag === '#text';\\n\\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd\\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption\\n      // No special behavior since these rules fall back to \\\"in body\\\" mode for\\n      // all except special table nodes which cause bad parsing behavior anyway.\\n\\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr\\n      case 'tr':\\n        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';\\n\\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody\\n      case 'tbody':\\n      case 'thead':\\n      case 'tfoot':\\n        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';\\n\\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup\\n      case 'colgroup':\\n        return tag === 'col' || tag === 'template';\\n\\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable\\n      case 'table':\\n        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';\\n\\n      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead\\n      case 'head':\\n        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';\\n\\n      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element\\n      case 'html':\\n        return tag === 'head' || tag === 'body';\\n    }\\n\\n    // Probably in the \\\"in body\\\" parsing mode, so we outlaw only tag combos\\n    // where the parsing rules cause implicit opens or closes to be added.\\n    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\\n    switch (tag) {\\n      case 'h1':\\n      case 'h2':\\n      case 'h3':\\n      case 'h4':\\n      case 'h5':\\n      case 'h6':\\n        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';\\n\\n      case 'rp':\\n      case 'rt':\\n        return impliedEndTags.indexOf(parentTag) === -1;\\n\\n      case 'caption':\\n      case 'col':\\n      case 'colgroup':\\n      case 'frame':\\n      case 'head':\\n      case 'tbody':\\n      case 'td':\\n      case 'tfoot':\\n      case 'th':\\n      case 'thead':\\n      case 'tr':\\n        // These tags are only valid with a few parents that have special child\\n        // parsing rules -- if we're down here, then none of those matched and\\n        // so we allow it only if we don't know what the parent is, as all other\\n        // cases are invalid.\\n        return parentTag == null;\\n    }\\n\\n    return true;\\n  };\\n\\n  /**\\n   * Returns whether\\n   */\\n  var findInvalidAncestorForTag = function (tag, ancestorInfo) {\\n    switch (tag) {\\n      case 'address':\\n      case 'article':\\n      case 'aside':\\n      case 'blockquote':\\n      case 'center':\\n      case 'details':\\n      case 'dialog':\\n      case 'dir':\\n      case 'div':\\n      case 'dl':\\n      case 'fieldset':\\n      case 'figcaption':\\n      case 'figure':\\n      case 'footer':\\n      case 'header':\\n      case 'hgroup':\\n      case 'main':\\n      case 'menu':\\n      case 'nav':\\n      case 'ol':\\n      case 'p':\\n      case 'section':\\n      case 'summary':\\n      case 'ul':\\n\\n      case 'pre':\\n      case 'listing':\\n\\n      case 'table':\\n\\n      case 'hr':\\n\\n      case 'xmp':\\n\\n      case 'h1':\\n      case 'h2':\\n      case 'h3':\\n      case 'h4':\\n      case 'h5':\\n      case 'h6':\\n        return ancestorInfo.pTagInButtonScope;\\n\\n      case 'form':\\n        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;\\n\\n      case 'li':\\n        return ancestorInfo.listItemTagAutoclosing;\\n\\n      case 'dd':\\n      case 'dt':\\n        return ancestorInfo.dlItemTagAutoclosing;\\n\\n      case 'button':\\n        return ancestorInfo.buttonTagInScope;\\n\\n      case 'a':\\n        // Spec says something about storing a list of markers, but it sounds\\n        // equivalent to this check.\\n        return ancestorInfo.aTagInScope;\\n\\n      case 'nobr':\\n        return ancestorInfo.nobrTagInScope;\\n    }\\n\\n    return null;\\n  };\\n\\n  /**\\n   * Given a ReactCompositeComponent instance, return a list of its recursive\\n   * owners, starting at the root and ending with the instance itself.\\n   */\\n  var findOwnerStack = function (instance) {\\n    if (!instance) {\\n      return [];\\n    }\\n\\n    var stack = [];\\n    /*eslint-disable space-after-keywords */\\n    do {\\n      /*eslint-enable space-after-keywords */\\n      stack.push(instance);\\n    } while (instance = instance._currentElement._owner);\\n    stack.reverse();\\n    return stack;\\n  };\\n\\n  var didWarn = {};\\n\\n  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {\\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\\n    var parentInfo = ancestorInfo.parentTag;\\n    var parentTag = parentInfo && parentInfo.tag;\\n\\n    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;\\n    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);\\n    var problematic = invalidParent || invalidAncestor;\\n\\n    if (problematic) {\\n      var ancestorTag = problematic.tag;\\n      var ancestorInstance = problematic.instance;\\n\\n      var childOwner = childInstance && childInstance._currentElement._owner;\\n      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;\\n\\n      var childOwners = findOwnerStack(childOwner);\\n      var ancestorOwners = findOwnerStack(ancestorOwner);\\n\\n      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);\\n      var i;\\n\\n      var deepestCommon = -1;\\n      for (i = 0; i < minStackLen; i++) {\\n        if (childOwners[i] === ancestorOwners[i]) {\\n          deepestCommon = i;\\n        } else {\\n          break;\\n        }\\n      }\\n\\n      var UNKNOWN = '(unknown)';\\n      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {\\n        return inst.getName() || UNKNOWN;\\n      });\\n      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {\\n        return inst.getName() || UNKNOWN;\\n      });\\n      var ownerInfo = [].concat(\\n      // If the parent and child instances have a common owner ancestor, start\\n      // with that -- otherwise we just start with the parent's owners.\\n      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,\\n      // If we're warning about an invalid (non-parent) ancestry, add '...'\\n      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');\\n\\n      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;\\n      if (didWarn[warnKey]) {\\n        return;\\n      }\\n      didWarn[warnKey] = true;\\n\\n      if (invalidParent) {\\n        var info = '';\\n        if (ancestorTag === 'table' && childTag === 'tr') {\\n          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';\\n        }\\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a child of <%s>. ' + 'See %s.%s', childTag, ancestorTag, ownerInfo, info) : undefined;\\n      } else {\\n        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): <%s> cannot appear as a descendant of ' + '<%s>. See %s.', childTag, ancestorTag, ownerInfo) : undefined;\\n      }\\n    }\\n  };\\n\\n  validateDOMNesting.ancestorInfoContextKey = '__validateDOMNesting_ancestorInfo$' + Math.random().toString(36).slice(2);\\n\\n  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;\\n\\n  // For testing\\n  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {\\n    ancestorInfo = ancestorInfo || emptyAncestorInfo;\\n    var parentInfo = ancestorInfo.parentTag;\\n    var parentTag = parentInfo && parentInfo.tag;\\n    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);\\n  };\\n}\\n\\nmodule.exports = validateDOMNesting;\",\n    \"/**\\n * @license\\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\\n * Code distributed by Google as part of the polymer project is also\\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\\n * @providesModule WebComponents\\n */\\n// @version 0.5.1\\nwindow.WebComponents = window.WebComponents || {};\\n\\n(function(scope) {\\n  var flags = scope.flags || {};\\n  var file = \\\"webcomponents.js\\\";\\n  var script = document.querySelector('script[src*=\\\"' + file + '\\\"]');\\n  var flags = {};\\n  if (!flags.noOpts) {\\n    location.search.slice(1).split(\\\"&\\\").forEach(function(o) {\\n      o = o.split(\\\"=\\\");\\n      o[0] && (flags[o[0]] = o[1] || true);\\n    });\\n    if (script) {\\n      for (var i = 0, a; a = script.attributes[i]; i++) {\\n        if (a.name !== \\\"src\\\") {\\n          flags[a.name] = a.value || true;\\n        }\\n      }\\n    }\\n    if (flags.log) {\\n      var parts = flags.log.split(\\\",\\\");\\n      flags.log = {};\\n      parts.forEach(function(f) {\\n        flags.log[f] = true;\\n      });\\n    } else {\\n      flags.log = {};\\n    }\\n  }\\n  flags.shadow = flags.shadow || flags.shadowdom || flags.polyfill;\\n  if (flags.shadow === \\\"native\\\") {\\n    flags.shadow = false;\\n  } else {\\n    flags.shadow = flags.shadow || !HTMLElement.prototype.createShadowRoot;\\n  }\\n  if (flags.register) {\\n    window.CustomElements = window.CustomElements || {\\n      flags: {}\\n    };\\n    window.CustomElements.flags.register = flags.register;\\n  }\\n  scope.flags = flags;\\n})(WebComponents);\\n\\nif (WebComponents.flags.shadow) {\\n  if (typeof WeakMap === \\\"undefined\\\") {\\n    (function() {\\n      var defineProperty = Object.defineProperty;\\n      var counter = Date.now() % 1e9;\\n      var WeakMap = function() {\\n        this.name = \\\"__st\\\" + (Math.random() * 1e9 >>> 0) + (counter++ + \\\"__\\\");\\n      };\\n      WeakMap.prototype = {\\n        set: function(key, value) {\\n          var entry = key[this.name];\\n          if (entry && entry[0] === key) entry[1] = value; else defineProperty(key, this.name, {\\n            value: [ key, value ],\\n            writable: true\\n          });\\n          return this;\\n        },\\n        get: function(key) {\\n          var entry;\\n          return (entry = key[this.name]) && entry[0] === key ? entry[1] : undefined;\\n        },\\n        \\\"delete\\\": function(key) {\\n          var entry = key[this.name];\\n          if (!entry || entry[0] !== key) return false;\\n          entry[0] = entry[1] = undefined;\\n          return true;\\n        },\\n        has: function(key) {\\n          var entry = key[this.name];\\n          if (!entry) return false;\\n          return entry[0] === key;\\n        }\\n      };\\n      window.WeakMap = WeakMap;\\n    })();\\n  }\\n  window.ShadowDOMPolyfill = {};\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var constructorTable = new WeakMap();\\n    var nativePrototypeTable = new WeakMap();\\n    var wrappers = Object_create(null);\\n    function detectEval() {\\n      if (typeof chrome !== \\\"undefined\\\" && chrome.app && chrome.app.runtime) {\\n        return false;\\n      }\\n      if (navigator.getDeviceStorage) {\\n        return false;\\n      }\\n      try {\\n        var f = new Function(\\\"return true;\\\");\\n        return f();\\n      } catch (ex) {\\n        return false;\\n      }\\n    }\\n    var hasEval = detectEval();\\n    function assert(b) {\\n      if (!b) throw new Error(\\\"Assertion failed\\\");\\n    }\\n    var defineProperty = Object.defineProperty;\\n    var getOwnPropertyNames = Object.getOwnPropertyNames;\\n    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\\n    function mixin(to, from) {\\n      var names = getOwnPropertyNames(from);\\n      for (var i = 0; i < names.length; i++) {\\n        var name = names[i];\\n        defineProperty(to, name, getOwnPropertyDescriptor(from, name));\\n      }\\n      return to;\\n    }\\n    function mixinStatics(to, from) {\\n      var names = getOwnPropertyNames(from);\\n      for (var i = 0; i < names.length; i++) {\\n        var name = names[i];\\n        switch (name) {\\n         case \\\"arguments\\\":\\n         case \\\"caller\\\":\\n         case \\\"length\\\":\\n         case \\\"name\\\":\\n         case \\\"prototype\\\":\\n         case \\\"toString\\\":\\n          continue;\\n        }\\n        defineProperty(to, name, getOwnPropertyDescriptor(from, name));\\n      }\\n      return to;\\n    }\\n    function oneOf(object, propertyNames) {\\n      for (var i = 0; i < propertyNames.length; i++) {\\n        if (propertyNames[i] in object) return propertyNames[i];\\n      }\\n    }\\n    var nonEnumerableDataDescriptor = {\\n      value: undefined,\\n      configurable: true,\\n      enumerable: false,\\n      writable: true\\n    };\\n    function defineNonEnumerableDataProperty(object, name, value) {\\n      nonEnumerableDataDescriptor.value = value;\\n      defineProperty(object, name, nonEnumerableDataDescriptor);\\n    }\\n    getOwnPropertyNames(window);\\n    function getWrapperConstructor(node) {\\n      var nativePrototype = node.__proto__ || Object.getPrototypeOf(node);\\n      var wrapperConstructor = constructorTable.get(nativePrototype);\\n      if (wrapperConstructor) return wrapperConstructor;\\n      var parentWrapperConstructor = getWrapperConstructor(nativePrototype);\\n      var GeneratedWrapper = createWrapperConstructor(parentWrapperConstructor);\\n      registerInternal(nativePrototype, GeneratedWrapper, node);\\n      return GeneratedWrapper;\\n    }\\n    function addForwardingProperties(nativePrototype, wrapperPrototype) {\\n      installProperty(nativePrototype, wrapperPrototype, true);\\n    }\\n    function registerInstanceProperties(wrapperPrototype, instanceObject) {\\n      installProperty(instanceObject, wrapperPrototype, false);\\n    }\\n    var isFirefox = /Firefox/.test(navigator.userAgent);\\n    var dummyDescriptor = {\\n      get: function() {},\\n      set: function(v) {},\\n      configurable: true,\\n      enumerable: true\\n    };\\n    function isEventHandlerName(name) {\\n      return /^on[a-z]+$/.test(name);\\n    }\\n    function isIdentifierName(name) {\\n      return /^\\\\w[a-zA-Z_0-9]*$/.test(name);\\n    }\\n    function getGetter(name) {\\n      return hasEval && isIdentifierName(name) ? new Function(\\\"return this.__impl4cf1e782hg__.\\\" + name) : function() {\\n        return this.__impl4cf1e782hg__[name];\\n      };\\n    }\\n    function getSetter(name) {\\n      return hasEval && isIdentifierName(name) ? new Function(\\\"v\\\", \\\"this.__impl4cf1e782hg__.\\\" + name + \\\" = v\\\") : function(v) {\\n        this.__impl4cf1e782hg__[name] = v;\\n      };\\n    }\\n    function getMethod(name) {\\n      return hasEval && isIdentifierName(name) ? new Function(\\\"return this.__impl4cf1e782hg__.\\\" + name + \\\".apply(this.__impl4cf1e782hg__, arguments)\\\") : function() {\\n        return this.__impl4cf1e782hg__[name].apply(this.__impl4cf1e782hg__, arguments);\\n      };\\n    }\\n    function getDescriptor(source, name) {\\n      try {\\n        return Object.getOwnPropertyDescriptor(source, name);\\n      } catch (ex) {\\n        return dummyDescriptor;\\n      }\\n    }\\n    var isBrokenSafari = function() {\\n      var descr = Object.getOwnPropertyDescriptor(Node.prototype, \\\"nodeType\\\");\\n      return descr && !descr.get && !descr.set;\\n    }();\\n    function installProperty(source, target, allowMethod, opt_blacklist) {\\n      var names = getOwnPropertyNames(source);\\n      for (var i = 0; i < names.length; i++) {\\n        var name = names[i];\\n        if (name === \\\"polymerBlackList_\\\") continue;\\n        if (name in target) continue;\\n        if (source.polymerBlackList_ && source.polymerBlackList_[name]) continue;\\n        if (isFirefox) {\\n          source.__lookupGetter__(name);\\n        }\\n        var descriptor = getDescriptor(source, name);\\n        var getter, setter;\\n        if (allowMethod && typeof descriptor.value === \\\"function\\\") {\\n          target[name] = getMethod(name);\\n          continue;\\n        }\\n        var isEvent = isEventHandlerName(name);\\n        if (isEvent) getter = scope.getEventHandlerGetter(name); else getter = getGetter(name);\\n        if (descriptor.writable || descriptor.set || isBrokenSafari) {\\n          if (isEvent) setter = scope.getEventHandlerSetter(name); else setter = getSetter(name);\\n        }\\n        defineProperty(target, name, {\\n          get: getter,\\n          set: setter,\\n          configurable: descriptor.configurable,\\n          enumerable: descriptor.enumerable\\n        });\\n      }\\n    }\\n    function register(nativeConstructor, wrapperConstructor, opt_instance) {\\n      var nativePrototype = nativeConstructor.prototype;\\n      registerInternal(nativePrototype, wrapperConstructor, opt_instance);\\n      mixinStatics(wrapperConstructor, nativeConstructor);\\n    }\\n    function registerInternal(nativePrototype, wrapperConstructor, opt_instance) {\\n      var wrapperPrototype = wrapperConstructor.prototype;\\n      assert(constructorTable.get(nativePrototype) === undefined);\\n      constructorTable.set(nativePrototype, wrapperConstructor);\\n      nativePrototypeTable.set(wrapperPrototype, nativePrototype);\\n      addForwardingProperties(nativePrototype, wrapperPrototype);\\n      if (opt_instance) registerInstanceProperties(wrapperPrototype, opt_instance);\\n      defineNonEnumerableDataProperty(wrapperPrototype, \\\"constructor\\\", wrapperConstructor);\\n      wrapperConstructor.prototype = wrapperPrototype;\\n    }\\n    function isWrapperFor(wrapperConstructor, nativeConstructor) {\\n      return constructorTable.get(nativeConstructor.prototype) === wrapperConstructor;\\n    }\\n    function registerObject(object) {\\n      var nativePrototype = Object.getPrototypeOf(object);\\n      var superWrapperConstructor = getWrapperConstructor(nativePrototype);\\n      var GeneratedWrapper = createWrapperConstructor(superWrapperConstructor);\\n      registerInternal(nativePrototype, GeneratedWrapper, object);\\n      return GeneratedWrapper;\\n    }\\n    function createWrapperConstructor(superWrapperConstructor) {\\n      function GeneratedWrapper(node) {\\n        superWrapperConstructor.call(this, node);\\n      }\\n      var p = Object_create(superWrapperConstructor.prototype);\\n      p.constructor = GeneratedWrapper;\\n      GeneratedWrapper.prototype = p;\\n      return GeneratedWrapper;\\n    }\\n    function isWrapper(object) {\\n      return object && object.__impl4cf1e782hg__;\\n    }\\n    function isNative(object) {\\n      return !isWrapper(object);\\n    }\\n    function wrap(impl) {\\n      if (impl === null) return null;\\n      assert(isNative(impl));\\n      return impl.__wrapper8e3dd93a60__ || (impl.__wrapper8e3dd93a60__ = new (getWrapperConstructor(impl))(impl));\\n    }\\n    function unwrap(wrapper) {\\n      if (wrapper === null) return null;\\n      assert(isWrapper(wrapper));\\n      return wrapper.__impl4cf1e782hg__;\\n    }\\n    function unsafeUnwrap(wrapper) {\\n      return wrapper.__impl4cf1e782hg__;\\n    }\\n    function setWrapper(impl, wrapper) {\\n      wrapper.__impl4cf1e782hg__ = impl;\\n      impl.__wrapper8e3dd93a60__ = wrapper;\\n    }\\n    function unwrapIfNeeded(object) {\\n      return object && isWrapper(object) ? unwrap(object) : object;\\n    }\\n    function wrapIfNeeded(object) {\\n      return object && !isWrapper(object) ? wrap(object) : object;\\n    }\\n    function rewrap(node, wrapper) {\\n      if (wrapper === null) return;\\n      assert(isNative(node));\\n      assert(wrapper === undefined || isWrapper(wrapper));\\n      node.__wrapper8e3dd93a60__ = wrapper;\\n    }\\n    var getterDescriptor = {\\n      get: undefined,\\n      configurable: true,\\n      enumerable: true\\n    };\\n    function defineGetter(constructor, name, getter) {\\n      getterDescriptor.get = getter;\\n      defineProperty(constructor.prototype, name, getterDescriptor);\\n    }\\n    function defineWrapGetter(constructor, name) {\\n      defineGetter(constructor, name, function() {\\n        return wrap(this.__impl4cf1e782hg__[name]);\\n      });\\n    }\\n    function forwardMethodsToWrapper(constructors, names) {\\n      constructors.forEach(function(constructor) {\\n        names.forEach(function(name) {\\n          constructor.prototype[name] = function() {\\n            var w = wrapIfNeeded(this);\\n            return w[name].apply(w, arguments);\\n          };\\n        });\\n      });\\n    }\\n    scope.assert = assert;\\n    scope.constructorTable = constructorTable;\\n    scope.defineGetter = defineGetter;\\n    scope.defineWrapGetter = defineWrapGetter;\\n    scope.forwardMethodsToWrapper = forwardMethodsToWrapper;\\n    scope.isWrapper = isWrapper;\\n    scope.isWrapperFor = isWrapperFor;\\n    scope.mixin = mixin;\\n    scope.nativePrototypeTable = nativePrototypeTable;\\n    scope.oneOf = oneOf;\\n    scope.registerObject = registerObject;\\n    scope.registerWrapper = register;\\n    scope.rewrap = rewrap;\\n    scope.setWrapper = setWrapper;\\n    scope.unsafeUnwrap = unsafeUnwrap;\\n    scope.unwrap = unwrap;\\n    scope.unwrapIfNeeded = unwrapIfNeeded;\\n    scope.wrap = wrap;\\n    scope.wrapIfNeeded = wrapIfNeeded;\\n    scope.wrappers = wrappers;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    function newSplice(index, removed, addedCount) {\\n      return {\\n        index: index,\\n        removed: removed,\\n        addedCount: addedCount\\n      };\\n    }\\n    var EDIT_LEAVE = 0;\\n    var EDIT_UPDATE = 1;\\n    var EDIT_ADD = 2;\\n    var EDIT_DELETE = 3;\\n    function ArraySplice() {}\\n    ArraySplice.prototype = {\\n      calcEditDistances: function(current, currentStart, currentEnd, old, oldStart, oldEnd) {\\n        var rowCount = oldEnd - oldStart + 1;\\n        var columnCount = currentEnd - currentStart + 1;\\n        var distances = new Array(rowCount);\\n        for (var i = 0; i < rowCount; i++) {\\n          distances[i] = new Array(columnCount);\\n          distances[i][0] = i;\\n        }\\n        for (var j = 0; j < columnCount; j++) distances[0][j] = j;\\n        for (var i = 1; i < rowCount; i++) {\\n          for (var j = 1; j < columnCount; j++) {\\n            if (this.equals(current[currentStart + j - 1], old[oldStart + i - 1])) distances[i][j] = distances[i - 1][j - 1]; else {\\n              var north = distances[i - 1][j] + 1;\\n              var west = distances[i][j - 1] + 1;\\n              distances[i][j] = north < west ? north : west;\\n            }\\n          }\\n        }\\n        return distances;\\n      },\\n      spliceOperationsFromEditDistances: function(distances) {\\n        var i = distances.length - 1;\\n        var j = distances[0].length - 1;\\n        var current = distances[i][j];\\n        var edits = [];\\n        while (i > 0 || j > 0) {\\n          if (i == 0) {\\n            edits.push(EDIT_ADD);\\n            j--;\\n            continue;\\n          }\\n          if (j == 0) {\\n            edits.push(EDIT_DELETE);\\n            i--;\\n            continue;\\n          }\\n          var northWest = distances[i - 1][j - 1];\\n          var west = distances[i - 1][j];\\n          var north = distances[i][j - 1];\\n          var min;\\n          if (west < north) min = west < northWest ? west : northWest; else min = north < northWest ? north : northWest;\\n          if (min == northWest) {\\n            if (northWest == current) {\\n              edits.push(EDIT_LEAVE);\\n            } else {\\n              edits.push(EDIT_UPDATE);\\n              current = northWest;\\n            }\\n            i--;\\n            j--;\\n          } else if (min == west) {\\n            edits.push(EDIT_DELETE);\\n            i--;\\n            current = west;\\n          } else {\\n            edits.push(EDIT_ADD);\\n            j--;\\n            current = north;\\n          }\\n        }\\n        edits.reverse();\\n        return edits;\\n      },\\n      calcSplices: function(current, currentStart, currentEnd, old, oldStart, oldEnd) {\\n        var prefixCount = 0;\\n        var suffixCount = 0;\\n        var minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\\n        if (currentStart == 0 && oldStart == 0) prefixCount = this.sharedPrefix(current, old, minLength);\\n        if (currentEnd == current.length && oldEnd == old.length) suffixCount = this.sharedSuffix(current, old, minLength - prefixCount);\\n        currentStart += prefixCount;\\n        oldStart += prefixCount;\\n        currentEnd -= suffixCount;\\n        oldEnd -= suffixCount;\\n        if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0) return [];\\n        if (currentStart == currentEnd) {\\n          var splice = newSplice(currentStart, [], 0);\\n          while (oldStart < oldEnd) splice.removed.push(old[oldStart++]);\\n          return [ splice ];\\n        } else if (oldStart == oldEnd) return [ newSplice(currentStart, [], currentEnd - currentStart) ];\\n        var ops = this.spliceOperationsFromEditDistances(this.calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));\\n        var splice = undefined;\\n        var splices = [];\\n        var index = currentStart;\\n        var oldIndex = oldStart;\\n        for (var i = 0; i < ops.length; i++) {\\n          switch (ops[i]) {\\n           case EDIT_LEAVE:\\n            if (splice) {\\n              splices.push(splice);\\n              splice = undefined;\\n            }\\n            index++;\\n            oldIndex++;\\n            break;\\n\\n           case EDIT_UPDATE:\\n            if (!splice) splice = newSplice(index, [], 0);\\n            splice.addedCount++;\\n            index++;\\n            splice.removed.push(old[oldIndex]);\\n            oldIndex++;\\n            break;\\n\\n           case EDIT_ADD:\\n            if (!splice) splice = newSplice(index, [], 0);\\n            splice.addedCount++;\\n            index++;\\n            break;\\n\\n           case EDIT_DELETE:\\n            if (!splice) splice = newSplice(index, [], 0);\\n            splice.removed.push(old[oldIndex]);\\n            oldIndex++;\\n            break;\\n          }\\n        }\\n        if (splice) {\\n          splices.push(splice);\\n        }\\n        return splices;\\n      },\\n      sharedPrefix: function(current, old, searchLength) {\\n        for (var i = 0; i < searchLength; i++) if (!this.equals(current[i], old[i])) return i;\\n        return searchLength;\\n      },\\n      sharedSuffix: function(current, old, searchLength) {\\n        var index1 = current.length;\\n        var index2 = old.length;\\n        var count = 0;\\n        while (count < searchLength && this.equals(current[--index1], old[--index2])) count++;\\n        return count;\\n      },\\n      calculateSplices: function(current, previous) {\\n        return this.calcSplices(current, 0, current.length, previous, 0, previous.length);\\n      },\\n      equals: function(currentValue, previousValue) {\\n        return currentValue === previousValue;\\n      }\\n    };\\n    scope.ArraySplice = ArraySplice;\\n  })(window.ShadowDOMPolyfill);\\n  (function(context) {\\n    \\\"use strict\\\";\\n    var OriginalMutationObserver = window.MutationObserver;\\n    var callbacks = [];\\n    var pending = false;\\n    var timerFunc;\\n    function handle() {\\n      pending = false;\\n      var copies = callbacks.slice(0);\\n      callbacks = [];\\n      for (var i = 0; i < copies.length; i++) {\\n        (0, copies[i])();\\n      }\\n    }\\n    if (OriginalMutationObserver) {\\n      var counter = 1;\\n      var observer = new OriginalMutationObserver(handle);\\n      var textNode = document.createTextNode(counter);\\n      observer.observe(textNode, {\\n        characterData: true\\n      });\\n      timerFunc = function() {\\n        counter = (counter + 1) % 2;\\n        textNode.data = counter;\\n      };\\n    } else {\\n      timerFunc = window.setTimeout;\\n    }\\n    function setEndOfMicrotask(func) {\\n      callbacks.push(func);\\n      if (pending) return;\\n      pending = true;\\n      timerFunc(handle, 0);\\n    }\\n    context.setEndOfMicrotask = setEndOfMicrotask;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var setEndOfMicrotask = scope.setEndOfMicrotask;\\n    var wrapIfNeeded = scope.wrapIfNeeded;\\n    var wrappers = scope.wrappers;\\n    var registrationsTable = new WeakMap();\\n    var globalMutationObservers = [];\\n    var isScheduled = false;\\n    function scheduleCallback(observer) {\\n      if (observer.scheduled_) return;\\n      observer.scheduled_ = true;\\n      globalMutationObservers.push(observer);\\n      if (isScheduled) return;\\n      setEndOfMicrotask(notifyObservers);\\n      isScheduled = true;\\n    }\\n    function notifyObservers() {\\n      isScheduled = false;\\n      while (globalMutationObservers.length) {\\n        var notifyList = globalMutationObservers;\\n        globalMutationObservers = [];\\n        notifyList.sort(function(x, y) {\\n          return x.uid_ - y.uid_;\\n        });\\n        for (var i = 0; i < notifyList.length; i++) {\\n          var mo = notifyList[i];\\n          mo.scheduled_ = false;\\n          var queue = mo.takeRecords();\\n          removeTransientObserversFor(mo);\\n          if (queue.length) {\\n            mo.callback_(queue, mo);\\n          }\\n        }\\n      }\\n    }\\n    function MutationRecord(type, target) {\\n      this.type = type;\\n      this.target = target;\\n      this.addedNodes = new wrappers.NodeList();\\n      this.removedNodes = new wrappers.NodeList();\\n      this.previousSibling = null;\\n      this.nextSibling = null;\\n      this.attributeName = null;\\n      this.attributeNamespace = null;\\n      this.oldValue = null;\\n    }\\n    function registerTransientObservers(ancestor, node) {\\n      for (;ancestor; ancestor = ancestor.parentNode) {\\n        var registrations = registrationsTable.get(ancestor);\\n        if (!registrations) continue;\\n        for (var i = 0; i < registrations.length; i++) {\\n          var registration = registrations[i];\\n          if (registration.options.subtree) registration.addTransientObserver(node);\\n        }\\n      }\\n    }\\n    function removeTransientObserversFor(observer) {\\n      for (var i = 0; i < observer.nodes_.length; i++) {\\n        var node = observer.nodes_[i];\\n        var registrations = registrationsTable.get(node);\\n        if (!registrations) return;\\n        for (var j = 0; j < registrations.length; j++) {\\n          var registration = registrations[j];\\n          if (registration.observer === observer) registration.removeTransientObservers();\\n        }\\n      }\\n    }\\n    function enqueueMutation(target, type, data) {\\n      var interestedObservers = Object_create(null);\\n      var associatedStrings = Object_create(null);\\n      for (var node = target; node; node = node.parentNode) {\\n        var registrations = registrationsTable.get(node);\\n        if (!registrations) continue;\\n        for (var j = 0; j < registrations.length; j++) {\\n          var registration = registrations[j];\\n          var options = registration.options;\\n          if (node !== target && !options.subtree) continue;\\n          if (type === \\\"attributes\\\" && !options.attributes) continue;\\n          if (type === \\\"attributes\\\" && options.attributeFilter && (data.namespace !== null || options.attributeFilter.indexOf(data.name) === -1)) {\\n            continue;\\n          }\\n          if (type === \\\"characterData\\\" && !options.characterData) continue;\\n          if (type === \\\"childList\\\" && !options.childList) continue;\\n          var observer = registration.observer;\\n          interestedObservers[observer.uid_] = observer;\\n          if (type === \\\"attributes\\\" && options.attributeOldValue || type === \\\"characterData\\\" && options.characterDataOldValue) {\\n            associatedStrings[observer.uid_] = data.oldValue;\\n          }\\n        }\\n      }\\n      for (var uid in interestedObservers) {\\n        var observer = interestedObservers[uid];\\n        var record = new MutationRecord(type, target);\\n        if (\\\"name\\\" in data && \\\"namespace\\\" in data) {\\n          record.attributeName = data.name;\\n          record.attributeNamespace = data.namespace;\\n        }\\n        if (data.addedNodes) record.addedNodes = data.addedNodes;\\n        if (data.removedNodes) record.removedNodes = data.removedNodes;\\n        if (data.previousSibling) record.previousSibling = data.previousSibling;\\n        if (data.nextSibling) record.nextSibling = data.nextSibling;\\n        if (associatedStrings[uid] !== undefined) record.oldValue = associatedStrings[uid];\\n        scheduleCallback(observer);\\n        observer.records_.push(record);\\n      }\\n    }\\n    var slice = Array.prototype.slice;\\n    function MutationObserverOptions(options) {\\n      this.childList = !!options.childList;\\n      this.subtree = !!options.subtree;\\n      if (!(\\\"attributes\\\" in options) && (\\\"attributeOldValue\\\" in options || \\\"attributeFilter\\\" in options)) {\\n        this.attributes = true;\\n      } else {\\n        this.attributes = !!options.attributes;\\n      }\\n      if (\\\"characterDataOldValue\\\" in options && !(\\\"characterData\\\" in options)) this.characterData = true; else this.characterData = !!options.characterData;\\n      if (!this.attributes && (options.attributeOldValue || \\\"attributeFilter\\\" in options) || !this.characterData && options.characterDataOldValue) {\\n        throw new TypeError();\\n      }\\n      this.characterData = !!options.characterData;\\n      this.attributeOldValue = !!options.attributeOldValue;\\n      this.characterDataOldValue = !!options.characterDataOldValue;\\n      if (\\\"attributeFilter\\\" in options) {\\n        if (options.attributeFilter == null || typeof options.attributeFilter !== \\\"object\\\") {\\n          throw new TypeError();\\n        }\\n        this.attributeFilter = slice.call(options.attributeFilter);\\n      } else {\\n        this.attributeFilter = null;\\n      }\\n    }\\n    var uidCounter = 0;\\n    function MutationObserver(callback) {\\n      this.callback_ = callback;\\n      this.nodes_ = [];\\n      this.records_ = [];\\n      this.uid_ = ++uidCounter;\\n      this.scheduled_ = false;\\n    }\\n    MutationObserver.prototype = {\\n      constructor: MutationObserver,\\n      observe: function(target, options) {\\n        target = wrapIfNeeded(target);\\n        var newOptions = new MutationObserverOptions(options);\\n        var registration;\\n        var registrations = registrationsTable.get(target);\\n        if (!registrations) registrationsTable.set(target, registrations = []);\\n        for (var i = 0; i < registrations.length; i++) {\\n          if (registrations[i].observer === this) {\\n            registration = registrations[i];\\n            registration.removeTransientObservers();\\n            registration.options = newOptions;\\n          }\\n        }\\n        if (!registration) {\\n          registration = new Registration(this, target, newOptions);\\n          registrations.push(registration);\\n          this.nodes_.push(target);\\n        }\\n      },\\n      disconnect: function() {\\n        this.nodes_.forEach(function(node) {\\n          var registrations = registrationsTable.get(node);\\n          for (var i = 0; i < registrations.length; i++) {\\n            var registration = registrations[i];\\n            if (registration.observer === this) {\\n              registrations.splice(i, 1);\\n              break;\\n            }\\n          }\\n        }, this);\\n        this.records_ = [];\\n      },\\n      takeRecords: function() {\\n        var copyOfRecords = this.records_;\\n        this.records_ = [];\\n        return copyOfRecords;\\n      }\\n    };\\n    function Registration(observer, target, options) {\\n      this.observer = observer;\\n      this.target = target;\\n      this.options = options;\\n      this.transientObservedNodes = [];\\n    }\\n    Registration.prototype = {\\n      addTransientObserver: function(node) {\\n        if (node === this.target) return;\\n        scheduleCallback(this.observer);\\n        this.transientObservedNodes.push(node);\\n        var registrations = registrationsTable.get(node);\\n        if (!registrations) registrationsTable.set(node, registrations = []);\\n        registrations.push(this);\\n      },\\n      removeTransientObservers: function() {\\n        var transientObservedNodes = this.transientObservedNodes;\\n        this.transientObservedNodes = [];\\n        for (var i = 0; i < transientObservedNodes.length; i++) {\\n          var node = transientObservedNodes[i];\\n          var registrations = registrationsTable.get(node);\\n          for (var j = 0; j < registrations.length; j++) {\\n            if (registrations[j] === this) {\\n              registrations.splice(j, 1);\\n              break;\\n            }\\n          }\\n        }\\n      }\\n    };\\n    scope.enqueueMutation = enqueueMutation;\\n    scope.registerTransientObservers = registerTransientObservers;\\n    scope.wrappers.MutationObserver = MutationObserver;\\n    scope.wrappers.MutationRecord = MutationRecord;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    function TreeScope(root, parent) {\\n      this.root = root;\\n      this.parent = parent;\\n    }\\n    TreeScope.prototype = {\\n      get renderer() {\\n        if (this.root instanceof scope.wrappers.ShadowRoot) {\\n          return scope.getRendererForHost(this.root.host);\\n        }\\n        return null;\\n      },\\n      contains: function(treeScope) {\\n        for (;treeScope; treeScope = treeScope.parent) {\\n          if (treeScope === this) return true;\\n        }\\n        return false;\\n      }\\n    };\\n    function setTreeScope(node, treeScope) {\\n      if (node.treeScope_ !== treeScope) {\\n        node.treeScope_ = treeScope;\\n        for (var sr = node.shadowRoot; sr; sr = sr.olderShadowRoot) {\\n          sr.treeScope_.parent = treeScope;\\n        }\\n        for (var child = node.firstChild; child; child = child.nextSibling) {\\n          setTreeScope(child, treeScope);\\n        }\\n      }\\n    }\\n    function getTreeScope(node) {\\n      if (node instanceof scope.wrappers.Window) {\\n        debugger;\\n      }\\n      if (node.treeScope_) return node.treeScope_;\\n      var parent = node.parentNode;\\n      var treeScope;\\n      if (parent) treeScope = getTreeScope(parent); else treeScope = new TreeScope(node, null);\\n      return node.treeScope_ = treeScope;\\n    }\\n    scope.TreeScope = TreeScope;\\n    scope.getTreeScope = getTreeScope;\\n    scope.setTreeScope = setTreeScope;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var forwardMethodsToWrapper = scope.forwardMethodsToWrapper;\\n    var getTreeScope = scope.getTreeScope;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var setWrapper = scope.setWrapper;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var unwrap = scope.unwrap;\\n    var wrap = scope.wrap;\\n    var wrappers = scope.wrappers;\\n    var wrappedFuns = new WeakMap();\\n    var listenersTable = new WeakMap();\\n    var handledEventsTable = new WeakMap();\\n    var currentlyDispatchingEvents = new WeakMap();\\n    var targetTable = new WeakMap();\\n    var currentTargetTable = new WeakMap();\\n    var relatedTargetTable = new WeakMap();\\n    var eventPhaseTable = new WeakMap();\\n    var stopPropagationTable = new WeakMap();\\n    var stopImmediatePropagationTable = new WeakMap();\\n    var eventHandlersTable = new WeakMap();\\n    var eventPathTable = new WeakMap();\\n    function isShadowRoot(node) {\\n      return node instanceof wrappers.ShadowRoot;\\n    }\\n    function rootOfNode(node) {\\n      return getTreeScope(node).root;\\n    }\\n    function getEventPath(node, event) {\\n      var path = [];\\n      var current = node;\\n      path.push(current);\\n      while (current) {\\n        var destinationInsertionPoints = getDestinationInsertionPoints(current);\\n        if (destinationInsertionPoints && destinationInsertionPoints.length > 0) {\\n          for (var i = 0; i < destinationInsertionPoints.length; i++) {\\n            var insertionPoint = destinationInsertionPoints[i];\\n            if (isShadowInsertionPoint(insertionPoint)) {\\n              var shadowRoot = rootOfNode(insertionPoint);\\n              var olderShadowRoot = shadowRoot.olderShadowRoot;\\n              if (olderShadowRoot) path.push(olderShadowRoot);\\n            }\\n            path.push(insertionPoint);\\n          }\\n          current = destinationInsertionPoints[destinationInsertionPoints.length - 1];\\n        } else {\\n          if (isShadowRoot(current)) {\\n            if (inSameTree(node, current) && eventMustBeStopped(event)) {\\n              break;\\n            }\\n            current = current.host;\\n            path.push(current);\\n          } else {\\n            current = current.parentNode;\\n            if (current) path.push(current);\\n          }\\n        }\\n      }\\n      return path;\\n    }\\n    function eventMustBeStopped(event) {\\n      if (!event) return false;\\n      switch (event.type) {\\n       case \\\"abort\\\":\\n       case \\\"error\\\":\\n       case \\\"select\\\":\\n       case \\\"change\\\":\\n       case \\\"load\\\":\\n       case \\\"reset\\\":\\n       case \\\"resize\\\":\\n       case \\\"scroll\\\":\\n       case \\\"selectstart\\\":\\n        return true;\\n      }\\n      return false;\\n    }\\n    function isShadowInsertionPoint(node) {\\n      return node instanceof HTMLShadowElement;\\n    }\\n    function getDestinationInsertionPoints(node) {\\n      return scope.getDestinationInsertionPoints(node);\\n    }\\n    function eventRetargetting(path, currentTarget) {\\n      if (path.length === 0) return currentTarget;\\n      if (currentTarget instanceof wrappers.Window) currentTarget = currentTarget.document;\\n      var currentTargetTree = getTreeScope(currentTarget);\\n      var originalTarget = path[0];\\n      var originalTargetTree = getTreeScope(originalTarget);\\n      var relativeTargetTree = lowestCommonInclusiveAncestor(currentTargetTree, originalTargetTree);\\n      for (var i = 0; i < path.length; i++) {\\n        var node = path[i];\\n        if (getTreeScope(node) === relativeTargetTree) return node;\\n      }\\n      return path[path.length - 1];\\n    }\\n    function getTreeScopeAncestors(treeScope) {\\n      var ancestors = [];\\n      for (;treeScope; treeScope = treeScope.parent) {\\n        ancestors.push(treeScope);\\n      }\\n      return ancestors;\\n    }\\n    function lowestCommonInclusiveAncestor(tsA, tsB) {\\n      var ancestorsA = getTreeScopeAncestors(tsA);\\n      var ancestorsB = getTreeScopeAncestors(tsB);\\n      var result = null;\\n      while (ancestorsA.length > 0 && ancestorsB.length > 0) {\\n        var a = ancestorsA.pop();\\n        var b = ancestorsB.pop();\\n        if (a === b) result = a; else break;\\n      }\\n      return result;\\n    }\\n    function getTreeScopeRoot(ts) {\\n      if (!ts.parent) return ts;\\n      return getTreeScopeRoot(ts.parent);\\n    }\\n    function relatedTargetResolution(event, currentTarget, relatedTarget) {\\n      if (currentTarget instanceof wrappers.Window) currentTarget = currentTarget.document;\\n      var currentTargetTree = getTreeScope(currentTarget);\\n      var relatedTargetTree = getTreeScope(relatedTarget);\\n      var relatedTargetEventPath = getEventPath(relatedTarget, event);\\n      var lowestCommonAncestorTree;\\n      var lowestCommonAncestorTree = lowestCommonInclusiveAncestor(currentTargetTree, relatedTargetTree);\\n      if (!lowestCommonAncestorTree) lowestCommonAncestorTree = relatedTargetTree.root;\\n      for (var commonAncestorTree = lowestCommonAncestorTree; commonAncestorTree; commonAncestorTree = commonAncestorTree.parent) {\\n        var adjustedRelatedTarget;\\n        for (var i = 0; i < relatedTargetEventPath.length; i++) {\\n          var node = relatedTargetEventPath[i];\\n          if (getTreeScope(node) === commonAncestorTree) return node;\\n        }\\n      }\\n      return null;\\n    }\\n    function inSameTree(a, b) {\\n      return getTreeScope(a) === getTreeScope(b);\\n    }\\n    var NONE = 0;\\n    var CAPTURING_PHASE = 1;\\n    var AT_TARGET = 2;\\n    var BUBBLING_PHASE = 3;\\n    var pendingError;\\n    function dispatchOriginalEvent(originalEvent) {\\n      if (handledEventsTable.get(originalEvent)) return;\\n      handledEventsTable.set(originalEvent, true);\\n      dispatchEvent(wrap(originalEvent), wrap(originalEvent.target));\\n      if (pendingError) {\\n        var err = pendingError;\\n        pendingError = null;\\n        throw err;\\n      }\\n    }\\n    function isLoadLikeEvent(event) {\\n      switch (event.type) {\\n       case \\\"load\\\":\\n       case \\\"beforeunload\\\":\\n       case \\\"unload\\\":\\n        return true;\\n      }\\n      return false;\\n    }\\n    function dispatchEvent(event, originalWrapperTarget) {\\n      if (currentlyDispatchingEvents.get(event)) throw new Error(\\\"InvalidStateError\\\");\\n      currentlyDispatchingEvents.set(event, true);\\n      scope.renderAllPending();\\n      var eventPath;\\n      var overrideTarget;\\n      var win;\\n      if (isLoadLikeEvent(event) && !event.bubbles) {\\n        var doc = originalWrapperTarget;\\n        if (doc instanceof wrappers.Document && (win = doc.defaultView)) {\\n          overrideTarget = doc;\\n          eventPath = [];\\n        }\\n      }\\n      if (!eventPath) {\\n        if (originalWrapperTarget instanceof wrappers.Window) {\\n          win = originalWrapperTarget;\\n          eventPath = [];\\n        } else {\\n          eventPath = getEventPath(originalWrapperTarget, event);\\n          if (!isLoadLikeEvent(event)) {\\n            var doc = eventPath[eventPath.length - 1];\\n            if (doc instanceof wrappers.Document) win = doc.defaultView;\\n          }\\n        }\\n      }\\n      eventPathTable.set(event, eventPath);\\n      if (dispatchCapturing(event, eventPath, win, overrideTarget)) {\\n        if (dispatchAtTarget(event, eventPath, win, overrideTarget)) {\\n          dispatchBubbling(event, eventPath, win, overrideTarget);\\n        }\\n      }\\n      eventPhaseTable.set(event, NONE);\\n      currentTargetTable.delete(event, null);\\n      currentlyDispatchingEvents.delete(event);\\n      return event.defaultPrevented;\\n    }\\n    function dispatchCapturing(event, eventPath, win, overrideTarget) {\\n      var phase = CAPTURING_PHASE;\\n      if (win) {\\n        if (!invoke(win, event, phase, eventPath, overrideTarget)) return false;\\n      }\\n      for (var i = eventPath.length - 1; i > 0; i--) {\\n        if (!invoke(eventPath[i], event, phase, eventPath, overrideTarget)) return false;\\n      }\\n      return true;\\n    }\\n    function dispatchAtTarget(event, eventPath, win, overrideTarget) {\\n      var phase = AT_TARGET;\\n      var currentTarget = eventPath[0] || win;\\n      return invoke(currentTarget, event, phase, eventPath, overrideTarget);\\n    }\\n    function dispatchBubbling(event, eventPath, win, overrideTarget) {\\n      var phase = BUBBLING_PHASE;\\n      for (var i = 1; i < eventPath.length; i++) {\\n        if (!invoke(eventPath[i], event, phase, eventPath, overrideTarget)) return;\\n      }\\n      if (win && eventPath.length > 0) {\\n        invoke(win, event, phase, eventPath, overrideTarget);\\n      }\\n    }\\n    function invoke(currentTarget, event, phase, eventPath, overrideTarget) {\\n      var listeners = listenersTable.get(currentTarget);\\n      if (!listeners) return true;\\n      var target = overrideTarget || eventRetargetting(eventPath, currentTarget);\\n      if (target === currentTarget) {\\n        if (phase === CAPTURING_PHASE) return true;\\n        if (phase === BUBBLING_PHASE) phase = AT_TARGET;\\n      } else if (phase === BUBBLING_PHASE && !event.bubbles) {\\n        return true;\\n      }\\n      if (\\\"relatedTarget\\\" in event) {\\n        var originalEvent = unwrap(event);\\n        var unwrappedRelatedTarget = originalEvent.relatedTarget;\\n        if (unwrappedRelatedTarget) {\\n          if (unwrappedRelatedTarget instanceof Object && unwrappedRelatedTarget.addEventListener) {\\n            var relatedTarget = wrap(unwrappedRelatedTarget);\\n            var adjusted = relatedTargetResolution(event, currentTarget, relatedTarget);\\n            if (adjusted === target) return true;\\n          } else {\\n            adjusted = null;\\n          }\\n          relatedTargetTable.set(event, adjusted);\\n        }\\n      }\\n      eventPhaseTable.set(event, phase);\\n      var type = event.type;\\n      var anyRemoved = false;\\n      targetTable.set(event, target);\\n      currentTargetTable.set(event, currentTarget);\\n      listeners.depth++;\\n      for (var i = 0, len = listeners.length; i < len; i++) {\\n        var listener = listeners[i];\\n        if (listener.removed) {\\n          anyRemoved = true;\\n          continue;\\n        }\\n        if (listener.type !== type || !listener.capture && phase === CAPTURING_PHASE || listener.capture && phase === BUBBLING_PHASE) {\\n          continue;\\n        }\\n        try {\\n          if (typeof listener.handler === \\\"function\\\") listener.handler.call(currentTarget, event); else listener.handler.handleEvent(event);\\n          if (stopImmediatePropagationTable.get(event)) return false;\\n        } catch (ex) {\\n          if (!pendingError) pendingError = ex;\\n        }\\n      }\\n      listeners.depth--;\\n      if (anyRemoved && listeners.depth === 0) {\\n        var copy = listeners.slice();\\n        listeners.length = 0;\\n        for (var i = 0; i < copy.length; i++) {\\n          if (!copy[i].removed) listeners.push(copy[i]);\\n        }\\n      }\\n      return !stopPropagationTable.get(event);\\n    }\\n    function Listener(type, handler, capture) {\\n      this.type = type;\\n      this.handler = handler;\\n      this.capture = Boolean(capture);\\n    }\\n    Listener.prototype = {\\n      equals: function(that) {\\n        return this.handler === that.handler && this.type === that.type && this.capture === that.capture;\\n      },\\n      get removed() {\\n        return this.handler === null;\\n      },\\n      remove: function() {\\n        this.handler = null;\\n      }\\n    };\\n    var OriginalEvent = window.Event;\\n    OriginalEvent.prototype.polymerBlackList_ = {\\n      returnValue: true,\\n      keyLocation: true\\n    };\\n    function Event(type, options) {\\n      if (type instanceof OriginalEvent) {\\n        var impl = type;\\n        if (!OriginalBeforeUnloadEvent && impl.type === \\\"beforeunload\\\" && !(this instanceof BeforeUnloadEvent)) {\\n          return new BeforeUnloadEvent(impl);\\n        }\\n        setWrapper(impl, this);\\n      } else {\\n        return wrap(constructEvent(OriginalEvent, \\\"Event\\\", type, options));\\n      }\\n    }\\n    Event.prototype = {\\n      get target() {\\n        return targetTable.get(this);\\n      },\\n      get currentTarget() {\\n        return currentTargetTable.get(this);\\n      },\\n      get eventPhase() {\\n        return eventPhaseTable.get(this);\\n      },\\n      get path() {\\n        var eventPath = eventPathTable.get(this);\\n        if (!eventPath) return [];\\n        return eventPath.slice();\\n      },\\n      stopPropagation: function() {\\n        stopPropagationTable.set(this, true);\\n      },\\n      stopImmediatePropagation: function() {\\n        stopPropagationTable.set(this, true);\\n        stopImmediatePropagationTable.set(this, true);\\n      }\\n    };\\n    registerWrapper(OriginalEvent, Event, document.createEvent(\\\"Event\\\"));\\n    function unwrapOptions(options) {\\n      if (!options || !options.relatedTarget) return options;\\n      return Object_create(options, {\\n        relatedTarget: {\\n          value: unwrap(options.relatedTarget)\\n        }\\n      });\\n    }\\n    function registerGenericEvent(name, SuperEvent, prototype) {\\n      var OriginalEvent = window[name];\\n      var GenericEvent = function(type, options) {\\n        if (type instanceof OriginalEvent) setWrapper(type, this); else return wrap(constructEvent(OriginalEvent, name, type, options));\\n      };\\n      GenericEvent.prototype = Object_create(SuperEvent.prototype);\\n      if (prototype) mixin(GenericEvent.prototype, prototype);\\n      if (OriginalEvent) {\\n        try {\\n          registerWrapper(OriginalEvent, GenericEvent, new OriginalEvent(\\\"temp\\\"));\\n        } catch (ex) {\\n          registerWrapper(OriginalEvent, GenericEvent, document.createEvent(name));\\n        }\\n      }\\n      return GenericEvent;\\n    }\\n    var UIEvent = registerGenericEvent(\\\"UIEvent\\\", Event);\\n    var CustomEvent = registerGenericEvent(\\\"CustomEvent\\\", Event);\\n    var relatedTargetProto = {\\n      get relatedTarget() {\\n        var relatedTarget = relatedTargetTable.get(this);\\n        if (relatedTarget !== undefined) return relatedTarget;\\n        return wrap(unwrap(this).relatedTarget);\\n      }\\n    };\\n    function getInitFunction(name, relatedTargetIndex) {\\n      return function() {\\n        arguments[relatedTargetIndex] = unwrap(arguments[relatedTargetIndex]);\\n        var impl = unwrap(this);\\n        impl[name].apply(impl, arguments);\\n      };\\n    }\\n    var mouseEventProto = mixin({\\n      initMouseEvent: getInitFunction(\\\"initMouseEvent\\\", 14)\\n    }, relatedTargetProto);\\n    var focusEventProto = mixin({\\n      initFocusEvent: getInitFunction(\\\"initFocusEvent\\\", 5)\\n    }, relatedTargetProto);\\n    var MouseEvent = registerGenericEvent(\\\"MouseEvent\\\", UIEvent, mouseEventProto);\\n    var FocusEvent = registerGenericEvent(\\\"FocusEvent\\\", UIEvent, focusEventProto);\\n    var defaultInitDicts = Object_create(null);\\n    var supportsEventConstructors = function() {\\n      try {\\n        new window.FocusEvent(\\\"focus\\\");\\n      } catch (ex) {\\n        return false;\\n      }\\n      return true;\\n    }();\\n    function constructEvent(OriginalEvent, name, type, options) {\\n      if (supportsEventConstructors) return new OriginalEvent(type, unwrapOptions(options));\\n      var event = unwrap(document.createEvent(name));\\n      var defaultDict = defaultInitDicts[name];\\n      var args = [ type ];\\n      Object.keys(defaultDict).forEach(function(key) {\\n        var v = options != null && key in options ? options[key] : defaultDict[key];\\n        if (key === \\\"relatedTarget\\\") v = unwrap(v);\\n        args.push(v);\\n      });\\n      event[\\\"init\\\" + name].apply(event, args);\\n      return event;\\n    }\\n    if (!supportsEventConstructors) {\\n      var configureEventConstructor = function(name, initDict, superName) {\\n        if (superName) {\\n          var superDict = defaultInitDicts[superName];\\n          initDict = mixin(mixin({}, superDict), initDict);\\n        }\\n        defaultInitDicts[name] = initDict;\\n      };\\n      configureEventConstructor(\\\"Event\\\", {\\n        bubbles: false,\\n        cancelable: false\\n      });\\n      configureEventConstructor(\\\"CustomEvent\\\", {\\n        detail: null\\n      }, \\\"Event\\\");\\n      configureEventConstructor(\\\"UIEvent\\\", {\\n        view: null,\\n        detail: 0\\n      }, \\\"Event\\\");\\n      configureEventConstructor(\\\"MouseEvent\\\", {\\n        screenX: 0,\\n        screenY: 0,\\n        clientX: 0,\\n        clientY: 0,\\n        ctrlKey: false,\\n        altKey: false,\\n        shiftKey: false,\\n        metaKey: false,\\n        button: 0,\\n        relatedTarget: null\\n      }, \\\"UIEvent\\\");\\n      configureEventConstructor(\\\"FocusEvent\\\", {\\n        relatedTarget: null\\n      }, \\\"UIEvent\\\");\\n    }\\n    var OriginalBeforeUnloadEvent = window.BeforeUnloadEvent;\\n    function BeforeUnloadEvent(impl) {\\n      Event.call(this, impl);\\n    }\\n    BeforeUnloadEvent.prototype = Object_create(Event.prototype);\\n    mixin(BeforeUnloadEvent.prototype, {\\n      get returnValue() {\\n        return unsafeUnwrap(this).returnValue;\\n      },\\n      set returnValue(v) {\\n        unsafeUnwrap(this).returnValue = v;\\n      }\\n    });\\n    if (OriginalBeforeUnloadEvent) registerWrapper(OriginalBeforeUnloadEvent, BeforeUnloadEvent);\\n    function isValidListener(fun) {\\n      if (typeof fun === \\\"function\\\") return true;\\n      return fun && fun.handleEvent;\\n    }\\n    function isMutationEvent(type) {\\n      switch (type) {\\n       case \\\"DOMAttrModified\\\":\\n       case \\\"DOMAttributeNameChanged\\\":\\n       case \\\"DOMCharacterDataModified\\\":\\n       case \\\"DOMElementNameChanged\\\":\\n       case \\\"DOMNodeInserted\\\":\\n       case \\\"DOMNodeInsertedIntoDocument\\\":\\n       case \\\"DOMNodeRemoved\\\":\\n       case \\\"DOMNodeRemovedFromDocument\\\":\\n       case \\\"DOMSubtreeModified\\\":\\n        return true;\\n      }\\n      return false;\\n    }\\n    var OriginalEventTarget = window.EventTarget;\\n    function EventTarget(impl) {\\n      setWrapper(impl, this);\\n    }\\n    var methodNames = [ \\\"addEventListener\\\", \\\"removeEventListener\\\", \\\"dispatchEvent\\\" ];\\n    [ Node, Window ].forEach(function(constructor) {\\n      var p = constructor.prototype;\\n      methodNames.forEach(function(name) {\\n        Object.defineProperty(p, name + \\\"_\\\", {\\n          value: p[name]\\n        });\\n      });\\n    });\\n    function getTargetToListenAt(wrapper) {\\n      if (wrapper instanceof wrappers.ShadowRoot) wrapper = wrapper.host;\\n      return unwrap(wrapper);\\n    }\\n    EventTarget.prototype = {\\n      addEventListener: function(type, fun, capture) {\\n        if (!isValidListener(fun) || isMutationEvent(type)) return;\\n        var listener = new Listener(type, fun, capture);\\n        var listeners = listenersTable.get(this);\\n        if (!listeners) {\\n          listeners = [];\\n          listeners.depth = 0;\\n          listenersTable.set(this, listeners);\\n        } else {\\n          for (var i = 0; i < listeners.length; i++) {\\n            if (listener.equals(listeners[i])) return;\\n          }\\n        }\\n        listeners.push(listener);\\n        var target = getTargetToListenAt(this);\\n        target.addEventListener_(type, dispatchOriginalEvent, true);\\n      },\\n      removeEventListener: function(type, fun, capture) {\\n        capture = Boolean(capture);\\n        var listeners = listenersTable.get(this);\\n        if (!listeners) return;\\n        var count = 0, found = false;\\n        for (var i = 0; i < listeners.length; i++) {\\n          if (listeners[i].type === type && listeners[i].capture === capture) {\\n            count++;\\n            if (listeners[i].handler === fun) {\\n              found = true;\\n              listeners[i].remove();\\n            }\\n          }\\n        }\\n        if (found && count === 1) {\\n          var target = getTargetToListenAt(this);\\n          target.removeEventListener_(type, dispatchOriginalEvent, true);\\n        }\\n      },\\n      dispatchEvent: function(event) {\\n        var nativeEvent = unwrap(event);\\n        var eventType = nativeEvent.type;\\n        handledEventsTable.set(nativeEvent, false);\\n        scope.renderAllPending();\\n        var tempListener;\\n        if (!hasListenerInAncestors(this, eventType)) {\\n          tempListener = function() {};\\n          this.addEventListener(eventType, tempListener, true);\\n        }\\n        try {\\n          return unwrap(this).dispatchEvent_(nativeEvent);\\n        } finally {\\n          if (tempListener) this.removeEventListener(eventType, tempListener, true);\\n        }\\n      }\\n    };\\n    function hasListener(node, type) {\\n      var listeners = listenersTable.get(node);\\n      if (listeners) {\\n        for (var i = 0; i < listeners.length; i++) {\\n          if (!listeners[i].removed && listeners[i].type === type) return true;\\n        }\\n      }\\n      return false;\\n    }\\n    function hasListenerInAncestors(target, type) {\\n      for (var node = unwrap(target); node; node = node.parentNode) {\\n        if (hasListener(wrap(node), type)) return true;\\n      }\\n      return false;\\n    }\\n    if (OriginalEventTarget) registerWrapper(OriginalEventTarget, EventTarget);\\n    function wrapEventTargetMethods(constructors) {\\n      forwardMethodsToWrapper(constructors, methodNames);\\n    }\\n    var originalElementFromPoint = document.elementFromPoint;\\n    function elementFromPoint(self, document, x, y) {\\n      scope.renderAllPending();\\n      var element = wrap(originalElementFromPoint.call(unsafeUnwrap(document), x, y));\\n      if (!element) return null;\\n      var path = getEventPath(element, null);\\n      var idx = path.lastIndexOf(self);\\n      if (idx == -1) return null; else path = path.slice(0, idx);\\n      return eventRetargetting(path, self);\\n    }\\n    function getEventHandlerGetter(name) {\\n      return function() {\\n        var inlineEventHandlers = eventHandlersTable.get(this);\\n        return inlineEventHandlers && inlineEventHandlers[name] && inlineEventHandlers[name].value || null;\\n      };\\n    }\\n    function getEventHandlerSetter(name) {\\n      var eventType = name.slice(2);\\n      return function(value) {\\n        var inlineEventHandlers = eventHandlersTable.get(this);\\n        if (!inlineEventHandlers) {\\n          inlineEventHandlers = Object_create(null);\\n          eventHandlersTable.set(this, inlineEventHandlers);\\n        }\\n        var old = inlineEventHandlers[name];\\n        if (old) this.removeEventListener(eventType, old.wrapped, false);\\n        if (typeof value === \\\"function\\\") {\\n          var wrapped = function(e) {\\n            var rv = value.call(this, e);\\n            if (rv === false) e.preventDefault(); else if (name === \\\"onbeforeunload\\\" && typeof rv === \\\"string\\\") e.returnValue = rv;\\n          };\\n          this.addEventListener(eventType, wrapped, false);\\n          inlineEventHandlers[name] = {\\n            value: value,\\n            wrapped: wrapped\\n          };\\n        }\\n      };\\n    }\\n    scope.elementFromPoint = elementFromPoint;\\n    scope.getEventHandlerGetter = getEventHandlerGetter;\\n    scope.getEventHandlerSetter = getEventHandlerSetter;\\n    scope.wrapEventTargetMethods = wrapEventTargetMethods;\\n    scope.wrappers.BeforeUnloadEvent = BeforeUnloadEvent;\\n    scope.wrappers.CustomEvent = CustomEvent;\\n    scope.wrappers.Event = Event;\\n    scope.wrappers.EventTarget = EventTarget;\\n    scope.wrappers.FocusEvent = FocusEvent;\\n    scope.wrappers.MouseEvent = MouseEvent;\\n    scope.wrappers.UIEvent = UIEvent;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var UIEvent = scope.wrappers.UIEvent;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var setWrapper = scope.setWrapper;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var wrap = scope.wrap;\\n    var OriginalTouchEvent = window.TouchEvent;\\n    if (!OriginalTouchEvent) return;\\n    var nativeEvent;\\n    try {\\n      nativeEvent = document.createEvent(\\\"TouchEvent\\\");\\n    } catch (ex) {\\n      return;\\n    }\\n    var nonEnumDescriptor = {\\n      enumerable: false\\n    };\\n    function nonEnum(obj, prop) {\\n      Object.defineProperty(obj, prop, nonEnumDescriptor);\\n    }\\n    function Touch(impl) {\\n      setWrapper(impl, this);\\n    }\\n    Touch.prototype = {\\n      get target() {\\n        return wrap(unsafeUnwrap(this).target);\\n      }\\n    };\\n    var descr = {\\n      configurable: true,\\n      enumerable: true,\\n      get: null\\n    };\\n    [ \\\"clientX\\\", \\\"clientY\\\", \\\"screenX\\\", \\\"screenY\\\", \\\"pageX\\\", \\\"pageY\\\", \\\"identifier\\\", \\\"webkitRadiusX\\\", \\\"webkitRadiusY\\\", \\\"webkitRotationAngle\\\", \\\"webkitForce\\\" ].forEach(function(name) {\\n      descr.get = function() {\\n        return unsafeUnwrap(this)[name];\\n      };\\n      Object.defineProperty(Touch.prototype, name, descr);\\n    });\\n    function TouchList() {\\n      this.length = 0;\\n      nonEnum(this, \\\"length\\\");\\n    }\\n    TouchList.prototype = {\\n      item: function(index) {\\n        return this[index];\\n      }\\n    };\\n    function wrapTouchList(nativeTouchList) {\\n      var list = new TouchList();\\n      for (var i = 0; i < nativeTouchList.length; i++) {\\n        list[i] = new Touch(nativeTouchList[i]);\\n      }\\n      list.length = i;\\n      return list;\\n    }\\n    function TouchEvent(impl) {\\n      UIEvent.call(this, impl);\\n    }\\n    TouchEvent.prototype = Object_create(UIEvent.prototype);\\n    mixin(TouchEvent.prototype, {\\n      get touches() {\\n        return wrapTouchList(unsafeUnwrap(this).touches);\\n      },\\n      get targetTouches() {\\n        return wrapTouchList(unsafeUnwrap(this).targetTouches);\\n      },\\n      get changedTouches() {\\n        return wrapTouchList(unsafeUnwrap(this).changedTouches);\\n      },\\n      initTouchEvent: function() {\\n        throw new Error(\\\"Not implemented\\\");\\n      }\\n    });\\n    registerWrapper(OriginalTouchEvent, TouchEvent, nativeEvent);\\n    scope.wrappers.Touch = Touch;\\n    scope.wrappers.TouchEvent = TouchEvent;\\n    scope.wrappers.TouchList = TouchList;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var wrap = scope.wrap;\\n    var nonEnumDescriptor = {\\n      enumerable: false\\n    };\\n    function nonEnum(obj, prop) {\\n      Object.defineProperty(obj, prop, nonEnumDescriptor);\\n    }\\n    function NodeList() {\\n      this.length = 0;\\n      nonEnum(this, \\\"length\\\");\\n    }\\n    NodeList.prototype = {\\n      item: function(index) {\\n        return this[index];\\n      }\\n    };\\n    nonEnum(NodeList.prototype, \\\"item\\\");\\n    function wrapNodeList(list) {\\n      if (list == null) return list;\\n      var wrapperList = new NodeList();\\n      for (var i = 0, length = list.length; i < length; i++) {\\n        wrapperList[i] = wrap(list[i]);\\n      }\\n      wrapperList.length = length;\\n      return wrapperList;\\n    }\\n    function addWrapNodeListMethod(wrapperConstructor, name) {\\n      wrapperConstructor.prototype[name] = function() {\\n        return wrapNodeList(unsafeUnwrap(this)[name].apply(unsafeUnwrap(this), arguments));\\n      };\\n    }\\n    scope.wrappers.NodeList = NodeList;\\n    scope.addWrapNodeListMethod = addWrapNodeListMethod;\\n    scope.wrapNodeList = wrapNodeList;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    scope.wrapHTMLCollection = scope.wrapNodeList;\\n    scope.wrappers.HTMLCollection = scope.wrappers.NodeList;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var EventTarget = scope.wrappers.EventTarget;\\n    var NodeList = scope.wrappers.NodeList;\\n    var TreeScope = scope.TreeScope;\\n    var assert = scope.assert;\\n    var defineWrapGetter = scope.defineWrapGetter;\\n    var enqueueMutation = scope.enqueueMutation;\\n    var getTreeScope = scope.getTreeScope;\\n    var isWrapper = scope.isWrapper;\\n    var mixin = scope.mixin;\\n    var registerTransientObservers = scope.registerTransientObservers;\\n    var registerWrapper = scope.registerWrapper;\\n    var setTreeScope = scope.setTreeScope;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var unwrap = scope.unwrap;\\n    var unwrapIfNeeded = scope.unwrapIfNeeded;\\n    var wrap = scope.wrap;\\n    var wrapIfNeeded = scope.wrapIfNeeded;\\n    var wrappers = scope.wrappers;\\n    function assertIsNodeWrapper(node) {\\n      assert(node instanceof Node);\\n    }\\n    function createOneElementNodeList(node) {\\n      var nodes = new NodeList();\\n      nodes[0] = node;\\n      nodes.length = 1;\\n      return nodes;\\n    }\\n    var surpressMutations = false;\\n    function enqueueRemovalForInsertedNodes(node, parent, nodes) {\\n      enqueueMutation(parent, \\\"childList\\\", {\\n        removedNodes: nodes,\\n        previousSibling: node.previousSibling,\\n        nextSibling: node.nextSibling\\n      });\\n    }\\n    function enqueueRemovalForInsertedDocumentFragment(df, nodes) {\\n      enqueueMutation(df, \\\"childList\\\", {\\n        removedNodes: nodes\\n      });\\n    }\\n    function collectNodes(node, parentNode, previousNode, nextNode) {\\n      if (node instanceof DocumentFragment) {\\n        var nodes = collectNodesForDocumentFragment(node);\\n        surpressMutations = true;\\n        for (var i = nodes.length - 1; i >= 0; i--) {\\n          node.removeChild(nodes[i]);\\n          nodes[i].parentNode_ = parentNode;\\n        }\\n        surpressMutations = false;\\n        for (var i = 0; i < nodes.length; i++) {\\n          nodes[i].previousSibling_ = nodes[i - 1] || previousNode;\\n          nodes[i].nextSibling_ = nodes[i + 1] || nextNode;\\n        }\\n        if (previousNode) previousNode.nextSibling_ = nodes[0];\\n        if (nextNode) nextNode.previousSibling_ = nodes[nodes.length - 1];\\n        return nodes;\\n      }\\n      var nodes = createOneElementNodeList(node);\\n      var oldParent = node.parentNode;\\n      if (oldParent) {\\n        oldParent.removeChild(node);\\n      }\\n      node.parentNode_ = parentNode;\\n      node.previousSibling_ = previousNode;\\n      node.nextSibling_ = nextNode;\\n      if (previousNode) previousNode.nextSibling_ = node;\\n      if (nextNode) nextNode.previousSibling_ = node;\\n      return nodes;\\n    }\\n    function collectNodesNative(node) {\\n      if (node instanceof DocumentFragment) return collectNodesForDocumentFragment(node);\\n      var nodes = createOneElementNodeList(node);\\n      var oldParent = node.parentNode;\\n      if (oldParent) enqueueRemovalForInsertedNodes(node, oldParent, nodes);\\n      return nodes;\\n    }\\n    function collectNodesForDocumentFragment(node) {\\n      var nodes = new NodeList();\\n      var i = 0;\\n      for (var child = node.firstChild; child; child = child.nextSibling) {\\n        nodes[i++] = child;\\n      }\\n      nodes.length = i;\\n      enqueueRemovalForInsertedDocumentFragment(node, nodes);\\n      return nodes;\\n    }\\n    function snapshotNodeList(nodeList) {\\n      return nodeList;\\n    }\\n    function nodeWasAdded(node, treeScope) {\\n      setTreeScope(node, treeScope);\\n      node.nodeIsInserted_();\\n    }\\n    function nodesWereAdded(nodes, parent) {\\n      var treeScope = getTreeScope(parent);\\n      for (var i = 0; i < nodes.length; i++) {\\n        nodeWasAdded(nodes[i], treeScope);\\n      }\\n    }\\n    function nodeWasRemoved(node) {\\n      setTreeScope(node, new TreeScope(node, null));\\n    }\\n    function nodesWereRemoved(nodes) {\\n      for (var i = 0; i < nodes.length; i++) {\\n        nodeWasRemoved(nodes[i]);\\n      }\\n    }\\n    function ensureSameOwnerDocument(parent, child) {\\n      var ownerDoc = parent.nodeType === Node.DOCUMENT_NODE ? parent : parent.ownerDocument;\\n      if (ownerDoc !== child.ownerDocument) ownerDoc.adoptNode(child);\\n    }\\n    function adoptNodesIfNeeded(owner, nodes) {\\n      if (!nodes.length) return;\\n      var ownerDoc = owner.ownerDocument;\\n      if (ownerDoc === nodes[0].ownerDocument) return;\\n      for (var i = 0; i < nodes.length; i++) {\\n        scope.adoptNodeNoRemove(nodes[i], ownerDoc);\\n      }\\n    }\\n    function unwrapNodesForInsertion(owner, nodes) {\\n      adoptNodesIfNeeded(owner, nodes);\\n      var length = nodes.length;\\n      if (length === 1) return unwrap(nodes[0]);\\n      var df = unwrap(owner.ownerDocument.createDocumentFragment());\\n      for (var i = 0; i < length; i++) {\\n        df.appendChild(unwrap(nodes[i]));\\n      }\\n      return df;\\n    }\\n    function clearChildNodes(wrapper) {\\n      if (wrapper.firstChild_ !== undefined) {\\n        var child = wrapper.firstChild_;\\n        while (child) {\\n          var tmp = child;\\n          child = child.nextSibling_;\\n          tmp.parentNode_ = tmp.previousSibling_ = tmp.nextSibling_ = undefined;\\n        }\\n      }\\n      wrapper.firstChild_ = wrapper.lastChild_ = undefined;\\n    }\\n    function removeAllChildNodes(wrapper) {\\n      if (wrapper.invalidateShadowRenderer()) {\\n        var childWrapper = wrapper.firstChild;\\n        while (childWrapper) {\\n          assert(childWrapper.parentNode === wrapper);\\n          var nextSibling = childWrapper.nextSibling;\\n          var childNode = unwrap(childWrapper);\\n          var parentNode = childNode.parentNode;\\n          if (parentNode) originalRemoveChild.call(parentNode, childNode);\\n          childWrapper.previousSibling_ = childWrapper.nextSibling_ = childWrapper.parentNode_ = null;\\n          childWrapper = nextSibling;\\n        }\\n        wrapper.firstChild_ = wrapper.lastChild_ = null;\\n      } else {\\n        var node = unwrap(wrapper);\\n        var child = node.firstChild;\\n        var nextSibling;\\n        while (child) {\\n          nextSibling = child.nextSibling;\\n          originalRemoveChild.call(node, child);\\n          child = nextSibling;\\n        }\\n      }\\n    }\\n    function invalidateParent(node) {\\n      var p = node.parentNode;\\n      return p && p.invalidateShadowRenderer();\\n    }\\n    function cleanupNodes(nodes) {\\n      for (var i = 0, n; i < nodes.length; i++) {\\n        n = nodes[i];\\n        n.parentNode.removeChild(n);\\n      }\\n    }\\n    var originalImportNode = document.importNode;\\n    var originalCloneNode = window.Node.prototype.cloneNode;\\n    function cloneNode(node, deep, opt_doc) {\\n      var clone;\\n      if (opt_doc) clone = wrap(originalImportNode.call(opt_doc, unsafeUnwrap(node), false)); else clone = wrap(originalCloneNode.call(unsafeUnwrap(node), false));\\n      if (deep) {\\n        for (var child = node.firstChild; child; child = child.nextSibling) {\\n          clone.appendChild(cloneNode(child, true, opt_doc));\\n        }\\n        if (node instanceof wrappers.HTMLTemplateElement) {\\n          var cloneContent = clone.content;\\n          for (var child = node.content.firstChild; child; child = child.nextSibling) {\\n            cloneContent.appendChild(cloneNode(child, true, opt_doc));\\n          }\\n        }\\n      }\\n      return clone;\\n    }\\n    function contains(self, child) {\\n      if (!child || getTreeScope(self) !== getTreeScope(child)) return false;\\n      for (var node = child; node; node = node.parentNode) {\\n        if (node === self) return true;\\n      }\\n      return false;\\n    }\\n    var OriginalNode = window.Node;\\n    function Node(original) {\\n      assert(original instanceof OriginalNode);\\n      EventTarget.call(this, original);\\n      this.parentNode_ = undefined;\\n      this.firstChild_ = undefined;\\n      this.lastChild_ = undefined;\\n      this.nextSibling_ = undefined;\\n      this.previousSibling_ = undefined;\\n      this.treeScope_ = undefined;\\n    }\\n    var OriginalDocumentFragment = window.DocumentFragment;\\n    var originalAppendChild = OriginalNode.prototype.appendChild;\\n    var originalCompareDocumentPosition = OriginalNode.prototype.compareDocumentPosition;\\n    var originalInsertBefore = OriginalNode.prototype.insertBefore;\\n    var originalRemoveChild = OriginalNode.prototype.removeChild;\\n    var originalReplaceChild = OriginalNode.prototype.replaceChild;\\n    var isIe = /Trident/.test(navigator.userAgent);\\n    var removeChildOriginalHelper = isIe ? function(parent, child) {\\n      try {\\n        originalRemoveChild.call(parent, child);\\n      } catch (ex) {\\n        if (!(parent instanceof OriginalDocumentFragment)) throw ex;\\n      }\\n    } : function(parent, child) {\\n      originalRemoveChild.call(parent, child);\\n    };\\n    Node.prototype = Object_create(EventTarget.prototype);\\n    mixin(Node.prototype, {\\n      appendChild: function(childWrapper) {\\n        return this.insertBefore(childWrapper, null);\\n      },\\n      insertBefore: function(childWrapper, refWrapper) {\\n        assertIsNodeWrapper(childWrapper);\\n        var refNode;\\n        if (refWrapper) {\\n          if (isWrapper(refWrapper)) {\\n            refNode = unwrap(refWrapper);\\n          } else {\\n            refNode = refWrapper;\\n            refWrapper = wrap(refNode);\\n          }\\n        } else {\\n          refWrapper = null;\\n          refNode = null;\\n        }\\n        refWrapper && assert(refWrapper.parentNode === this);\\n        var nodes;\\n        var previousNode = refWrapper ? refWrapper.previousSibling : this.lastChild;\\n        var useNative = !this.invalidateShadowRenderer() && !invalidateParent(childWrapper);\\n        if (useNative) nodes = collectNodesNative(childWrapper); else nodes = collectNodes(childWrapper, this, previousNode, refWrapper);\\n        if (useNative) {\\n          ensureSameOwnerDocument(this, childWrapper);\\n          clearChildNodes(this);\\n          originalInsertBefore.call(unsafeUnwrap(this), unwrap(childWrapper), refNode);\\n        } else {\\n          if (!previousNode) this.firstChild_ = nodes[0];\\n          if (!refWrapper) {\\n            this.lastChild_ = nodes[nodes.length - 1];\\n            if (this.firstChild_ === undefined) this.firstChild_ = this.firstChild;\\n          }\\n          var parentNode = refNode ? refNode.parentNode : unsafeUnwrap(this);\\n          if (parentNode) {\\n            originalInsertBefore.call(parentNode, unwrapNodesForInsertion(this, nodes), refNode);\\n          } else {\\n            adoptNodesIfNeeded(this, nodes);\\n          }\\n        }\\n        enqueueMutation(this, \\\"childList\\\", {\\n          addedNodes: nodes,\\n          nextSibling: refWrapper,\\n          previousSibling: previousNode\\n        });\\n        nodesWereAdded(nodes, this);\\n        return childWrapper;\\n      },\\n      removeChild: function(childWrapper) {\\n        assertIsNodeWrapper(childWrapper);\\n        if (childWrapper.parentNode !== this) {\\n          var found = false;\\n          var childNodes = this.childNodes;\\n          for (var ieChild = this.firstChild; ieChild; ieChild = ieChild.nextSibling) {\\n            if (ieChild === childWrapper) {\\n              found = true;\\n              break;\\n            }\\n          }\\n          if (!found) {\\n            throw new Error(\\\"NotFoundError\\\");\\n          }\\n        }\\n        var childNode = unwrap(childWrapper);\\n        var childWrapperNextSibling = childWrapper.nextSibling;\\n        var childWrapperPreviousSibling = childWrapper.previousSibling;\\n        if (this.invalidateShadowRenderer()) {\\n          var thisFirstChild = this.firstChild;\\n          var thisLastChild = this.lastChild;\\n          var parentNode = childNode.parentNode;\\n          if (parentNode) removeChildOriginalHelper(parentNode, childNode);\\n          if (thisFirstChild === childWrapper) this.firstChild_ = childWrapperNextSibling;\\n          if (thisLastChild === childWrapper) this.lastChild_ = childWrapperPreviousSibling;\\n          if (childWrapperPreviousSibling) childWrapperPreviousSibling.nextSibling_ = childWrapperNextSibling;\\n          if (childWrapperNextSibling) {\\n            childWrapperNextSibling.previousSibling_ = childWrapperPreviousSibling;\\n          }\\n          childWrapper.previousSibling_ = childWrapper.nextSibling_ = childWrapper.parentNode_ = undefined;\\n        } else {\\n          clearChildNodes(this);\\n          removeChildOriginalHelper(unsafeUnwrap(this), childNode);\\n        }\\n        if (!surpressMutations) {\\n          enqueueMutation(this, \\\"childList\\\", {\\n            removedNodes: createOneElementNodeList(childWrapper),\\n            nextSibling: childWrapperNextSibling,\\n            previousSibling: childWrapperPreviousSibling\\n          });\\n        }\\n        registerTransientObservers(this, childWrapper);\\n        return childWrapper;\\n      },\\n      replaceChild: function(newChildWrapper, oldChildWrapper) {\\n        assertIsNodeWrapper(newChildWrapper);\\n        var oldChildNode;\\n        if (isWrapper(oldChildWrapper)) {\\n          oldChildNode = unwrap(oldChildWrapper);\\n        } else {\\n          oldChildNode = oldChildWrapper;\\n          oldChildWrapper = wrap(oldChildNode);\\n        }\\n        if (oldChildWrapper.parentNode !== this) {\\n          throw new Error(\\\"NotFoundError\\\");\\n        }\\n        var nextNode = oldChildWrapper.nextSibling;\\n        var previousNode = oldChildWrapper.previousSibling;\\n        var nodes;\\n        var useNative = !this.invalidateShadowRenderer() && !invalidateParent(newChildWrapper);\\n        if (useNative) {\\n          nodes = collectNodesNative(newChildWrapper);\\n        } else {\\n          if (nextNode === newChildWrapper) nextNode = newChildWrapper.nextSibling;\\n          nodes = collectNodes(newChildWrapper, this, previousNode, nextNode);\\n        }\\n        if (!useNative) {\\n          if (this.firstChild === oldChildWrapper) this.firstChild_ = nodes[0];\\n          if (this.lastChild === oldChildWrapper) this.lastChild_ = nodes[nodes.length - 1];\\n          oldChildWrapper.previousSibling_ = oldChildWrapper.nextSibling_ = oldChildWrapper.parentNode_ = undefined;\\n          if (oldChildNode.parentNode) {\\n            originalReplaceChild.call(oldChildNode.parentNode, unwrapNodesForInsertion(this, nodes), oldChildNode);\\n          }\\n        } else {\\n          ensureSameOwnerDocument(this, newChildWrapper);\\n          clearChildNodes(this);\\n          originalReplaceChild.call(unsafeUnwrap(this), unwrap(newChildWrapper), oldChildNode);\\n        }\\n        enqueueMutation(this, \\\"childList\\\", {\\n          addedNodes: nodes,\\n          removedNodes: createOneElementNodeList(oldChildWrapper),\\n          nextSibling: nextNode,\\n          previousSibling: previousNode\\n        });\\n        nodeWasRemoved(oldChildWrapper);\\n        nodesWereAdded(nodes, this);\\n        return oldChildWrapper;\\n      },\\n      nodeIsInserted_: function() {\\n        for (var child = this.firstChild; child; child = child.nextSibling) {\\n          child.nodeIsInserted_();\\n        }\\n      },\\n      hasChildNodes: function() {\\n        return this.firstChild !== null;\\n      },\\n      get parentNode() {\\n        return this.parentNode_ !== undefined ? this.parentNode_ : wrap(unsafeUnwrap(this).parentNode);\\n      },\\n      get firstChild() {\\n        return this.firstChild_ !== undefined ? this.firstChild_ : wrap(unsafeUnwrap(this).firstChild);\\n      },\\n      get lastChild() {\\n        return this.lastChild_ !== undefined ? this.lastChild_ : wrap(unsafeUnwrap(this).lastChild);\\n      },\\n      get nextSibling() {\\n        return this.nextSibling_ !== undefined ? this.nextSibling_ : wrap(unsafeUnwrap(this).nextSibling);\\n      },\\n      get previousSibling() {\\n        return this.previousSibling_ !== undefined ? this.previousSibling_ : wrap(unsafeUnwrap(this).previousSibling);\\n      },\\n      get parentElement() {\\n        var p = this.parentNode;\\n        while (p && p.nodeType !== Node.ELEMENT_NODE) {\\n          p = p.parentNode;\\n        }\\n        return p;\\n      },\\n      get textContent() {\\n        var s = \\\"\\\";\\n        for (var child = this.firstChild; child; child = child.nextSibling) {\\n          if (child.nodeType != Node.COMMENT_NODE) {\\n            s += child.textContent;\\n          }\\n        }\\n        return s;\\n      },\\n      set textContent(textContent) {\\n        if (textContent == null) textContent = \\\"\\\";\\n        var removedNodes = snapshotNodeList(this.childNodes);\\n        if (this.invalidateShadowRenderer()) {\\n          removeAllChildNodes(this);\\n          if (textContent !== \\\"\\\") {\\n            var textNode = unsafeUnwrap(this).ownerDocument.createTextNode(textContent);\\n            this.appendChild(textNode);\\n          }\\n        } else {\\n          clearChildNodes(this);\\n          unsafeUnwrap(this).textContent = textContent;\\n        }\\n        var addedNodes = snapshotNodeList(this.childNodes);\\n        enqueueMutation(this, \\\"childList\\\", {\\n          addedNodes: addedNodes,\\n          removedNodes: removedNodes\\n        });\\n        nodesWereRemoved(removedNodes);\\n        nodesWereAdded(addedNodes, this);\\n      },\\n      get childNodes() {\\n        var wrapperList = new NodeList();\\n        var i = 0;\\n        for (var child = this.firstChild; child; child = child.nextSibling) {\\n          wrapperList[i++] = child;\\n        }\\n        wrapperList.length = i;\\n        return wrapperList;\\n      },\\n      cloneNode: function(deep) {\\n        return cloneNode(this, deep);\\n      },\\n      contains: function(child) {\\n        return contains(this, wrapIfNeeded(child));\\n      },\\n      compareDocumentPosition: function(otherNode) {\\n        return originalCompareDocumentPosition.call(unsafeUnwrap(this), unwrapIfNeeded(otherNode));\\n      },\\n      normalize: function() {\\n        var nodes = snapshotNodeList(this.childNodes);\\n        var remNodes = [];\\n        var s = \\\"\\\";\\n        var modNode;\\n        for (var i = 0, n; i < nodes.length; i++) {\\n          n = nodes[i];\\n          if (n.nodeType === Node.TEXT_NODE) {\\n            if (!modNode && !n.data.length) this.removeNode(n); else if (!modNode) modNode = n; else {\\n              s += n.data;\\n              remNodes.push(n);\\n            }\\n          } else {\\n            if (modNode && remNodes.length) {\\n              modNode.data += s;\\n              cleanupNodes(remNodes);\\n            }\\n            remNodes = [];\\n            s = \\\"\\\";\\n            modNode = null;\\n            if (n.childNodes.length) n.normalize();\\n          }\\n        }\\n        if (modNode && remNodes.length) {\\n          modNode.data += s;\\n          cleanupNodes(remNodes);\\n        }\\n      }\\n    });\\n    defineWrapGetter(Node, \\\"ownerDocument\\\");\\n    registerWrapper(OriginalNode, Node, document.createDocumentFragment());\\n    delete Node.prototype.querySelector;\\n    delete Node.prototype.querySelectorAll;\\n    Node.prototype = mixin(Object_create(EventTarget.prototype), Node.prototype);\\n    scope.cloneNode = cloneNode;\\n    scope.nodeWasAdded = nodeWasAdded;\\n    scope.nodeWasRemoved = nodeWasRemoved;\\n    scope.nodesWereAdded = nodesWereAdded;\\n    scope.nodesWereRemoved = nodesWereRemoved;\\n    scope.originalInsertBefore = originalInsertBefore;\\n    scope.originalRemoveChild = originalRemoveChild;\\n    scope.snapshotNodeList = snapshotNodeList;\\n    scope.wrappers.Node = Node;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLCollection = scope.wrappers.HTMLCollection;\\n    var NodeList = scope.wrappers.NodeList;\\n    var getTreeScope = scope.getTreeScope;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var wrap = scope.wrap;\\n    var originalDocumentQuerySelector = document.querySelector;\\n    var originalElementQuerySelector = document.documentElement.querySelector;\\n    var originalDocumentQuerySelectorAll = document.querySelectorAll;\\n    var originalElementQuerySelectorAll = document.documentElement.querySelectorAll;\\n    var originalDocumentGetElementsByTagName = document.getElementsByTagName;\\n    var originalElementGetElementsByTagName = document.documentElement.getElementsByTagName;\\n    var originalDocumentGetElementsByTagNameNS = document.getElementsByTagNameNS;\\n    var originalElementGetElementsByTagNameNS = document.documentElement.getElementsByTagNameNS;\\n    var OriginalElement = window.Element;\\n    var OriginalDocument = window.HTMLDocument || window.Document;\\n    function filterNodeList(list, index, result, deep) {\\n      var wrappedItem = null;\\n      var root = null;\\n      for (var i = 0, length = list.length; i < length; i++) {\\n        wrappedItem = wrap(list[i]);\\n        if (!deep && (root = getTreeScope(wrappedItem).root)) {\\n          if (root instanceof scope.wrappers.ShadowRoot) {\\n            continue;\\n          }\\n        }\\n        result[index++] = wrappedItem;\\n      }\\n      return index;\\n    }\\n    function shimSelector(selector) {\\n      return String(selector).replace(/\\\\/deep\\\\//g, \\\" \\\");\\n    }\\n    function findOne(node, selector) {\\n      var m, el = node.firstElementChild;\\n      while (el) {\\n        if (el.matches(selector)) return el;\\n        m = findOne(el, selector);\\n        if (m) return m;\\n        el = el.nextElementSibling;\\n      }\\n      return null;\\n    }\\n    function matchesSelector(el, selector) {\\n      return el.matches(selector);\\n    }\\n    var XHTML_NS = \\\"http://www.w3.org/1999/xhtml\\\";\\n    function matchesTagName(el, localName, localNameLowerCase) {\\n      var ln = el.localName;\\n      return ln === localName || ln === localNameLowerCase && el.namespaceURI === XHTML_NS;\\n    }\\n    function matchesEveryThing() {\\n      return true;\\n    }\\n    function matchesLocalNameOnly(el, ns, localName) {\\n      return el.localName === localName;\\n    }\\n    function matchesNameSpace(el, ns) {\\n      return el.namespaceURI === ns;\\n    }\\n    function matchesLocalNameNS(el, ns, localName) {\\n      return el.namespaceURI === ns && el.localName === localName;\\n    }\\n    function findElements(node, index, result, p, arg0, arg1) {\\n      var el = node.firstElementChild;\\n      while (el) {\\n        if (p(el, arg0, arg1)) result[index++] = el;\\n        index = findElements(el, index, result, p, arg0, arg1);\\n        el = el.nextElementSibling;\\n      }\\n      return index;\\n    }\\n    function querySelectorAllFiltered(p, index, result, selector, deep) {\\n      var target = unsafeUnwrap(this);\\n      var list;\\n      var root = getTreeScope(this).root;\\n      if (root instanceof scope.wrappers.ShadowRoot) {\\n        return findElements(this, index, result, p, selector, null);\\n      } else if (target instanceof OriginalElement) {\\n        list = originalElementQuerySelectorAll.call(target, selector);\\n      } else if (target instanceof OriginalDocument) {\\n        list = originalDocumentQuerySelectorAll.call(target, selector);\\n      } else {\\n        return findElements(this, index, result, p, selector, null);\\n      }\\n      return filterNodeList(list, index, result, deep);\\n    }\\n    var SelectorsInterface = {\\n      querySelector: function(selector) {\\n        var shimmed = shimSelector(selector);\\n        var deep = shimmed !== selector;\\n        selector = shimmed;\\n        var target = unsafeUnwrap(this);\\n        var wrappedItem;\\n        var root = getTreeScope(this).root;\\n        if (root instanceof scope.wrappers.ShadowRoot) {\\n          return findOne(this, selector);\\n        } else if (target instanceof OriginalElement) {\\n          wrappedItem = wrap(originalElementQuerySelector.call(target, selector));\\n        } else if (target instanceof OriginalDocument) {\\n          wrappedItem = wrap(originalDocumentQuerySelector.call(target, selector));\\n        } else {\\n          return findOne(this, selector);\\n        }\\n        if (!wrappedItem) {\\n          return wrappedItem;\\n        } else if (!deep && (root = getTreeScope(wrappedItem).root)) {\\n          if (root instanceof scope.wrappers.ShadowRoot) {\\n            return findOne(this, selector);\\n          }\\n        }\\n        return wrappedItem;\\n      },\\n      querySelectorAll: function(selector) {\\n        var shimmed = shimSelector(selector);\\n        var deep = shimmed !== selector;\\n        selector = shimmed;\\n        var result = new NodeList();\\n        result.length = querySelectorAllFiltered.call(this, matchesSelector, 0, result, selector, deep);\\n        return result;\\n      }\\n    };\\n    function getElementsByTagNameFiltered(p, index, result, localName, lowercase) {\\n      var target = unsafeUnwrap(this);\\n      var list;\\n      var root = getTreeScope(this).root;\\n      if (root instanceof scope.wrappers.ShadowRoot) {\\n        return findElements(this, index, result, p, localName, lowercase);\\n      } else if (target instanceof OriginalElement) {\\n        list = originalElementGetElementsByTagName.call(target, localName, lowercase);\\n      } else if (target instanceof OriginalDocument) {\\n        list = originalDocumentGetElementsByTagName.call(target, localName, lowercase);\\n      } else {\\n        return findElements(this, index, result, p, localName, lowercase);\\n      }\\n      return filterNodeList(list, index, result, false);\\n    }\\n    function getElementsByTagNameNSFiltered(p, index, result, ns, localName) {\\n      var target = unsafeUnwrap(this);\\n      var list;\\n      var root = getTreeScope(this).root;\\n      if (root instanceof scope.wrappers.ShadowRoot) {\\n        return findElements(this, index, result, p, ns, localName);\\n      } else if (target instanceof OriginalElement) {\\n        list = originalElementGetElementsByTagNameNS.call(target, ns, localName);\\n      } else if (target instanceof OriginalDocument) {\\n        list = originalDocumentGetElementsByTagNameNS.call(target, ns, localName);\\n      } else {\\n        return findElements(this, index, result, p, ns, localName);\\n      }\\n      return filterNodeList(list, index, result, false);\\n    }\\n    var GetElementsByInterface = {\\n      getElementsByTagName: function(localName) {\\n        var result = new HTMLCollection();\\n        var match = localName === \\\"*\\\" ? matchesEveryThing : matchesTagName;\\n        result.length = getElementsByTagNameFiltered.call(this, match, 0, result, localName, localName.toLowerCase());\\n        return result;\\n      },\\n      getElementsByClassName: function(className) {\\n        return this.querySelectorAll(\\\".\\\" + className);\\n      },\\n      getElementsByTagNameNS: function(ns, localName) {\\n        var result = new HTMLCollection();\\n        var match = null;\\n        if (ns === \\\"*\\\") {\\n          match = localName === \\\"*\\\" ? matchesEveryThing : matchesLocalNameOnly;\\n        } else {\\n          match = localName === \\\"*\\\" ? matchesNameSpace : matchesLocalNameNS;\\n        }\\n        result.length = getElementsByTagNameNSFiltered.call(this, match, 0, result, ns || null, localName);\\n        return result;\\n      }\\n    };\\n    scope.GetElementsByInterface = GetElementsByInterface;\\n    scope.SelectorsInterface = SelectorsInterface;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var NodeList = scope.wrappers.NodeList;\\n    function forwardElement(node) {\\n      while (node && node.nodeType !== Node.ELEMENT_NODE) {\\n        node = node.nextSibling;\\n      }\\n      return node;\\n    }\\n    function backwardsElement(node) {\\n      while (node && node.nodeType !== Node.ELEMENT_NODE) {\\n        node = node.previousSibling;\\n      }\\n      return node;\\n    }\\n    var ParentNodeInterface = {\\n      get firstElementChild() {\\n        return forwardElement(this.firstChild);\\n      },\\n      get lastElementChild() {\\n        return backwardsElement(this.lastChild);\\n      },\\n      get childElementCount() {\\n        var count = 0;\\n        for (var child = this.firstElementChild; child; child = child.nextElementSibling) {\\n          count++;\\n        }\\n        return count;\\n      },\\n      get children() {\\n        var wrapperList = new NodeList();\\n        var i = 0;\\n        for (var child = this.firstElementChild; child; child = child.nextElementSibling) {\\n          wrapperList[i++] = child;\\n        }\\n        wrapperList.length = i;\\n        return wrapperList;\\n      },\\n      remove: function() {\\n        var p = this.parentNode;\\n        if (p) p.removeChild(this);\\n      }\\n    };\\n    var ChildNodeInterface = {\\n      get nextElementSibling() {\\n        return forwardElement(this.nextSibling);\\n      },\\n      get previousElementSibling() {\\n        return backwardsElement(this.previousSibling);\\n      }\\n    };\\n    scope.ChildNodeInterface = ChildNodeInterface;\\n    scope.ParentNodeInterface = ParentNodeInterface;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var ChildNodeInterface = scope.ChildNodeInterface;\\n    var Node = scope.wrappers.Node;\\n    var enqueueMutation = scope.enqueueMutation;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var OriginalCharacterData = window.CharacterData;\\n    function CharacterData(node) {\\n      Node.call(this, node);\\n    }\\n    CharacterData.prototype = Object_create(Node.prototype);\\n    mixin(CharacterData.prototype, {\\n      get textContent() {\\n        return this.data;\\n      },\\n      set textContent(value) {\\n        this.data = value;\\n      },\\n      get data() {\\n        return unsafeUnwrap(this).data;\\n      },\\n      set data(value) {\\n        var oldValue = unsafeUnwrap(this).data;\\n        enqueueMutation(this, \\\"characterData\\\", {\\n          oldValue: oldValue\\n        });\\n        unsafeUnwrap(this).data = value;\\n      }\\n    });\\n    mixin(CharacterData.prototype, ChildNodeInterface);\\n    registerWrapper(OriginalCharacterData, CharacterData, document.createTextNode(\\\"\\\"));\\n    scope.wrappers.CharacterData = CharacterData;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var CharacterData = scope.wrappers.CharacterData;\\n    var enqueueMutation = scope.enqueueMutation;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    function toUInt32(x) {\\n      return x >>> 0;\\n    }\\n    var OriginalText = window.Text;\\n    function Text(node) {\\n      CharacterData.call(this, node);\\n    }\\n    Text.prototype = Object_create(CharacterData.prototype);\\n    mixin(Text.prototype, {\\n      splitText: function(offset) {\\n        offset = toUInt32(offset);\\n        var s = this.data;\\n        if (offset > s.length) throw new Error(\\\"IndexSizeError\\\");\\n        var head = s.slice(0, offset);\\n        var tail = s.slice(offset);\\n        this.data = head;\\n        var newTextNode = this.ownerDocument.createTextNode(tail);\\n        if (this.parentNode) this.parentNode.insertBefore(newTextNode, this.nextSibling);\\n        return newTextNode;\\n      }\\n    });\\n    registerWrapper(OriginalText, Text, document.createTextNode(\\\"\\\"));\\n    scope.wrappers.Text = Text;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var setWrapper = scope.setWrapper;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    function invalidateClass(el) {\\n      scope.invalidateRendererBasedOnAttribute(el, \\\"class\\\");\\n    }\\n    function DOMTokenList(impl, ownerElement) {\\n      setWrapper(impl, this);\\n      this.ownerElement_ = ownerElement;\\n    }\\n    DOMTokenList.prototype = {\\n      constructor: DOMTokenList,\\n      get length() {\\n        return unsafeUnwrap(this).length;\\n      },\\n      item: function(index) {\\n        return unsafeUnwrap(this).item(index);\\n      },\\n      contains: function(token) {\\n        return unsafeUnwrap(this).contains(token);\\n      },\\n      add: function() {\\n        unsafeUnwrap(this).add.apply(unsafeUnwrap(this), arguments);\\n        invalidateClass(this.ownerElement_);\\n      },\\n      remove: function() {\\n        unsafeUnwrap(this).remove.apply(unsafeUnwrap(this), arguments);\\n        invalidateClass(this.ownerElement_);\\n      },\\n      toggle: function(token) {\\n        var rv = unsafeUnwrap(this).toggle.apply(unsafeUnwrap(this), arguments);\\n        invalidateClass(this.ownerElement_);\\n        return rv;\\n      },\\n      toString: function() {\\n        return unsafeUnwrap(this).toString();\\n      }\\n    };\\n    scope.wrappers.DOMTokenList = DOMTokenList;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var ChildNodeInterface = scope.ChildNodeInterface;\\n    var GetElementsByInterface = scope.GetElementsByInterface;\\n    var Node = scope.wrappers.Node;\\n    var DOMTokenList = scope.wrappers.DOMTokenList;\\n    var ParentNodeInterface = scope.ParentNodeInterface;\\n    var SelectorsInterface = scope.SelectorsInterface;\\n    var addWrapNodeListMethod = scope.addWrapNodeListMethod;\\n    var enqueueMutation = scope.enqueueMutation;\\n    var mixin = scope.mixin;\\n    var oneOf = scope.oneOf;\\n    var registerWrapper = scope.registerWrapper;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var wrappers = scope.wrappers;\\n    var OriginalElement = window.Element;\\n    var matchesNames = [ \\\"matches\\\", \\\"mozMatchesSelector\\\", \\\"msMatchesSelector\\\", \\\"webkitMatchesSelector\\\" ].filter(function(name) {\\n      return OriginalElement.prototype[name];\\n    });\\n    var matchesName = matchesNames[0];\\n    var originalMatches = OriginalElement.prototype[matchesName];\\n    function invalidateRendererBasedOnAttribute(element, name) {\\n      var p = element.parentNode;\\n      if (!p || !p.shadowRoot) return;\\n      var renderer = scope.getRendererForHost(p);\\n      if (renderer.dependsOnAttribute(name)) renderer.invalidate();\\n    }\\n    function enqueAttributeChange(element, name, oldValue) {\\n      enqueueMutation(element, \\\"attributes\\\", {\\n        name: name,\\n        namespace: null,\\n        oldValue: oldValue\\n      });\\n    }\\n    var classListTable = new WeakMap();\\n    function Element(node) {\\n      Node.call(this, node);\\n    }\\n    Element.prototype = Object_create(Node.prototype);\\n    mixin(Element.prototype, {\\n      createShadowRoot: function() {\\n        var newShadowRoot = new wrappers.ShadowRoot(this);\\n        unsafeUnwrap(this).polymerShadowRoot_ = newShadowRoot;\\n        var renderer = scope.getRendererForHost(this);\\n        renderer.invalidate();\\n        return newShadowRoot;\\n      },\\n      get shadowRoot() {\\n        return unsafeUnwrap(this).polymerShadowRoot_ || null;\\n      },\\n      setAttribute: function(name, value) {\\n        var oldValue = unsafeUnwrap(this).getAttribute(name);\\n        unsafeUnwrap(this).setAttribute(name, value);\\n        enqueAttributeChange(this, name, oldValue);\\n        invalidateRendererBasedOnAttribute(this, name);\\n      },\\n      removeAttribute: function(name) {\\n        var oldValue = unsafeUnwrap(this).getAttribute(name);\\n        unsafeUnwrap(this).removeAttribute(name);\\n        enqueAttributeChange(this, name, oldValue);\\n        invalidateRendererBasedOnAttribute(this, name);\\n      },\\n      matches: function(selector) {\\n        return originalMatches.call(unsafeUnwrap(this), selector);\\n      },\\n      get classList() {\\n        var list = classListTable.get(this);\\n        if (!list) {\\n          classListTable.set(this, list = new DOMTokenList(unsafeUnwrap(this).classList, this));\\n        }\\n        return list;\\n      },\\n      get className() {\\n        return unsafeUnwrap(this).className;\\n      },\\n      set className(v) {\\n        this.setAttribute(\\\"class\\\", v);\\n      },\\n      get id() {\\n        return unsafeUnwrap(this).id;\\n      },\\n      set id(v) {\\n        this.setAttribute(\\\"id\\\", v);\\n      }\\n    });\\n    matchesNames.forEach(function(name) {\\n      if (name !== \\\"matches\\\") {\\n        Element.prototype[name] = function(selector) {\\n          return this.matches(selector);\\n        };\\n      }\\n    });\\n    if (OriginalElement.prototype.webkitCreateShadowRoot) {\\n      Element.prototype.webkitCreateShadowRoot = Element.prototype.createShadowRoot;\\n    }\\n    mixin(Element.prototype, ChildNodeInterface);\\n    mixin(Element.prototype, GetElementsByInterface);\\n    mixin(Element.prototype, ParentNodeInterface);\\n    mixin(Element.prototype, SelectorsInterface);\\n    registerWrapper(OriginalElement, Element, document.createElementNS(null, \\\"x\\\"));\\n    scope.invalidateRendererBasedOnAttribute = invalidateRendererBasedOnAttribute;\\n    scope.matchesNames = matchesNames;\\n    scope.wrappers.Element = Element;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var Element = scope.wrappers.Element;\\n    var defineGetter = scope.defineGetter;\\n    var enqueueMutation = scope.enqueueMutation;\\n    var mixin = scope.mixin;\\n    var nodesWereAdded = scope.nodesWereAdded;\\n    var nodesWereRemoved = scope.nodesWereRemoved;\\n    var registerWrapper = scope.registerWrapper;\\n    var snapshotNodeList = scope.snapshotNodeList;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var unwrap = scope.unwrap;\\n    var wrap = scope.wrap;\\n    var wrappers = scope.wrappers;\\n    var escapeAttrRegExp = /[&\\\\u00A0\\\"]/g;\\n    var escapeDataRegExp = /[&\\\\u00A0<>]/g;\\n    function escapeReplace(c) {\\n      switch (c) {\\n       case \\\"&\\\":\\n        return \\\"&amp;\\\";\\n\\n       case \\\"<\\\":\\n        return \\\"&lt;\\\";\\n\\n       case \\\">\\\":\\n        return \\\"&gt;\\\";\\n\\n       case '\\\"':\\n        return \\\"&quot;\\\";\\n\\n       case \\\" \\\":\\n        return \\\"&nbsp;\\\";\\n      }\\n    }\\n    function escapeAttr(s) {\\n      return s.replace(escapeAttrRegExp, escapeReplace);\\n    }\\n    function escapeData(s) {\\n      return s.replace(escapeDataRegExp, escapeReplace);\\n    }\\n    function makeSet(arr) {\\n      var set = {};\\n      for (var i = 0; i < arr.length; i++) {\\n        set[arr[i]] = true;\\n      }\\n      return set;\\n    }\\n    var voidElements = makeSet([ \\\"area\\\", \\\"base\\\", \\\"br\\\", \\\"col\\\", \\\"command\\\", \\\"embed\\\", \\\"hr\\\", \\\"img\\\", \\\"input\\\", \\\"keygen\\\", \\\"link\\\", \\\"meta\\\", \\\"param\\\", \\\"source\\\", \\\"track\\\", \\\"wbr\\\" ]);\\n    var plaintextParents = makeSet([ \\\"style\\\", \\\"script\\\", \\\"xmp\\\", \\\"iframe\\\", \\\"noembed\\\", \\\"noframes\\\", \\\"plaintext\\\", \\\"noscript\\\" ]);\\n    function getOuterHTML(node, parentNode) {\\n      switch (node.nodeType) {\\n       case Node.ELEMENT_NODE:\\n        var tagName = node.tagName.toLowerCase();\\n        var s = \\\"<\\\" + tagName;\\n        var attrs = node.attributes;\\n        for (var i = 0, attr; attr = attrs[i]; i++) {\\n          s += \\\" \\\" + attr.name + '=\\\"' + escapeAttr(attr.value) + '\\\"';\\n        }\\n        s += \\\">\\\";\\n        if (voidElements[tagName]) return s;\\n        return s + getInnerHTML(node) + \\\"</\\\" + tagName + \\\">\\\";\\n\\n       case Node.TEXT_NODE:\\n        var data = node.data;\\n        if (parentNode && plaintextParents[parentNode.localName]) return data;\\n        return escapeData(data);\\n\\n       case Node.COMMENT_NODE:\\n        return \\\"<!--\\\" + node.data + \\\"-->\\\";\\n\\n       default:\\n        console.error(node);\\n        throw new Error(\\\"not implemented\\\");\\n      }\\n    }\\n    function getInnerHTML(node) {\\n      if (node instanceof wrappers.HTMLTemplateElement) node = node.content;\\n      var s = \\\"\\\";\\n      for (var child = node.firstChild; child; child = child.nextSibling) {\\n        s += getOuterHTML(child, node);\\n      }\\n      return s;\\n    }\\n    function setInnerHTML(node, value, opt_tagName) {\\n      var tagName = opt_tagName || \\\"div\\\";\\n      node.textContent = \\\"\\\";\\n      var tempElement = unwrap(node.ownerDocument.createElement(tagName));\\n      tempElement.innerHTML = value;\\n      var firstChild;\\n      while (firstChild = tempElement.firstChild) {\\n        node.appendChild(wrap(firstChild));\\n      }\\n    }\\n    var oldIe = /MSIE/.test(navigator.userAgent);\\n    var OriginalHTMLElement = window.HTMLElement;\\n    var OriginalHTMLTemplateElement = window.HTMLTemplateElement;\\n    function HTMLElement(node) {\\n      Element.call(this, node);\\n    }\\n    HTMLElement.prototype = Object_create(Element.prototype);\\n    mixin(HTMLElement.prototype, {\\n      get innerHTML() {\\n        return getInnerHTML(this);\\n      },\\n      set innerHTML(value) {\\n        if (oldIe && plaintextParents[this.localName]) {\\n          this.textContent = value;\\n          return;\\n        }\\n        var removedNodes = snapshotNodeList(this.childNodes);\\n        if (this.invalidateShadowRenderer()) {\\n          if (this instanceof wrappers.HTMLTemplateElement) setInnerHTML(this.content, value); else setInnerHTML(this, value, this.tagName);\\n        } else if (!OriginalHTMLTemplateElement && this instanceof wrappers.HTMLTemplateElement) {\\n          setInnerHTML(this.content, value);\\n        } else {\\n          unsafeUnwrap(this).innerHTML = value;\\n        }\\n        var addedNodes = snapshotNodeList(this.childNodes);\\n        enqueueMutation(this, \\\"childList\\\", {\\n          addedNodes: addedNodes,\\n          removedNodes: removedNodes\\n        });\\n        nodesWereRemoved(removedNodes);\\n        nodesWereAdded(addedNodes, this);\\n      },\\n      get outerHTML() {\\n        return getOuterHTML(this, this.parentNode);\\n      },\\n      set outerHTML(value) {\\n        var p = this.parentNode;\\n        if (p) {\\n          p.invalidateShadowRenderer();\\n          var df = frag(p, value);\\n          p.replaceChild(df, this);\\n        }\\n      },\\n      insertAdjacentHTML: function(position, text) {\\n        var contextElement, refNode;\\n        switch (String(position).toLowerCase()) {\\n         case \\\"beforebegin\\\":\\n          contextElement = this.parentNode;\\n          refNode = this;\\n          break;\\n\\n         case \\\"afterend\\\":\\n          contextElement = this.parentNode;\\n          refNode = this.nextSibling;\\n          break;\\n\\n         case \\\"afterbegin\\\":\\n          contextElement = this;\\n          refNode = this.firstChild;\\n          break;\\n\\n         case \\\"beforeend\\\":\\n          contextElement = this;\\n          refNode = null;\\n          break;\\n\\n         default:\\n          return;\\n        }\\n        var df = frag(contextElement, text);\\n        contextElement.insertBefore(df, refNode);\\n      },\\n      get hidden() {\\n        return this.hasAttribute(\\\"hidden\\\");\\n      },\\n      set hidden(v) {\\n        if (v) {\\n          this.setAttribute(\\\"hidden\\\", \\\"\\\");\\n        } else {\\n          this.removeAttribute(\\\"hidden\\\");\\n        }\\n      }\\n    });\\n    function frag(contextElement, html) {\\n      var p = unwrap(contextElement.cloneNode(false));\\n      p.innerHTML = html;\\n      var df = unwrap(document.createDocumentFragment());\\n      var c;\\n      while (c = p.firstChild) {\\n        df.appendChild(c);\\n      }\\n      return wrap(df);\\n    }\\n    function getter(name) {\\n      return function() {\\n        scope.renderAllPending();\\n        return unsafeUnwrap(this)[name];\\n      };\\n    }\\n    function getterRequiresRendering(name) {\\n      defineGetter(HTMLElement, name, getter(name));\\n    }\\n    [ \\\"clientHeight\\\", \\\"clientLeft\\\", \\\"clientTop\\\", \\\"clientWidth\\\", \\\"offsetHeight\\\", \\\"offsetLeft\\\", \\\"offsetTop\\\", \\\"offsetWidth\\\", \\\"scrollHeight\\\", \\\"scrollWidth\\\" ].forEach(getterRequiresRendering);\\n    function getterAndSetterRequiresRendering(name) {\\n      Object.defineProperty(HTMLElement.prototype, name, {\\n        get: getter(name),\\n        set: function(v) {\\n          scope.renderAllPending();\\n          unsafeUnwrap(this)[name] = v;\\n        },\\n        configurable: true,\\n        enumerable: true\\n      });\\n    }\\n    [ \\\"scrollLeft\\\", \\\"scrollTop\\\" ].forEach(getterAndSetterRequiresRendering);\\n    function methodRequiresRendering(name) {\\n      Object.defineProperty(HTMLElement.prototype, name, {\\n        value: function() {\\n          scope.renderAllPending();\\n          return unsafeUnwrap(this)[name].apply(unsafeUnwrap(this), arguments);\\n        },\\n        configurable: true,\\n        enumerable: true\\n      });\\n    }\\n    [ \\\"getBoundingClientRect\\\", \\\"getClientRects\\\", \\\"scrollIntoView\\\" ].forEach(methodRequiresRendering);\\n    registerWrapper(OriginalHTMLElement, HTMLElement, document.createElement(\\\"b\\\"));\\n    scope.wrappers.HTMLElement = HTMLElement;\\n    scope.getInnerHTML = getInnerHTML;\\n    scope.setInnerHTML = setInnerHTML;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLElement = scope.wrappers.HTMLElement;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var wrap = scope.wrap;\\n    var OriginalHTMLCanvasElement = window.HTMLCanvasElement;\\n    function HTMLCanvasElement(node) {\\n      HTMLElement.call(this, node);\\n    }\\n    HTMLCanvasElement.prototype = Object_create(HTMLElement.prototype);\\n    mixin(HTMLCanvasElement.prototype, {\\n      getContext: function() {\\n        var context = unsafeUnwrap(this).getContext.apply(unsafeUnwrap(this), arguments);\\n        return context && wrap(context);\\n      }\\n    });\\n    registerWrapper(OriginalHTMLCanvasElement, HTMLCanvasElement, document.createElement(\\\"canvas\\\"));\\n    scope.wrappers.HTMLCanvasElement = HTMLCanvasElement;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLElement = scope.wrappers.HTMLElement;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var OriginalHTMLContentElement = window.HTMLContentElement;\\n    function HTMLContentElement(node) {\\n      HTMLElement.call(this, node);\\n    }\\n    HTMLContentElement.prototype = Object_create(HTMLElement.prototype);\\n    mixin(HTMLContentElement.prototype, {\\n      constructor: HTMLContentElement,\\n      get select() {\\n        return this.getAttribute(\\\"select\\\");\\n      },\\n      set select(value) {\\n        this.setAttribute(\\\"select\\\", value);\\n      },\\n      setAttribute: function(n, v) {\\n        HTMLElement.prototype.setAttribute.call(this, n, v);\\n        if (String(n).toLowerCase() === \\\"select\\\") this.invalidateShadowRenderer(true);\\n      }\\n    });\\n    if (OriginalHTMLContentElement) registerWrapper(OriginalHTMLContentElement, HTMLContentElement);\\n    scope.wrappers.HTMLContentElement = HTMLContentElement;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLElement = scope.wrappers.HTMLElement;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var wrapHTMLCollection = scope.wrapHTMLCollection;\\n    var unwrap = scope.unwrap;\\n    var OriginalHTMLFormElement = window.HTMLFormElement;\\n    function HTMLFormElement(node) {\\n      HTMLElement.call(this, node);\\n    }\\n    HTMLFormElement.prototype = Object_create(HTMLElement.prototype);\\n    mixin(HTMLFormElement.prototype, {\\n      get elements() {\\n        return wrapHTMLCollection(unwrap(this).elements);\\n      }\\n    });\\n    registerWrapper(OriginalHTMLFormElement, HTMLFormElement, document.createElement(\\\"form\\\"));\\n    scope.wrappers.HTMLFormElement = HTMLFormElement;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLElement = scope.wrappers.HTMLElement;\\n    var registerWrapper = scope.registerWrapper;\\n    var unwrap = scope.unwrap;\\n    var rewrap = scope.rewrap;\\n    var OriginalHTMLImageElement = window.HTMLImageElement;\\n    function HTMLImageElement(node) {\\n      HTMLElement.call(this, node);\\n    }\\n    HTMLImageElement.prototype = Object_create(HTMLElement.prototype);\\n    registerWrapper(OriginalHTMLImageElement, HTMLImageElement, document.createElement(\\\"img\\\"));\\n    function Image(width, height) {\\n      if (!(this instanceof Image)) {\\n        throw new TypeError(\\\"DOM object constructor cannot be called as a function.\\\");\\n      }\\n      var node = unwrap(document.createElement(\\\"img\\\"));\\n      HTMLElement.call(this, node);\\n      rewrap(node, this);\\n      if (width !== undefined) node.width = width;\\n      if (height !== undefined) node.height = height;\\n    }\\n    Image.prototype = HTMLImageElement.prototype;\\n    scope.wrappers.HTMLImageElement = HTMLImageElement;\\n    scope.wrappers.Image = Image;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLElement = scope.wrappers.HTMLElement;\\n    var mixin = scope.mixin;\\n    var NodeList = scope.wrappers.NodeList;\\n    var registerWrapper = scope.registerWrapper;\\n    var OriginalHTMLShadowElement = window.HTMLShadowElement;\\n    function HTMLShadowElement(node) {\\n      HTMLElement.call(this, node);\\n    }\\n    HTMLShadowElement.prototype = Object_create(HTMLElement.prototype);\\n    HTMLShadowElement.prototype.constructor = HTMLShadowElement;\\n    if (OriginalHTMLShadowElement) registerWrapper(OriginalHTMLShadowElement, HTMLShadowElement);\\n    scope.wrappers.HTMLShadowElement = HTMLShadowElement;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLElement = scope.wrappers.HTMLElement;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var unwrap = scope.unwrap;\\n    var wrap = scope.wrap;\\n    var contentTable = new WeakMap();\\n    var templateContentsOwnerTable = new WeakMap();\\n    function getTemplateContentsOwner(doc) {\\n      if (!doc.defaultView) return doc;\\n      var d = templateContentsOwnerTable.get(doc);\\n      if (!d) {\\n        d = doc.implementation.createHTMLDocument(\\\"\\\");\\n        while (d.lastChild) {\\n          d.removeChild(d.lastChild);\\n        }\\n        templateContentsOwnerTable.set(doc, d);\\n      }\\n      return d;\\n    }\\n    function extractContent(templateElement) {\\n      var doc = getTemplateContentsOwner(templateElement.ownerDocument);\\n      var df = unwrap(doc.createDocumentFragment());\\n      var child;\\n      while (child = templateElement.firstChild) {\\n        df.appendChild(child);\\n      }\\n      return df;\\n    }\\n    var OriginalHTMLTemplateElement = window.HTMLTemplateElement;\\n    function HTMLTemplateElement(node) {\\n      HTMLElement.call(this, node);\\n      if (!OriginalHTMLTemplateElement) {\\n        var content = extractContent(node);\\n        contentTable.set(this, wrap(content));\\n      }\\n    }\\n    HTMLTemplateElement.prototype = Object_create(HTMLElement.prototype);\\n    mixin(HTMLTemplateElement.prototype, {\\n      constructor: HTMLTemplateElement,\\n      get content() {\\n        if (OriginalHTMLTemplateElement) return wrap(unsafeUnwrap(this).content);\\n        return contentTable.get(this);\\n      }\\n    });\\n    if (OriginalHTMLTemplateElement) registerWrapper(OriginalHTMLTemplateElement, HTMLTemplateElement);\\n    scope.wrappers.HTMLTemplateElement = HTMLTemplateElement;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLElement = scope.wrappers.HTMLElement;\\n    var registerWrapper = scope.registerWrapper;\\n    var OriginalHTMLMediaElement = window.HTMLMediaElement;\\n    if (!OriginalHTMLMediaElement) return;\\n    function HTMLMediaElement(node) {\\n      HTMLElement.call(this, node);\\n    }\\n    HTMLMediaElement.prototype = Object_create(HTMLElement.prototype);\\n    registerWrapper(OriginalHTMLMediaElement, HTMLMediaElement, document.createElement(\\\"audio\\\"));\\n    scope.wrappers.HTMLMediaElement = HTMLMediaElement;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLMediaElement = scope.wrappers.HTMLMediaElement;\\n    var registerWrapper = scope.registerWrapper;\\n    var unwrap = scope.unwrap;\\n    var rewrap = scope.rewrap;\\n    var OriginalHTMLAudioElement = window.HTMLAudioElement;\\n    if (!OriginalHTMLAudioElement) return;\\n    function HTMLAudioElement(node) {\\n      HTMLMediaElement.call(this, node);\\n    }\\n    HTMLAudioElement.prototype = Object_create(HTMLMediaElement.prototype);\\n    registerWrapper(OriginalHTMLAudioElement, HTMLAudioElement, document.createElement(\\\"audio\\\"));\\n    function Audio(src) {\\n      if (!(this instanceof Audio)) {\\n        throw new TypeError(\\\"DOM object constructor cannot be called as a function.\\\");\\n      }\\n      var node = unwrap(document.createElement(\\\"audio\\\"));\\n      HTMLMediaElement.call(this, node);\\n      rewrap(node, this);\\n      node.setAttribute(\\\"preload\\\", \\\"auto\\\");\\n      if (src !== undefined) node.setAttribute(\\\"src\\\", src);\\n    }\\n    Audio.prototype = HTMLAudioElement.prototype;\\n    scope.wrappers.HTMLAudioElement = HTMLAudioElement;\\n    scope.wrappers.Audio = Audio;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLElement = scope.wrappers.HTMLElement;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var rewrap = scope.rewrap;\\n    var unwrap = scope.unwrap;\\n    var wrap = scope.wrap;\\n    var OriginalHTMLOptionElement = window.HTMLOptionElement;\\n    function trimText(s) {\\n      return s.replace(/\\\\s+/g, \\\" \\\").trim();\\n    }\\n    function HTMLOptionElement(node) {\\n      HTMLElement.call(this, node);\\n    }\\n    HTMLOptionElement.prototype = Object_create(HTMLElement.prototype);\\n    mixin(HTMLOptionElement.prototype, {\\n      get text() {\\n        return trimText(this.textContent);\\n      },\\n      set text(value) {\\n        this.textContent = trimText(String(value));\\n      },\\n      get form() {\\n        return wrap(unwrap(this).form);\\n      }\\n    });\\n    registerWrapper(OriginalHTMLOptionElement, HTMLOptionElement, document.createElement(\\\"option\\\"));\\n    function Option(text, value, defaultSelected, selected) {\\n      if (!(this instanceof Option)) {\\n        throw new TypeError(\\\"DOM object constructor cannot be called as a function.\\\");\\n      }\\n      var node = unwrap(document.createElement(\\\"option\\\"));\\n      HTMLElement.call(this, node);\\n      rewrap(node, this);\\n      if (text !== undefined) node.text = text;\\n      if (value !== undefined) node.setAttribute(\\\"value\\\", value);\\n      if (defaultSelected === true) node.setAttribute(\\\"selected\\\", \\\"\\\");\\n      node.selected = selected === true;\\n    }\\n    Option.prototype = HTMLOptionElement.prototype;\\n    scope.wrappers.HTMLOptionElement = HTMLOptionElement;\\n    scope.wrappers.Option = Option;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLElement = scope.wrappers.HTMLElement;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var unwrap = scope.unwrap;\\n    var wrap = scope.wrap;\\n    var OriginalHTMLSelectElement = window.HTMLSelectElement;\\n    function HTMLSelectElement(node) {\\n      HTMLElement.call(this, node);\\n    }\\n    HTMLSelectElement.prototype = Object_create(HTMLElement.prototype);\\n    mixin(HTMLSelectElement.prototype, {\\n      add: function(element, before) {\\n        if (typeof before === \\\"object\\\") before = unwrap(before);\\n        unwrap(this).add(unwrap(element), before);\\n      },\\n      remove: function(indexOrNode) {\\n        if (indexOrNode === undefined) {\\n          HTMLElement.prototype.remove.call(this);\\n          return;\\n        }\\n        if (typeof indexOrNode === \\\"object\\\") indexOrNode = unwrap(indexOrNode);\\n        unwrap(this).remove(indexOrNode);\\n      },\\n      get form() {\\n        return wrap(unwrap(this).form);\\n      }\\n    });\\n    registerWrapper(OriginalHTMLSelectElement, HTMLSelectElement, document.createElement(\\\"select\\\"));\\n    scope.wrappers.HTMLSelectElement = HTMLSelectElement;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLElement = scope.wrappers.HTMLElement;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var unwrap = scope.unwrap;\\n    var wrap = scope.wrap;\\n    var wrapHTMLCollection = scope.wrapHTMLCollection;\\n    var OriginalHTMLTableElement = window.HTMLTableElement;\\n    function HTMLTableElement(node) {\\n      HTMLElement.call(this, node);\\n    }\\n    HTMLTableElement.prototype = Object_create(HTMLElement.prototype);\\n    mixin(HTMLTableElement.prototype, {\\n      get caption() {\\n        return wrap(unwrap(this).caption);\\n      },\\n      createCaption: function() {\\n        return wrap(unwrap(this).createCaption());\\n      },\\n      get tHead() {\\n        return wrap(unwrap(this).tHead);\\n      },\\n      createTHead: function() {\\n        return wrap(unwrap(this).createTHead());\\n      },\\n      createTFoot: function() {\\n        return wrap(unwrap(this).createTFoot());\\n      },\\n      get tFoot() {\\n        return wrap(unwrap(this).tFoot);\\n      },\\n      get tBodies() {\\n        return wrapHTMLCollection(unwrap(this).tBodies);\\n      },\\n      createTBody: function() {\\n        return wrap(unwrap(this).createTBody());\\n      },\\n      get rows() {\\n        return wrapHTMLCollection(unwrap(this).rows);\\n      },\\n      insertRow: function(index) {\\n        return wrap(unwrap(this).insertRow(index));\\n      }\\n    });\\n    registerWrapper(OriginalHTMLTableElement, HTMLTableElement, document.createElement(\\\"table\\\"));\\n    scope.wrappers.HTMLTableElement = HTMLTableElement;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLElement = scope.wrappers.HTMLElement;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var wrapHTMLCollection = scope.wrapHTMLCollection;\\n    var unwrap = scope.unwrap;\\n    var wrap = scope.wrap;\\n    var OriginalHTMLTableSectionElement = window.HTMLTableSectionElement;\\n    function HTMLTableSectionElement(node) {\\n      HTMLElement.call(this, node);\\n    }\\n    HTMLTableSectionElement.prototype = Object_create(HTMLElement.prototype);\\n    mixin(HTMLTableSectionElement.prototype, {\\n      constructor: HTMLTableSectionElement,\\n      get rows() {\\n        return wrapHTMLCollection(unwrap(this).rows);\\n      },\\n      insertRow: function(index) {\\n        return wrap(unwrap(this).insertRow(index));\\n      }\\n    });\\n    registerWrapper(OriginalHTMLTableSectionElement, HTMLTableSectionElement, document.createElement(\\\"thead\\\"));\\n    scope.wrappers.HTMLTableSectionElement = HTMLTableSectionElement;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLElement = scope.wrappers.HTMLElement;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var wrapHTMLCollection = scope.wrapHTMLCollection;\\n    var unwrap = scope.unwrap;\\n    var wrap = scope.wrap;\\n    var OriginalHTMLTableRowElement = window.HTMLTableRowElement;\\n    function HTMLTableRowElement(node) {\\n      HTMLElement.call(this, node);\\n    }\\n    HTMLTableRowElement.prototype = Object_create(HTMLElement.prototype);\\n    mixin(HTMLTableRowElement.prototype, {\\n      get cells() {\\n        return wrapHTMLCollection(unwrap(this).cells);\\n      },\\n      insertCell: function(index) {\\n        return wrap(unwrap(this).insertCell(index));\\n      }\\n    });\\n    registerWrapper(OriginalHTMLTableRowElement, HTMLTableRowElement, document.createElement(\\\"tr\\\"));\\n    scope.wrappers.HTMLTableRowElement = HTMLTableRowElement;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLContentElement = scope.wrappers.HTMLContentElement;\\n    var HTMLElement = scope.wrappers.HTMLElement;\\n    var HTMLShadowElement = scope.wrappers.HTMLShadowElement;\\n    var HTMLTemplateElement = scope.wrappers.HTMLTemplateElement;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var OriginalHTMLUnknownElement = window.HTMLUnknownElement;\\n    function HTMLUnknownElement(node) {\\n      switch (node.localName) {\\n       case \\\"content\\\":\\n        return new HTMLContentElement(node);\\n\\n       case \\\"shadow\\\":\\n        return new HTMLShadowElement(node);\\n\\n       case \\\"template\\\":\\n        return new HTMLTemplateElement(node);\\n      }\\n      HTMLElement.call(this, node);\\n    }\\n    HTMLUnknownElement.prototype = Object_create(HTMLElement.prototype);\\n    registerWrapper(OriginalHTMLUnknownElement, HTMLUnknownElement);\\n    scope.wrappers.HTMLUnknownElement = HTMLUnknownElement;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var Element = scope.wrappers.Element;\\n    var HTMLElement = scope.wrappers.HTMLElement;\\n    var registerObject = scope.registerObject;\\n    var SVG_NS = \\\"http://www.w3.org/2000/svg\\\";\\n    var svgTitleElement = document.createElementNS(SVG_NS, \\\"title\\\");\\n    var SVGTitleElement = registerObject(svgTitleElement);\\n    var SVGElement = Object.getPrototypeOf(SVGTitleElement.prototype).constructor;\\n    if (!(\\\"classList\\\" in svgTitleElement)) {\\n      var descr = Object.getOwnPropertyDescriptor(Element.prototype, \\\"classList\\\");\\n      Object.defineProperty(HTMLElement.prototype, \\\"classList\\\", descr);\\n      delete Element.prototype.classList;\\n    }\\n    scope.wrappers.SVGElement = SVGElement;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var unwrap = scope.unwrap;\\n    var wrap = scope.wrap;\\n    var OriginalSVGUseElement = window.SVGUseElement;\\n    var SVG_NS = \\\"http://www.w3.org/2000/svg\\\";\\n    var gWrapper = wrap(document.createElementNS(SVG_NS, \\\"g\\\"));\\n    var useElement = document.createElementNS(SVG_NS, \\\"use\\\");\\n    var SVGGElement = gWrapper.constructor;\\n    var parentInterfacePrototype = Object.getPrototypeOf(SVGGElement.prototype);\\n    var parentInterface = parentInterfacePrototype.constructor;\\n    function SVGUseElement(impl) {\\n      parentInterface.call(this, impl);\\n    }\\n    SVGUseElement.prototype = Object_create(parentInterfacePrototype);\\n    if (\\\"instanceRoot\\\" in useElement) {\\n      mixin(SVGUseElement.prototype, {\\n        get instanceRoot() {\\n          return wrap(unwrap(this).instanceRoot);\\n        },\\n        get animatedInstanceRoot() {\\n          return wrap(unwrap(this).animatedInstanceRoot);\\n        }\\n      });\\n    }\\n    registerWrapper(OriginalSVGUseElement, SVGUseElement, useElement);\\n    scope.wrappers.SVGUseElement = SVGUseElement;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var EventTarget = scope.wrappers.EventTarget;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var wrap = scope.wrap;\\n    var OriginalSVGElementInstance = window.SVGElementInstance;\\n    if (!OriginalSVGElementInstance) return;\\n    function SVGElementInstance(impl) {\\n      EventTarget.call(this, impl);\\n    }\\n    SVGElementInstance.prototype = Object_create(EventTarget.prototype);\\n    mixin(SVGElementInstance.prototype, {\\n      get correspondingElement() {\\n        return wrap(unsafeUnwrap(this).correspondingElement);\\n      },\\n      get correspondingUseElement() {\\n        return wrap(unsafeUnwrap(this).correspondingUseElement);\\n      },\\n      get parentNode() {\\n        return wrap(unsafeUnwrap(this).parentNode);\\n      },\\n      get childNodes() {\\n        throw new Error(\\\"Not implemented\\\");\\n      },\\n      get firstChild() {\\n        return wrap(unsafeUnwrap(this).firstChild);\\n      },\\n      get lastChild() {\\n        return wrap(unsafeUnwrap(this).lastChild);\\n      },\\n      get previousSibling() {\\n        return wrap(unsafeUnwrap(this).previousSibling);\\n      },\\n      get nextSibling() {\\n        return wrap(unsafeUnwrap(this).nextSibling);\\n      }\\n    });\\n    registerWrapper(OriginalSVGElementInstance, SVGElementInstance);\\n    scope.wrappers.SVGElementInstance = SVGElementInstance;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var setWrapper = scope.setWrapper;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var unwrap = scope.unwrap;\\n    var unwrapIfNeeded = scope.unwrapIfNeeded;\\n    var wrap = scope.wrap;\\n    var OriginalCanvasRenderingContext2D = window.CanvasRenderingContext2D;\\n    function CanvasRenderingContext2D(impl) {\\n      setWrapper(impl, this);\\n    }\\n    mixin(CanvasRenderingContext2D.prototype, {\\n      get canvas() {\\n        return wrap(unsafeUnwrap(this).canvas);\\n      },\\n      drawImage: function() {\\n        arguments[0] = unwrapIfNeeded(arguments[0]);\\n        unsafeUnwrap(this).drawImage.apply(unsafeUnwrap(this), arguments);\\n      },\\n      createPattern: function() {\\n        arguments[0] = unwrap(arguments[0]);\\n        return unsafeUnwrap(this).createPattern.apply(unsafeUnwrap(this), arguments);\\n      }\\n    });\\n    registerWrapper(OriginalCanvasRenderingContext2D, CanvasRenderingContext2D, document.createElement(\\\"canvas\\\").getContext(\\\"2d\\\"));\\n    scope.wrappers.CanvasRenderingContext2D = CanvasRenderingContext2D;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var setWrapper = scope.setWrapper;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var unwrapIfNeeded = scope.unwrapIfNeeded;\\n    var wrap = scope.wrap;\\n    var OriginalWebGLRenderingContext = window.WebGLRenderingContext;\\n    if (!OriginalWebGLRenderingContext) return;\\n    function WebGLRenderingContext(impl) {\\n      setWrapper(impl, this);\\n    }\\n    mixin(WebGLRenderingContext.prototype, {\\n      get canvas() {\\n        return wrap(unsafeUnwrap(this).canvas);\\n      },\\n      texImage2D: function() {\\n        arguments[5] = unwrapIfNeeded(arguments[5]);\\n        unsafeUnwrap(this).texImage2D.apply(unsafeUnwrap(this), arguments);\\n      },\\n      texSubImage2D: function() {\\n        arguments[6] = unwrapIfNeeded(arguments[6]);\\n        unsafeUnwrap(this).texSubImage2D.apply(unsafeUnwrap(this), arguments);\\n      }\\n    });\\n    var instanceProperties = /WebKit/.test(navigator.userAgent) ? {\\n      drawingBufferHeight: null,\\n      drawingBufferWidth: null\\n    } : {};\\n    registerWrapper(OriginalWebGLRenderingContext, WebGLRenderingContext, instanceProperties);\\n    scope.wrappers.WebGLRenderingContext = WebGLRenderingContext;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var registerWrapper = scope.registerWrapper;\\n    var setWrapper = scope.setWrapper;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var unwrap = scope.unwrap;\\n    var unwrapIfNeeded = scope.unwrapIfNeeded;\\n    var wrap = scope.wrap;\\n    var OriginalRange = window.Range;\\n    function Range(impl) {\\n      setWrapper(impl, this);\\n    }\\n    Range.prototype = {\\n      get startContainer() {\\n        return wrap(unsafeUnwrap(this).startContainer);\\n      },\\n      get endContainer() {\\n        return wrap(unsafeUnwrap(this).endContainer);\\n      },\\n      get commonAncestorContainer() {\\n        return wrap(unsafeUnwrap(this).commonAncestorContainer);\\n      },\\n      setStart: function(refNode, offset) {\\n        unsafeUnwrap(this).setStart(unwrapIfNeeded(refNode), offset);\\n      },\\n      setEnd: function(refNode, offset) {\\n        unsafeUnwrap(this).setEnd(unwrapIfNeeded(refNode), offset);\\n      },\\n      setStartBefore: function(refNode) {\\n        unsafeUnwrap(this).setStartBefore(unwrapIfNeeded(refNode));\\n      },\\n      setStartAfter: function(refNode) {\\n        unsafeUnwrap(this).setStartAfter(unwrapIfNeeded(refNode));\\n      },\\n      setEndBefore: function(refNode) {\\n        unsafeUnwrap(this).setEndBefore(unwrapIfNeeded(refNode));\\n      },\\n      setEndAfter: function(refNode) {\\n        unsafeUnwrap(this).setEndAfter(unwrapIfNeeded(refNode));\\n      },\\n      selectNode: function(refNode) {\\n        unsafeUnwrap(this).selectNode(unwrapIfNeeded(refNode));\\n      },\\n      selectNodeContents: function(refNode) {\\n        unsafeUnwrap(this).selectNodeContents(unwrapIfNeeded(refNode));\\n      },\\n      compareBoundaryPoints: function(how, sourceRange) {\\n        return unsafeUnwrap(this).compareBoundaryPoints(how, unwrap(sourceRange));\\n      },\\n      extractContents: function() {\\n        return wrap(unsafeUnwrap(this).extractContents());\\n      },\\n      cloneContents: function() {\\n        return wrap(unsafeUnwrap(this).cloneContents());\\n      },\\n      insertNode: function(node) {\\n        unsafeUnwrap(this).insertNode(unwrapIfNeeded(node));\\n      },\\n      surroundContents: function(newParent) {\\n        unsafeUnwrap(this).surroundContents(unwrapIfNeeded(newParent));\\n      },\\n      cloneRange: function() {\\n        return wrap(unsafeUnwrap(this).cloneRange());\\n      },\\n      isPointInRange: function(node, offset) {\\n        return unsafeUnwrap(this).isPointInRange(unwrapIfNeeded(node), offset);\\n      },\\n      comparePoint: function(node, offset) {\\n        return unsafeUnwrap(this).comparePoint(unwrapIfNeeded(node), offset);\\n      },\\n      intersectsNode: function(node) {\\n        return unsafeUnwrap(this).intersectsNode(unwrapIfNeeded(node));\\n      },\\n      toString: function() {\\n        return unsafeUnwrap(this).toString();\\n      }\\n    };\\n    if (OriginalRange.prototype.createContextualFragment) {\\n      Range.prototype.createContextualFragment = function(html) {\\n        return wrap(unsafeUnwrap(this).createContextualFragment(html));\\n      };\\n    }\\n    registerWrapper(window.Range, Range, document.createRange());\\n    scope.wrappers.Range = Range;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var GetElementsByInterface = scope.GetElementsByInterface;\\n    var ParentNodeInterface = scope.ParentNodeInterface;\\n    var SelectorsInterface = scope.SelectorsInterface;\\n    var mixin = scope.mixin;\\n    var registerObject = scope.registerObject;\\n    var DocumentFragment = registerObject(document.createDocumentFragment());\\n    mixin(DocumentFragment.prototype, ParentNodeInterface);\\n    mixin(DocumentFragment.prototype, SelectorsInterface);\\n    mixin(DocumentFragment.prototype, GetElementsByInterface);\\n    var Comment = registerObject(document.createComment(\\\"\\\"));\\n    scope.wrappers.Comment = Comment;\\n    scope.wrappers.DocumentFragment = DocumentFragment;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var DocumentFragment = scope.wrappers.DocumentFragment;\\n    var TreeScope = scope.TreeScope;\\n    var elementFromPoint = scope.elementFromPoint;\\n    var getInnerHTML = scope.getInnerHTML;\\n    var getTreeScope = scope.getTreeScope;\\n    var mixin = scope.mixin;\\n    var rewrap = scope.rewrap;\\n    var setInnerHTML = scope.setInnerHTML;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var unwrap = scope.unwrap;\\n    var shadowHostTable = new WeakMap();\\n    var nextOlderShadowTreeTable = new WeakMap();\\n    var spaceCharRe = /[ \\\\t\\\\n\\\\r\\\\f]/;\\n    function ShadowRoot(hostWrapper) {\\n      var node = unwrap(unsafeUnwrap(hostWrapper).ownerDocument.createDocumentFragment());\\n      DocumentFragment.call(this, node);\\n      rewrap(node, this);\\n      var oldShadowRoot = hostWrapper.shadowRoot;\\n      nextOlderShadowTreeTable.set(this, oldShadowRoot);\\n      this.treeScope_ = new TreeScope(this, getTreeScope(oldShadowRoot || hostWrapper));\\n      shadowHostTable.set(this, hostWrapper);\\n    }\\n    ShadowRoot.prototype = Object_create(DocumentFragment.prototype);\\n    mixin(ShadowRoot.prototype, {\\n      constructor: ShadowRoot,\\n      get innerHTML() {\\n        return getInnerHTML(this);\\n      },\\n      set innerHTML(value) {\\n        setInnerHTML(this, value);\\n        this.invalidateShadowRenderer();\\n      },\\n      get olderShadowRoot() {\\n        return nextOlderShadowTreeTable.get(this) || null;\\n      },\\n      get host() {\\n        return shadowHostTable.get(this) || null;\\n      },\\n      invalidateShadowRenderer: function() {\\n        return shadowHostTable.get(this).invalidateShadowRenderer();\\n      },\\n      elementFromPoint: function(x, y) {\\n        return elementFromPoint(this, this.ownerDocument, x, y);\\n      },\\n      getElementById: function(id) {\\n        if (spaceCharRe.test(id)) return null;\\n        return this.querySelector('[id=\\\"' + id + '\\\"]');\\n      }\\n    });\\n    scope.wrappers.ShadowRoot = ShadowRoot;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var Element = scope.wrappers.Element;\\n    var HTMLContentElement = scope.wrappers.HTMLContentElement;\\n    var HTMLShadowElement = scope.wrappers.HTMLShadowElement;\\n    var Node = scope.wrappers.Node;\\n    var ShadowRoot = scope.wrappers.ShadowRoot;\\n    var assert = scope.assert;\\n    var getTreeScope = scope.getTreeScope;\\n    var mixin = scope.mixin;\\n    var oneOf = scope.oneOf;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var unwrap = scope.unwrap;\\n    var wrap = scope.wrap;\\n    var ArraySplice = scope.ArraySplice;\\n    function updateWrapperUpAndSideways(wrapper) {\\n      wrapper.previousSibling_ = wrapper.previousSibling;\\n      wrapper.nextSibling_ = wrapper.nextSibling;\\n      wrapper.parentNode_ = wrapper.parentNode;\\n    }\\n    function updateWrapperDown(wrapper) {\\n      wrapper.firstChild_ = wrapper.firstChild;\\n      wrapper.lastChild_ = wrapper.lastChild;\\n    }\\n    function updateAllChildNodes(parentNodeWrapper) {\\n      assert(parentNodeWrapper instanceof Node);\\n      for (var childWrapper = parentNodeWrapper.firstChild; childWrapper; childWrapper = childWrapper.nextSibling) {\\n        updateWrapperUpAndSideways(childWrapper);\\n      }\\n      updateWrapperDown(parentNodeWrapper);\\n    }\\n    function insertBefore(parentNodeWrapper, newChildWrapper, refChildWrapper) {\\n      var parentNode = unwrap(parentNodeWrapper);\\n      var newChild = unwrap(newChildWrapper);\\n      var refChild = refChildWrapper ? unwrap(refChildWrapper) : null;\\n      remove(newChildWrapper);\\n      updateWrapperUpAndSideways(newChildWrapper);\\n      if (!refChildWrapper) {\\n        parentNodeWrapper.lastChild_ = parentNodeWrapper.lastChild;\\n        if (parentNodeWrapper.lastChild === parentNodeWrapper.firstChild) parentNodeWrapper.firstChild_ = parentNodeWrapper.firstChild;\\n        var lastChildWrapper = wrap(parentNode.lastChild);\\n        if (lastChildWrapper) lastChildWrapper.nextSibling_ = lastChildWrapper.nextSibling;\\n      } else {\\n        if (parentNodeWrapper.firstChild === refChildWrapper) parentNodeWrapper.firstChild_ = refChildWrapper;\\n        refChildWrapper.previousSibling_ = refChildWrapper.previousSibling;\\n      }\\n      scope.originalInsertBefore.call(parentNode, newChild, refChild);\\n    }\\n    function remove(nodeWrapper) {\\n      var node = unwrap(nodeWrapper);\\n      var parentNode = node.parentNode;\\n      if (!parentNode) return;\\n      var parentNodeWrapper = wrap(parentNode);\\n      updateWrapperUpAndSideways(nodeWrapper);\\n      if (nodeWrapper.previousSibling) nodeWrapper.previousSibling.nextSibling_ = nodeWrapper;\\n      if (nodeWrapper.nextSibling) nodeWrapper.nextSibling.previousSibling_ = nodeWrapper;\\n      if (parentNodeWrapper.lastChild === nodeWrapper) parentNodeWrapper.lastChild_ = nodeWrapper;\\n      if (parentNodeWrapper.firstChild === nodeWrapper) parentNodeWrapper.firstChild_ = nodeWrapper;\\n      scope.originalRemoveChild.call(parentNode, node);\\n    }\\n    var distributedNodesTable = new WeakMap();\\n    var destinationInsertionPointsTable = new WeakMap();\\n    var rendererForHostTable = new WeakMap();\\n    function resetDistributedNodes(insertionPoint) {\\n      distributedNodesTable.set(insertionPoint, []);\\n    }\\n    function getDistributedNodes(insertionPoint) {\\n      var rv = distributedNodesTable.get(insertionPoint);\\n      if (!rv) distributedNodesTable.set(insertionPoint, rv = []);\\n      return rv;\\n    }\\n    function getChildNodesSnapshot(node) {\\n      var result = [], i = 0;\\n      for (var child = node.firstChild; child; child = child.nextSibling) {\\n        result[i++] = child;\\n      }\\n      return result;\\n    }\\n    var request = oneOf(window, [ \\\"requestAnimationFrame\\\", \\\"mozRequestAnimationFrame\\\", \\\"webkitRequestAnimationFrame\\\", \\\"setTimeout\\\" ]);\\n    var pendingDirtyRenderers = [];\\n    var renderTimer;\\n    function renderAllPending() {\\n      for (var i = 0; i < pendingDirtyRenderers.length; i++) {\\n        var renderer = pendingDirtyRenderers[i];\\n        var parentRenderer = renderer.parentRenderer;\\n        if (parentRenderer && parentRenderer.dirty) continue;\\n        renderer.render();\\n      }\\n      pendingDirtyRenderers = [];\\n    }\\n    function handleRequestAnimationFrame() {\\n      renderTimer = null;\\n      renderAllPending();\\n    }\\n    function getRendererForHost(host) {\\n      var renderer = rendererForHostTable.get(host);\\n      if (!renderer) {\\n        renderer = new ShadowRenderer(host);\\n        rendererForHostTable.set(host, renderer);\\n      }\\n      return renderer;\\n    }\\n    function getShadowRootAncestor(node) {\\n      var root = getTreeScope(node).root;\\n      if (root instanceof ShadowRoot) return root;\\n      return null;\\n    }\\n    function getRendererForShadowRoot(shadowRoot) {\\n      return getRendererForHost(shadowRoot.host);\\n    }\\n    var spliceDiff = new ArraySplice();\\n    spliceDiff.equals = function(renderNode, rawNode) {\\n      return unwrap(renderNode.node) === rawNode;\\n    };\\n    function RenderNode(node) {\\n      this.skip = false;\\n      this.node = node;\\n      this.childNodes = [];\\n    }\\n    RenderNode.prototype = {\\n      append: function(node) {\\n        var rv = new RenderNode(node);\\n        this.childNodes.push(rv);\\n        return rv;\\n      },\\n      sync: function(opt_added) {\\n        if (this.skip) return;\\n        var nodeWrapper = this.node;\\n        var newChildren = this.childNodes;\\n        var oldChildren = getChildNodesSnapshot(unwrap(nodeWrapper));\\n        var added = opt_added || new WeakMap();\\n        var splices = spliceDiff.calculateSplices(newChildren, oldChildren);\\n        var newIndex = 0, oldIndex = 0;\\n        var lastIndex = 0;\\n        for (var i = 0; i < splices.length; i++) {\\n          var splice = splices[i];\\n          for (;lastIndex < splice.index; lastIndex++) {\\n            oldIndex++;\\n            newChildren[newIndex++].sync(added);\\n          }\\n          var removedCount = splice.removed.length;\\n          for (var j = 0; j < removedCount; j++) {\\n            var wrapper = wrap(oldChildren[oldIndex++]);\\n            if (!added.get(wrapper)) remove(wrapper);\\n          }\\n          var addedCount = splice.addedCount;\\n          var refNode = oldChildren[oldIndex] && wrap(oldChildren[oldIndex]);\\n          for (var j = 0; j < addedCount; j++) {\\n            var newChildRenderNode = newChildren[newIndex++];\\n            var newChildWrapper = newChildRenderNode.node;\\n            insertBefore(nodeWrapper, newChildWrapper, refNode);\\n            added.set(newChildWrapper, true);\\n            newChildRenderNode.sync(added);\\n          }\\n          lastIndex += addedCount;\\n        }\\n        for (var i = lastIndex; i < newChildren.length; i++) {\\n          newChildren[i].sync(added);\\n        }\\n      }\\n    };\\n    function ShadowRenderer(host) {\\n      this.host = host;\\n      this.dirty = false;\\n      this.invalidateAttributes();\\n      this.associateNode(host);\\n    }\\n    ShadowRenderer.prototype = {\\n      render: function(opt_renderNode) {\\n        if (!this.dirty) return;\\n        this.invalidateAttributes();\\n        var host = this.host;\\n        this.distribution(host);\\n        var renderNode = opt_renderNode || new RenderNode(host);\\n        this.buildRenderTree(renderNode, host);\\n        var topMostRenderer = !opt_renderNode;\\n        if (topMostRenderer) renderNode.sync();\\n        this.dirty = false;\\n      },\\n      get parentRenderer() {\\n        return getTreeScope(this.host).renderer;\\n      },\\n      invalidate: function() {\\n        if (!this.dirty) {\\n          this.dirty = true;\\n          var parentRenderer = this.parentRenderer;\\n          if (parentRenderer) parentRenderer.invalidate();\\n          pendingDirtyRenderers.push(this);\\n          if (renderTimer) return;\\n          renderTimer = window[request](handleRequestAnimationFrame, 0);\\n        }\\n      },\\n      distribution: function(root) {\\n        this.resetAllSubtrees(root);\\n        this.distributionResolution(root);\\n      },\\n      resetAll: function(node) {\\n        if (isInsertionPoint(node)) resetDistributedNodes(node); else resetDestinationInsertionPoints(node);\\n        this.resetAllSubtrees(node);\\n      },\\n      resetAllSubtrees: function(node) {\\n        for (var child = node.firstChild; child; child = child.nextSibling) {\\n          this.resetAll(child);\\n        }\\n        if (node.shadowRoot) this.resetAll(node.shadowRoot);\\n        if (node.olderShadowRoot) this.resetAll(node.olderShadowRoot);\\n      },\\n      distributionResolution: function(node) {\\n        if (isShadowHost(node)) {\\n          var shadowHost = node;\\n          var pool = poolPopulation(shadowHost);\\n          var shadowTrees = getShadowTrees(shadowHost);\\n          for (var i = 0; i < shadowTrees.length; i++) {\\n            this.poolDistribution(shadowTrees[i], pool);\\n          }\\n          for (var i = shadowTrees.length - 1; i >= 0; i--) {\\n            var shadowTree = shadowTrees[i];\\n            var shadow = getShadowInsertionPoint(shadowTree);\\n            if (shadow) {\\n              var olderShadowRoot = shadowTree.olderShadowRoot;\\n              if (olderShadowRoot) {\\n                pool = poolPopulation(olderShadowRoot);\\n              }\\n              for (var j = 0; j < pool.length; j++) {\\n                destributeNodeInto(pool[j], shadow);\\n              }\\n            }\\n            this.distributionResolution(shadowTree);\\n          }\\n        }\\n        for (var child = node.firstChild; child; child = child.nextSibling) {\\n          this.distributionResolution(child);\\n        }\\n      },\\n      poolDistribution: function(node, pool) {\\n        if (node instanceof HTMLShadowElement) return;\\n        if (node instanceof HTMLContentElement) {\\n          var content = node;\\n          this.updateDependentAttributes(content.getAttribute(\\\"select\\\"));\\n          var anyDistributed = false;\\n          for (var i = 0; i < pool.length; i++) {\\n            var node = pool[i];\\n            if (!node) continue;\\n            if (matches(node, content)) {\\n              destributeNodeInto(node, content);\\n              pool[i] = undefined;\\n              anyDistributed = true;\\n            }\\n          }\\n          if (!anyDistributed) {\\n            for (var child = content.firstChild; child; child = child.nextSibling) {\\n              destributeNodeInto(child, content);\\n            }\\n          }\\n          return;\\n        }\\n        for (var child = node.firstChild; child; child = child.nextSibling) {\\n          this.poolDistribution(child, pool);\\n        }\\n      },\\n      buildRenderTree: function(renderNode, node) {\\n        var children = this.compose(node);\\n        for (var i = 0; i < children.length; i++) {\\n          var child = children[i];\\n          var childRenderNode = renderNode.append(child);\\n          this.buildRenderTree(childRenderNode, child);\\n        }\\n        if (isShadowHost(node)) {\\n          var renderer = getRendererForHost(node);\\n          renderer.dirty = false;\\n        }\\n      },\\n      compose: function(node) {\\n        var children = [];\\n        var p = node.shadowRoot || node;\\n        for (var child = p.firstChild; child; child = child.nextSibling) {\\n          if (isInsertionPoint(child)) {\\n            this.associateNode(p);\\n            var distributedNodes = getDistributedNodes(child);\\n            for (var j = 0; j < distributedNodes.length; j++) {\\n              var distributedNode = distributedNodes[j];\\n              if (isFinalDestination(child, distributedNode)) children.push(distributedNode);\\n            }\\n          } else {\\n            children.push(child);\\n          }\\n        }\\n        return children;\\n      },\\n      invalidateAttributes: function() {\\n        this.attributes = Object_create(null);\\n      },\\n      updateDependentAttributes: function(selector) {\\n        if (!selector) return;\\n        var attributes = this.attributes;\\n        if (/\\\\.\\\\w+/.test(selector)) attributes[\\\"class\\\"] = true;\\n        if (/#\\\\w+/.test(selector)) attributes[\\\"id\\\"] = true;\\n        selector.replace(/\\\\[\\\\s*([^\\\\s=\\\\|~\\\\]]+)/g, function(_, name) {\\n          attributes[name] = true;\\n        });\\n      },\\n      dependsOnAttribute: function(name) {\\n        return this.attributes[name];\\n      },\\n      associateNode: function(node) {\\n        unsafeUnwrap(node).polymerShadowRenderer_ = this;\\n      }\\n    };\\n    function poolPopulation(node) {\\n      var pool = [];\\n      for (var child = node.firstChild; child; child = child.nextSibling) {\\n        if (isInsertionPoint(child)) {\\n          pool.push.apply(pool, getDistributedNodes(child));\\n        } else {\\n          pool.push(child);\\n        }\\n      }\\n      return pool;\\n    }\\n    function getShadowInsertionPoint(node) {\\n      if (node instanceof HTMLShadowElement) return node;\\n      if (node instanceof HTMLContentElement) return null;\\n      for (var child = node.firstChild; child; child = child.nextSibling) {\\n        var res = getShadowInsertionPoint(child);\\n        if (res) return res;\\n      }\\n      return null;\\n    }\\n    function destributeNodeInto(child, insertionPoint) {\\n      getDistributedNodes(insertionPoint).push(child);\\n      var points = destinationInsertionPointsTable.get(child);\\n      if (!points) destinationInsertionPointsTable.set(child, [ insertionPoint ]); else points.push(insertionPoint);\\n    }\\n    function getDestinationInsertionPoints(node) {\\n      return destinationInsertionPointsTable.get(node);\\n    }\\n    function resetDestinationInsertionPoints(node) {\\n      destinationInsertionPointsTable.set(node, undefined);\\n    }\\n    var selectorStartCharRe = /^(:not\\\\()?[*.#[a-zA-Z_|]/;\\n    function matches(node, contentElement) {\\n      var select = contentElement.getAttribute(\\\"select\\\");\\n      if (!select) return true;\\n      select = select.trim();\\n      if (!select) return true;\\n      if (!(node instanceof Element)) return false;\\n      if (!selectorStartCharRe.test(select)) return false;\\n      try {\\n        return node.matches(select);\\n      } catch (ex) {\\n        return false;\\n      }\\n    }\\n    function isFinalDestination(insertionPoint, node) {\\n      var points = getDestinationInsertionPoints(node);\\n      return points && points[points.length - 1] === insertionPoint;\\n    }\\n    function isInsertionPoint(node) {\\n      return node instanceof HTMLContentElement || node instanceof HTMLShadowElement;\\n    }\\n    function isShadowHost(shadowHost) {\\n      return shadowHost.shadowRoot;\\n    }\\n    function getShadowTrees(host) {\\n      var trees = [];\\n      for (var tree = host.shadowRoot; tree; tree = tree.olderShadowRoot) {\\n        trees.push(tree);\\n      }\\n      return trees;\\n    }\\n    function render(host) {\\n      new ShadowRenderer(host).render();\\n    }\\n    Node.prototype.invalidateShadowRenderer = function(force) {\\n      var renderer = unsafeUnwrap(this).polymerShadowRenderer_;\\n      if (renderer) {\\n        renderer.invalidate();\\n        return true;\\n      }\\n      return false;\\n    };\\n    HTMLContentElement.prototype.getDistributedNodes = HTMLShadowElement.prototype.getDistributedNodes = function() {\\n      renderAllPending();\\n      return getDistributedNodes(this);\\n    };\\n    Element.prototype.getDestinationInsertionPoints = function() {\\n      renderAllPending();\\n      return getDestinationInsertionPoints(this) || [];\\n    };\\n    HTMLContentElement.prototype.nodeIsInserted_ = HTMLShadowElement.prototype.nodeIsInserted_ = function() {\\n      this.invalidateShadowRenderer();\\n      var shadowRoot = getShadowRootAncestor(this);\\n      var renderer;\\n      if (shadowRoot) renderer = getRendererForShadowRoot(shadowRoot);\\n      unsafeUnwrap(this).polymerShadowRenderer_ = renderer;\\n      if (renderer) renderer.invalidate();\\n    };\\n    scope.getRendererForHost = getRendererForHost;\\n    scope.getShadowTrees = getShadowTrees;\\n    scope.renderAllPending = renderAllPending;\\n    scope.getDestinationInsertionPoints = getDestinationInsertionPoints;\\n    scope.visual = {\\n      insertBefore: insertBefore,\\n      remove: remove\\n    };\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var HTMLElement = scope.wrappers.HTMLElement;\\n    var assert = scope.assert;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var unwrap = scope.unwrap;\\n    var wrap = scope.wrap;\\n    var elementsWithFormProperty = [ \\\"HTMLButtonElement\\\", \\\"HTMLFieldSetElement\\\", \\\"HTMLInputElement\\\", \\\"HTMLKeygenElement\\\", \\\"HTMLLabelElement\\\", \\\"HTMLLegendElement\\\", \\\"HTMLObjectElement\\\", \\\"HTMLOutputElement\\\", \\\"HTMLTextAreaElement\\\" ];\\n    function createWrapperConstructor(name) {\\n      if (!window[name]) return;\\n      assert(!scope.wrappers[name]);\\n      var GeneratedWrapper = function(node) {\\n        HTMLElement.call(this, node);\\n      };\\n      GeneratedWrapper.prototype = Object_create(HTMLElement.prototype);\\n      mixin(GeneratedWrapper.prototype, {\\n        get form() {\\n          return wrap(unwrap(this).form);\\n        }\\n      });\\n      registerWrapper(window[name], GeneratedWrapper, document.createElement(name.slice(4, -7)));\\n      scope.wrappers[name] = GeneratedWrapper;\\n    }\\n    elementsWithFormProperty.forEach(createWrapperConstructor);\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var registerWrapper = scope.registerWrapper;\\n    var setWrapper = scope.setWrapper;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var unwrap = scope.unwrap;\\n    var unwrapIfNeeded = scope.unwrapIfNeeded;\\n    var wrap = scope.wrap;\\n    var OriginalSelection = window.Selection;\\n    function Selection(impl) {\\n      setWrapper(impl, this);\\n    }\\n    Selection.prototype = {\\n      get anchorNode() {\\n        return wrap(unsafeUnwrap(this).anchorNode);\\n      },\\n      get focusNode() {\\n        return wrap(unsafeUnwrap(this).focusNode);\\n      },\\n      addRange: function(range) {\\n        unsafeUnwrap(this).addRange(unwrap(range));\\n      },\\n      collapse: function(node, index) {\\n        unsafeUnwrap(this).collapse(unwrapIfNeeded(node), index);\\n      },\\n      containsNode: function(node, allowPartial) {\\n        return unsafeUnwrap(this).containsNode(unwrapIfNeeded(node), allowPartial);\\n      },\\n      extend: function(node, offset) {\\n        unsafeUnwrap(this).extend(unwrapIfNeeded(node), offset);\\n      },\\n      getRangeAt: function(index) {\\n        return wrap(unsafeUnwrap(this).getRangeAt(index));\\n      },\\n      removeRange: function(range) {\\n        unsafeUnwrap(this).removeRange(unwrap(range));\\n      },\\n      selectAllChildren: function(node) {\\n        unsafeUnwrap(this).selectAllChildren(unwrapIfNeeded(node));\\n      },\\n      toString: function() {\\n        return unsafeUnwrap(this).toString();\\n      }\\n    };\\n    registerWrapper(window.Selection, Selection, window.getSelection());\\n    scope.wrappers.Selection = Selection;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var GetElementsByInterface = scope.GetElementsByInterface;\\n    var Node = scope.wrappers.Node;\\n    var ParentNodeInterface = scope.ParentNodeInterface;\\n    var Selection = scope.wrappers.Selection;\\n    var SelectorsInterface = scope.SelectorsInterface;\\n    var ShadowRoot = scope.wrappers.ShadowRoot;\\n    var TreeScope = scope.TreeScope;\\n    var cloneNode = scope.cloneNode;\\n    var defineWrapGetter = scope.defineWrapGetter;\\n    var elementFromPoint = scope.elementFromPoint;\\n    var forwardMethodsToWrapper = scope.forwardMethodsToWrapper;\\n    var matchesNames = scope.matchesNames;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var renderAllPending = scope.renderAllPending;\\n    var rewrap = scope.rewrap;\\n    var setWrapper = scope.setWrapper;\\n    var unsafeUnwrap = scope.unsafeUnwrap;\\n    var unwrap = scope.unwrap;\\n    var wrap = scope.wrap;\\n    var wrapEventTargetMethods = scope.wrapEventTargetMethods;\\n    var wrapNodeList = scope.wrapNodeList;\\n    var implementationTable = new WeakMap();\\n    function Document(node) {\\n      Node.call(this, node);\\n      this.treeScope_ = new TreeScope(this, null);\\n    }\\n    Document.prototype = Object_create(Node.prototype);\\n    defineWrapGetter(Document, \\\"documentElement\\\");\\n    defineWrapGetter(Document, \\\"body\\\");\\n    defineWrapGetter(Document, \\\"head\\\");\\n    function wrapMethod(name) {\\n      var original = document[name];\\n      Document.prototype[name] = function() {\\n        return wrap(original.apply(unsafeUnwrap(this), arguments));\\n      };\\n    }\\n    [ \\\"createComment\\\", \\\"createDocumentFragment\\\", \\\"createElement\\\", \\\"createElementNS\\\", \\\"createEvent\\\", \\\"createEventNS\\\", \\\"createRange\\\", \\\"createTextNode\\\", \\\"getElementById\\\" ].forEach(wrapMethod);\\n    var originalAdoptNode = document.adoptNode;\\n    function adoptNodeNoRemove(node, doc) {\\n      originalAdoptNode.call(unsafeUnwrap(doc), unwrap(node));\\n      adoptSubtree(node, doc);\\n    }\\n    function adoptSubtree(node, doc) {\\n      if (node.shadowRoot) doc.adoptNode(node.shadowRoot);\\n      if (node instanceof ShadowRoot) adoptOlderShadowRoots(node, doc);\\n      for (var child = node.firstChild; child; child = child.nextSibling) {\\n        adoptSubtree(child, doc);\\n      }\\n    }\\n    function adoptOlderShadowRoots(shadowRoot, doc) {\\n      var oldShadowRoot = shadowRoot.olderShadowRoot;\\n      if (oldShadowRoot) doc.adoptNode(oldShadowRoot);\\n    }\\n    var originalGetSelection = document.getSelection;\\n    mixin(Document.prototype, {\\n      adoptNode: function(node) {\\n        if (node.parentNode) node.parentNode.removeChild(node);\\n        adoptNodeNoRemove(node, this);\\n        return node;\\n      },\\n      elementFromPoint: function(x, y) {\\n        return elementFromPoint(this, this, x, y);\\n      },\\n      importNode: function(node, deep) {\\n        return cloneNode(node, deep, unsafeUnwrap(this));\\n      },\\n      getSelection: function() {\\n        renderAllPending();\\n        return new Selection(originalGetSelection.call(unwrap(this)));\\n      },\\n      getElementsByName: function(name) {\\n        return SelectorsInterface.querySelectorAll.call(this, \\\"[name=\\\" + JSON.stringify(String(name)) + \\\"]\\\");\\n      }\\n    });\\n    if (document.registerElement) {\\n      var originalRegisterElement = document.registerElement;\\n      Document.prototype.registerElement = function(tagName, object) {\\n        var prototype, extendsOption;\\n        if (object !== undefined) {\\n          prototype = object.prototype;\\n          extendsOption = object.extends;\\n        }\\n        if (!prototype) prototype = Object_create(HTMLElement.prototype);\\n        if (scope.nativePrototypeTable.get(prototype)) {\\n          throw new Error(\\\"NotSupportedError\\\");\\n        }\\n        var proto = Object.getPrototypeOf(prototype);\\n        var nativePrototype;\\n        var prototypes = [];\\n        while (proto) {\\n          nativePrototype = scope.nativePrototypeTable.get(proto);\\n          if (nativePrototype) break;\\n          prototypes.push(proto);\\n          proto = Object.getPrototypeOf(proto);\\n        }\\n        if (!nativePrototype) {\\n          throw new Error(\\\"NotSupportedError\\\");\\n        }\\n        var newPrototype = Object_create(nativePrototype);\\n        for (var i = prototypes.length - 1; i >= 0; i--) {\\n          newPrototype = Object_create(newPrototype);\\n        }\\n        [ \\\"createdCallback\\\", \\\"attachedCallback\\\", \\\"detachedCallback\\\", \\\"attributeChangedCallback\\\" ].forEach(function(name) {\\n          var f = prototype[name];\\n          if (!f) return;\\n          newPrototype[name] = function() {\\n            if (!(wrap(this) instanceof CustomElementConstructor)) {\\n              rewrap(this);\\n            }\\n            f.apply(wrap(this), arguments);\\n          };\\n        });\\n        var p = {\\n          prototype: newPrototype\\n        };\\n        if (extendsOption) p.extends = extendsOption;\\n        function CustomElementConstructor(node) {\\n          if (!node) {\\n            if (extendsOption) {\\n              return document.createElement(extendsOption, tagName);\\n            } else {\\n              return document.createElement(tagName);\\n            }\\n          }\\n          setWrapper(node, this);\\n        }\\n        CustomElementConstructor.prototype = prototype;\\n        CustomElementConstructor.prototype.constructor = CustomElementConstructor;\\n        scope.constructorTable.set(newPrototype, CustomElementConstructor);\\n        scope.nativePrototypeTable.set(prototype, newPrototype);\\n        var nativeConstructor = originalRegisterElement.call(unwrap(this), tagName, p);\\n        return CustomElementConstructor;\\n      };\\n      forwardMethodsToWrapper([ window.HTMLDocument || window.Document ], [ \\\"registerElement\\\" ]);\\n    }\\n    forwardMethodsToWrapper([ window.HTMLBodyElement, window.HTMLDocument || window.Document, window.HTMLHeadElement, window.HTMLHtmlElement ], [ \\\"appendChild\\\", \\\"compareDocumentPosition\\\", \\\"contains\\\", \\\"getElementsByClassName\\\", \\\"getElementsByTagName\\\", \\\"getElementsByTagNameNS\\\", \\\"insertBefore\\\", \\\"querySelector\\\", \\\"querySelectorAll\\\", \\\"removeChild\\\", \\\"replaceChild\\\" ].concat(matchesNames));\\n    forwardMethodsToWrapper([ window.HTMLDocument || window.Document ], [ \\\"adoptNode\\\", \\\"importNode\\\", \\\"contains\\\", \\\"createComment\\\", \\\"createDocumentFragment\\\", \\\"createElement\\\", \\\"createElementNS\\\", \\\"createEvent\\\", \\\"createEventNS\\\", \\\"createRange\\\", \\\"createTextNode\\\", \\\"elementFromPoint\\\", \\\"getElementById\\\", \\\"getElementsByName\\\", \\\"getSelection\\\" ]);\\n    mixin(Document.prototype, GetElementsByInterface);\\n    mixin(Document.prototype, ParentNodeInterface);\\n    mixin(Document.prototype, SelectorsInterface);\\n    mixin(Document.prototype, {\\n      get implementation() {\\n        var implementation = implementationTable.get(this);\\n        if (implementation) return implementation;\\n        implementation = new DOMImplementation(unwrap(this).implementation);\\n        implementationTable.set(this, implementation);\\n        return implementation;\\n      },\\n      get defaultView() {\\n        return wrap(unwrap(this).defaultView);\\n      }\\n    });\\n    registerWrapper(window.Document, Document, document.implementation.createHTMLDocument(\\\"\\\"));\\n    if (window.HTMLDocument) registerWrapper(window.HTMLDocument, Document);\\n    wrapEventTargetMethods([ window.HTMLBodyElement, window.HTMLDocument || window.Document, window.HTMLHeadElement ]);\\n    function DOMImplementation(impl) {\\n      setWrapper(impl, this);\\n    }\\n    function wrapImplMethod(constructor, name) {\\n      var original = document.implementation[name];\\n      constructor.prototype[name] = function() {\\n        return wrap(original.apply(unsafeUnwrap(this), arguments));\\n      };\\n    }\\n    function forwardImplMethod(constructor, name) {\\n      var original = document.implementation[name];\\n      constructor.prototype[name] = function() {\\n        return original.apply(unsafeUnwrap(this), arguments);\\n      };\\n    }\\n    wrapImplMethod(DOMImplementation, \\\"createDocumentType\\\");\\n    wrapImplMethod(DOMImplementation, \\\"createDocument\\\");\\n    wrapImplMethod(DOMImplementation, \\\"createHTMLDocument\\\");\\n    forwardImplMethod(DOMImplementation, \\\"hasFeature\\\");\\n    registerWrapper(window.DOMImplementation, DOMImplementation);\\n    forwardMethodsToWrapper([ window.DOMImplementation ], [ \\\"createDocumentType\\\", \\\"createDocument\\\", \\\"createHTMLDocument\\\", \\\"hasFeature\\\" ]);\\n    scope.adoptNodeNoRemove = adoptNodeNoRemove;\\n    scope.wrappers.DOMImplementation = DOMImplementation;\\n    scope.wrappers.Document = Document;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var EventTarget = scope.wrappers.EventTarget;\\n    var Selection = scope.wrappers.Selection;\\n    var mixin = scope.mixin;\\n    var registerWrapper = scope.registerWrapper;\\n    var renderAllPending = scope.renderAllPending;\\n    var unwrap = scope.unwrap;\\n    var unwrapIfNeeded = scope.unwrapIfNeeded;\\n    var wrap = scope.wrap;\\n    var OriginalWindow = window.Window;\\n    var originalGetComputedStyle = window.getComputedStyle;\\n    var originalGetDefaultComputedStyle = window.getDefaultComputedStyle;\\n    var originalGetSelection = window.getSelection;\\n    function Window(impl) {\\n      EventTarget.call(this, impl);\\n    }\\n    Window.prototype = Object_create(EventTarget.prototype);\\n    OriginalWindow.prototype.getComputedStyle = function(el, pseudo) {\\n      return wrap(this || window).getComputedStyle(unwrapIfNeeded(el), pseudo);\\n    };\\n    if (originalGetDefaultComputedStyle) {\\n      OriginalWindow.prototype.getDefaultComputedStyle = function(el, pseudo) {\\n        return wrap(this || window).getDefaultComputedStyle(unwrapIfNeeded(el), pseudo);\\n      };\\n    }\\n    OriginalWindow.prototype.getSelection = function() {\\n      return wrap(this || window).getSelection();\\n    };\\n    delete window.getComputedStyle;\\n    delete window.getDefaultComputedStyle;\\n    delete window.getSelection;\\n    [ \\\"addEventListener\\\", \\\"removeEventListener\\\", \\\"dispatchEvent\\\" ].forEach(function(name) {\\n      OriginalWindow.prototype[name] = function() {\\n        var w = wrap(this || window);\\n        return w[name].apply(w, arguments);\\n      };\\n      delete window[name];\\n    });\\n    mixin(Window.prototype, {\\n      getComputedStyle: function(el, pseudo) {\\n        renderAllPending();\\n        return originalGetComputedStyle.call(unwrap(this), unwrapIfNeeded(el), pseudo);\\n      },\\n      getSelection: function() {\\n        renderAllPending();\\n        return new Selection(originalGetSelection.call(unwrap(this)));\\n      },\\n      get document() {\\n        return wrap(unwrap(this).document);\\n      }\\n    });\\n    if (originalGetDefaultComputedStyle) {\\n      Window.prototype.getDefaultComputedStyle = function(el, pseudo) {\\n        renderAllPending();\\n        return originalGetDefaultComputedStyle.call(unwrap(this), unwrapIfNeeded(el), pseudo);\\n      };\\n    }\\n    registerWrapper(OriginalWindow, Window, window);\\n    scope.wrappers.Window = Window;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var unwrap = scope.unwrap;\\n    var OriginalDataTransfer = window.DataTransfer || window.Clipboard;\\n    var OriginalDataTransferSetDragImage = OriginalDataTransfer.prototype.setDragImage;\\n    if (OriginalDataTransferSetDragImage) {\\n      OriginalDataTransfer.prototype.setDragImage = function(image, x, y) {\\n        OriginalDataTransferSetDragImage.call(this, unwrap(image), x, y);\\n      };\\n    }\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var registerWrapper = scope.registerWrapper;\\n    var setWrapper = scope.setWrapper;\\n    var unwrap = scope.unwrap;\\n    var OriginalFormData = window.FormData;\\n    if (!OriginalFormData) return;\\n    function FormData(formElement) {\\n      var impl;\\n      if (formElement instanceof OriginalFormData) {\\n        impl = formElement;\\n      } else {\\n        impl = new OriginalFormData(formElement && unwrap(formElement));\\n      }\\n      setWrapper(impl, this);\\n    }\\n    registerWrapper(OriginalFormData, FormData, new OriginalFormData());\\n    scope.wrappers.FormData = FormData;\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var unwrapIfNeeded = scope.unwrapIfNeeded;\\n    var originalSend = XMLHttpRequest.prototype.send;\\n    XMLHttpRequest.prototype.send = function(obj) {\\n      return originalSend.call(this, unwrapIfNeeded(obj));\\n    };\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    \\\"use strict\\\";\\n    var isWrapperFor = scope.isWrapperFor;\\n    var elements = {\\n      a: \\\"HTMLAnchorElement\\\",\\n      area: \\\"HTMLAreaElement\\\",\\n      audio: \\\"HTMLAudioElement\\\",\\n      base: \\\"HTMLBaseElement\\\",\\n      body: \\\"HTMLBodyElement\\\",\\n      br: \\\"HTMLBRElement\\\",\\n      button: \\\"HTMLButtonElement\\\",\\n      canvas: \\\"HTMLCanvasElement\\\",\\n      caption: \\\"HTMLTableCaptionElement\\\",\\n      col: \\\"HTMLTableColElement\\\",\\n      content: \\\"HTMLContentElement\\\",\\n      data: \\\"HTMLDataElement\\\",\\n      datalist: \\\"HTMLDataListElement\\\",\\n      del: \\\"HTMLModElement\\\",\\n      dir: \\\"HTMLDirectoryElement\\\",\\n      div: \\\"HTMLDivElement\\\",\\n      dl: \\\"HTMLDListElement\\\",\\n      embed: \\\"HTMLEmbedElement\\\",\\n      fieldset: \\\"HTMLFieldSetElement\\\",\\n      font: \\\"HTMLFontElement\\\",\\n      form: \\\"HTMLFormElement\\\",\\n      frame: \\\"HTMLFrameElement\\\",\\n      frameset: \\\"HTMLFrameSetElement\\\",\\n      h1: \\\"HTMLHeadingElement\\\",\\n      head: \\\"HTMLHeadElement\\\",\\n      hr: \\\"HTMLHRElement\\\",\\n      html: \\\"HTMLHtmlElement\\\",\\n      iframe: \\\"HTMLIFrameElement\\\",\\n      img: \\\"HTMLImageElement\\\",\\n      input: \\\"HTMLInputElement\\\",\\n      keygen: \\\"HTMLKeygenElement\\\",\\n      label: \\\"HTMLLabelElement\\\",\\n      legend: \\\"HTMLLegendElement\\\",\\n      li: \\\"HTMLLIElement\\\",\\n      link: \\\"HTMLLinkElement\\\",\\n      map: \\\"HTMLMapElement\\\",\\n      marquee: \\\"HTMLMarqueeElement\\\",\\n      menu: \\\"HTMLMenuElement\\\",\\n      menuitem: \\\"HTMLMenuItemElement\\\",\\n      meta: \\\"HTMLMetaElement\\\",\\n      meter: \\\"HTMLMeterElement\\\",\\n      object: \\\"HTMLObjectElement\\\",\\n      ol: \\\"HTMLOListElement\\\",\\n      optgroup: \\\"HTMLOptGroupElement\\\",\\n      option: \\\"HTMLOptionElement\\\",\\n      output: \\\"HTMLOutputElement\\\",\\n      p: \\\"HTMLParagraphElement\\\",\\n      param: \\\"HTMLParamElement\\\",\\n      pre: \\\"HTMLPreElement\\\",\\n      progress: \\\"HTMLProgressElement\\\",\\n      q: \\\"HTMLQuoteElement\\\",\\n      script: \\\"HTMLScriptElement\\\",\\n      select: \\\"HTMLSelectElement\\\",\\n      shadow: \\\"HTMLShadowElement\\\",\\n      source: \\\"HTMLSourceElement\\\",\\n      span: \\\"HTMLSpanElement\\\",\\n      style: \\\"HTMLStyleElement\\\",\\n      table: \\\"HTMLTableElement\\\",\\n      tbody: \\\"HTMLTableSectionElement\\\",\\n      template: \\\"HTMLTemplateElement\\\",\\n      textarea: \\\"HTMLTextAreaElement\\\",\\n      thead: \\\"HTMLTableSectionElement\\\",\\n      time: \\\"HTMLTimeElement\\\",\\n      title: \\\"HTMLTitleElement\\\",\\n      tr: \\\"HTMLTableRowElement\\\",\\n      track: \\\"HTMLTrackElement\\\",\\n      ul: \\\"HTMLUListElement\\\",\\n      video: \\\"HTMLVideoElement\\\"\\n    };\\n    function overrideConstructor(tagName) {\\n      var nativeConstructorName = elements[tagName];\\n      var nativeConstructor = window[nativeConstructorName];\\n      if (!nativeConstructor) return;\\n      var element = document.createElement(tagName);\\n      var wrapperConstructor = element.constructor;\\n      window[nativeConstructorName] = wrapperConstructor;\\n    }\\n    Object.keys(elements).forEach(overrideConstructor);\\n    Object.getOwnPropertyNames(scope.wrappers).forEach(function(name) {\\n      window[name] = scope.wrappers[name];\\n    });\\n  })(window.ShadowDOMPolyfill);\\n  (function(scope) {\\n    var ShadowCSS = {\\n      strictStyling: false,\\n      registry: {},\\n      shimStyling: function(root, name, extendsName) {\\n        var scopeStyles = this.prepareRoot(root, name, extendsName);\\n        var typeExtension = this.isTypeExtension(extendsName);\\n        var scopeSelector = this.makeScopeSelector(name, typeExtension);\\n        var cssText = stylesToCssText(scopeStyles, true);\\n        cssText = this.scopeCssText(cssText, scopeSelector);\\n        if (root) {\\n          root.shimmedStyle = cssText;\\n        }\\n        this.addCssToDocument(cssText, name);\\n      },\\n      shimStyle: function(style, selector) {\\n        return this.shimCssText(style.textContent, selector);\\n      },\\n      shimCssText: function(cssText, selector) {\\n        cssText = this.insertDirectives(cssText);\\n        return this.scopeCssText(cssText, selector);\\n      },\\n      makeScopeSelector: function(name, typeExtension) {\\n        if (name) {\\n          return typeExtension ? \\\"[is=\\\" + name + \\\"]\\\" : name;\\n        }\\n        return \\\"\\\";\\n      },\\n      isTypeExtension: function(extendsName) {\\n        return extendsName && extendsName.indexOf(\\\"-\\\") < 0;\\n      },\\n      prepareRoot: function(root, name, extendsName) {\\n        var def = this.registerRoot(root, name, extendsName);\\n        this.replaceTextInStyles(def.rootStyles, this.insertDirectives);\\n        this.removeStyles(root, def.rootStyles);\\n        if (this.strictStyling) {\\n          this.applyScopeToContent(root, name);\\n        }\\n        return def.scopeStyles;\\n      },\\n      removeStyles: function(root, styles) {\\n        for (var i = 0, l = styles.length, s; i < l && (s = styles[i]); i++) {\\n          s.parentNode.removeChild(s);\\n        }\\n      },\\n      registerRoot: function(root, name, extendsName) {\\n        var def = this.registry[name] = {\\n          root: root,\\n          name: name,\\n          extendsName: extendsName\\n        };\\n        var styles = this.findStyles(root);\\n        def.rootStyles = styles;\\n        def.scopeStyles = def.rootStyles;\\n        var extendee = this.registry[def.extendsName];\\n        if (extendee) {\\n          def.scopeStyles = extendee.scopeStyles.concat(def.scopeStyles);\\n        }\\n        return def;\\n      },\\n      findStyles: function(root) {\\n        if (!root) {\\n          return [];\\n        }\\n        var styles = root.querySelectorAll(\\\"style\\\");\\n        return Array.prototype.filter.call(styles, function(s) {\\n          return !s.hasAttribute(NO_SHIM_ATTRIBUTE);\\n        });\\n      },\\n      applyScopeToContent: function(root, name) {\\n        if (root) {\\n          Array.prototype.forEach.call(root.querySelectorAll(\\\"*\\\"), function(node) {\\n            node.setAttribute(name, \\\"\\\");\\n          });\\n          Array.prototype.forEach.call(root.querySelectorAll(\\\"template\\\"), function(template) {\\n            this.applyScopeToContent(template.content, name);\\n          }, this);\\n        }\\n      },\\n      insertDirectives: function(cssText) {\\n        cssText = this.insertPolyfillDirectivesInCssText(cssText);\\n        return this.insertPolyfillRulesInCssText(cssText);\\n      },\\n      insertPolyfillDirectivesInCssText: function(cssText) {\\n        cssText = cssText.replace(cssCommentNextSelectorRe, function(match, p1) {\\n          return p1.slice(0, -2) + \\\"{\\\";\\n        });\\n        return cssText.replace(cssContentNextSelectorRe, function(match, p1) {\\n          return p1 + \\\" {\\\";\\n        });\\n      },\\n      insertPolyfillRulesInCssText: function(cssText) {\\n        cssText = cssText.replace(cssCommentRuleRe, function(match, p1) {\\n          return p1.slice(0, -1);\\n        });\\n        return cssText.replace(cssContentRuleRe, function(match, p1, p2, p3) {\\n          var rule = match.replace(p1, \\\"\\\").replace(p2, \\\"\\\");\\n          return p3 + rule;\\n        });\\n      },\\n      scopeCssText: function(cssText, scopeSelector) {\\n        var unscoped = this.extractUnscopedRulesFromCssText(cssText);\\n        cssText = this.insertPolyfillHostInCssText(cssText);\\n        cssText = this.convertColonHost(cssText);\\n        cssText = this.convertColonHostContext(cssText);\\n        cssText = this.convertShadowDOMSelectors(cssText);\\n        if (scopeSelector) {\\n          var self = this, cssText;\\n          withCssRules(cssText, function(rules) {\\n            cssText = self.scopeRules(rules, scopeSelector);\\n          });\\n        }\\n        cssText = cssText + \\\"\\\\n\\\" + unscoped;\\n        return cssText.trim();\\n      },\\n      extractUnscopedRulesFromCssText: function(cssText) {\\n        var r = \\\"\\\", m;\\n        while (m = cssCommentUnscopedRuleRe.exec(cssText)) {\\n          r += m[1].slice(0, -1) + \\\"\\\\n\\\\n\\\";\\n        }\\n        while (m = cssContentUnscopedRuleRe.exec(cssText)) {\\n          r += m[0].replace(m[2], \\\"\\\").replace(m[1], m[3]) + \\\"\\\\n\\\\n\\\";\\n        }\\n        return r;\\n      },\\n      convertColonHost: function(cssText) {\\n        return this.convertColonRule(cssText, cssColonHostRe, this.colonHostPartReplacer);\\n      },\\n      convertColonHostContext: function(cssText) {\\n        return this.convertColonRule(cssText, cssColonHostContextRe, this.colonHostContextPartReplacer);\\n      },\\n      convertColonRule: function(cssText, regExp, partReplacer) {\\n        return cssText.replace(regExp, function(m, p1, p2, p3) {\\n          p1 = polyfillHostNoCombinator;\\n          if (p2) {\\n            var parts = p2.split(\\\",\\\"), r = [];\\n            for (var i = 0, l = parts.length, p; i < l && (p = parts[i]); i++) {\\n              p = p.trim();\\n              r.push(partReplacer(p1, p, p3));\\n            }\\n            return r.join(\\\",\\\");\\n          } else {\\n            return p1 + p3;\\n          }\\n        });\\n      },\\n      colonHostContextPartReplacer: function(host, part, suffix) {\\n        if (part.match(polyfillHost)) {\\n          return this.colonHostPartReplacer(host, part, suffix);\\n        } else {\\n          return host + part + suffix + \\\", \\\" + part + \\\" \\\" + host + suffix;\\n        }\\n      },\\n      colonHostPartReplacer: function(host, part, suffix) {\\n        return host + part.replace(polyfillHost, \\\"\\\") + suffix;\\n      },\\n      convertShadowDOMSelectors: function(cssText) {\\n        for (var i = 0; i < shadowDOMSelectorsRe.length; i++) {\\n          cssText = cssText.replace(shadowDOMSelectorsRe[i], \\\" \\\");\\n        }\\n        return cssText;\\n      },\\n      scopeRules: function(cssRules, scopeSelector) {\\n        var cssText = \\\"\\\";\\n        if (cssRules) {\\n          Array.prototype.forEach.call(cssRules, function(rule) {\\n            if (rule.selectorText && (rule.style && rule.style.cssText !== undefined)) {\\n              cssText += this.scopeSelector(rule.selectorText, scopeSelector, this.strictStyling) + \\\" {\\\\n\\t\\\";\\n              cssText += this.propertiesFromRule(rule) + \\\"\\\\n}\\\\n\\\\n\\\";\\n            } else if (rule.type === CSSRule.MEDIA_RULE) {\\n              cssText += \\\"@media \\\" + rule.media.mediaText + \\\" {\\\\n\\\";\\n              cssText += this.scopeRules(rule.cssRules, scopeSelector);\\n              cssText += \\\"\\\\n}\\\\n\\\\n\\\";\\n            } else {\\n              try {\\n                if (rule.cssText) {\\n                  cssText += rule.cssText + \\\"\\\\n\\\\n\\\";\\n                }\\n              } catch (x) {\\n                if (rule.type === CSSRule.KEYFRAMES_RULE && rule.cssRules) {\\n                  cssText += this.ieSafeCssTextFromKeyFrameRule(rule);\\n                }\\n              }\\n            }\\n          }, this);\\n        }\\n        return cssText;\\n      },\\n      ieSafeCssTextFromKeyFrameRule: function(rule) {\\n        var cssText = \\\"@keyframes \\\" + rule.name + \\\" {\\\";\\n        Array.prototype.forEach.call(rule.cssRules, function(rule) {\\n          cssText += \\\" \\\" + rule.keyText + \\\" {\\\" + rule.style.cssText + \\\"}\\\";\\n        });\\n        cssText += \\\" }\\\";\\n        return cssText;\\n      },\\n      scopeSelector: function(selector, scopeSelector, strict) {\\n        var r = [], parts = selector.split(\\\",\\\");\\n        parts.forEach(function(p) {\\n          p = p.trim();\\n          if (this.selectorNeedsScoping(p, scopeSelector)) {\\n            p = strict && !p.match(polyfillHostNoCombinator) ? this.applyStrictSelectorScope(p, scopeSelector) : this.applySelectorScope(p, scopeSelector);\\n          }\\n          r.push(p);\\n        }, this);\\n        return r.join(\\\", \\\");\\n      },\\n      selectorNeedsScoping: function(selector, scopeSelector) {\\n        if (Array.isArray(scopeSelector)) {\\n          return true;\\n        }\\n        var re = this.makeScopeMatcher(scopeSelector);\\n        return !selector.match(re);\\n      },\\n      makeScopeMatcher: function(scopeSelector) {\\n        scopeSelector = scopeSelector.replace(/\\\\[/g, \\\"\\\\\\\\[\\\").replace(/\\\\[/g, \\\"\\\\\\\\]\\\");\\n        return new RegExp(\\\"^(\\\" + scopeSelector + \\\")\\\" + selectorReSuffix, \\\"m\\\");\\n      },\\n      applySelectorScope: function(selector, selectorScope) {\\n        return Array.isArray(selectorScope) ? this.applySelectorScopeList(selector, selectorScope) : this.applySimpleSelectorScope(selector, selectorScope);\\n      },\\n      applySelectorScopeList: function(selector, scopeSelectorList) {\\n        var r = [];\\n        for (var i = 0, s; s = scopeSelectorList[i]; i++) {\\n          r.push(this.applySimpleSelectorScope(selector, s));\\n        }\\n        return r.join(\\\", \\\");\\n      },\\n      applySimpleSelectorScope: function(selector, scopeSelector) {\\n        if (selector.match(polyfillHostRe)) {\\n          selector = selector.replace(polyfillHostNoCombinator, scopeSelector);\\n          return selector.replace(polyfillHostRe, scopeSelector + \\\" \\\");\\n        } else {\\n          return scopeSelector + \\\" \\\" + selector;\\n        }\\n      },\\n      applyStrictSelectorScope: function(selector, scopeSelector) {\\n        scopeSelector = scopeSelector.replace(/\\\\[is=([^\\\\]]*)\\\\]/g, \\\"$1\\\");\\n        var splits = [ \\\" \\\", \\\">\\\", \\\"+\\\", \\\"~\\\" ], scoped = selector, attrName = \\\"[\\\" + scopeSelector + \\\"]\\\";\\n        splits.forEach(function(sep) {\\n          var parts = scoped.split(sep);\\n          scoped = parts.map(function(p) {\\n            var t = p.trim().replace(polyfillHostRe, \\\"\\\");\\n            if (t && splits.indexOf(t) < 0 && t.indexOf(attrName) < 0) {\\n              p = t.replace(/([^:]*)(:*)(.*)/, \\\"$1\\\" + attrName + \\\"$2$3\\\");\\n            }\\n            return p;\\n          }).join(sep);\\n        });\\n        return scoped;\\n      },\\n      insertPolyfillHostInCssText: function(selector) {\\n        return selector.replace(colonHostContextRe, polyfillHostContext).replace(colonHostRe, polyfillHost);\\n      },\\n      propertiesFromRule: function(rule) {\\n        var cssText = rule.style.cssText;\\n        if (rule.style.content && !rule.style.content.match(/['\\\"]+|attr/)) {\\n          cssText = cssText.replace(/content:[^;]*;/g, \\\"content: '\\\" + rule.style.content + \\\"';\\\");\\n        }\\n        var style = rule.style;\\n        for (var i in style) {\\n          if (style[i] === \\\"initial\\\") {\\n            cssText += i + \\\": initial; \\\";\\n          }\\n        }\\n        return cssText;\\n      },\\n      replaceTextInStyles: function(styles, action) {\\n        if (styles && action) {\\n          if (!(styles instanceof Array)) {\\n            styles = [ styles ];\\n          }\\n          Array.prototype.forEach.call(styles, function(s) {\\n            s.textContent = action.call(this, s.textContent);\\n          }, this);\\n        }\\n      },\\n      addCssToDocument: function(cssText, name) {\\n        if (cssText.match(\\\"@import\\\")) {\\n          addOwnSheet(cssText, name);\\n        } else {\\n          addCssToDocument(cssText);\\n        }\\n      }\\n    };\\n    var selectorRe = /([^{]*)({[\\\\s\\\\S]*?})/gim, cssCommentRe = /\\\\/\\\\*[^*]*\\\\*+([^/*][^*]*\\\\*+)*\\\\//gim, cssCommentNextSelectorRe = /\\\\/\\\\*\\\\s*@polyfill ([^*]*\\\\*+([^/*][^*]*\\\\*+)*\\\\/)([^{]*?){/gim, cssContentNextSelectorRe = /polyfill-next-selector[^}]*content\\\\:[\\\\s]*?['\\\"](.*?)['\\\"][;\\\\s]*}([^{]*?){/gim, cssCommentRuleRe = /\\\\/\\\\*\\\\s@polyfill-rule([^*]*\\\\*+([^/*][^*]*\\\\*+)*)\\\\//gim, cssContentRuleRe = /(polyfill-rule)[^}]*(content\\\\:[\\\\s]*['\\\"](.*?)['\\\"])[;\\\\s]*[^}]*}/gim, cssCommentUnscopedRuleRe = /\\\\/\\\\*\\\\s@polyfill-unscoped-rule([^*]*\\\\*+([^/*][^*]*\\\\*+)*)\\\\//gim, cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content\\\\:[\\\\s]*['\\\"](.*?)['\\\"])[;\\\\s]*[^}]*}/gim, cssPseudoRe = /::(x-[^\\\\s{,(]*)/gim, cssPartRe = /::part\\\\(([^)]*)\\\\)/gim, polyfillHost = \\\"-shadowcsshost\\\", polyfillHostContext = \\\"-shadowcsscontext\\\", parenSuffix = \\\")(?:\\\\\\\\((\\\" + \\\"(?:\\\\\\\\([^)(]*\\\\\\\\)|[^)(]*)+?\\\" + \\\")\\\\\\\\))?([^,{]*)\\\";\\n    var cssColonHostRe = new RegExp(\\\"(\\\" + polyfillHost + parenSuffix, \\\"gim\\\"), cssColonHostContextRe = new RegExp(\\\"(\\\" + polyfillHostContext + parenSuffix, \\\"gim\\\"), selectorReSuffix = \\\"([>\\\\\\\\s~+[.,{:][\\\\\\\\s\\\\\\\\S]*)?$\\\", colonHostRe = /\\\\:host/gim, colonHostContextRe = /\\\\:host-context/gim, polyfillHostNoCombinator = polyfillHost + \\\"-no-combinator\\\", polyfillHostRe = new RegExp(polyfillHost, \\\"gim\\\"), polyfillHostContextRe = new RegExp(polyfillHostContext, \\\"gim\\\"), shadowDOMSelectorsRe = [ /\\\\^\\\\^/g, /\\\\^/g, /\\\\/shadow\\\\//g, /\\\\/shadow-deep\\\\//g, /::shadow/g, /\\\\/deep\\\\//g, /::content/g ];\\n    function stylesToCssText(styles, preserveComments) {\\n      var cssText = \\\"\\\";\\n      Array.prototype.forEach.call(styles, function(s) {\\n        cssText += s.textContent + \\\"\\\\n\\\\n\\\";\\n      });\\n      if (!preserveComments) {\\n        cssText = cssText.replace(cssCommentRe, \\\"\\\");\\n      }\\n      return cssText;\\n    }\\n    function cssTextToStyle(cssText) {\\n      var style = document.createElement(\\\"style\\\");\\n      style.textContent = cssText;\\n      return style;\\n    }\\n    function cssToRules(cssText) {\\n      var style = cssTextToStyle(cssText);\\n      document.head.appendChild(style);\\n      var rules = [];\\n      if (style.sheet) {\\n        try {\\n          rules = style.sheet.cssRules;\\n        } catch (e) {}\\n      } else {\\n        console.warn(\\\"sheet not found\\\", style);\\n      }\\n      style.parentNode.removeChild(style);\\n      return rules;\\n    }\\n    var frame = document.createElement(\\\"iframe\\\");\\n    frame.style.display = \\\"none\\\";\\n    function initFrame() {\\n      frame.initialized = true;\\n      document.body.appendChild(frame);\\n      var doc = frame.contentDocument;\\n      var base = doc.createElement(\\\"base\\\");\\n      base.href = document.baseURI;\\n      doc.head.appendChild(base);\\n    }\\n    function inFrame(fn) {\\n      if (!frame.initialized) {\\n        initFrame();\\n      }\\n      document.body.appendChild(frame);\\n      fn(frame.contentDocument);\\n      document.body.removeChild(frame);\\n    }\\n    var isChrome = navigator.userAgent.match(\\\"Chrome\\\");\\n    function withCssRules(cssText, callback) {\\n      if (!callback) {\\n        return;\\n      }\\n      var rules;\\n      if (cssText.match(\\\"@import\\\") && isChrome) {\\n        var style = cssTextToStyle(cssText);\\n        inFrame(function(doc) {\\n          doc.head.appendChild(style.impl);\\n          rules = Array.prototype.slice.call(style.sheet.cssRules, 0);\\n          callback(rules);\\n        });\\n      } else {\\n        rules = cssToRules(cssText);\\n        callback(rules);\\n      }\\n    }\\n    function rulesToCss(cssRules) {\\n      for (var i = 0, css = []; i < cssRules.length; i++) {\\n        css.push(cssRules[i].cssText);\\n      }\\n      return css.join(\\\"\\\\n\\\\n\\\");\\n    }\\n    function addCssToDocument(cssText) {\\n      if (cssText) {\\n        getSheet().appendChild(document.createTextNode(cssText));\\n      }\\n    }\\n    function addOwnSheet(cssText, name) {\\n      var style = cssTextToStyle(cssText);\\n      style.setAttribute(name, \\\"\\\");\\n      style.setAttribute(SHIMMED_ATTRIBUTE, \\\"\\\");\\n      document.head.appendChild(style);\\n    }\\n    var SHIM_ATTRIBUTE = \\\"shim-shadowdom\\\";\\n    var SHIMMED_ATTRIBUTE = \\\"shim-shadowdom-css\\\";\\n    var NO_SHIM_ATTRIBUTE = \\\"no-shim\\\";\\n    var sheet;\\n    function getSheet() {\\n      if (!sheet) {\\n        sheet = document.createElement(\\\"style\\\");\\n        sheet.setAttribute(SHIMMED_ATTRIBUTE, \\\"\\\");\\n        sheet[SHIMMED_ATTRIBUTE] = true;\\n      }\\n      return sheet;\\n    }\\n    if (window.ShadowDOMPolyfill) {\\n      addCssToDocument(\\\"style { display: none !important; }\\\\n\\\");\\n      var doc = ShadowDOMPolyfill.wrap(document);\\n      var head = doc.querySelector(\\\"head\\\");\\n      head.insertBefore(getSheet(), head.childNodes[0]);\\n      document.addEventListener(\\\"DOMContentLoaded\\\", function() {\\n        var urlResolver = scope.urlResolver;\\n        if (window.HTMLImports && !HTMLImports.useNative) {\\n          var SHIM_SHEET_SELECTOR = \\\"link[rel=stylesheet]\\\" + \\\"[\\\" + SHIM_ATTRIBUTE + \\\"]\\\";\\n          var SHIM_STYLE_SELECTOR = \\\"style[\\\" + SHIM_ATTRIBUTE + \\\"]\\\";\\n          HTMLImports.importer.documentPreloadSelectors += \\\",\\\" + SHIM_SHEET_SELECTOR;\\n          HTMLImports.importer.importsPreloadSelectors += \\\",\\\" + SHIM_SHEET_SELECTOR;\\n          HTMLImports.parser.documentSelectors = [ HTMLImports.parser.documentSelectors, SHIM_SHEET_SELECTOR, SHIM_STYLE_SELECTOR ].join(\\\",\\\");\\n          var originalParseGeneric = HTMLImports.parser.parseGeneric;\\n          HTMLImports.parser.parseGeneric = function(elt) {\\n            if (elt[SHIMMED_ATTRIBUTE]) {\\n              return;\\n            }\\n            var style = elt.__importElement || elt;\\n            if (!style.hasAttribute(SHIM_ATTRIBUTE)) {\\n              originalParseGeneric.call(this, elt);\\n              return;\\n            }\\n            if (elt.__resource) {\\n              style = elt.ownerDocument.createElement(\\\"style\\\");\\n              style.textContent = elt.__resource;\\n            }\\n            HTMLImports.path.resolveUrlsInStyle(style);\\n            style.textContent = ShadowCSS.shimStyle(style);\\n            style.removeAttribute(SHIM_ATTRIBUTE, \\\"\\\");\\n            style.setAttribute(SHIMMED_ATTRIBUTE, \\\"\\\");\\n            style[SHIMMED_ATTRIBUTE] = true;\\n            if (style.parentNode !== head) {\\n              if (elt.parentNode === head) {\\n                head.replaceChild(style, elt);\\n              } else {\\n                this.addElementToDocument(style);\\n              }\\n            }\\n            style.__importParsed = true;\\n            this.markParsingComplete(elt);\\n            this.parseNext();\\n          };\\n          var hasResource = HTMLImports.parser.hasResource;\\n          HTMLImports.parser.hasResource = function(node) {\\n            if (node.localName === \\\"link\\\" && node.rel === \\\"stylesheet\\\" && node.hasAttribute(SHIM_ATTRIBUTE)) {\\n              return node.__resource;\\n            } else {\\n              return hasResource.call(this, node);\\n            }\\n          };\\n        }\\n      });\\n    }\\n    scope.ShadowCSS = ShadowCSS;\\n  })(window.WebComponents);\\n}\\n\\n(function(scope) {\\n  if (window.ShadowDOMPolyfill) {\\n    window.wrap = ShadowDOMPolyfill.wrapIfNeeded;\\n    window.unwrap = ShadowDOMPolyfill.unwrapIfNeeded;\\n  } else {\\n    window.wrap = window.unwrap = function(n) {\\n      return n;\\n    };\\n  }\\n})(window.WebComponents);\\n\\n(function(global) {\\n  var registrationsTable = new WeakMap();\\n  var setImmediate;\\n  if (/Trident/.test(navigator.userAgent)) {\\n    setImmediate = setTimeout;\\n  } else if (window.setImmediate) {\\n    setImmediate = window.setImmediate;\\n  } else {\\n    var setImmediateQueue = [];\\n    var sentinel = String(Math.random());\\n    window.addEventListener(\\\"message\\\", function(e) {\\n      if (e.data === sentinel) {\\n        var queue = setImmediateQueue;\\n        setImmediateQueue = [];\\n        queue.forEach(function(func) {\\n          func();\\n        });\\n      }\\n    });\\n    setImmediate = function(func) {\\n      setImmediateQueue.push(func);\\n      window.postMessage(sentinel, \\\"*\\\");\\n    };\\n  }\\n  var isScheduled = false;\\n  var scheduledObservers = [];\\n  function scheduleCallback(observer) {\\n    scheduledObservers.push(observer);\\n    if (!isScheduled) {\\n      isScheduled = true;\\n      setImmediate(dispatchCallbacks);\\n    }\\n  }\\n  function wrapIfNeeded(node) {\\n    return window.ShadowDOMPolyfill && window.ShadowDOMPolyfill.wrapIfNeeded(node) || node;\\n  }\\n  function dispatchCallbacks() {\\n    isScheduled = false;\\n    var observers = scheduledObservers;\\n    scheduledObservers = [];\\n    observers.sort(function(o1, o2) {\\n      return o1.uid_ - o2.uid_;\\n    });\\n    var anyNonEmpty = false;\\n    observers.forEach(function(observer) {\\n      var queue = observer.takeRecords();\\n      removeTransientObserversFor(observer);\\n      if (queue.length) {\\n        observer.callback_(queue, observer);\\n        anyNonEmpty = true;\\n      }\\n    });\\n    if (anyNonEmpty) dispatchCallbacks();\\n  }\\n  function removeTransientObserversFor(observer) {\\n    observer.nodes_.forEach(function(node) {\\n      var registrations = registrationsTable.get(node);\\n      if (!registrations) return;\\n      registrations.forEach(function(registration) {\\n        if (registration.observer === observer) registration.removeTransientObservers();\\n      });\\n    });\\n  }\\n  function forEachAncestorAndObserverEnqueueRecord(target, callback) {\\n    for (var node = target; node; node = node.parentNode) {\\n      var registrations = registrationsTable.get(node);\\n      if (registrations) {\\n        for (var j = 0; j < registrations.length; j++) {\\n          var registration = registrations[j];\\n          var options = registration.options;\\n          if (node !== target && !options.subtree) continue;\\n          var record = callback(options);\\n          if (record) registration.enqueue(record);\\n        }\\n      }\\n    }\\n  }\\n  var uidCounter = 0;\\n  function JsMutationObserver(callback) {\\n    this.callback_ = callback;\\n    this.nodes_ = [];\\n    this.records_ = [];\\n    this.uid_ = ++uidCounter;\\n  }\\n  JsMutationObserver.prototype = {\\n    observe: function(target, options) {\\n      target = wrapIfNeeded(target);\\n      if (!options.childList && !options.attributes && !options.characterData || options.attributeOldValue && !options.attributes || options.attributeFilter && options.attributeFilter.length && !options.attributes || options.characterDataOldValue && !options.characterData) {\\n        throw new SyntaxError();\\n      }\\n      var registrations = registrationsTable.get(target);\\n      if (!registrations) registrationsTable.set(target, registrations = []);\\n      var registration;\\n      for (var i = 0; i < registrations.length; i++) {\\n        if (registrations[i].observer === this) {\\n          registration = registrations[i];\\n          registration.removeListeners();\\n          registration.options = options;\\n          break;\\n        }\\n      }\\n      if (!registration) {\\n        registration = new Registration(this, target, options);\\n        registrations.push(registration);\\n        this.nodes_.push(target);\\n      }\\n      registration.addListeners();\\n    },\\n    disconnect: function() {\\n      this.nodes_.forEach(function(node) {\\n        var registrations = registrationsTable.get(node);\\n        for (var i = 0; i < registrations.length; i++) {\\n          var registration = registrations[i];\\n          if (registration.observer === this) {\\n            registration.removeListeners();\\n            registrations.splice(i, 1);\\n            break;\\n          }\\n        }\\n      }, this);\\n      this.records_ = [];\\n    },\\n    takeRecords: function() {\\n      var copyOfRecords = this.records_;\\n      this.records_ = [];\\n      return copyOfRecords;\\n    }\\n  };\\n  function MutationRecord(type, target) {\\n    this.type = type;\\n    this.target = target;\\n    this.addedNodes = [];\\n    this.removedNodes = [];\\n    this.previousSibling = null;\\n    this.nextSibling = null;\\n    this.attributeName = null;\\n    this.attributeNamespace = null;\\n    this.oldValue = null;\\n  }\\n  function copyMutationRecord(original) {\\n    var record = new MutationRecord(original.type, original.target);\\n    record.addedNodes = original.addedNodes.slice();\\n    record.removedNodes = original.removedNodes.slice();\\n    record.previousSibling = original.previousSibling;\\n    record.nextSibling = original.nextSibling;\\n    record.attributeName = original.attributeName;\\n    record.attributeNamespace = original.attributeNamespace;\\n    record.oldValue = original.oldValue;\\n    return record;\\n  }\\n  var currentRecord, recordWithOldValue;\\n  function getRecord(type, target) {\\n    return currentRecord = new MutationRecord(type, target);\\n  }\\n  function getRecordWithOldValue(oldValue) {\\n    if (recordWithOldValue) return recordWithOldValue;\\n    recordWithOldValue = copyMutationRecord(currentRecord);\\n    recordWithOldValue.oldValue = oldValue;\\n    return recordWithOldValue;\\n  }\\n  function clearRecords() {\\n    currentRecord = recordWithOldValue = undefined;\\n  }\\n  function recordRepresentsCurrentMutation(record) {\\n    return record === recordWithOldValue || record === currentRecord;\\n  }\\n  function selectRecord(lastRecord, newRecord) {\\n    if (lastRecord === newRecord) return lastRecord;\\n    if (recordWithOldValue && recordRepresentsCurrentMutation(lastRecord)) return recordWithOldValue;\\n    return null;\\n  }\\n  function Registration(observer, target, options) {\\n    this.observer = observer;\\n    this.target = target;\\n    this.options = options;\\n    this.transientObservedNodes = [];\\n  }\\n  Registration.prototype = {\\n    enqueue: function(record) {\\n      var records = this.observer.records_;\\n      var length = records.length;\\n      if (records.length > 0) {\\n        var lastRecord = records[length - 1];\\n        var recordToReplaceLast = selectRecord(lastRecord, record);\\n        if (recordToReplaceLast) {\\n          records[length - 1] = recordToReplaceLast;\\n          return;\\n        }\\n      } else {\\n        scheduleCallback(this.observer);\\n      }\\n      records[length] = record;\\n    },\\n    addListeners: function() {\\n      this.addListeners_(this.target);\\n    },\\n    addListeners_: function(node) {\\n      var options = this.options;\\n      if (options.attributes) node.addEventListener(\\\"DOMAttrModified\\\", this, true);\\n      if (options.characterData) node.addEventListener(\\\"DOMCharacterDataModified\\\", this, true);\\n      if (options.childList) node.addEventListener(\\\"DOMNodeInserted\\\", this, true);\\n      if (options.childList || options.subtree) node.addEventListener(\\\"DOMNodeRemoved\\\", this, true);\\n    },\\n    removeListeners: function() {\\n      this.removeListeners_(this.target);\\n    },\\n    removeListeners_: function(node) {\\n      var options = this.options;\\n      if (options.attributes) node.removeEventListener(\\\"DOMAttrModified\\\", this, true);\\n      if (options.characterData) node.removeEventListener(\\\"DOMCharacterDataModified\\\", this, true);\\n      if (options.childList) node.removeEventListener(\\\"DOMNodeInserted\\\", this, true);\\n      if (options.childList || options.subtree) node.removeEventListener(\\\"DOMNodeRemoved\\\", this, true);\\n    },\\n    addTransientObserver: function(node) {\\n      if (node === this.target) return;\\n      this.addListeners_(node);\\n      this.transientObservedNodes.push(node);\\n      var registrations = registrationsTable.get(node);\\n      if (!registrations) registrationsTable.set(node, registrations = []);\\n      registrations.push(this);\\n    },\\n    removeTransientObservers: function() {\\n      var transientObservedNodes = this.transientObservedNodes;\\n      this.transientObservedNodes = [];\\n      transientObservedNodes.forEach(function(node) {\\n        this.removeListeners_(node);\\n        var registrations = registrationsTable.get(node);\\n        for (var i = 0; i < registrations.length; i++) {\\n          if (registrations[i] === this) {\\n            registrations.splice(i, 1);\\n            break;\\n          }\\n        }\\n      }, this);\\n    },\\n    handleEvent: function(e) {\\n      e.stopImmediatePropagation();\\n      switch (e.type) {\\n       case \\\"DOMAttrModified\\\":\\n        var name = e.attrName;\\n        var namespace = e.relatedNode.namespaceURI;\\n        var target = e.target;\\n        var record = new getRecord(\\\"attributes\\\", target);\\n        record.attributeName = name;\\n        record.attributeNamespace = namespace;\\n        var oldValue = e.attrChange === MutationEvent.ADDITION ? null : e.prevValue;\\n        forEachAncestorAndObserverEnqueueRecord(target, function(options) {\\n          if (!options.attributes) return;\\n          if (options.attributeFilter && options.attributeFilter.length && options.attributeFilter.indexOf(name) === -1 && options.attributeFilter.indexOf(namespace) === -1) {\\n            return;\\n          }\\n          if (options.attributeOldValue) return getRecordWithOldValue(oldValue);\\n          return record;\\n        });\\n        break;\\n\\n       case \\\"DOMCharacterDataModified\\\":\\n        var target = e.target;\\n        var record = getRecord(\\\"characterData\\\", target);\\n        var oldValue = e.prevValue;\\n        forEachAncestorAndObserverEnqueueRecord(target, function(options) {\\n          if (!options.characterData) return;\\n          if (options.characterDataOldValue) return getRecordWithOldValue(oldValue);\\n          return record;\\n        });\\n        break;\\n\\n       case \\\"DOMNodeRemoved\\\":\\n        this.addTransientObserver(e.target);\\n\\n       case \\\"DOMNodeInserted\\\":\\n        var target = e.relatedNode;\\n        var changedNode = e.target;\\n        var addedNodes, removedNodes;\\n        if (e.type === \\\"DOMNodeInserted\\\") {\\n          addedNodes = [ changedNode ];\\n          removedNodes = [];\\n        } else {\\n          addedNodes = [];\\n          removedNodes = [ changedNode ];\\n        }\\n        var previousSibling = changedNode.previousSibling;\\n        var nextSibling = changedNode.nextSibling;\\n        var record = getRecord(\\\"childList\\\", target);\\n        record.addedNodes = addedNodes;\\n        record.removedNodes = removedNodes;\\n        record.previousSibling = previousSibling;\\n        record.nextSibling = nextSibling;\\n        forEachAncestorAndObserverEnqueueRecord(target, function(options) {\\n          if (!options.childList) return;\\n          return record;\\n        });\\n      }\\n      clearRecords();\\n    }\\n  };\\n  global.JsMutationObserver = JsMutationObserver;\\n  if (!global.MutationObserver) global.MutationObserver = JsMutationObserver;\\n})(this);\\n\\nwindow.HTMLImports = window.HTMLImports || {\\n  flags: {}\\n};\\n\\n(function(scope) {\\n  var IMPORT_LINK_TYPE = \\\"import\\\";\\n  var useNative = Boolean(IMPORT_LINK_TYPE in document.createElement(\\\"link\\\"));\\n  var hasShadowDOMPolyfill = Boolean(window.ShadowDOMPolyfill);\\n  var wrap = function(node) {\\n    return hasShadowDOMPolyfill ? ShadowDOMPolyfill.wrapIfNeeded(node) : node;\\n  };\\n  var rootDocument = wrap(document);\\n  var currentScriptDescriptor = {\\n    get: function() {\\n      var script = HTMLImports.currentScript || document.currentScript || (document.readyState !== \\\"complete\\\" ? document.scripts[document.scripts.length - 1] : null);\\n      return wrap(script);\\n    },\\n    configurable: true\\n  };\\n  Object.defineProperty(document, \\\"_currentScript\\\", currentScriptDescriptor);\\n  Object.defineProperty(rootDocument, \\\"_currentScript\\\", currentScriptDescriptor);\\n  var isIE = /Trident/.test(navigator.userAgent);\\n  function whenReady(callback, doc) {\\n    doc = doc || rootDocument;\\n    whenDocumentReady(function() {\\n      watchImportsLoad(callback, doc);\\n    }, doc);\\n  }\\n  var requiredReadyState = isIE ? \\\"complete\\\" : \\\"interactive\\\";\\n  var READY_EVENT = \\\"readystatechange\\\";\\n  function isDocumentReady(doc) {\\n    return doc.readyState === \\\"complete\\\" || doc.readyState === requiredReadyState;\\n  }\\n  function whenDocumentReady(callback, doc) {\\n    if (!isDocumentReady(doc)) {\\n      var checkReady = function() {\\n        if (doc.readyState === \\\"complete\\\" || doc.readyState === requiredReadyState) {\\n          doc.removeEventListener(READY_EVENT, checkReady);\\n          whenDocumentReady(callback, doc);\\n        }\\n      };\\n      doc.addEventListener(READY_EVENT, checkReady);\\n    } else if (callback) {\\n      callback();\\n    }\\n  }\\n  function markTargetLoaded(event) {\\n    event.target.__loaded = true;\\n  }\\n  function watchImportsLoad(callback, doc) {\\n    var imports = doc.querySelectorAll(\\\"link[rel=import]\\\");\\n    var loaded = 0, l = imports.length;\\n    function checkDone(d) {\\n      if (loaded == l && callback) {\\n        callback();\\n      }\\n    }\\n    function loadedImport(e) {\\n      markTargetLoaded(e);\\n      loaded++;\\n      checkDone();\\n    }\\n    if (l) {\\n      for (var i = 0, imp; i < l && (imp = imports[i]); i++) {\\n        if (isImportLoaded(imp)) {\\n          loadedImport.call(imp, {\\n            target: imp\\n          });\\n        } else {\\n          imp.addEventListener(\\\"load\\\", loadedImport);\\n          imp.addEventListener(\\\"error\\\", loadedImport);\\n        }\\n      }\\n    } else {\\n      checkDone();\\n    }\\n  }\\n  function isImportLoaded(link) {\\n    return useNative ? link.__loaded || link.import && link.import.readyState !== \\\"loading\\\" : link.__importParsed;\\n  }\\n  if (useNative) {\\n    new MutationObserver(function(mxns) {\\n      for (var i = 0, l = mxns.length, m; i < l && (m = mxns[i]); i++) {\\n        if (m.addedNodes) {\\n          handleImports(m.addedNodes);\\n        }\\n      }\\n    }).observe(document.head, {\\n      childList: true\\n    });\\n    function handleImports(nodes) {\\n      for (var i = 0, l = nodes.length, n; i < l && (n = nodes[i]); i++) {\\n        if (isImport(n)) {\\n          handleImport(n);\\n        }\\n      }\\n    }\\n    function isImport(element) {\\n      return element.localName === \\\"link\\\" && element.rel === \\\"import\\\";\\n    }\\n    function handleImport(element) {\\n      var loaded = element.import;\\n      if (loaded) {\\n        markTargetLoaded({\\n          target: element\\n        });\\n      } else {\\n        element.addEventListener(\\\"load\\\", markTargetLoaded);\\n        element.addEventListener(\\\"error\\\", markTargetLoaded);\\n      }\\n    }\\n    (function() {\\n      if (document.readyState === \\\"loading\\\") {\\n        var imports = document.querySelectorAll(\\\"link[rel=import]\\\");\\n        for (var i = 0, l = imports.length, imp; i < l && (imp = imports[i]); i++) {\\n          handleImport(imp);\\n        }\\n      }\\n    })();\\n  }\\n  whenReady(function() {\\n    HTMLImports.ready = true;\\n    HTMLImports.readyTime = new Date().getTime();\\n    rootDocument.dispatchEvent(new CustomEvent(\\\"HTMLImportsLoaded\\\", {\\n      bubbles: true\\n    }));\\n  });\\n  scope.IMPORT_LINK_TYPE = IMPORT_LINK_TYPE;\\n  scope.useNative = useNative;\\n  scope.rootDocument = rootDocument;\\n  scope.whenReady = whenReady;\\n  scope.isIE = isIE;\\n})(HTMLImports);\\n\\n(function(scope) {\\n  var modules = [];\\n  var addModule = function(module) {\\n    modules.push(module);\\n  };\\n  var initializeModules = function() {\\n    modules.forEach(function(module) {\\n      module(scope);\\n    });\\n  };\\n  scope.addModule = addModule;\\n  scope.initializeModules = initializeModules;\\n})(HTMLImports);\\n\\nHTMLImports.addModule(function(scope) {\\n  var CSS_URL_REGEXP = /(url\\\\()([^)]*)(\\\\))/g;\\n  var CSS_IMPORT_REGEXP = /(@import[\\\\s]+(?!url\\\\())([^;]*)(;)/g;\\n  var path = {\\n    resolveUrlsInStyle: function(style) {\\n      var doc = style.ownerDocument;\\n      var resolver = doc.createElement(\\\"a\\\");\\n      style.textContent = this.resolveUrlsInCssText(style.textContent, resolver);\\n      return style;\\n    },\\n    resolveUrlsInCssText: function(cssText, urlObj) {\\n      var r = this.replaceUrls(cssText, urlObj, CSS_URL_REGEXP);\\n      r = this.replaceUrls(r, urlObj, CSS_IMPORT_REGEXP);\\n      return r;\\n    },\\n    replaceUrls: function(text, urlObj, regexp) {\\n      return text.replace(regexp, function(m, pre, url, post) {\\n        var urlPath = url.replace(/[\\\"']/g, \\\"\\\");\\n        urlObj.href = urlPath;\\n        urlPath = urlObj.href;\\n        return pre + \\\"'\\\" + urlPath + \\\"'\\\" + post;\\n      });\\n    }\\n  };\\n  scope.path = path;\\n});\\n\\nHTMLImports.addModule(function(scope) {\\n  xhr = {\\n    async: true,\\n    ok: function(request) {\\n      return request.status >= 200 && request.status < 300 || request.status === 304 || request.status === 0;\\n    },\\n    load: function(url, next, nextContext) {\\n      var request = new XMLHttpRequest();\\n      if (scope.flags.debug || scope.flags.bust) {\\n        url += \\\"?\\\" + Math.random();\\n      }\\n      request.open(\\\"GET\\\", url, xhr.async);\\n      request.addEventListener(\\\"readystatechange\\\", function(e) {\\n        if (request.readyState === 4) {\\n          var locationHeader = request.getResponseHeader(\\\"Location\\\");\\n          var redirectedUrl = null;\\n          if (locationHeader) {\\n            var redirectedUrl = locationHeader.substr(0, 1) === \\\"/\\\" ? location.origin + locationHeader : locationHeader;\\n          }\\n          next.call(nextContext, !xhr.ok(request) && request, request.response || request.responseText, redirectedUrl);\\n        }\\n      });\\n      request.send();\\n      return request;\\n    },\\n    loadDocument: function(url, next, nextContext) {\\n      this.load(url, next, nextContext).responseType = \\\"document\\\";\\n    }\\n  };\\n  scope.xhr = xhr;\\n});\\n\\nHTMLImports.addModule(function(scope) {\\n  var xhr = scope.xhr;\\n  var flags = scope.flags;\\n  var Loader = function(onLoad, onComplete) {\\n    this.cache = {};\\n    this.onload = onLoad;\\n    this.oncomplete = onComplete;\\n    this.inflight = 0;\\n    this.pending = {};\\n  };\\n  Loader.prototype = {\\n    addNodes: function(nodes) {\\n      this.inflight += nodes.length;\\n      for (var i = 0, l = nodes.length, n; i < l && (n = nodes[i]); i++) {\\n        this.require(n);\\n      }\\n      this.checkDone();\\n    },\\n    addNode: function(node) {\\n      this.inflight++;\\n      this.require(node);\\n      this.checkDone();\\n    },\\n    require: function(elt) {\\n      var url = elt.src || elt.href;\\n      elt.__nodeUrl = url;\\n      if (!this.dedupe(url, elt)) {\\n        this.fetch(url, elt);\\n      }\\n    },\\n    dedupe: function(url, elt) {\\n      if (this.pending[url]) {\\n        this.pending[url].push(elt);\\n        return true;\\n      }\\n      var resource;\\n      if (this.cache[url]) {\\n        this.onload(url, elt, this.cache[url]);\\n        this.tail();\\n        return true;\\n      }\\n      this.pending[url] = [ elt ];\\n      return false;\\n    },\\n    fetch: function(url, elt) {\\n      flags.load && console.log(\\\"fetch\\\", url, elt);\\n      if (url.match(/^data:/)) {\\n        var pieces = url.split(\\\",\\\");\\n        var header = pieces[0];\\n        var body = pieces[1];\\n        if (header.indexOf(\\\";base64\\\") > -1) {\\n          body = atob(body);\\n        } else {\\n          body = decodeURIComponent(body);\\n        }\\n        setTimeout(function() {\\n          this.receive(url, elt, null, body);\\n        }.bind(this), 0);\\n      } else {\\n        var receiveXhr = function(err, resource, redirectedUrl) {\\n          this.receive(url, elt, err, resource, redirectedUrl);\\n        }.bind(this);\\n        xhr.load(url, receiveXhr);\\n      }\\n    },\\n    receive: function(url, elt, err, resource, redirectedUrl) {\\n      this.cache[url] = resource;\\n      var $p = this.pending[url];\\n      for (var i = 0, l = $p.length, p; i < l && (p = $p[i]); i++) {\\n        this.onload(url, p, resource, err, redirectedUrl);\\n        this.tail();\\n      }\\n      this.pending[url] = null;\\n    },\\n    tail: function() {\\n      --this.inflight;\\n      this.checkDone();\\n    },\\n    checkDone: function() {\\n      if (!this.inflight) {\\n        this.oncomplete();\\n      }\\n    }\\n  };\\n  scope.Loader = Loader;\\n});\\n\\nHTMLImports.addModule(function(scope) {\\n  var Observer = function(addCallback) {\\n    this.addCallback = addCallback;\\n    this.mo = new MutationObserver(this.handler.bind(this));\\n  };\\n  Observer.prototype = {\\n    handler: function(mutations) {\\n      for (var i = 0, l = mutations.length, m; i < l && (m = mutations[i]); i++) {\\n        if (m.type === \\\"childList\\\" && m.addedNodes.length) {\\n          this.addedNodes(m.addedNodes);\\n        }\\n      }\\n    },\\n    addedNodes: function(nodes) {\\n      if (this.addCallback) {\\n        this.addCallback(nodes);\\n      }\\n      for (var i = 0, l = nodes.length, n, loading; i < l && (n = nodes[i]); i++) {\\n        if (n.children && n.children.length) {\\n          this.addedNodes(n.children);\\n        }\\n      }\\n    },\\n    observe: function(root) {\\n      this.mo.observe(root, {\\n        childList: true,\\n        subtree: true\\n      });\\n    }\\n  };\\n  scope.Observer = Observer;\\n});\\n\\nHTMLImports.addModule(function(scope) {\\n  var path = scope.path;\\n  var rootDocument = scope.rootDocument;\\n  var flags = scope.flags;\\n  var isIE = scope.isIE;\\n  var IMPORT_LINK_TYPE = scope.IMPORT_LINK_TYPE;\\n  var IMPORT_SELECTOR = \\\"link[rel=\\\" + IMPORT_LINK_TYPE + \\\"]\\\";\\n  var importParser = {\\n    documentSelectors: IMPORT_SELECTOR,\\n    importsSelectors: [ IMPORT_SELECTOR, \\\"link[rel=stylesheet]\\\", \\\"style\\\", \\\"script:not([type])\\\", 'script[type=\\\"text/javascript\\\"]' ].join(\\\",\\\"),\\n    map: {\\n      link: \\\"parseLink\\\",\\n      script: \\\"parseScript\\\",\\n      style: \\\"parseStyle\\\"\\n    },\\n    dynamicElements: [],\\n    parseNext: function() {\\n      var next = this.nextToParse();\\n      if (next) {\\n        this.parse(next);\\n      }\\n    },\\n    parse: function(elt) {\\n      if (this.isParsed(elt)) {\\n        flags.parse && console.log(\\\"[%s] is already parsed\\\", elt.localName);\\n        return;\\n      }\\n      var fn = this[this.map[elt.localName]];\\n      if (fn) {\\n        this.markParsing(elt);\\n        fn.call(this, elt);\\n      }\\n    },\\n    parseDynamic: function(elt, quiet) {\\n      this.dynamicElements.push(elt);\\n      if (!quiet) {\\n        this.parseNext();\\n      }\\n    },\\n    markParsing: function(elt) {\\n      flags.parse && console.log(\\\"parsing\\\", elt);\\n      this.parsingElement = elt;\\n    },\\n    markParsingComplete: function(elt) {\\n      elt.__importParsed = true;\\n      this.markDynamicParsingComplete(elt);\\n      if (elt.__importElement) {\\n        elt.__importElement.__importParsed = true;\\n        this.markDynamicParsingComplete(elt.__importElement);\\n      }\\n      this.parsingElement = null;\\n      flags.parse && console.log(\\\"completed\\\", elt);\\n    },\\n    markDynamicParsingComplete: function(elt) {\\n      var i = this.dynamicElements.indexOf(elt);\\n      if (i >= 0) {\\n        this.dynamicElements.splice(i, 1);\\n      }\\n    },\\n    parseImport: function(elt) {\\n      if (HTMLImports.__importsParsingHook) {\\n        HTMLImports.__importsParsingHook(elt);\\n      }\\n      if (elt.import) {\\n        elt.import.__importParsed = true;\\n      }\\n      this.markParsingComplete(elt);\\n      if (elt.__resource && !elt.__error) {\\n        elt.dispatchEvent(new CustomEvent(\\\"load\\\", {\\n          bubbles: false\\n        }));\\n      } else {\\n        elt.dispatchEvent(new CustomEvent(\\\"error\\\", {\\n          bubbles: false\\n        }));\\n      }\\n      if (elt.__pending) {\\n        var fn;\\n        while (elt.__pending.length) {\\n          fn = elt.__pending.shift();\\n          if (fn) {\\n            fn({\\n              target: elt\\n            });\\n          }\\n        }\\n      }\\n      this.parseNext();\\n    },\\n    parseLink: function(linkElt) {\\n      if (nodeIsImport(linkElt)) {\\n        this.parseImport(linkElt);\\n      } else {\\n        linkElt.href = linkElt.href;\\n        this.parseGeneric(linkElt);\\n      }\\n    },\\n    parseStyle: function(elt) {\\n      var src = elt;\\n      elt = cloneStyle(elt);\\n      elt.__importElement = src;\\n      this.parseGeneric(elt);\\n    },\\n    parseGeneric: function(elt) {\\n      this.trackElement(elt);\\n      this.addElementToDocument(elt);\\n    },\\n    rootImportForElement: function(elt) {\\n      var n = elt;\\n      while (n.ownerDocument.__importLink) {\\n        n = n.ownerDocument.__importLink;\\n      }\\n      return n;\\n    },\\n    addElementToDocument: function(elt) {\\n      var port = this.rootImportForElement(elt.__importElement || elt);\\n      var l = port.__insertedElements = port.__insertedElements || 0;\\n      var refNode = port.nextElementSibling;\\n      for (var i = 0; i < l; i++) {\\n        refNode = refNode && refNode.nextElementSibling;\\n      }\\n      port.parentNode.insertBefore(elt, refNode);\\n    },\\n    trackElement: function(elt, callback) {\\n      var self = this;\\n      var done = function(e) {\\n        if (callback) {\\n          callback(e);\\n        }\\n        self.markParsingComplete(elt);\\n        self.parseNext();\\n      };\\n      elt.addEventListener(\\\"load\\\", done);\\n      elt.addEventListener(\\\"error\\\", done);\\n      if (isIE && elt.localName === \\\"style\\\") {\\n        var fakeLoad = false;\\n        if (elt.textContent.indexOf(\\\"@import\\\") == -1) {\\n          fakeLoad = true;\\n        } else if (elt.sheet) {\\n          fakeLoad = true;\\n          var csr = elt.sheet.cssRules;\\n          var len = csr ? csr.length : 0;\\n          for (var i = 0, r; i < len && (r = csr[i]); i++) {\\n            if (r.type === CSSRule.IMPORT_RULE) {\\n              fakeLoad = fakeLoad && Boolean(r.styleSheet);\\n            }\\n          }\\n        }\\n        if (fakeLoad) {\\n          elt.dispatchEvent(new CustomEvent(\\\"load\\\", {\\n            bubbles: false\\n          }));\\n        }\\n      }\\n    },\\n    parseScript: function(scriptElt) {\\n      var script = document.createElement(\\\"script\\\");\\n      script.__importElement = scriptElt;\\n      script.src = scriptElt.src ? scriptElt.src : generateScriptDataUrl(scriptElt);\\n      scope.currentScript = scriptElt;\\n      this.trackElement(script, function(e) {\\n        script.parentNode.removeChild(script);\\n        scope.currentScript = null;\\n      });\\n      this.addElementToDocument(script);\\n    },\\n    nextToParse: function() {\\n      this._mayParse = [];\\n      return !this.parsingElement && (this.nextToParseInDoc(rootDocument) || this.nextToParseDynamic());\\n    },\\n    nextToParseInDoc: function(doc, link) {\\n      if (doc && this._mayParse.indexOf(doc) < 0) {\\n        this._mayParse.push(doc);\\n        var nodes = doc.querySelectorAll(this.parseSelectorsForNode(doc));\\n        for (var i = 0, l = nodes.length, p = 0, n; i < l && (n = nodes[i]); i++) {\\n          if (!this.isParsed(n)) {\\n            if (this.hasResource(n)) {\\n              return nodeIsImport(n) ? this.nextToParseInDoc(n.import, n) : n;\\n            } else {\\n              return;\\n            }\\n          }\\n        }\\n      }\\n      return link;\\n    },\\n    nextToParseDynamic: function() {\\n      return this.dynamicElements[0];\\n    },\\n    parseSelectorsForNode: function(node) {\\n      var doc = node.ownerDocument || node;\\n      return doc === rootDocument ? this.documentSelectors : this.importsSelectors;\\n    },\\n    isParsed: function(node) {\\n      return node.__importParsed;\\n    },\\n    needsDynamicParsing: function(elt) {\\n      return this.dynamicElements.indexOf(elt) >= 0;\\n    },\\n    hasResource: function(node) {\\n      if (nodeIsImport(node) && node.import === undefined) {\\n        return false;\\n      }\\n      return true;\\n    }\\n  };\\n  function nodeIsImport(elt) {\\n    return elt.localName === \\\"link\\\" && elt.rel === IMPORT_LINK_TYPE;\\n  }\\n  function generateScriptDataUrl(script) {\\n    var scriptContent = generateScriptContent(script);\\n    return \\\"data:text/javascript;charset=utf-8,\\\" + encodeURIComponent(scriptContent);\\n  }\\n  function generateScriptContent(script) {\\n    return script.textContent + generateSourceMapHint(script);\\n  }\\n  function generateSourceMapHint(script) {\\n    var owner = script.ownerDocument;\\n    owner.__importedScripts = owner.__importedScripts || 0;\\n    var moniker = script.ownerDocument.baseURI;\\n    var num = owner.__importedScripts ? \\\"-\\\" + owner.__importedScripts : \\\"\\\";\\n    owner.__importedScripts++;\\n    return \\\"\\\\n//# sourceURL=\\\" + moniker + num + \\\".js\\\\n\\\";\\n  }\\n  function cloneStyle(style) {\\n    var clone = style.ownerDocument.createElement(\\\"style\\\");\\n    clone.textContent = style.textContent;\\n    path.resolveUrlsInStyle(clone);\\n    return clone;\\n  }\\n  scope.parser = importParser;\\n  scope.IMPORT_SELECTOR = IMPORT_SELECTOR;\\n});\\n\\nHTMLImports.addModule(function(scope) {\\n  var flags = scope.flags;\\n  var IMPORT_LINK_TYPE = scope.IMPORT_LINK_TYPE;\\n  var IMPORT_SELECTOR = scope.IMPORT_SELECTOR;\\n  var rootDocument = scope.rootDocument;\\n  var Loader = scope.Loader;\\n  var Observer = scope.Observer;\\n  var parser = scope.parser;\\n  var importer = {\\n    documents: {},\\n    documentPreloadSelectors: IMPORT_SELECTOR,\\n    importsPreloadSelectors: [ IMPORT_SELECTOR ].join(\\\",\\\"),\\n    loadNode: function(node) {\\n      importLoader.addNode(node);\\n    },\\n    loadSubtree: function(parent) {\\n      var nodes = this.marshalNodes(parent);\\n      importLoader.addNodes(nodes);\\n    },\\n    marshalNodes: function(parent) {\\n      return parent.querySelectorAll(this.loadSelectorsForNode(parent));\\n    },\\n    loadSelectorsForNode: function(node) {\\n      var doc = node.ownerDocument || node;\\n      return doc === rootDocument ? this.documentPreloadSelectors : this.importsPreloadSelectors;\\n    },\\n    loaded: function(url, elt, resource, err, redirectedUrl) {\\n      flags.load && console.log(\\\"loaded\\\", url, elt);\\n      elt.__resource = resource;\\n      elt.__error = err;\\n      if (isImportLink(elt)) {\\n        var doc = this.documents[url];\\n        if (doc === undefined) {\\n          doc = err ? null : makeDocument(resource, redirectedUrl || url);\\n          if (doc) {\\n            doc.__importLink = elt;\\n            this.bootDocument(doc);\\n          }\\n          this.documents[url] = doc;\\n        }\\n        elt.import = doc;\\n      }\\n      parser.parseNext();\\n    },\\n    bootDocument: function(doc) {\\n      this.loadSubtree(doc);\\n      this.observer.observe(doc);\\n      parser.parseNext();\\n    },\\n    loadedAll: function() {\\n      parser.parseNext();\\n    }\\n  };\\n  var importLoader = new Loader(importer.loaded.bind(importer), importer.loadedAll.bind(importer));\\n  importer.observer = new Observer();\\n  function isImportLink(elt) {\\n    return isLinkRel(elt, IMPORT_LINK_TYPE);\\n  }\\n  function isLinkRel(elt, rel) {\\n    return elt.localName === \\\"link\\\" && elt.getAttribute(\\\"rel\\\") === rel;\\n  }\\n  function makeDocument(resource, url) {\\n    var doc = document.implementation.createHTMLDocument(IMPORT_LINK_TYPE);\\n    doc._URL = url;\\n    var base = doc.createElement(\\\"base\\\");\\n    base.setAttribute(\\\"href\\\", url);\\n    if (!doc.baseURI) {\\n      doc.baseURI = url;\\n    }\\n    var meta = doc.createElement(\\\"meta\\\");\\n    meta.setAttribute(\\\"charset\\\", \\\"utf-8\\\");\\n    doc.head.appendChild(meta);\\n    doc.head.appendChild(base);\\n    doc.body.innerHTML = resource;\\n    if (window.HTMLTemplateElement && HTMLTemplateElement.bootstrap) {\\n      HTMLTemplateElement.bootstrap(doc);\\n    }\\n    return doc;\\n  }\\n  if (!document.baseURI) {\\n    var baseURIDescriptor = {\\n      get: function() {\\n        var base = document.querySelector(\\\"base\\\");\\n        return base ? base.href : window.location.href;\\n      },\\n      configurable: true\\n    };\\n    Object.defineProperty(document, \\\"baseURI\\\", baseURIDescriptor);\\n    Object.defineProperty(rootDocument, \\\"baseURI\\\", baseURIDescriptor);\\n  }\\n  scope.importer = importer;\\n  scope.importLoader = importLoader;\\n});\\n\\nHTMLImports.addModule(function(scope) {\\n  var parser = scope.parser;\\n  var importer = scope.importer;\\n  var dynamic = {\\n    added: function(nodes) {\\n      var owner, parsed;\\n      for (var i = 0, l = nodes.length, n; i < l && (n = nodes[i]); i++) {\\n        if (!owner) {\\n          owner = n.ownerDocument;\\n          parsed = parser.isParsed(owner);\\n        }\\n        loading = this.shouldLoadNode(n);\\n        if (loading) {\\n          importer.loadNode(n);\\n        }\\n        if (this.shouldParseNode(n) && parsed) {\\n          parser.parseDynamic(n, loading);\\n        }\\n      }\\n    },\\n    shouldLoadNode: function(node) {\\n      return node.nodeType === 1 && matches.call(node, importer.loadSelectorsForNode(node));\\n    },\\n    shouldParseNode: function(node) {\\n      return node.nodeType === 1 && matches.call(node, parser.parseSelectorsForNode(node));\\n    }\\n  };\\n  importer.observer.addCallback = dynamic.added.bind(dynamic);\\n  var matches = HTMLElement.prototype.matches || HTMLElement.prototype.matchesSelector || HTMLElement.prototype.webkitMatchesSelector || HTMLElement.prototype.mozMatchesSelector || HTMLElement.prototype.msMatchesSelector;\\n});\\n\\n(function(scope) {\\n  initializeModules = scope.initializeModules;\\n  if (scope.useNative) {\\n    return;\\n  }\\n  if (typeof window.CustomEvent !== \\\"function\\\") {\\n    window.CustomEvent = function(inType, dictionary) {\\n      var e = document.createEvent(\\\"HTMLEvents\\\");\\n      e.initEvent(inType, dictionary.bubbles === false ? false : true, dictionary.cancelable === false ? false : true, dictionary.detail);\\n      return e;\\n    };\\n  }\\n  initializeModules();\\n  var rootDocument = scope.rootDocument;\\n  function bootstrap() {\\n    HTMLImports.importer.bootDocument(rootDocument);\\n  }\\n  if (document.readyState === \\\"complete\\\" || document.readyState === \\\"interactive\\\" && !window.attachEvent) {\\n    bootstrap();\\n  } else {\\n    document.addEventListener(\\\"DOMContentLoaded\\\", bootstrap);\\n  }\\n})(HTMLImports);\\n\\nwindow.CustomElements = window.CustomElements || {\\n  flags: {}\\n};\\n\\n(function(scope) {\\n  var flags = scope.flags;\\n  var modules = [];\\n  var addModule = function(module) {\\n    modules.push(module);\\n  };\\n  var initializeModules = function() {\\n    modules.forEach(function(module) {\\n      module(scope);\\n    });\\n  };\\n  scope.addModule = addModule;\\n  scope.initializeModules = initializeModules;\\n  scope.hasNative = Boolean(document.registerElement);\\n  scope.useNative = !flags.register && scope.hasNative && !window.ShadowDOMPolyfill && (!window.HTMLImports || HTMLImports.useNative);\\n})(CustomElements);\\n\\nCustomElements.addModule(function(scope) {\\n  var IMPORT_LINK_TYPE = window.HTMLImports ? HTMLImports.IMPORT_LINK_TYPE : \\\"none\\\";\\n  function forSubtree(node, cb) {\\n    findAllElements(node, function(e) {\\n      if (cb(e)) {\\n        return true;\\n      }\\n      forRoots(e, cb);\\n    });\\n    forRoots(node, cb);\\n  }\\n  function findAllElements(node, find, data) {\\n    var e = node.firstElementChild;\\n    if (!e) {\\n      e = node.firstChild;\\n      while (e && e.nodeType !== Node.ELEMENT_NODE) {\\n        e = e.nextSibling;\\n      }\\n    }\\n    while (e) {\\n      if (find(e, data) !== true) {\\n        findAllElements(e, find, data);\\n      }\\n      e = e.nextElementSibling;\\n    }\\n    return null;\\n  }\\n  function forRoots(node, cb) {\\n    var root = node.shadowRoot;\\n    while (root) {\\n      forSubtree(root, cb);\\n      root = root.olderShadowRoot;\\n    }\\n  }\\n  var processingDocuments;\\n  function forDocumentTree(doc, cb) {\\n    processingDocuments = [];\\n    _forDocumentTree(doc, cb);\\n    processingDocuments = null;\\n  }\\n  function _forDocumentTree(doc, cb) {\\n    doc = wrap(doc);\\n    if (processingDocuments.indexOf(doc) >= 0) {\\n      return;\\n    }\\n    processingDocuments.push(doc);\\n    var imports = doc.querySelectorAll(\\\"link[rel=\\\" + IMPORT_LINK_TYPE + \\\"]\\\");\\n    for (var i = 0, l = imports.length, n; i < l && (n = imports[i]); i++) {\\n      if (n.import) {\\n        _forDocumentTree(n.import, cb);\\n      }\\n    }\\n    cb(doc);\\n  }\\n  scope.forDocumentTree = forDocumentTree;\\n  scope.forSubtree = forSubtree;\\n});\\n\\nCustomElements.addModule(function(scope) {\\n  var flags = scope.flags;\\n  var forSubtree = scope.forSubtree;\\n  var forDocumentTree = scope.forDocumentTree;\\n  function addedNode(node) {\\n    return added(node) || addedSubtree(node);\\n  }\\n  function added(node) {\\n    if (scope.upgrade(node)) {\\n      return true;\\n    }\\n    attached(node);\\n  }\\n  function addedSubtree(node) {\\n    forSubtree(node, function(e) {\\n      if (added(e)) {\\n        return true;\\n      }\\n    });\\n  }\\n  function attachedNode(node) {\\n    attached(node);\\n    if (inDocument(node)) {\\n      forSubtree(node, function(e) {\\n        attached(e);\\n      });\\n    }\\n  }\\n  var hasPolyfillMutations = !window.MutationObserver || window.MutationObserver === window.JsMutationObserver;\\n  scope.hasPolyfillMutations = hasPolyfillMutations;\\n  var isPendingMutations = false;\\n  var pendingMutations = [];\\n  function deferMutation(fn) {\\n    pendingMutations.push(fn);\\n    if (!isPendingMutations) {\\n      isPendingMutations = true;\\n      setTimeout(takeMutations);\\n    }\\n  }\\n  function takeMutations() {\\n    isPendingMutations = false;\\n    var $p = pendingMutations;\\n    for (var i = 0, l = $p.length, p; i < l && (p = $p[i]); i++) {\\n      p();\\n    }\\n    pendingMutations = [];\\n  }\\n  function attached(element) {\\n    if (hasPolyfillMutations) {\\n      deferMutation(function() {\\n        _attached(element);\\n      });\\n    } else {\\n      _attached(element);\\n    }\\n  }\\n  function _attached(element) {\\n    if (element.__upgraded__ && (element.attachedCallback || element.detachedCallback)) {\\n      if (!element.__attached && inDocument(element)) {\\n        element.__attached = true;\\n        if (element.attachedCallback) {\\n          element.attachedCallback();\\n        }\\n      }\\n    }\\n  }\\n  function detachedNode(node) {\\n    detached(node);\\n    forSubtree(node, function(e) {\\n      detached(e);\\n    });\\n  }\\n  function detached(element) {\\n    if (hasPolyfillMutations) {\\n      deferMutation(function() {\\n        _detached(element);\\n      });\\n    } else {\\n      _detached(element);\\n    }\\n  }\\n  function _detached(element) {\\n    if (element.__upgraded__ && (element.attachedCallback || element.detachedCallback)) {\\n      if (element.__attached && !inDocument(element)) {\\n        element.__attached = false;\\n        if (element.detachedCallback) {\\n          element.detachedCallback();\\n        }\\n      }\\n    }\\n  }\\n  function inDocument(element) {\\n    var p = element;\\n    var doc = wrap(document);\\n    while (p) {\\n      if (p == doc) {\\n        return true;\\n      }\\n      p = p.parentNode || p.host;\\n    }\\n  }\\n  function watchShadow(node) {\\n    if (node.shadowRoot && !node.shadowRoot.__watched) {\\n      flags.dom && console.log(\\\"watching shadow-root for: \\\", node.localName);\\n      var root = node.shadowRoot;\\n      while (root) {\\n        observe(root);\\n        root = root.olderShadowRoot;\\n      }\\n    }\\n  }\\n  function handler(mutations) {\\n    if (flags.dom) {\\n      var mx = mutations[0];\\n      if (mx && mx.type === \\\"childList\\\" && mx.addedNodes) {\\n        if (mx.addedNodes) {\\n          var d = mx.addedNodes[0];\\n          while (d && d !== document && !d.host) {\\n            d = d.parentNode;\\n          }\\n          var u = d && (d.URL || d._URL || d.host && d.host.localName) || \\\"\\\";\\n          u = u.split(\\\"/?\\\").shift().split(\\\"/\\\").pop();\\n        }\\n      }\\n      console.group(\\\"mutations (%d) [%s]\\\", mutations.length, u || \\\"\\\");\\n    }\\n    mutations.forEach(function(mx) {\\n      if (mx.type === \\\"childList\\\") {\\n        forEach(mx.addedNodes, function(n) {\\n          if (!n.localName) {\\n            return;\\n          }\\n          addedNode(n);\\n        });\\n        forEach(mx.removedNodes, function(n) {\\n          if (!n.localName) {\\n            return;\\n          }\\n          detachedNode(n);\\n        });\\n      }\\n    });\\n    flags.dom && console.groupEnd();\\n  }\\n  function takeRecords(node) {\\n    node = wrap(node);\\n    if (!node) {\\n      node = wrap(document);\\n    }\\n    while (node.parentNode) {\\n      node = node.parentNode;\\n    }\\n    var observer = node.__observer;\\n    if (observer) {\\n      handler(observer.takeRecords());\\n      takeMutations();\\n    }\\n  }\\n  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\\n  function observe(inRoot) {\\n    if (inRoot.__observer) {\\n      return;\\n    }\\n    var observer = new MutationObserver(handler);\\n    observer.observe(inRoot, {\\n      childList: true,\\n      subtree: true\\n    });\\n    inRoot.__observer = observer;\\n  }\\n  function upgradeDocument(doc) {\\n    doc = wrap(doc);\\n    flags.dom && console.group(\\\"upgradeDocument: \\\", doc.baseURI.split(\\\"/\\\").pop());\\n    addedNode(doc);\\n    observe(doc);\\n    flags.dom && console.groupEnd();\\n  }\\n  function upgradeDocumentTree(doc) {\\n    forDocumentTree(doc, upgradeDocument);\\n  }\\n  var originalCreateShadowRoot = Element.prototype.createShadowRoot;\\n  Element.prototype.createShadowRoot = function() {\\n    var root = originalCreateShadowRoot.call(this);\\n    CustomElements.watchShadow(this);\\n    return root;\\n  };\\n  scope.watchShadow = watchShadow;\\n  scope.upgradeDocumentTree = upgradeDocumentTree;\\n  scope.upgradeSubtree = addedSubtree;\\n  scope.upgradeAll = addedNode;\\n  scope.attachedNode = attachedNode;\\n  scope.takeRecords = takeRecords;\\n});\\n\\nCustomElements.addModule(function(scope) {\\n  var flags = scope.flags;\\n  function upgrade(node) {\\n    if (!node.__upgraded__ && node.nodeType === Node.ELEMENT_NODE) {\\n      var is = node.getAttribute(\\\"is\\\");\\n      var definition = scope.getRegisteredDefinition(is || node.localName);\\n      if (definition) {\\n        if (is && definition.tag == node.localName) {\\n          return upgradeWithDefinition(node, definition);\\n        } else if (!is && !definition.extends) {\\n          return upgradeWithDefinition(node, definition);\\n        }\\n      }\\n    }\\n  }\\n  function upgradeWithDefinition(element, definition) {\\n    flags.upgrade && console.group(\\\"upgrade:\\\", element.localName);\\n    if (definition.is) {\\n      element.setAttribute(\\\"is\\\", definition.is);\\n    }\\n    implementPrototype(element, definition);\\n    element.__upgraded__ = true;\\n    created(element);\\n    scope.attachedNode(element);\\n    scope.upgradeSubtree(element);\\n    flags.upgrade && console.groupEnd();\\n    return element;\\n  }\\n  function implementPrototype(element, definition) {\\n    if (Object.__proto__) {\\n      element.__proto__ = definition.prototype;\\n    } else {\\n      customMixin(element, definition.prototype, definition.native);\\n      element.__proto__ = definition.prototype;\\n    }\\n  }\\n  function customMixin(inTarget, inSrc, inNative) {\\n    var used = {};\\n    var p = inSrc;\\n    while (p !== inNative && p !== HTMLElement.prototype) {\\n      var keys = Object.getOwnPropertyNames(p);\\n      for (var i = 0, k; k = keys[i]; i++) {\\n        if (!used[k]) {\\n          Object.defineProperty(inTarget, k, Object.getOwnPropertyDescriptor(p, k));\\n          used[k] = 1;\\n        }\\n      }\\n      p = Object.getPrototypeOf(p);\\n    }\\n  }\\n  function created(element) {\\n    if (element.createdCallback) {\\n      element.createdCallback();\\n    }\\n  }\\n  scope.upgrade = upgrade;\\n  scope.upgradeWithDefinition = upgradeWithDefinition;\\n  scope.implementPrototype = implementPrototype;\\n});\\n\\nCustomElements.addModule(function(scope) {\\n  var upgradeDocumentTree = scope.upgradeDocumentTree;\\n  var upgrade = scope.upgrade;\\n  var upgradeWithDefinition = scope.upgradeWithDefinition;\\n  var implementPrototype = scope.implementPrototype;\\n  var useNative = scope.useNative;\\n  function register(name, options) {\\n    var definition = options || {};\\n    if (!name) {\\n      throw new Error(\\\"document.registerElement: first argument `name` must not be empty\\\");\\n    }\\n    if (name.indexOf(\\\"-\\\") < 0) {\\n      throw new Error(\\\"document.registerElement: first argument ('name') must contain a dash ('-'). Argument provided was '\\\" + String(name) + \\\"'.\\\");\\n    }\\n    if (isReservedTag(name)) {\\n      throw new Error(\\\"Failed to execute 'registerElement' on 'Document': Registration failed for type '\\\" + String(name) + \\\"'. The type name is invalid.\\\");\\n    }\\n    if (getRegisteredDefinition(name)) {\\n      throw new Error(\\\"DuplicateDefinitionError: a type with name '\\\" + String(name) + \\\"' is already registered\\\");\\n    }\\n    if (!definition.prototype) {\\n      definition.prototype = Object_create(HTMLElement.prototype);\\n    }\\n    definition.__name = name.toLowerCase();\\n    definition.lifecycle = definition.lifecycle || {};\\n    definition.ancestry = ancestry(definition.extends);\\n    resolveTagName(definition);\\n    resolvePrototypeChain(definition);\\n    overrideAttributeApi(definition.prototype);\\n    registerDefinition(definition.__name, definition);\\n    definition.ctor = generateConstructor(definition);\\n    definition.ctor.prototype = definition.prototype;\\n    definition.prototype.constructor = definition.ctor;\\n    if (scope.ready) {\\n      upgradeDocumentTree(document);\\n    }\\n    return definition.ctor;\\n  }\\n  function overrideAttributeApi(prototype) {\\n    if (prototype.setAttribute._polyfilled) {\\n      return;\\n    }\\n    var setAttribute = prototype.setAttribute;\\n    prototype.setAttribute = function(name, value) {\\n      changeAttribute.call(this, name, value, setAttribute);\\n    };\\n    var removeAttribute = prototype.removeAttribute;\\n    prototype.removeAttribute = function(name) {\\n      changeAttribute.call(this, name, null, removeAttribute);\\n    };\\n    prototype.setAttribute._polyfilled = true;\\n  }\\n  function changeAttribute(name, value, operation) {\\n    name = name.toLowerCase();\\n    var oldValue = this.getAttribute(name);\\n    operation.apply(this, arguments);\\n    var newValue = this.getAttribute(name);\\n    if (this.attributeChangedCallback && newValue !== oldValue) {\\n      this.attributeChangedCallback(name, oldValue, newValue);\\n    }\\n  }\\n  function isReservedTag(name) {\\n    for (var i = 0; i < reservedTagList.length; i++) {\\n      if (name === reservedTagList[i]) {\\n        return true;\\n      }\\n    }\\n  }\\n  var reservedTagList = [ \\\"annotation-xml\\\", \\\"color-profile\\\", \\\"font-face\\\", \\\"font-face-src\\\", \\\"font-face-uri\\\", \\\"font-face-format\\\", \\\"font-face-name\\\", \\\"missing-glyph\\\" ];\\n  function ancestry(extnds) {\\n    var extendee = getRegisteredDefinition(extnds);\\n    if (extendee) {\\n      return ancestry(extendee.extends).concat([ extendee ]);\\n    }\\n    return [];\\n  }\\n  function resolveTagName(definition) {\\n    var baseTag = definition.extends;\\n    for (var i = 0, a; a = definition.ancestry[i]; i++) {\\n      baseTag = a.is && a.tag;\\n    }\\n    definition.tag = baseTag || definition.__name;\\n    if (baseTag) {\\n      definition.is = definition.__name;\\n    }\\n  }\\n  function resolvePrototypeChain(definition) {\\n    if (!Object.__proto__) {\\n      var nativePrototype = HTMLElement.prototype;\\n      if (definition.is) {\\n        var inst = document.createElement(definition.tag);\\n        var expectedPrototype = Object.getPrototypeOf(inst);\\n        if (expectedPrototype === definition.prototype) {\\n          nativePrototype = expectedPrototype;\\n        }\\n      }\\n      var proto = definition.prototype, ancestor;\\n      while (proto && proto !== nativePrototype) {\\n        ancestor = Object.getPrototypeOf(proto);\\n        proto.__proto__ = ancestor;\\n        proto = ancestor;\\n      }\\n      definition.native = nativePrototype;\\n    }\\n  }\\n  function instantiate(definition) {\\n    return upgradeWithDefinition(domCreateElement(definition.tag), definition);\\n  }\\n  var registry = {};\\n  function getRegisteredDefinition(name) {\\n    if (name) {\\n      return registry[name.toLowerCase()];\\n    }\\n  }\\n  function registerDefinition(name, definition) {\\n    registry[name] = definition;\\n  }\\n  function generateConstructor(definition) {\\n    return function() {\\n      return instantiate(definition);\\n    };\\n  }\\n  var HTML_NAMESPACE = \\\"http://www.w3.org/1999/xhtml\\\";\\n  function createElementNS(namespace, tag, typeExtension) {\\n    if (namespace === HTML_NAMESPACE) {\\n      return createElement(tag, typeExtension);\\n    } else {\\n      return domCreateElementNS(namespace, tag);\\n    }\\n  }\\n  function createElement(tag, typeExtension) {\\n    var definition = getRegisteredDefinition(typeExtension || tag);\\n    if (definition) {\\n      if (tag == definition.tag && typeExtension == definition.is) {\\n        return new definition.ctor();\\n      }\\n      if (!typeExtension && !definition.is) {\\n        return new definition.ctor();\\n      }\\n    }\\n    var element;\\n    if (typeExtension) {\\n      element = createElement(tag);\\n      element.setAttribute(\\\"is\\\", typeExtension);\\n      return element;\\n    }\\n    element = domCreateElement(tag);\\n    if (tag.indexOf(\\\"-\\\") >= 0) {\\n      implementPrototype(element, HTMLElement);\\n    }\\n    return element;\\n  }\\n  function cloneNode(deep) {\\n    var n = domCloneNode.call(this, deep);\\n    upgrade(n);\\n    return n;\\n  }\\n  var domCreateElement = document.createElement.bind(document);\\n  var domCreateElementNS = document.createElementNS.bind(document);\\n  var domCloneNode = Node.prototype.cloneNode;\\n  var isInstance;\\n  if (!Object.__proto__ && !useNative) {\\n    isInstance = function(obj, ctor) {\\n      var p = obj;\\n      while (p) {\\n        if (p === ctor.prototype) {\\n          return true;\\n        }\\n        p = p.__proto__;\\n      }\\n      return false;\\n    };\\n  } else {\\n    isInstance = function(obj, base) {\\n      return obj instanceof base;\\n    };\\n  }\\n  document.registerElement = register;\\n  document.createElement = createElement;\\n  document.createElementNS = createElementNS;\\n  Node.prototype.cloneNode = cloneNode;\\n  scope.registry = registry;\\n  scope.instanceof = isInstance;\\n  scope.reservedTagList = reservedTagList;\\n  scope.getRegisteredDefinition = getRegisteredDefinition;\\n  document.register = document.registerElement;\\n});\\n\\n(function(scope) {\\n  var useNative = scope.useNative;\\n  var initializeModules = scope.initializeModules;\\n  if (useNative) {\\n    var nop = function() {};\\n    scope.watchShadow = nop;\\n    scope.upgrade = nop;\\n    scope.upgradeAll = nop;\\n    scope.upgradeDocumentTree = nop;\\n    scope.upgradeSubtree = nop;\\n    scope.takeRecords = nop;\\n    scope.instanceof = function(obj, base) {\\n      return obj instanceof base;\\n    };\\n  } else {\\n    initializeModules();\\n  }\\n  var upgradeDocumentTree = scope.upgradeDocumentTree;\\n  if (!window.wrap) {\\n    if (window.ShadowDOMPolyfill) {\\n      window.wrap = ShadowDOMPolyfill.wrapIfNeeded;\\n      window.unwrap = ShadowDOMPolyfill.unwrapIfNeeded;\\n    } else {\\n      window.wrap = window.unwrap = function(node) {\\n        return node;\\n      };\\n    }\\n  }\\n  function bootstrap() {\\n    upgradeDocumentTree(wrap(document));\\n    if (window.HTMLImports) {\\n      HTMLImports.__importsParsingHook = function(elt) {\\n        upgradeDocumentTree(wrap(elt.import));\\n      };\\n    }\\n    CustomElements.ready = true;\\n    setTimeout(function() {\\n      CustomElements.readyTime = Date.now();\\n      if (window.HTMLImports) {\\n        CustomElements.elapsed = CustomElements.readyTime - HTMLImports.readyTime;\\n      }\\n      document.dispatchEvent(new CustomEvent(\\\"WebComponentsReady\\\", {\\n        bubbles: true\\n      }));\\n    });\\n  }\\n  if (typeof window.CustomEvent !== \\\"function\\\") {\\n    window.CustomEvent = function(inType, params) {\\n      params = params || {};\\n      var e = document.createEvent(\\\"CustomEvent\\\");\\n      e.initCustomEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable), params.detail);\\n      return e;\\n    };\\n    window.CustomEvent.prototype = window.Event.prototype;\\n  }\\n  if (document.readyState === \\\"complete\\\" || scope.flags.eager) {\\n    bootstrap();\\n  } else if (document.readyState === \\\"interactive\\\" && !window.attachEvent && (!window.HTMLImports || window.HTMLImports.ready)) {\\n    bootstrap();\\n  } else {\\n    var loadEvent = window.HTMLImports && !HTMLImports.ready ? \\\"HTMLImportsLoaded\\\" : \\\"DOMContentLoaded\\\";\\n    window.addEventListener(loadEvent, bootstrap);\\n  }\\n})(window.CustomElements);\\n\\n(function(scope) {\\n  if (!Function.prototype.bind) {\\n    Function.prototype.bind = function(scope) {\\n      var self = this;\\n      var args = Array.prototype.slice.call(arguments, 1);\\n      return function() {\\n        var args2 = args.slice();\\n        args2.push.apply(args2, arguments);\\n        return self.apply(scope, args2);\\n      };\\n    };\\n  }\\n})(window.WebComponents);\\n\\n(function(scope) {\\n  \\\"use strict\\\";\\n  if (!window.performance) {\\n    var start = Date.now();\\n    window.performance = {\\n      now: function() {\\n        return Date.now() - start;\\n      }\\n    };\\n  }\\n  if (!window.requestAnimationFrame) {\\n    window.requestAnimationFrame = function() {\\n      var nativeRaf = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;\\n      return nativeRaf ? function(callback) {\\n        return nativeRaf(function() {\\n          callback(performance.now());\\n        });\\n      } : function(callback) {\\n        return window.setTimeout(callback, 1e3 / 60);\\n      };\\n    }();\\n  }\\n  if (!window.cancelAnimationFrame) {\\n    window.cancelAnimationFrame = function() {\\n      return window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || function(id) {\\n        clearTimeout(id);\\n      };\\n    }();\\n  }\\n  var elementDeclarations = [];\\n  var polymerStub = function(name, dictionary) {\\n    if (typeof name !== \\\"string\\\" && arguments.length === 1) {\\n      Array.prototype.push.call(arguments, document._currentScript);\\n    }\\n    elementDeclarations.push(arguments);\\n  };\\n  window.Polymer = polymerStub;\\n  scope.consumeDeclarations = function(callback) {\\n    scope.consumeDeclarations = function() {\\n      throw \\\"Possible attempt to load Polymer twice\\\";\\n    };\\n    if (callback) {\\n      callback(elementDeclarations);\\n    }\\n    elementDeclarations = null;\\n  };\\n  function installPolymerWarning() {\\n    if (window.Polymer === polymerStub) {\\n      window.Polymer = function() {\\n        throw new Error(\\\"You tried to use polymer without loading it first. To \\\" + 'load polymer, <link rel=\\\"import\\\" href=\\\"' + 'components/polymer/polymer.html\\\">');\\n      };\\n    }\\n  }\\n  if (HTMLImports.useNative) {\\n    installPolymerWarning();\\n  } else {\\n    addEventListener(\\\"DOMContentLoaded\\\", installPolymerWarning);\\n  }\\n})(window.WebComponents);\\n\\n(function(scope) {\\n  var style = document.createElement(\\\"style\\\");\\n  style.textContent = \\\"\\\" + \\\"body {\\\" + \\\"transition: opacity ease-in 0.2s;\\\" + \\\" } \\\\n\\\" + \\\"body[unresolved] {\\\" + \\\"opacity: 0; display: block; overflow: hidden; position: relative;\\\" + \\\" } \\\\n\\\";\\n  var head = document.querySelector(\\\"head\\\");\\n  head.insertBefore(style, head.firstChild);\\n})(window.WebComponents);\\n\\n(function(scope) {\\n  window.Platform = scope;\\n})(window.WebComponents);\\n\\nif (typeof exports !== 'undefined') {\\n  module.exports = window.WebComponents;\\n}\\n\",\n    \"'use strict';\\n\\nmodule.exports = require('./lib/React');\\n\"\n  ]\n}"}